// tmpecu37ckl_text_0001.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

// 000000000002E4A8: define _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
{
	Eq_1720 sysreg3_3_13_0_2;
	Eq_36791 fp;
	Eq_36791 sp = fp;
	sp.u0 = (word32) sp - 96;
	Eq_14 x28;
	sp.u0->ptr0000 = (union Eq_14 *) x28;
	Eq_14 x27;
	sp.u0->t0008.u1 = (size_t) x27;
	struct Eq_36804 * v8 = (struct Eq_36804 *) &sp.u0->t0010.u0;
	Eq_14 x26;
	v8->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_36815 * v11 = (struct Eq_36815 *) ((word32) sp + 32);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_36826 * v14 = (struct Eq_36826 *) &sp.u0->t0030.u0;
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_36837 * v17 = (struct Eq_36837 *) ((word32) sp + 64);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_36848 * v20 = (struct Eq_36848 *) ((word32) sp + 80);
	Eq_14 x29;
	v20->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v20->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 80;
	sp -= 0x07B0;
	Eq_14 x2;
	sp.u0->t00C0.u1 = (size_t) x2;
	Eq_14 x8 = __mrs(sysreg3_3_13_0_2);
	sp.u0->t0030.u1 = (size_t) x8;
	x8 = *((word32) x8 + 40);
	Eq_14 q0;
	q0.u0 = 0;
	Eq_14 x1;
	x22 = x1;
	*((word32) x29 - 96) = x8;
	struct Eq_36884 * v26 = (struct Eq_36884 *) ((word32) x29 - 0x0080);
	v26->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	v26->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	*((word32) x29 - 144) = q0;
	((word32) x29 - 0x00A0)->u1 = 0x00;
	struct Eq_36900 * v27 = (struct Eq_36900 *) ((word32) x29 - 0x00C0);
	v27->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	v27->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	sp.u0->t05C0.u1 = (size_t) 0x00;
	sp.u0->t05B8.u1 = (size_t) 0x00;
	sp.u0->t05B0.u1 = (size_t) 0x00;
	Eq_14 v29 = *x1.u1;
	Eq_14 w8;
	w8.u1 = (word32) v29;
	Eq_14 x0;
	sp.u0->t00B8.u1 = (size_t) x0;
	if ((w8 & 0x01) != 0x00)
	{
		x8 = *((word32) x22 + 16);
		q0 = *x22.u1;
		sp.u0->t05C0.u1 = (size_t) x8;
		sp.u0->t05B0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		goto l000000000002E588;
	}
	x19 = *((word32) x22 + 8);
	sp.u0 = (word32) x19 + 16;
	Eq_36939 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
		goto l00000000000318C4;
	x20 = *((word32) x22 + 16);
	NZCV.u0 = cond(x19 - 0x17);
	Eq_14 x9;
	ui32 w19;
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x05B0;
		w8 = w19 << 1;
		x21 = x9 | 0x01;
		sp.u0->t05B0.u0 = (byte) (byte) w8;
		if (x19 == 0x00)
			goto l000000000002E584;
	}
	else
	{
		x8.u1 = (word32) x19 + 16;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x21 = x0;
		sp.u0->t05C0.u1 = (size_t) x0;
		sp.u0->t05B0.u1 = (size_t) x8;
		sp.u0->t05B8.u1 = (size_t) x19;
	}
	x0 = x21;
	x1 = x20;
	x2 = x19;
	x0 = memcpy(x0, x1, x2);
l000000000002E584:
	*(x21 + x19) = (word64) 0x00;
l000000000002E588:
	x9.u0 = 0x00070000;
	x9 = *((word32) x9 + 0x0DC0);
	sp.u0->t0590.u1 = (size_t) 0x00;
	sp.u0->t0588.u1 = (size_t) 0x00;
	x25.u0 = 0x00070000;
	Eq_14 x12;
	x12.u0 = 0x00071000;
	x25 = *((word32) x25 + 3744);
	x12.u1 = (word32) x12 + 0x0118;
	x8.u1 = &sp.u0->dw0560;
	x9.u1 = (word32) x9 + 16;
	x23.u1 = (word32) x8 + 8;
	Eq_14 v36 = *((word32) x12 + 8);
	w8.u1 = (word32) v36;
	sp.u0->t0598.u1 = (size_t) x9;
	x9 = *((word32) x12 + 24);
	Eq_14 x10;
	x10.u1 = (word32) x25 + 16;
	word32 w11 = (word32) *x12.u1;
	sp.u0->t0580.u1 = (size_t) x10;
	x10.u1 = (word32) x12 + 9;
	ui32 w31 = w8 & 0x01;
	Eq_37005 NZ;
	NZ.u0 = cond(w31);
	bool Z;
	x21.u1 = Test(EQ,Z) ? x10 : x9;
	x0 = x21;
	sp.u0->b00E4 = 0x00;
	sp.u0->dw0560 = w11;
	sp.u0->t05A8.u1 = (size_t) 0x00;
	sp.u0->t05A0.u1 = (size_t) 0x00;
	sp.u0->t0578.u1 = (size_t) 0x00;
	sp.u0->t0570.u1 = (size_t) 0x00;
	sp.u0->t0568.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u0 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
l0000000000031880:
		x0 = x23;
		fn000000000001B2D0();
		goto l0000000000031888;
	}
	x19 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		w8 = w19 << 1;
		x23.u1 = x23 + 0x01;
		sp.u0->t0568.u0 = (byte) (byte) w8;
		if (x19 == 0x00)
			goto l000000000002E658;
	}
	else
	{
		x8.u1 = x19 + (char *) 0x10;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		sp.u0->t0578.u1 = (size_t) x0;
		sp.u0->t0568.u1 = (size_t) x8;
		sp.u0->t0570.u1 = (size_t) x19;
	}
	x0 = x23;
	x1 = x21;
	x2 = x19;
	x0 = memcpy(x0, x1, x2);
l000000000002E658:
	*(x23 + x19) = (word64) 0x00;
	x0.u1 = sp + 0x0560;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w19 = 0x00;
		Eq_14 v218;
		v218.u0 = sp.u0->t0568.u0;
		w8.u1 = (word32) v218;
		if ((w8 & 0x01) == 0x00)
			goto l000000000002E724;
		goto l000000000002E6C0;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	((word32) sp + 0x0558)->u0 = 0x00;
	((word32) sp + 0x0550)->u0 = 0x00;
	((word32) sp + 0x0548)->u0 = 0x00;
	x19 = *x8.u1;
	x0 = x19;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
l00000000000318CC:
		x0.u1 = sp + 0x0548;
		fn000000000001B2D0();
l00000000000318D4:
		x0.u1 = sp + 0x0300;
		fn000000000001B2D0();
l00000000000318DC:
		x0.u1 = sp.u0->t0028.u1;
		fn000000000001B2D0();
l00000000000318E4:
		x0.u1 = sp + 688;
		fn000000000001B2D0();
l00000000000318EC:
		x0.u1 = sp + 0x0408;
		fn000000000001B2D0();
		goto l00000000000318F4;
	}
	x21 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w21;
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x0548;
		w8 = w21 << 1;
		x23 = x9 | 0x01;
		((word32) sp + 0x0548)->u0 = (byte) w8;
		if (x21 == 0x00)
			goto l000000000002E704;
	}
	else
	{
		x8.u1 = x21 + 0x10;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		((word32) sp + 0x0558)->u0 = x0;
		((word32) sp + 0x0548)->u0 = x8;
		((word32) sp + 0x0550)->u0 = x21;
	}
	x0 = x23;
	x1 = x19;
	x2 = x21;
	x0 = memcpy(x0, x1, x2);
l000000000002E704:
	*(x23 + x21) = (word64) 0x00;
	x0.u1 = sp + 0x0548;
	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
	Eq_14 v45;
	v45.u1 = *((word32) sp + 0x0548);
	w8.u1 = (word32) v45;
	w19 = w0;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_14 v46;
		v46.u0 = sp.u0->t0568.u0;
		w8.u1 = (word32) v46;
		if ((w8 & 0x01) != 0x00)
		{
l000000000002E724:
			if ((w19 & 0x01) == 0x00)
				goto l000000000002E7A0;
l000000000002E728:
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			x1 = *x8.u1;
			x2.u0 = 0x00071000;
			Eq_14 x3;
			x3.u0 = 0x00052000;
			x2.u1 = x2 + 0x0118;
			x3.u1 = (word32) x3 + 0x05EE;
			x0.u1 = sp + 0x05F8;
			ui32 w4 = 0x00 | 0x06;
			word64 x5 = 0x00;
			x19.u1 = sp + 0x05F8;
			_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
			x0.u1 = x19 + 0x08;
			x1.u0 = 0x00052000;
			x1.u1 = x1 + 0x02F6;
			ui32 w2 = 0x17;
			fn000000000001BB30();
			Eq_14 v51 = *x22.u1;
			w8.u1 = (word32) v51;
			x9 = *((word32) x22 + 16);
			x19 = x0;
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			bool V = false;
			x21.u1 = Test(NE,Z) ? x9 : (word32) x22 + 1;
			x0 = x21;
			x0 = strlen(x0);
			x2 = x0;
			x0 = x19;
			x1 = x21;
			fn000000000001BB30();
			x0.u1 = sp + 0x05F8;
			LogCapture::~LogCapture();
			sp.u0 = sp + 0x08;
l000000000002E7A0:
			sp.u0->b00E0 = 0x00;
			Eq_14 v52 = *x22.u1;
			w8.u1 = (word32) v52;
			x9 = *((word32) x22 + 8);
			x10 = x8 >> 1;
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			x9.u1 = Test(EQ,Z) ? x10 : x9;
			NZCV.u0 = cond(x9 - 0x07);
			Eq_14 w10;
			Eq_14 x11;
			Eq_14 x13;
			ui32 w1;
			ui32 w27;
			word32 NV;
			word32 NZV;
			ui32 w9;
			Eq_38897 x31;
			Eq_14 q1;
			ui32 w20;
			word32 w23;
			if (Test(NE,Z))
			{
l000000000002E7E0:
				x8.u0 = 0x00071000;
				x8.u1 = x8 + 0x0118;
				x12 = x8;
				w8 = *x8.u1;
				Eq_14 v54 = *((word32) x12 + 8);
				w10.u1 = (word32) v54;
				x11 = *((word32) x12 + 24);
				x9.u1 = sp + 0x0420;
				((word32) sp + 0x0420)->u0 = w8;
				x8.u1 = x12 + 0x09;
				w31 = w10 & 0x01;
				NZ.u0 = cond(w31);
				x21.u1 = Test(EQ,Z) ? x8 : x11;
				x0 = x21;
				sp.u0->t05E8.u1 = 0x00;
				sp.u0->t05E0.u1 = 0x00;
				sp.u0->t05F0.u1 = 0x00;
				x22.u1 = x9 + 0x08;
				((word32) sp + 1080)->u0 = 0x00;
				((word32) sp + 0x0430)->u0 = 0x00;
				((word32) sp + 0x0428)->u0 = 0x00;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(UGE,C))
				{
l00000000000318A4:
					x0 = x22;
					fn000000000001B2D0();
					goto l00000000000318AC;
				}
				x19 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					w8 = w19 << 1;
					x22.u1 = x22 + 0x01;
					((word32) sp + 0x0428)->u0 = (byte) w8;
					if (x19 == 0x00)
						goto l000000000002E88C;
				}
				else
				{
					x8.u1 = x19 + 0x10;
					x23 = x8 & ~0x0F;
					x0 = x23;
					_Znwm();
					x8 = x23 | 0x01;
					x22 = x0;
					((word32) sp + 1080)->u0 = x0;
					((word32) sp + 0x0428)->u0 = x8;
					((word32) sp + 0x0430)->u0 = x19;
				}
				x0 = x22;
				x1 = x21;
				x2 = x19;
				x0 = memcpy(x0, x1, x2);
l000000000002E88C:
				*(x22 + x19) = (word64) 0x00;
				x0.u1 = sp + 0x0420;
				((LEVELS) x0);
				if ((w0 & 0x01) == 0x00)
				{
					w19 = 0x00;
					Eq_14 v163;
					v163.u1 = *((word32) sp + 0x0428);
					w8.u1 = (word32) v163;
					if ((w8 & 0x01) == 0x00)
						goto l000000000002E96C;
					goto l000000000002E8F4;
				}
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				((word32) sp + 0x0418)->u0 = 0x00;
				((word32) sp + 1040)->u0 = 0x00;
				((word32) sp + 0x0408)->u0 = 0x00;
				x19 = *x8.u1;
				x0 = x19;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(UGE,C))
					goto l00000000000318EC;
				x21 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					x9.u1 = sp + 0x0408;
					w8 = w21 << 1;
					x22 = x9 | 0x01;
					((word32) sp + 0x0408)->u0 = (byte) w8;
					if (x21 == 0x00)
						goto l000000000002E94C;
				}
				else
				{
					x8.u1 = x21 + 0x10;
					x23 = x8 & ~0x0F;
					x0 = x23;
					_Znwm();
					x8 = x23 | 0x01;
					x22 = x0;
					((word32) sp + 0x0418)->u0 = x0;
					((word32) sp + 0x0408)->u0 = x8;
					((word32) sp + 1040)->u0 = x21;
				}
				x0 = x22;
				x1 = x19;
				x2 = x21;
				x0 = memcpy(x0, x1, x2);
l000000000002E94C:
				*(x22 + x21) = (word64) 0x00;
				x0.u1 = sp + 0x0408;
				_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
				Eq_14 v58;
				v58.u1 = *((word32) sp + 0x0408);
				w8.u1 = (word32) v58;
				w19 = w0;
				if ((w8 & 0x01) != 0x00)
				{
					Eq_14 v59;
					v59.u1 = *((word32) sp + 0x0428);
					w8.u1 = (word32) v59;
					if ((w8 & 0x01) != 0x00)
					{
l000000000002E96C:
						if ((w19 & 0x01) == 0x00)
							goto l000000000002E9BC;
l000000000002E970:
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						x1 = *x8.u1;
						x2.u0 = 0x00071000;
						x3.u0 = 0x00052000;
						x2.u1 = x2 + 0x0118;
						x3.u1 = (word32) x3 + 0x05EE;
						x0.u1 = sp + 0x05F8;
						w4 = 0x00 | 0x06;
						x5 = 0x00;
						x19.u1 = sp + 0x05F8;
						_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
						x0.u1 = x19 + 0x08;
						x1.u0 = 0x00052000;
						x1.u1 = x1 + 0x0352;
						w2 = 0x00 | 0x1C;
						fn000000000001BB30();
						x0.u1 = sp + 0x05F8;
						LogCapture::~LogCapture();
						sp.u0 = sp + 0x08;
l000000000002E9BC:
						x8.u1 = sp.u0->t00B8.u1;
						sp.u0->t0370.u1 = (size_t) 0x00;
						x8.u1 = x8 + 48;
						x19 = *x8.u1;
						((word32) sp + 88)->u0 = x8;
						w0 = 0x00 | 0x30;
						_Znwm();
						x1 = x0;
						x8.u0 = 0x0006F000;
						x8.u1 = x8 + 0x0A78;
						x9 = x29 - 0xC0;
						x10.u1 = sp + 0x05E0;
						x11.u1 = sp + 0x0580;
						x12.u1 = sp + 0x0598;
						x13 = x29 - 0x90;
						Eq_14 v61 = x1;
						*v61.u1 = x8;
						*((word32) v61 + 8) = x9;
						Eq_37794 v62;
						v62.u0 = x1 + 16;
						v62->u0 = x10;
						((word32) v62 + 8)->u0 = x11;
						Eq_37803 v63;
						v63.u0 = x1 + 32;
						v63->u0 = x12;
						((word32) v63 + 8)->u0 = x13;
						x2.u1 = sp + 880;
						x0 = x19;
						rs2_set_devices_changed_callback_cpp();
						x0.u1 = sp.u0->t0370.u1;
						fn000000000001ADF0();
						x8.u0 = 0x00071000;
						x8.u1 = x8 + 0x0118;
						x12 = x8;
						Eq_14 v64 = *((word32) x12 + 8);
						w10.u1 = (word32) v64;
						x11 = *((word32) x12 + 24);
						w8 = *x8.u1;
						x12.u1 = x12 + 0x09;
						w31 = w10 & 0x01;
						NZ.u0 = cond(w31);
						x21.u1 = Test(EQ,Z) ? x12 : x11;
						x9.u1 = sp + 1000;
						x0 = x21;
						x22.u1 = x9 + 0x08;
						((word32) sp + 1000)->u0 = w8;
						sp.u0->t0400.u1 = 0x00;
						sp.u0->t03F8.u1 = 0x00;
						sp.u0->t03F0.u1 = 0x00;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(ULT,C))
						{
							x19 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								w8 = w19 << 1;
								x22.u1 = x22 + 0x01;
								sp.u0->t03F0.u0 = (byte) (byte) w8;
								if (x19 == 0x00)
									goto l000000000002EAB4;
							}
							else
							{
								x8.u1 = x19 + 0x10;
								x23 = x8 & ~0x0F;
								x0 = x23;
								_Znwm();
								x8 = x23 | 0x01;
								x22 = x0;
								sp.u0->t0400.u1 = (size_t) x0;
								sp.u0->t03F0.u1 = (size_t) x8;
								sp.u0->t03F8.u1 = (size_t) x19;
							}
							x0 = x22;
							x1 = x21;
							x2 = x19;
							x0 = memcpy(x0, x1, x2);
l000000000002EAB4:
							*(x22 + x19) = (word64) 0x00;
							x0.u1 = sp + 1000;
							((LEVELS) x0);
							if ((w0 & 0x01) == 0x00)
							{
								w19 = 0x00;
								Eq_14 v71;
								v71.u0 = sp.u0->t03F0.u0;
								w8.u1 = (word32) v71;
								if ((w8 & 0x01) == 0x00)
									goto l000000000002EB94;
								goto l000000000002EB1C;
							}
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 3432);
							sp.u0->t03E0.u1 = (size_t) 0x00;
							sp.u0->t03D8.u1 = (size_t) 0x00;
							sp.u0->t03D0.u1 = (size_t) 0x00;
							x19 = *x8.u1;
							x0 = x19;
							x0 = strlen(x0);
							sp.u0 = x0 + 0x10;
							NZCV.u0 = cond(sp);
							if (Test(UGE,C))
							{
l00000000000318F4:
								x0.u1 = sp + 0x03D0;
								fn000000000001B2D0();
								goto l00000000000318FC;
							}
							x21 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								x9.u1 = sp + 0x03D0;
								w8 = w21 << 1;
								x22 = x9 | 0x01;
								sp.u0->t03D0.u0 = (byte) (byte) w8;
								if (x21 == 0x00)
									goto l000000000002EB74;
							}
							else
							{
								x8.u1 = x21 + 0x10;
								x23 = x8 & ~0x0F;
								x0 = x23;
								_Znwm();
								x8 = x23 | 0x01;
								x22 = x0;
								sp.u0->t03E0.u1 = (size_t) x0;
								sp.u0->t03D0.u1 = (size_t) x8;
								sp.u0->t03D8.u1 = (size_t) x21;
							}
							x0 = x22;
							x1 = x19;
							x2 = x21;
							x0 = memcpy(x0, x1, x2);
l000000000002EB74:
							*(x22 + x21) = (word64) 0x00;
							x0.u1 = sp + 0x03D0;
							_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
							Eq_14 v66;
							v66.u0 = sp.u0->t03D0.u0;
							w8.u1 = (word32) v66;
							w19 = w0;
							if ((w8 & 0x01) != 0x00)
							{
								Eq_14 v67;
								v67.u0 = sp.u0->t03F0.u0;
								w8.u1 = (word32) v67;
								if ((w8 & 0x01) != 0x00)
								{
l000000000002EB94:
									if ((w19 & 0x01) == 0x00)
										goto l000000000002EBE4;
l000000000002EB98:
									x8.u0 = 0x00070000;
									x8 = *((word32) x8 + 3432);
									x1 = *x8.u1;
									x2.u0 = 0x00071000;
									x3.u0 = 0x00052000;
									x2.u1 = x2 + 0x0118;
									x3.u1 = (word32) x3 + 0x05EE;
									x0.u1 = sp + 0x05F8;
									w4 = 0x00 | 0x06;
									x5 = 0x00;
									x19.u1 = sp + 0x05F8;
									_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
									x0.u1 = x19 + 0x08;
									x1.u0 = 0x00052000;
									x1.u1 = x1 + 0x036F;
									w2 = 0x0D;
									fn000000000001BB30();
									x0.u1 = sp + 0x05F8;
									LogCapture::~LogCapture();
									sp.u0 = sp + 0x08;
l000000000002EBE4:
									x0.u1 = *((word32) sp + 88);
									x8.u1 = sp + 0x03C0;
									w1 = 0x00 | 0x0E;
									fn000000000001AF40();
									x8.u0 = 0x00071000;
									x8.u1 = x8 + 0x0118;
									x12 = x8;
									Eq_14 v69 = *((word32) x12 + 8);
									w10.u1 = (word32) v69;
									x11 = *((word32) x12 + 24);
									w8 = *x8.u1;
									x12.u1 = x12 + 0x09;
									w31 = w10 & 0x01;
									NZ.u0 = cond(w31);
									x21.u1 = Test(EQ,Z) ? x12 : x11;
									x9.u1 = sp + 0x03A0;
									x0 = x21;
									x22.u1 = x9 + 0x08;
									((word32) sp + 928)->u0 = w8;
									sp.u0->t03B8.u1 = 0x00;
									sp.u0->t03B0.u1 = 0x00;
									sp.u0->t03A8.u1 = 0x00;
									x0 = strlen(x0);
									sp.u0 = x0 + 0x10;
									NZCV.u0 = cond(sp);
									if (Test(ULT,C))
									{
										x19 = x0;
										NZCV.u0 = cond(x0 - 0x17);
										if (Test(ULT,C))
										{
											w8 = w19 << 1;
											x22.u1 = x22 + 0x01;
											sp.u0->t03A8.u0 = (byte) (byte) w8;
											if (x19 == 0x00)
												goto l000000000002EC94;
										}
										else
										{
											x8.u1 = x19 + 0x10;
											x23 = x8 & ~0x0F;
											x0 = x23;
											_Znwm();
											x8 = x23 | 0x01;
											x22 = x0;
											sp.u0->t03B8.u1 = (size_t) x0;
											sp.u0->t03A8.u1 = (size_t) x8;
											sp.u0->t03B0.u1 = (size_t) x19;
										}
										x0 = x22;
										x1 = x21;
										x2 = x19;
										x0 = memcpy(x0, x1, x2);
l000000000002EC94:
										*(x22 + x19) = (word64) 0x00;
										x0.u1 = sp + 0x03A0;
										((LEVELS) x0);
										if ((w0 & 0x01) == 0x00)
										{
											w19 = 0x00;
											Eq_14 v86;
											v86.u0 = sp.u0->t03A8.u0;
											w8.u1 = (word32) v86;
											if ((w8 & 0x01) == 0x00)
												goto l000000000002ED74;
											goto l000000000002ECFC;
										}
										x8.u0 = 0x00070000;
										x8 = *((word32) x8 + 3432);
										sp.u0->t0398.u1 = (size_t) 0x00;
										sp.u0->t0390.u1 = (size_t) 0x00;
										sp.u0->t0388.u1 = (size_t) 0x00;
										x19 = *x8.u1;
										x0 = x19;
										x0 = strlen(x0);
										sp.u0 = x0 + 0x10;
										NZCV.u0 = cond(sp);
										if (Test(ULT,C))
										{
											x21 = x0;
											NZCV.u0 = cond(x0 - 0x17);
											if (Test(ULT,C))
											{
												x9.u1 = sp + 0x0388;
												w8 = w21 << 1;
												x22 = x9 | 0x01;
												sp.u0->t0388.u0 = (byte) (byte) w8;
												if (x21 == 0x00)
													goto l000000000002ED54;
											}
											else
											{
												x8.u1 = x21 + 0x10;
												x23 = x8 & ~0x0F;
												x0 = x23;
												_Znwm();
												x8 = x23 | 0x01;
												x22 = x0;
												sp.u0->t0398.u1 = (size_t) x0;
												sp.u0->t0388.u1 = (size_t) x8;
												sp.u0->t0390.u1 = (size_t) x21;
											}
											x0 = x22;
											x1 = x19;
											x2 = x21;
											x0 = memcpy(x0, x1, x2);
l000000000002ED54:
											*(x22 + x21) = (word64) 0x00;
											x0.u1 = sp + 0x0388;
											_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
											Eq_14 v72;
											v72.u0 = sp.u0->t0388.u0;
											w8.u1 = (word32) v72;
											w19 = w0;
											if ((w8 & 0x01) != 0x00)
											{
												Eq_14 v73;
												v73.u0 = sp.u0->t03A8.u0;
												w8.u1 = (word32) v73;
												if ((w8 & 0x01) != 0x00)
												{
l000000000002ED74:
													if ((w19 & 0x01) == 0x00)
														goto l000000000002EDF0;
l000000000002ED78:
													x8.u0 = 0x00070000;
													x8 = *((word32) x8 + 3432);
													x1 = *x8.u1;
													x2.u0 = 0x00071000;
													x3.u0 = 0x00052000;
													x2.u1 = x2 + 0x0118;
													x3.u1 = (word32) x3 + 0x05EE;
													x0.u1 = sp + 0x05F8;
													w4 = 0x00 | 0x06;
													x5 = 0x00;
													x19.u1 = sp + 0x05F8;
													_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
													x0.u1 = x19 + 0x08;
													x1.u0 = 0x00052000;
													x1.u1 = x1 + 0x037D;
													w2 = 0x0D;
													fn000000000001BB30();
													x19 = x0;
													x0.u1 = *((word32) sp + 960);
													sp.u0->t0370.u1 = (size_t) 0x00;
													x1.u1 = sp + 880;
													rs2_get_device_count();
													w21 = w0;
													x0.u1 = sp.u0->t0370.u1;
													fn000000000001ADF0();
													x0 = x19;
													w1 = w21;
													fn000000000001B220();
													x0.u1 = sp + 0x05F8;
													LogCapture::~LogCapture();
													sp.u0 = sp + 0x08;
l000000000002EDF0:
													x0.u1 = *((word32) sp + 960);
													sp.u0->t0370.u1 = (size_t) 0x00;
													x1.u1 = sp + 880;
													rs2_get_device_count();
													ui32 w22 = w0;
													x0.u1 = sp.u0->t0370.u1;
													fn000000000001ADF0();
													Eq_14 x17;
													Eq_38544 x14;
													Eq_38557 x15;
													Eq_38582 x16;
													ui32 w26;
													if (w22 != 0x00)
													{
														x17.u0 = 0x00070000;
														x17 = *((word32) x17 + 0x0DC0);
														x8.u1 = sp + 0x05F8;
														x11.u1 = sp + 0x05E0;
														x2 = x8 | 0x01;
														x17.u1 = (word32) x17 + 16;
														sp.u0->t0070.u1 = (size_t) x17;
														x17.u0 = 0x00050000;
														x8.u1 = x8 + 0x08;
														x9.u1 = sp + 848;
														x12.u1 = sp + 0x05B0;
														Eq_38517 v76;
														v76.u0 = sp + 0x0080;
														v76->u0 = x8;
														((word32) v76 + 8)->u0 = x2;
														x8 = x11 | 0x01;
														q0 = *((word32) x17 + 640);
														x10.u1 = sp + 0x0338;
														x13.u1 = sp + 0x0318;
														x23.u1 = x9 + 0x08;
														x9.u1 = x9 + 0x09;
														((word32) sp + 80)->u0 = x8;
														x8 = x12 | 0x01;
														x14.u0 = sp + 0x0300;
														((word32) sp + 96)->u0 = x9;
														x9 = x10 | 0x01;
														sp.u0->t0078.u1 = (size_t) x8;
														x8.u1 = x13 + 0x09;
														x15.u0 = sp + 0x02C8;
														x0.u0 = 0x00050000;
														Eq_38560 v79;
														v79.u0 = sp + 64;
														v79->u0 = x9;
														((word32) v79 + 8)->u0 = x8;
														x8 = x14 | 0x01;
														((word32) sp + 56)->u0 = x8;
														sp.u0->t00A0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
														x8.u1 = x15 + 0x08;
														q0 = *((word32) x0 + 656);
														x16.u0 = sp + 688;
														sp.u0->t0028.u1 = (size_t) x8;
														x8.u1 = x15 + 0x09;
														((word32) sp + 32)->u0 = x8;
														x8 = x16 | 0x01;
														w1 = 0x00;
														x20.u0 = 0x00;
														w27 = 0x2E32;
														x24.u1 = x13 + 0x08;
														sp.u0->t0018.u1 = (size_t) x8;
														x8.u1 = (word32) x25 + 16;
														w26 = 1000;
														sp.u0->t0090.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
														((word32) sp + 0x0068)->u0 = x8;
														do
														{
															x8.u1 = sp + 880;
															x0.u1 = sp + 0x03C0;
															fn000000000001BD80();
															x0.u1 = sp + 880;
															fn000000000001BF30();
															if ((w0 & 0x01) != 0x00)
															{
																x0.u1 = sp.u0->t0378.u1;
																sp.u0->t05D0.u1 = (size_t) 0x00;
																w1 = 0x00 | 0x01;
																x2.u1 = sp + 0x05D0;
																rs2_supports_device_info();
																w19 = w0;
																x0.u1 = sp.u0->t05D0.u1;
																fn000000000001ADF0();
																NZCV.u0 = cond(w19 - 0x01);
																if (Test(LT,NV))
																	goto l000000000002EFB8;
																x0.u1 = sp.u0->t0378.u1;
																sp.u0->t05D0.u1 = (size_t) 0x00;
																w1 = 0x00 | 0x0C;
																x2.u1 = sp + 0x05D0;
																rs2_supports_device_info();
																w19 = w0;
																x0.u1 = sp.u0->t05D0.u1;
																fn000000000001ADF0();
																NZCV.u0 = cond(w19 - 0x00);
																if (Test(LE,NZV))
																	goto l000000000002EFB8;
																x0.u1 = sp.u0->t0378.u1;
																sp.u0->t05D0.u1 = (size_t) 0x00;
																w1 = 0x09;
																x2.u1 = sp + 0x05D0;
																rs2_supports_device_info();
																w19 = w0;
																x0.u1 = sp.u0->t05D0.u1;
																fn000000000001ADF0();
																NZCV.u0 = cond(w19 - 0x01);
																if (Test(GE,NV))
																{
																	x0.u1 = sp.u0->t0378.u1;
																	sp.u0->t05D0.u1 = (size_t) 0x00;
																	w1 = 0x09;
																	x2.u1 = sp + 0x05D0;
																	rs2_get_device_info();
																	x19 = x0;
																	x0.u1 = sp.u0->t05D0.u1;
																	fn000000000001ADF0();
																	x0 = x19;
																	sp.u0->t0600.u1 = (size_t) 0x00;
																	sp.u0->t05F8.u1 = (size_t) 0x00;
																	sp.u0->t0608.u1 = (size_t) 0x00;
																	x0 = strlen(x0);
																	sp.u0 = x0 + 0x10;
																	NZCV.u0 = cond(sp);
																	if (Test(ULT,C))
																	{
																		x21 = x0;
																		NZCV.u0 = cond(x0 - 0x17);
																		if (Test(ULT,C))
																		{
																			x25.u1 = sp.u0->t0088.u1;
																			w8 = w21 << 1;
																			sp.u0->t05F8.u0 = (byte) (byte) w8;
																			if (x21 == 0x00)
																				goto l000000000002F054;
																		}
																		else
																		{
																			x8.u1 = x21 + 0x10;
																			x28 = x8 & ~0x0F;
																			x0 = x28;
																			_Znwm();
																			x8 = x28 | 0x01;
																			x25 = x0;
																			sp.u0->t0608.u1 = (size_t) x0;
																			sp.u0->t05F8.u1 = (size_t) x8;
																			sp.u0->t0600.u1 = (size_t) x21;
																		}
																		x0 = x25;
																		x1 = x19;
																		x2 = x21;
																		x0 = memcpy(x0, x1, x2);
l000000000002F054:
																		*(x25 + x21) = (word64) 0x00;
																		Eq_14 v88;
																		v88.u0 = sp.u0->t05F8.u0;
																		w9 = (word32) v88;
																		x8.u1 = sp.u0->t0608.u1;
																		x10.u1 = sp.u0->t0600.u1;
																		x12.u1 = sp.u0->t0088.u1;
																		w31 = w9 & 0x01;
																		NZ.u0 = cond(w31);
																		x11 = x9 >> 1;
																		w19 = w9 & 0x01;
																		x21.u1 = Test(EQ,Z) ? x12 : x8;
																		x8.u1 = Test(EQ,Z) ? x11 : x10;
																		NZCV.u0 = cond(x8 - 0x02);
																		if (Test(GE,NV))
																		{
																			x25.u1 = x21 + x8;
																			x0 = x21;
																			do
																			{
																				x2 = x8 - 0x01;
																				NZCV.u0 = cond(x2);
																				if (Test(EQ,Z))
																					break;
																				w1 = 0x32;
																				x0 = memchr(x0, (int32) x1, x2);
																				if (x0 == 0x00)
																					break;
																				word16 v89 = (word16) *x0.u1;
																				w8.u1 = (word32) v89;
																				NZCV.u0 = cond(w8 - w27);
																				if (Test(EQ,Z))
																				{
																					x31 = x0 - x25;
																					NZCV.u0 = cond(x31);
																					if (Test(NE,Z))
																					{
																						x8 = x0 - x21;
																						sp.u0 = x8 + 0x01;
																						NZCV.u0 = cond(sp);
																						if (Test(NE,Z))
																						{
																							x0.u0 = 0x00070000;
																							x0 = *((word32) x0 + 3832);
																							x1.u0 = 0x00052000;
																							w2 = 0x00 | 0x7C;
																							x1.u1 = x1 + 0x11;
																							fn000000000001BB30();
																							byte v91 = sp.u0->t05F8.u0;
																							w8.u1 = (word32) v91;
																							w19 = w8 & 0x01;
																						}
																					}
																					break;
																				}
																				x0.u1 = x0 + 0x01;
																				x8 = x25 - x0;
																				NZCV.u0 = cond(x8 - 0x02);
																			} while (Test(GE,NZV));
																		}
																		if (w19 != 0x00)
																		{
																			x0.u1 = sp.u0->t0608.u1;
																			((real64) q0, x0, x1);
																		}
																		goto l000000000002F100;
																	}
																	x0.u1 = sp + 0x05F8;
																	fn000000000001B2D0();
l0000000000031894:
																	x0.u1 = sp + 0x0338;
																	fn000000000001B2D0();
l000000000003189C:
																	x0 = x24;
																	fn000000000001B2D0();
																	goto l00000000000318A4;
																}
l000000000002F100:
																x0.u1 = sp.u0->t0378.u1;
																sp.u0->t05D0.u1 = (size_t) 0x00;
																w1 = 0x00 | 0x0C;
																x2.u1 = sp + 0x05D0;
																rs2_get_device_info();
																x19 = x0;
																x0.u1 = sp.u0->t05D0.u1;
																fn000000000001ADF0();
																x0 = x19;
																x0 = strlen(x0);
																x2 = x0;
																x0.u1 = sp + 0x05E0;
																x1 = x19;
																fn000000000001B8B0();
																x0.u1 = sp.u0->t0378.u1;
																sp.u0->t05D0.u1 = (size_t) 0x00;
																w1 = 0x00 | 0x01;
																x2.u1 = sp + 0x05D0;
																rs2_get_device_info();
																x19 = x0;
																x0.u1 = sp.u0->t05D0.u1;
																fn000000000001ADF0();
																x8.u0 = 0x00071000;
																x8.u1 = x8 + 0x0118;
																x11 = x8;
																Eq_14 v92 = *((word32) x11 + 8);
																w9 = (word32) v92;
																x10 = *((word32) x11 + 24);
																w8 = *x8.u1;
																x11.u1 = x11 + 0x09;
																w31 = w9 & 0x01;
																NZ.u0 = cond(w31);
																x28.u1 = Test(EQ,Z) ? x11 : x10;
																x0 = x28;
																((word32) sp + 848)->u0 = w8;
																Eq_14 v93 = x23;
																v93.u1->u0 = 0x00;
																((word32) v93 + 8)->u0 = 0x00;
																((word32) x23 + 16)->u0 = 0x00;
																x0 = strlen(x0);
																sp.u0 = x0 + (char *) 0x10;
																NZCV.u0 = cond(sp);
																if (Test(UGE,C))
																	goto l0000000000031870;
																x21 = x0;
																NZCV.u0 = cond(x0 - 0x17);
																if (Test(ULT,C))
																{
																	x25.u1 = *((word32) sp + 96);
																	w8 = w21 << 1;
																	((word32) sp + 856)->u0 = (byte) w8;
																	if (x21 == 0x00)
																		goto l000000000002F1EC;
																}
																else
																{
																	x8.u1 = x21 + 0x10;
																	x27 = x8 & ~0x0F;
																	x0 = x27;
																	_Znwm();
																	x8 = x27 | 0x01;
																	x25 = x0;
																	((word32) sp + 872)->u0 = x0;
																	((word32) sp + 856)->u0 = x8;
																	((word32) sp + 864)->u0 = x21;
																}
																x0 = x25;
																x1 = x28;
																x2 = x21;
																x0 = memcpy(x0, x1, x2);
l000000000002F1EC:
																*(x25 + x21) = (word64) 0x00;
																x0.u1 = sp + 848;
																((LEVELS) x0);
																ui32 w28;
																if ((w0 & 0x01) != 0x00)
																{
																	x8.u0 = 0x00070000;
																	x8 = *((word32) x8 + 3432);
																	((word32) sp + 840)->u0 = 0x00;
																	((word32) sp + 832)->u0 = 0x00;
																	((word32) sp + 0x0338)->u0 = 0x00;
																	x21 = *x8.u1;
																	x0 = x21;
																	x0 = strlen(x0);
																	sp.u0 = x0 + 0x10;
																	NZCV.u0 = cond(sp);
																	if (Test(UGE,C))
																		goto l0000000000031894;
																	x28 = x0;
																	NZCV.u0 = cond(x0 - 0x17);
																	if (Test(ULT,C))
																	{
																		x25.u1 = *((word32) sp + 64);
																		w8 = w28 << 1;
																		((word32) sp + 0x0338)->u0 = (byte) w8;
																		if (x28 == 0x00)
																			goto l000000000002F294;
																	}
																	else
																	{
																		x8.u1 = x28 + 0x10;
																		x27 = x8 & ~0x0F;
																		x0 = x27;
																		_Znwm();
																		x8 = x27 | 0x01;
																		x25 = x0;
																		((word32) sp + 840)->u0 = x0;
																		((word32) sp + 0x0338)->u0 = x8;
																		((word32) sp + 832)->u0 = x28;
																	}
																	x0 = x25;
																	x1 = x21;
																	x2 = x28;
																	x0 = memcpy(x0, x1, x2);
l000000000002F294:
																	*(x25 + x28) = (word64) 0x00;
																	x0.u1 = sp + 0x0338;
																	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
																	Eq_14 v95;
																	v95.u1 = *((word32) sp + 0x0338);
																	w8.u1 = (word32) v95;
																	w21 = w0;
																	if ((w8 & 0x01) != 0x00)
																	{
																		Eq_14 v96;
																		v96.u1 = *((word32) sp + 856);
																		w8.u1 = (word32) v96;
																		if ((w8 & 0x01) != 0x00)
																			goto l000000000002F2B4;
																		goto l000000000002F250;
																	}
																	x0.u1 = *((word32) sp + 840);
																	((real64) q0, x0, x1);
																	Eq_14 v102;
																	v102.u1 = *((word32) sp + 856);
																	w8.u1 = (word32) v102;
																	if ((w8 & 0x01) != 0x00)
																		goto l000000000002F250;
																	goto l000000000002F2B4;
																}
																w21 = 0x00;
																Eq_14 v115;
																v115.u1 = *((word32) sp + 856);
																w8.u1 = (word32) v115;
																if ((w8 & 0x01) != 0x00)
																{
l000000000002F250:
																	x0.u1 = *((word32) sp + 872);
																	((real64) q0, x0, x1);
																	if ((w21 & 0x01) != 0x00)
																		goto l000000000002F2B8;
																}
																else
																{
l000000000002F2B4:
																	if ((w21 & 0x01) != 0x00)
																	{
l000000000002F2B8:
																		x8.u0 = 0x00070000;
																		x8 = *((word32) x8 + 3432);
																		x1 = *x8.u1;
																		x2.u0 = 0x00071000;
																		x3.u0 = 0x00052000;
																		x0.u1 = sp + 0x05F8;
																		w4 = 0x00 | 0x06;
																		x2.u1 = x2 + 0x0118;
																		x3.u1 = (word32) x3 + 0x05EE;
																		x5 = 0x00;
																		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
																		x0.u1 = sp.u0->t0080.u1;
																		x1.u0 = 0x00052000;
																		w2 = 0x15;
																		x1.u1 = x1 + 0x038B;
																		fn000000000001BB30();
																		Eq_14 v97;
																		v97.u0 = sp.u0->t05E0.u0;
																		w8.u1 = (word32) v97;
																		x9.u1 = sp.u0->t05F0.u1;
																		x10.u1 = sp.u0->t05E8.u1;
																		x11 = x8 >> 1;
																		w31 = w8 & 0x01;
																		NZ.u0 = cond(w31);
																		C = false;
																		V = false;
																		x8.u1 = *((word32) sp + 80);
																		x2.u1 = Test(EQ,Z) ? x11 : x10;
																		x1.u1 = Test(EQ,Z) ? x8 : x9;
																		fn000000000001BB30();
																		x1.u0 = 0x00052000;
																		w2 = 0x11;
																		x1.u1 = x1 + 929;
																		fn000000000001BB30();
																		Eq_14 v98;
																		v98.u0 = sp.u0->t05B0.u0;
																		w8.u1 = (word32) v98;
																		x9.u1 = sp.u0->t05C0.u1;
																		x10.u1 = sp.u0->t05B8.u1;
																		x11 = x8 >> 1;
																		w31 = w8 & 0x01;
																		NZ.u0 = cond(w31);
																		C = false;
																		V = false;
																		x8.u1 = sp.u0->t0078.u1;
																		x2.u1 = Test(EQ,Z) ? x11 : x10;
																		x1.u1 = Test(EQ,Z) ? x8 : x9;
																		fn000000000001BB30();
																		x1.u0 = 0x00052000;
																		w2 = 0x00 | 0x04;
																		x1.u1 = x1 + 0x03B3;
																		fn000000000001BB30();
																		x21 = x0;
																		x0 = x19;
																		x0 = strlen(x0);
																		x2 = x0;
																		x0 = x21;
																		x1 = x19;
																		fn000000000001BB30();
																		x0.u1 = sp + 0x05F8;
																		LogCapture::~LogCapture();
																		sp.u0 = sp + 0x08;
																	}
																}
																x0 = x19;
																x0 = strlen(x0);
																Eq_14 v99;
																v99.u0 = sp.u0->t05B0.u0;
																w8.u1 = (word32) v99;
																x9.u1 = sp.u0->t05B8.u1;
																x10 = x8 >> 1;
																w31 = w8 & 0x01;
																NZ.u0 = cond(w31);
																x9.u1 = Test(EQ,Z) ? x10 : x9;
																x31 = x0 - x9;
																NZCV.u0 = cond(x31);
																if (Test(EQ,Z))
																{
																	x2 = x0;
																	if (x0 == 0x00)
																		goto l000000000002F3F8;
																	sp.u0 = x2 + (char *) 0x01;
																	NZCV.u0 = cond(sp);
																	if (Test(EQ,Z))
																		goto l0000000000031878;
																	x9.u1 = sp.u0->t05C0.u1;
																	w31 = w8 & 0x01;
																	NZ.u0 = cond(w31);
																	C = false;
																	V = false;
																	x8.u1 = sp.u0->t0078.u1;
																	x1 = x19;
																	x0.u1 = Test(EQ,Z) ? x8 : x9;
																	x0 = SEQ(0x00, memcmp(x0, x1, x2));
																	if (w0 != 0x00)
																		goto l000000000002F3D4;
																	goto l000000000002F3F8;
																}
l000000000002F3D4:
																x0.u1 = *((word32) sp + 960);
																sp.u0->t05D0.u1 = (size_t) 0x00;
																x1.u1 = sp + 0x05D0;
																rs2_get_device_count();
																w19 = w0;
																x0.u1 = sp.u0->t05D0.u1;
																fn000000000001ADF0();
																NZCV.u0 = cond(w19 - 0x01);
																if (Test(EQ,Z))
																{
l000000000002F3F8:
																	x0.u1 = sp.u0->t0378.u1;
																	sp.u0->t05D0.u1 = (size_t) 0x00;
																	w1 = 0x00 | 0x02;
																	x2.u1 = sp + 0x05D0;
																	rs2_get_device_info();
																	x19 = x0;
																	x0.u1 = sp.u0->t05D0.u1;
																	fn000000000001ADF0();
																	x8.u0 = 0x00071000;
																	x8.u1 = x8 + 0x0118;
																	x11 = x8;
																	Eq_14 v100 = *((word32) x11 + 8);
																	w9 = (word32) v100;
																	x10 = *((word32) x11 + 24);
																	w8 = *x8.u1;
																	x11.u1 = x11 + 0x09;
																	w31 = w9 & 0x01;
																	NZ.u0 = cond(w31);
																	x28.u1 = Test(EQ,Z) ? x11 : x10;
																	x0 = x28;
																	((word32) sp + 792)->u0 = w8;
																	Eq_14 v101 = x24;
																	v101.u1->u0 = 0x00;
																	((word32) v101 + 8)->u0 = 0x00;
																	((word32) x24 + 16)->u0 = 0x00;
																	x0 = strlen(x0);
																	sp.u0 = x0 + 0x10;
																	NZCV.u0 = cond(sp);
																	if (Test(UGE,C))
																		goto l000000000003189C;
																	x21 = x0;
																	NZCV.u0 = cond(x0 - 0x17);
																	if (Test(ULT,C))
																	{
																		x25.u1 = sp.u0->t0048.u1;
																		w8 = w21 << 1;
																		((word32) sp + 800)->u0 = (byte) w8;
																		if (x21 == 0x00)
																			goto l000000000002F4AC;
																	}
																	else
																	{
																		x8.u1 = x21 + 0x10;
																		x27 = x8 & ~0x0F;
																		x0 = x27;
																		_Znwm();
																		x8 = x27 | 0x01;
																		x25 = x0;
																		((word32) sp + 0x0330)->u0 = x0;
																		((word32) sp + 800)->u0 = x8;
																		((word32) sp + 808)->u0 = x21;
																	}
																	x0 = x25;
																	x1 = x28;
																	x2 = x21;
																	x0 = memcpy(x0, x1, x2);
l000000000002F4AC:
																	*(x25 + x21) = (word64) 0x00;
																	x0.u1 = sp + 0x0318;
																	((LEVELS) x0);
																	if ((w0 & 0x01) != 0x00)
																	{
																		x8.u0 = 0x00070000;
																		x8 = *((word32) x8 + 3432);
																		((word32) sp + 784)->u0 = 0x00;
																		((word32) sp + 776)->u0 = 0x00;
																		((word32) sp + 0x0300)->u0 = 0x00;
																		x21 = *x8.u1;
																		x0 = x21;
																		x0 = strlen(x0);
																		sp.u0 = x0 + 0x10;
																		NZCV.u0 = cond(sp);
																		if (Test(UGE,C))
																			goto l00000000000318D4;
																		x28 = x0;
																		NZCV.u0 = cond(x0 - 0x17);
																		if (Test(ULT,C))
																		{
																			x25.u1 = *((word32) sp + 56);
																			w8 = w28 << 1;
																			((word32) sp + 0x0300)->u0 = (byte) w8;
																			if (x28 == 0x00)
																				goto l000000000002F574;
																		}
																		else
																		{
																			x8.u1 = x28 + 0x10;
																			x27 = x8 & ~0x0F;
																			x0 = x27;
																			_Znwm();
																			x8 = x27 | 0x01;
																			x25 = x0;
																			((word32) sp + 784)->u0 = x0;
																			((word32) sp + 0x0300)->u0 = x8;
																			((word32) sp + 776)->u0 = x28;
																		}
																		x0 = x25;
																		x1 = x21;
																		x2 = x28;
																		x0 = memcpy(x0, x1, x2);
l000000000002F574:
																		*(x25 + x28) = (word64) 0x00;
																		x0.u1 = sp + 0x0300;
																		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
																		Eq_14 v103;
																		v103.u1 = *((word32) sp + 0x0300);
																		w8.u1 = (word32) v103;
																		w21 = w0;
																		if ((w8 & 0x01) != 0x00)
																		{
																			Eq_14 v104;
																			v104.u1 = *((word32) sp + 800);
																			w8.u1 = (word32) v104;
																			if ((w8 & 0x01) != 0x00)
																				goto l000000000002F594;
																			goto l000000000002F510;
																		}
																		x0.u1 = *((word32) sp + 784);
																		((real64) q0, x0, x1);
																		Eq_14 v107;
																		v107.u1 = *((word32) sp + 800);
																		w8.u1 = (word32) v107;
																		if ((w8 & 0x01) != 0x00)
																			goto l000000000002F510;
																		goto l000000000002F594;
																	}
																	w21 = 0x00;
																	Eq_14 v108;
																	v108.u1 = *((word32) sp + 800);
																	w8.u1 = (word32) v108;
																	if ((w8 & 0x01) != 0x00)
																	{
l000000000002F510:
																		x0.u1 = *((word32) sp + 0x0330);
																		((real64) q0, x0, x1);
																		if ((w21 & 0x01) != 0x00)
																			goto l000000000002F598;
																	}
																	else
																	{
l000000000002F594:
																		if ((w21 & 0x01) != 0x00)
																		{
l000000000002F598:
																			x8.u0 = 0x00070000;
																			x8 = *((word32) x8 + 3432);
																			x1 = *x8.u1;
																			x2.u0 = 0x00071000;
																			x3.u0 = 0x00052000;
																			x0.u1 = sp + 0x05F8;
																			w4 = 0x00 | 0x06;
																			x2.u1 = x2 + 0x0118;
																			x3.u1 = (word32) x3 + 0x05EE;
																			x5 = 0x00;
																			_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
																			x0.u1 = sp.u0->t0080.u1;
																			x1.u0 = 0x00052000;
																			w2 = 0x17;
																			x1.u1 = x1 + 0x03B8;
																			fn000000000001BB30();
																			x21 = x0;
																			x0 = x19;
																			x0 = strlen(x0);
																			x2 = x0;
																			x0 = x21;
																			x1 = x19;
																			fn000000000001BB30();
																			x1.u0 = 0x00050000;
																			w2 = 0x00 | 0x01;
																			x1.u1 = x1 + 0x0818;
																			fn000000000001BB30();
																			x0.u1 = sp + 0x05F8;
																			LogCapture::~LogCapture();
																			sp.u0 = sp + 0x08;
																		}
																	}
																	x8.u1 = sp.u0->t0378.u1;
																	x19.u1 = *((word32) sp + 896);
																	x9.u1 = sp.u0->t0070.u1;
																	((word32) sp + 752)->u0 = x8;
																	((word32) sp + 760)->u0 = x19;
																	((word32) sp + 744)->u0 = x9;
																	if (x19 != 0x00)
																	{
																		x8.u1 = x19 + 0x08;
																		do
																		{
																			union Eq_3183 * v105 = &*x8.u1;
																			x9 = __load_exclusive<word64>(v105);
																			x9.u1 = x9 + 0x01;
																			union Eq_3192 * v106 = &*x8.u1;
																			w10 = __store_exclusive<word64>(v106, x9);
																		} while (w10 != 0x00);
																	}
																	x0.u1 = sp + 744;
																	fn000000000001B050();
																	x8.u0 = 0x00070000;
																	x8 = *((word32) x8 + 0x0DC0);
																	x8.u1 = x8 + 0x10;
																	((word32) sp + 744)->u0 = x8;
																	if (x19 != 0x00)
																		x8.u1 = x19 + 0x08;
																	x8.u1 = sp + 0x05F8;
																	x0.u1 = sp + 880;
																	fn000000000001BFF0();
																	x0.u1 = sp.u0->t0600.u1;
																	sp.u0->t05D0.u1 = (size_t) 0x00;
																	x1.u1 = sp + 0x05D0;
																	rs2_enter_update_state();
																	x0.u1 = sp.u0->t05D0.u1;
																	fn000000000001ADF0();
																	x8.u0 = 0x00070000;
																	x8 = *((word32) x8 + 0x0DC0);
																	x19.u1 = sp.u0->t0608.u1;
																	x8.u1 = x8 + 0x10;
																	sp.u0->t05F8.u1 = (size_t) x8;
																	if (x19 != 0x00)
																		x8.u1 = x19 + 0x08;
																	x8 = x29 - 0xC0;
																	sp.u0->t05D0.u1 = (size_t) x8;
																	w8 = 0x00 | 0x01;
																	sp.u0->b05D8 = (byte) w8;
																	x0 = x29 - 0xC0;
																	_ZNSt6__ndk15mutex4lockEv();
																	_ZNSt6__ndk16chrono12steady_clock3nowEv();
																	x8.u0 = 0xC800;
																	x8 = SEQ(SLICE(x8, word32, 32), 43031, (word16) x8);
																	x8 = SEQ(SLICE(x8, word16, 48), 0x04, (word32) x8);
																	x25.u1 = x0 + x8;
																	do
																	{
																		x19.u1 = sp.u0->t0590.u1;
																		x21.u1 = sp.u0->t0588.u1;
																		if (x19 != 0x00)
																		{
																			x8.u1 = x19 + 0x08;
																			do
																			{
																				union Eq_3183 * v109 = &*x8.u1;
																				x9 = __load_exclusive<word64>(v109);
																				x9.u1 = x9 + 0x01;
																				union Eq_3192 * v110 = &*x8.u1;
																				w10 = __store_exclusive<word64>(v110, x9);
																			} while (w10 != 0x00);
																		}
																		if (x21 != 0x00)
																			goto l000000000002F850;
																		_ZNSt6__ndk16chrono12steady_clock3nowEv();
																		x19 = x25 - x0;
																		NZCV.u0 = cond(x19 - 0x01);
																		if (Test(GE,NV))
																		{
																			_ZNSt6__ndk16chrono12steady_clock3nowEv();
																			_ZNSt6__ndk16chrono12system_clock3nowEv();
																			x21 = x0;
																			x0 = x19;
																			__floatditf();
																			q1 = q0;
																			q0.u2 = sp.u0->t00A0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
																			__subtf3();
																			x0 = x21;
																			sp.u0->t00D0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
																			__floatditf();
																			q1.u2 = sp.u0->t0090.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
																			__multf3();
																			q1.u2 = sp.u0->t00D0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
																			__lttf2();
																			NZCV.u0 = cond(w0 - 0x00);
																			if (Test(LT,NZV))
																			{
																				x2.u1 = x19 + x21 *64 x26;
																				x0 = x29 - 0x90;
																				x1.u1 = sp + 0x05D0;
																			}
																			else
																			{
																				x0 = x29 - 0x90;
																				x1.u1 = sp + 0x05D0;
																				x2 = 0x00 | 0x7FFFFFFFFFFFFFFF;
																			}
																			_ZNSt6__ndk118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE();
																			_ZNSt6__ndk16chrono12steady_clock3nowEv();
																		}
																		_ZNSt6__ndk16chrono12steady_clock3nowEv();
																		x31 = x0 - x25;
																		NZCV.u0 = cond(x31);
																	} while (Test(LT,NV));
																	x19.u1 = sp.u0->t0590.u1;
																	x21.u1 = sp.u0->t0588.u1;
																	if (x19 != 0x00)
																	{
																		x8.u1 = x19 + 0x08;
																		do
																		{
																			union Eq_3183 * v119 = &*x8.u1;
																			x9 = __load_exclusive<word64>(v119);
																			x9.u1 = x9 + 0x01;
																			union Eq_3192 * v120 = &*x8.u1;
																			w10 = __store_exclusive<word64>(v120, x9);
																		} while (w10 != 0x00);
																	}
																	if (x21 != 0x00)
																	{
l000000000002F850:
																		x9.u0 = 0x00070000;
																		x8.u1 = sp.u0->t0588.u1;
																		x9 = *((word32) x9 + 0x0DC0);
																		x19.u0 = 0x00;
																		((word32) sp + 680)->u0 = 0x00;
																		((word32) sp + 672)->u0 = x8;
																		x9.u1 = x9 + 0x10;
																		sp.u0->t0298.u1 = (size_t) x9;
																		w27 = 0x00 | 0x01;
																		x8.u1 = *((word32) sp + 0x0068);
																		((word32) sp + 656)->u0 = 0x00;
																		sp.u0->t0288.u1 = 0x00;
																		((word32) sp + 640)->u0 = 0x00;
																		sp.u0->t0298.u1 = (size_t) x8;
																		x8.u1 = sp.u0->t00C0.u1;
																		Eq_14 v137 = x8;
																		x25 = *v137.u1;
																		x8 = *((word32) v137 + 8);
																		x21 = x8 - x25;
																		NZCV.u0 = cond(x21);
																		if (Test(NE,Z))
																		{
																			if ((w21 & 0x00) != 0x00)
																				goto l00000000000318BC;
																			x0 = x21;
																			_Znwm();
																			x28.u1 = x0 + x21;
																			x1 = x25;
																			x2 = x21;
																			sp.u0->t0288.u1 = (size_t) x0;
																			((word32) sp + 640)->u0 = x0;
																			((word32) sp + 656)->u0 = x28;
																			x0 = memcpy(x0, x1, x2);
																			sp.u0->t0288.u1 = (size_t) x28;
																		}
																		x0.u1 = sp + 664;
																		x1.u1 = sp + 0x0280;
																		fn000000000001AED0();
																		x0.u1 = *((word32) sp + 640);
																		if (x0 != 0x00)
																		{
																			sp.u0->t0288.u1 = (size_t) x0;
																			((real64) q0, x0, x1);
																		}
																		x8.u0 = 0x00070000;
																		x8 = *((word32) x8 + 0x0DC0);
																		x8.u1 = x8 + 0x10;
																		sp.u0->t0298.u1 = (size_t) x8;
																		if ((w27 & 0x01) != 0x00)
																			x8.u1 = x19 + 0x08;
																		w8 = 0x00 | 0x01;
																		w21 = 0x00 | 0x04;
																		w27 = 0x2E32;
																		sp.u0->b00E4 = (byte) w8;
																		byte v162 = sp.u0->b05D8;
																		w8.u1 = (word32) v162;
																		if (w8 != 0x00)
																			goto l000000000002F99C;
																		goto l000000000002EFBC;
																	}
																	x8.u0 = 0x00071000;
																	x8.u1 = x8 + 0x0118;
																	x11 = x8;
																	w8 = *x8.u1;
																	Eq_14 v138 = *((word32) x11 + 8);
																	w9 = (word32) v138;
																	x10 = *((word32) x11 + 24);
																	x11.u1 = x11 + 0x09;
																	sp.u0->t02C8.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w8;
																	x8.u1 = sp.u0->t0028.u1;
																	w31 = w9 & 0x01;
																	NZ.u0 = cond(w31);
																	x21.u1 = Test(EQ,Z) ? x11 : x10;
																	x0 = x21;
																	Eq_14 v139 = x8;
																	v139.u1->u1 = 0x00;
																	((word32) v139 + 8)->u0 = 0x00;
																	((word32) x8 + 16)->u0 = 0x00;
																	x0 = strlen(x0);
																	sp.u0 = x0 + 0x10;
																	NZCV.u0 = cond(sp);
																	if (Test(UGE,C))
																		goto l00000000000318DC;
																	x19 = x0;
																	NZCV.u0 = cond(x0 - 0x17);
																	if (Test(ULT,C))
																	{
																		x25.u1 = *((word32) sp + 32);
																		w8 = w19 << 1;
																		sp.u0->b02D0 = (byte) (byte) w8;
																		if (x19 == 0x00)
																			goto l000000000002FA40;
																	}
																	else
																	{
																		x8.u1 = x19 + 0x10;
																		x27 = x8 & ~0x0F;
																		x0 = x27;
																		_Znwm();
																		x8 = x27 | 0x01;
																		x25 = x0;
																		sp.u0->t02E0.u1 = (size_t) x0;
																		((word32) sp + 720)->u0 = x8;
																		((word32) sp + 728)->u0 = x19;
																	}
																	x0 = x25;
																	x1 = x21;
																	x2 = x19;
																	x0 = memcpy(x0, x1, x2);
l000000000002FA40:
																	*(x25 + x19) = (word64) 0x00;
																	x0.u1 = sp + 0x02C8;
																	((LEVELS) x0);
																	if ((w0 & 0x01) != 0x00)
																	{
																		x8.u0 = 0x00070000;
																		x8 = *((word32) x8 + 3432);
																		sp.u0->t02C0.u1 = 0x00;
																		sp.u0->t02B8.u1 = 0x00;
																		sp.u0->t02B0.u1 = 0x00;
																		x19 = *x8.u1;
																		x0 = x19;
																		x0 = strlen(x0);
																		sp.u0 = x0 + 0x10;
																		NZCV.u0 = cond(sp);
																		if (Test(UGE,C))
																			goto l00000000000318E4;
																		x21 = x0;
																		NZCV.u0 = cond(x0 - 0x17);
																		if (Test(ULT,C))
																		{
																			x25.u1 = sp.u0->t0018.u1;
																			w8 = w21 << 1;
																			sp.u0->t02B0.u0 = (byte) (byte) w8;
																			if (x21 == 0x00)
																				goto l000000000002FAEC;
																		}
																		else
																		{
																			x8.u1 = x21 + 0x10;
																			x27 = x8 & ~0x0F;
																			x0 = x27;
																			_Znwm();
																			x8 = x27 | 0x01;
																			x25 = x0;
																			sp.u0->t02C0.u1 = (size_t) x0;
																			sp.u0->t02B0.u1 = (size_t) x8;
																			sp.u0->t02B8.u1 = (size_t) x21;
																		}
																		x0 = x25;
																		x1 = x19;
																		x2 = x21;
																		x0 = memcpy(x0, x1, x2);
l000000000002FAEC:
																		*(x25 + x21) = (word64) 0x00;
																		x0.u1 = sp + 688;
																		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
																		w27 = 0x2E32;
																		Eq_14 v143;
																		v143.u0 = sp.u0->t02B0.u0;
																		w8.u1 = (word32) v143;
																		w19 = w0;
																		if ((w8 & 0x01) != 0x00)
																		{
																			byte v144 = sp.u0->b02D0;
																			w8.u1 = (word32) v144;
																			if ((w8 & 0x01) != 0x00)
																				goto l000000000002FB10;
																			goto l000000000002FAA8;
																		}
																		x0.u1 = sp.u0->t02C0.u1;
																		((real64) q0, x0, x1);
																		byte v149 = sp.u0->b02D0;
																		w8.u1 = (word32) v149;
																		if ((w8 & 0x01) != 0x00)
																			goto l000000000002FAA8;
																		goto l000000000002FB10;
																	}
																	w19 = 0x00;
																	w27 = 0x2E32;
																	Eq_14 v160;
																	v160.u0 = sp.u0->b02D0;
																	w8.u1 = (word32) v160;
																	if ((w8 & 0x01) != 0x00)
																	{
l000000000002FAA8:
																		x0.u1 = sp.u0->t02E0.u1;
																		((real64) q0, x0, x1);
																		if ((w19 & 0x01) != 0x00)
																			goto l000000000002FB5C;
																		goto l000000000002FB14;
																	}
l000000000002FB10:
																	if ((w19 & 0x01) != 0x00)
																	{
l000000000002FB14:
																		x8.u0 = 0x00070000;
																		x8 = *((word32) x8 + 3432);
																		x1 = *x8.u1;
																		x2.u0 = 0x00071000;
																		x3.u0 = 0x00052000;
																		x0.u1 = sp + 0x05F8;
																		w4 = 0x00 | 0x06;
																		x2.u1 = x2 + 0x0118;
																		x3.u1 = x3 + 0x05EE;
																		x5 = 0x00;
																		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
																		x0.u1 = sp.u0->t0080.u1;
																		x1.u0 = 0x00052000;
																		w2 = 0x2B;
																		x1.u1 = x1 + 0x03D0;
																		fn000000000001BB30();
																		x0.u1 = sp + 0x05F8;
																		LogCapture::~LogCapture();
																		sp.u0 = sp + 0x08;
																	}
l000000000002FB5C:
																	w21 = 0x00 | 0x01;
																	byte v147 = sp.u0->b05D8;
																	w8.u1 = (word32) v147;
																	if (w8 != 0x00)
																	{
l000000000002F99C:
																		x0.u1 = sp.u0->t05D0.u1;
																		_ZNSt6__ndk15mutex6unlockEv();
																	}
																}
																else
																{
																	w21 = 0x05;
																	w27 = 0x2E32;
																}
															}
															else
															{
l000000000002EFB8:
																w21 = 0x05;
															}
l000000000002EFBC:
															x8.u0 = 0x00070000;
															x8 = *((word32) x8 + 0x0DC0);
															x19.u1 = *((word32) sp + 896);
															x8.u1 = x8 + 0x10;
															sp.u0->t0370.u1 = (size_t) x8;
															if (x19 != 0x00)
																x8.u1 = x19 + 0x08;
															NZCV.u0 = cond(w21 - 0x05);
															if (Test(NE,Z))
															{
																NZCV.u0 = cond(w21 - 0x04);
																if (Test(EQ,Z))
																	break;
																w19 = 0x00;
																x20.u1 = *((word32) sp + 968);
																if (x20 == 0x00)
																	goto l0000000000030B38;
																goto l0000000000030B20;
															}
															x1.u1 = (word32) x20 + 1;
															NZCV.u0 = cond(w22 - w1);
															x20 = __bfm<word64>(x20, x1, 0, 31);
														} while (Test(NE,Z));
													}
													x8 = x29 - 0xC0;
													w9 = 0x00 | 0x01;
													sp.u0->t05D0.u1 = (size_t) x8;
													sp.u0->b05D8 = (byte) w9;
													x0 = x29 - 0xC0;
													_ZNSt6__ndk15mutex4lockEv();
													_ZNSt6__ndk16chrono12steady_clock3nowEv();
													byte v113 = sp.u0->b00E4;
													w20 = (word32) v113;
													if (w20 != 0x00)
													{
														x8.u0 = 0x00050000;
														q0 = *((word32) x8 + 640);
														x9.u0 = 0x00050000;
														x8.u0 = 0xC800;
														x8 = SEQ(SLICE(x8, word32, 32), 43031, (word16) x8);
														sp.u0->t00A0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
														q0 = *((word32) x9 + 656);
														x8 = SEQ(SLICE(x8, word16, 48), 0x04, (word32) x8);
														x22.u1 = x0 + x8;
														w23 = 1000;
														sp.u0->t0090.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
														do
														{
															x8.u1 = sp.u0->t05A0.u1;
															if (x8 != 0x00)
																goto l000000000002FC68;
															_ZNSt6__ndk16chrono12steady_clock3nowEv();
															x19 = x22 - x0;
															NZCV.u0 = cond(x19 - 0x01);
															if (Test(GE,NV))
															{
																_ZNSt6__ndk16chrono12steady_clock3nowEv();
																_ZNSt6__ndk16chrono12system_clock3nowEv();
																x21 = x0;
																x0 = x19;
																__floatditf();
																q1 = q0;
																q0.u2 = sp.u0->t00A0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
																__subtf3();
																x0 = x21;
																sp.u0->t00D0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
																__floatditf();
																q1.u2 = sp.u0->t0090.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
																__multf3();
																q1.u2 = sp.u0->t00D0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
																__lttf2();
																NZCV.u0 = cond(w0 - 0x00);
																if (Test(LT,NZV))
																{
																	x2.u1 = x19 + x21 *64 x23;
																	x0 = x29 - 0x90;
																	x1.u1 = sp + 0x05D0;
																}
																else
																{
																	x0 = x29 - 0x90;
																	x1.u1 = sp + 0x05D0;
																	x2 = 0x00 | 0x7FFFFFFFFFFFFFFF;
																}
																_ZNSt6__ndk118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE();
																_ZNSt6__ndk16chrono12steady_clock3nowEv();
															}
															_ZNSt6__ndk16chrono12steady_clock3nowEv();
															x31 = x0 - x22;
															NZCV.u0 = cond(x31);
														} while (Test(LT,NV));
														if (w20 != 0x00)
														{
l000000000002FC68:
															x8.u1 = sp + 0x0250;
															x10.u1 = sp + 0x0238;
															x3.u1 = x8 + 0x08;
															x8.u1 = x8 + 0x09;
															x9.u1 = sp + 0x05F8;
															((word32) sp + 64)->u0 = x8;
															x8 = x10 | 0x01;
															x11.u1 = sp + 0x05E0;
															((word32) sp + 56)->u0 = x8;
															x8.u1 = x9 + 0x08;
															x13.u1 = sp + 0x05B0;
															sp.u0->t00A0.u1 = (size_t) x8;
															x8 = x11 | 0x01;
															x12.u1 = sp + 0x0218;
															sp.u0->t00D0.u1 = (size_t) x8;
															x8 = x13 | 0x01;
															x14.u0 = sp + 0x0170;
															sp.u0->t0088.u1 = (size_t) x8;
															x8.u1 = x12 + 0x09;
															x15.u0 = sp + 0x0200;
															sp.u0->t0078.u1 = (size_t) x8;
															x8.u1 = x14 + 0x08;
															sp.u0->t0080.u1 = (size_t) x8;
															x8 = x15 | 0x01;
															x16.u0 = sp + 424;
															((word32) sp + 96)->u0 = x8;
															x8.u1 = x14 + 0x09;
															((word32) sp + 0x0068)->u0 = x8;
															x8.u1 = x16 + 0x08;
															x17.u1 = sp + 0x01E0;
															sp.u0->t0028.u1 = (size_t) x8;
															x8 = x9 | 0x01;
															sp.u0->t0070.u1 = (size_t) x8;
															x8.u1 = x17 + 0x08;
															x0.u1 = sp + 344;
															((word32) sp + 32)->u0 = x8;
															x8.u1 = x16 + 0x09;
															sp.u0->t0018.u1 = (size_t) x8;
															x8 = x0 | 0x01;
															x1.u1 = sp + 400;
															sp.u0->t0048.u1 = (size_t) x8;
															x8.u1 = x17 + 0x09;
															x2.u1 = sp + 0x01C8;
															sp.u0->t0010.u1 = (size_t) x8;
															x8 = x1 | 0x01;
															sp.u0->t0008.u1 = (size_t) x8;
															x8 = x2 | 0x01;
															((word32) sp + 80)->u0 = x3;
															sp.u0->ptr0000 = (union Eq_14 *) x8;
															x8.u0 = 0x00070000;
															x8 = *((word32) x8 + 0x0DC0);
															x20.u0 = 0x00071000;
															x20.u1 = (word32) x20 + 312;
															x22.u1 = x12 + 0x08;
															x28.u1 = x8 + 0x10;
															do
															{
																x0.u1 = *((word32) sp + 88);
																x8.u1 = sp + 0x0270;
																fn000000000001BF10();
																w8 = *x20.u1;
																Eq_14 v117 = *((word32) x20 + 8);
																w9 = (word32) v117;
																x10 = *((word32) x20 + 24);
																x11.u1 = (word32) x20 + 9;
																((word32) sp + 592)->u0 = w8;
																x8.u1 = *((word32) sp + 80);
																w31 = w9 & 0x01;
																NZ.u0 = cond(w31);
																x21.u1 = Test(EQ,Z) ? x11 : x10;
																x0 = x21;
																Eq_14 v118 = x8;
																v118.u1->u1 = 0x00;
																((word32) v118 + 8)->u0 = 0x00;
																((word32) x8 + 16)->u0 = 0x00;
																x0 = strlen(x0);
																sp.u0 = x0 + 0x10;
																NZCV.u0 = cond(sp);
																if (Test(UGE,C))
																{
l0000000000031860:
																	x0.u1 = *((word32) sp + 80);
																	fn000000000001B2D0();
l0000000000031868:
																	x0.u1 = sp + 0x0238;
																	fn000000000001B2D0();
																	goto l0000000000031870;
																}
																x19 = x0;
																NZCV.u0 = cond(x0 - 0x17);
																if (Test(ULT,C))
																{
																	x23.u1 = *((word32) sp + 64);
																	w8 = w19 << 1;
																	((word32) sp + 600)->u0 = (byte) w8;
																	if (x19 == 0x00)
																		goto l000000000002FDF8;
																}
																else
																{
																	x8.u1 = x19 + 0x10;
																	x25 = x8 & ~0x0F;
																	x0 = x25;
																	_Znwm();
																	x8 = x25 | 0x01;
																	x23 = x0;
																	((word32) sp + 616)->u0 = x0;
																	((word32) sp + 600)->u0 = x8;
																	((word32) sp + 608)->u0 = x19;
																}
																x0 = x23;
																x1 = x21;
																x2 = x19;
																x0 = memcpy(x0, x1, x2);
l000000000002FDF8:
																*(x23 + x19) = (word64) 0x00;
																x0.u1 = sp + 0x0250;
																((LEVELS) x0);
																if ((w0 & 0x01) != 0x00)
																{
																	x8.u0 = 0x00070000;
																	x8 = *((word32) x8 + 3432);
																	((word32) sp + 584)->u0 = 0x00;
																	((word32) sp + 576)->u0 = 0x00;
																	((word32) sp + 568)->u0 = 0x00;
																	x19 = *x8.u1;
																	x0 = x19;
																	x0 = strlen(x0);
																	sp.u0 = x0 + 0x10;
																	NZCV.u0 = cond(sp);
																	if (Test(UGE,C))
																		goto l0000000000031868;
																	x21 = x0;
																	NZCV.u0 = cond(x0 - 0x17);
																	if (Test(ULT,C))
																	{
																		x23.u1 = *((word32) sp + 56);
																		w8 = w21 << 1;
																		((word32) sp + 568)->u0 = (byte) w8;
																		if (x21 == 0x00)
																			goto l000000000002FEA0;
																	}
																	else
																	{
																		x8.u1 = x21 + 0x10;
																		x25 = x8 & ~0x0F;
																		x0 = x25;
																		_Znwm();
																		x8 = x25 | 0x01;
																		x23 = x0;
																		((word32) sp + 584)->u0 = x0;
																		((word32) sp + 568)->u0 = x8;
																		((word32) sp + 576)->u0 = x21;
																	}
																	x0 = x23;
																	x1 = x19;
																	x2 = x21;
																	x0 = memcpy(x0, x1, x2);
l000000000002FEA0:
																	*(x23 + x21) = (word64) 0x00;
																	x0.u1 = sp + 0x0238;
																	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
																	Eq_14 v122;
																	v122.u1 = *((word32) sp + 568);
																	w8.u1 = (word32) v122;
																	w19 = w0;
																	if ((w8 & 0x01) != 0x00)
																	{
																		Eq_14 v123;
																		v123.u1 = *((word32) sp + 600);
																		w8.u1 = (word32) v123;
																		if ((w8 & 0x01) != 0x00)
																			goto l000000000002FEC0;
																		goto l000000000002FE5C;
																	}
																	x0.u1 = *((word32) sp + 584);
																	((real64) q0, x0, x1);
																	Eq_14 v124;
																	v124.u1 = *((word32) sp + 600);
																	w8.u1 = (word32) v124;
																	if ((w8 & 0x01) != 0x00)
																		goto l000000000002FE5C;
																	goto l000000000002FEC0;
																}
																w19 = 0x00;
																Eq_14 v126;
																v126.u1 = *((word32) sp + 600);
																w8.u1 = (word32) v126;
																if ((w8 & 0x01) != 0x00)
																{
l000000000002FE5C:
																	x0.u1 = *((word32) sp + 616);
																	((real64) q0, x0, x1);
																	if ((w19 & 0x01) != 0x00)
																		goto l000000000002FEC4;
																}
																else
																{
l000000000002FEC0:
																	if ((w19 & 0x01) != 0x00)
																	{
l000000000002FEC4:
																		x8.u0 = 0x00070000;
																		x8 = *((word32) x8 + 3432);
																		x1 = *x8.u1;
																		x3.u0 = 0x00052000;
																		x0.u1 = sp + 0x05F8;
																		w4 = 0x00 | 0x06;
																		x2 = x20;
																		x3.u1 = x3 + 0x05EE;
																		x5 = 0x00;
																		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
																		x0.u1 = sp.u0->t00A0.u1;
																		x1.u0 = 0x00052000;
																		w2 = 0x00 | 0x0F;
																		x1.u1 = x1 + 1020;
																		fn000000000001BB30();
																		x19 = x0;
																		x0.u1 = *((word32) sp + 624);
																		sp.u0->t0370.u1 = (size_t) 0x00;
																		x1.u1 = sp + 880;
																		rs2_get_device_count();
																		w21 = w0;
																		x0.u1 = sp.u0->t0370.u1;
																		fn000000000001ADF0();
																		x0 = x19;
																		w1 = w21;
																		fn000000000001B220();
																		x0.u1 = sp + 0x05F8;
																		LogCapture::~LogCapture();
																		sp.u0 = sp + 0x08;
																	}
																}
																x0.u1 = *((word32) sp + 624);
																sp.u0->t0370.u1 = (size_t) 0x00;
																x1.u1 = sp + 880;
																rs2_get_device_count();
																w19 = w0;
																x0.u1 = sp.u0->t0370.u1;
																fn000000000001ADF0();
																if (w19 != 0x00)
																{
																	w1 = 0x00;
																	x20.u0 = 0x00;
																	sp.u0->t0090.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) 0x00;
																	do
																	{
																		x8.u1 = sp + 880;
																		x0.u1 = sp + 0x0270;
																		fn000000000001BD80();
																		x0.u1 = sp.u0->t0378.u1;
																		sp.u0->t05C8.u1 = (size_t) 0x00;
																		w1 = 0x00 | 0x01;
																		x2.u1 = sp + 0x05C8;
																		rs2_supports_device_info();
																		w21 = w0;
																		x0.u1 = sp.u0->t05C8.u1;
																		fn000000000001ADF0();
																		NZCV.u0 = cond(w21 - 0x01);
																		if (Test(GE,NV))
																		{
																			x0.u1 = sp.u0->t0378.u1;
																			sp.u0->t05C8.u1 = (size_t) 0x00;
																			w1 = 0x00 | 0x01;
																			x2.u1 = sp + 0x05C8;
																			rs2_get_device_info();
																			x23 = x0;
																			x0.u1 = sp.u0->t05C8.u1;
																			fn000000000001ADF0();
																		}
																		else
																		{
																			x23.u0 = 0x00052000;
																			x23.u1 = x23 + 0xF7;
																		}
																		x0.u1 = sp.u0->t0378.u1;
																		sp.u0->t05C8.u1 = (size_t) 0x00;
																		w1 = 0x00 | 0x0C;
																		x2.u1 = sp + 0x05C8;
																		rs2_supports_device_info();
																		w21 = w0;
																		x0.u1 = sp.u0->t05C8.u1;
																		fn000000000001ADF0();
																		NZCV.u0 = cond(w21 - 0x01);
																		if (Test(GE,NV))
																		{
																			x0.u1 = sp.u0->t0378.u1;
																			sp.u0->t05C8.u1 = (size_t) 0x00;
																			w1 = 0x00 | 0x0C;
																			x2.u1 = sp + 0x05C8;
																			rs2_get_device_info();
																			x21 = x0;
																			x0.u1 = sp.u0->t05C8.u1;
																			fn000000000001ADF0();
																		}
																		else
																		{
																			x21.u0 = 0x00052000;
																			x21.u1 = x21 + 0xF7;
																		}
																		x0 = x21;
																		x0 = strlen(x0);
																		Eq_14 v127;
																		v127.u0 = sp.u0->t05E0.u0;
																		w8.u1 = (word32) v127;
																		x9.u1 = sp.u0->t05E8.u1;
																		x10 = x8 >> 1;
																		w31 = w8 & 0x01;
																		NZ.u0 = cond(w31);
																		x9.u1 = Test(EQ,Z) ? x10 : x9;
																		x31 = x0 - x9;
																		NZCV.u0 = cond(x31);
																		if (Test(EQ,Z))
																		{
																			x2 = x0;
																			if (x0 != 0x00)
																			{
																				sp.u0 = x2 + (char *) 0x01;
																				NZCV.u0 = cond(sp);
																				if (Test(NE,Z))
																				{
																					x9.u1 = sp.u0->t05F0.u1;
																					w31 = w8 & 0x01;
																					NZ.u0 = cond(w31);
																					C = false;
																					V = false;
																					x8.u1 = sp.u0->t00D0.u1;
																					x1 = x21;
																					x0.u1 = Test(EQ,Z) ? x8 : x9;
																					x0 = SEQ(0x00, memcmp(x0, x1, x2));
																					if (w0 == 0x00)
																						goto l00000000000304F0;
																					goto l0000000000030A24;
																				}
																				x0.u1 = sp + 0x05E0;
																				fn000000000001C380();
																			}
																			else
																			{
l00000000000304F0:
																				x0 = x23;
																				x0 = strlen(x0);
																				Eq_14 v128;
																				v128.u0 = sp.u0->t05B0.u0;
																				w8.u1 = (word32) v128;
																				x9.u1 = sp.u0->t05B8.u1;
																				x10 = x8 >> 1;
																				w31 = w8 & 0x01;
																				NZ.u0 = cond(w31);
																				x9.u1 = Test(EQ,Z) ? x10 : x9;
																				x31 = x0 - x9;
																				NZCV.u0 = cond(x31);
																				if (Test(EQ,Z))
																				{
																					x2 = x0;
																					if (x0 != 0x00)
																					{
																						sp.u0 = x2 + (char *) 0x01;
																						NZCV.u0 = cond(sp);
																						if (Test(EQ,Z))
																							goto l0000000000031818;
																						x9.u1 = sp.u0->t05C0.u1;
																						w31 = w8 & 0x01;
																						NZ.u0 = cond(w31);
																						C = false;
																						V = false;
																						x8.u1 = sp.u0->t0088.u1;
																						x1 = x23;
																						x0.u1 = Test(EQ,Z) ? x8 : x9;
																						x0 = SEQ(0x00, memcmp(x0, x1, x2));
																						if (w0 != 0x00)
																							goto l0000000000030540;
																					}
																					w8 = 0x00 | 0x01;
																					sp.u0->t0090.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w8;
																					goto l0000000000030784;
																				}
l0000000000030540:
																				x8.u0 = 0x00071000;
																				x8.u1 = x8 + 0x0118;
																				x11 = x8;
																				Eq_14 v129 = *((word32) x11 + 8);
																				w9 = (word32) v129;
																				x10 = *((word32) x11 + 24);
																				w8 = *x8.u1;
																				x11.u1 = x11 + 0x09;
																				w31 = w9 & 0x01;
																				NZ.u0 = cond(w31);
																				x25.u1 = Test(EQ,Z) ? x11 : x10;
																				x0 = x25;
																				((word32) sp + 536)->u0 = w8;
																				Eq_14 v130 = x22;
																				v130.u1->u1 = 0x00;
																				((word32) v130 + 8)->u0 = 0x00;
																				((word32) x22 + 16)->u0 = 0x00;
																				x0 = strlen(x0);
																				sp.u0 = x0 + 0x10;
																				NZCV.u0 = cond(sp);
																				if (Test(UGE,C))
																					goto l0000000000031810;
																				x21 = x0;
																				NZCV.u0 = cond(x0 - 0x17);
																				if (Test(ULT,C))
																				{
																					x26.u1 = sp.u0->t0078.u1;
																					w8 = w21 << 1;
																					sp.u0->t0220.u0 = (byte) (byte) w8;
																					if (x21 == 0x00)
																						goto l00000000000305E0;
																				}
																				else
																				{
																					x8.u1 = x21 + 0x10;
																					x27 = x8 & ~0x0F;
																					x0 = x27;
																					_Znwm();
																					x8 = x27 | 0x01;
																					x26 = x0;
																					sp.u0->t0230.u1 = (size_t) x0;
																					sp.u0->t0220.u1 = (size_t) x8;
																					sp.u0->t0228.u1 = (size_t) x21;
																				}
																				x0 = x26;
																				x1 = x25;
																				x2 = x21;
																				x0 = memcpy(x0, x1, x2);
l00000000000305E0:
																				*(x26 + x21) = (word64) 0x00;
																				x0.u1 = sp + 0x0218;
																				((LEVELS) x0);
																				if ((w0 & 0x01) != 0x00)
																				{
																					x8.u0 = 0x00070000;
																					x8 = *((word32) x8 + 3432);
																					((word32) sp + 528)->u0 = 0x00;
																					((word32) sp + 520)->u0 = 0x00;
																					((word32) sp + 0x0200)->u0 = 0x00;
																					x21 = *x8.u1;
																					x0 = x21;
																					x0 = strlen(x0);
																					sp.u0 = x0 + 0x10;
																					NZCV.u0 = cond(sp);
																					if (Test(UGE,C))
																						goto l0000000000031828;
																					x26 = x0;
																					NZCV.u0 = cond(x0 - 0x17);
																					if (Test(ULT,C))
																					{
																						x25.u1 = *((word32) sp + 96);
																						w8 = w26 << 1;
																						((word32) sp + 0x0200)->u0 = (byte) w8;
																						if (x26 == 0x00)
																							goto l0000000000030688;
																					}
																					else
																					{
																						x8.u1 = x26 + 0x10;
																						x27 = x8 & ~0x0F;
																						x0 = x27;
																						_Znwm();
																						x8 = x27 | 0x01;
																						x25 = x0;
																						((word32) sp + 528)->u0 = x0;
																						((word32) sp + 0x0200)->u0 = x8;
																						((word32) sp + 520)->u0 = x26;
																					}
																					x0 = x25;
																					x1 = x21;
																					x2 = x26;
																					x0 = memcpy(x0, x1, x2);
l0000000000030688:
																					*(x25 + x26) = (word64) 0x00;
																					x0.u1 = sp + 0x0200;
																					_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
																					Eq_14 v140;
																					v140.u1 = *((word32) sp + 0x0200);
																					w8.u1 = (word32) v140;
																					w21 = w0;
																					if ((w8 & 0x01) != 0x00)
																					{
																						Eq_14 v141;
																						v141.u0 = sp.u0->t0220.u0;
																						w8.u1 = (word32) v141;
																						if ((w8 & 0x01) != 0x00)
																							goto l00000000000306A8;
																						goto l0000000000030644;
																					}
																					x0.u1 = *((word32) sp + 528);
																					((real64) q0, x0, x1);
																					Eq_14 v142;
																					v142.u0 = sp.u0->t0220.u0;
																					w8.u1 = (word32) v142;
																					if ((w8 & 0x01) != 0x00)
																						goto l0000000000030644;
																					goto l00000000000306A8;
																				}
																				w21 = 0x00;
																				Eq_14 v161;
																				v161.u0 = sp.u0->t0220.u0;
																				w8.u1 = (word32) v161;
																				if ((w8 & 0x01) != 0x00)
																				{
l0000000000030644:
																					x0.u1 = sp.u0->t0230.u1;
																					((real64) q0, x0, x1);
																					if ((w21 & 0x01) != 0x00)
																						goto l00000000000306AC;
																				}
																				else
																				{
l00000000000306A8:
																					if ((w21 & 0x01) != 0x00)
																					{
l00000000000306AC:
																						x8.u0 = 0x00070000;
																						x8 = *((word32) x8 + 3432);
																						x1 = *x8.u1;
																						x2.u0 = 0x00071000;
																						x3.u0 = 0x00052000;
																						x0.u1 = sp + 0x05F8;
																						w4 = 0x00 | 0x06;
																						x2.u1 = x2 + 0x0118;
																						x3.u1 = x3 + 0x05EE;
																						x5 = 0x00;
																						_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
																						x0.u1 = sp.u0->t00A0.u1;
																						x1.u0 = 0x00052000;
																						w2 = 0x4E;
																						x1.u1 = x1 + 0x040C;
																						fn000000000001BB30();
																						x0.u1 = sp + 0x05F8;
																						LogCapture::~LogCapture();
																						sp.u0 = sp + 0x08;
																					}
																				}
																				x0 = x23;
																				sp.u0->t0600.u1 = 0x00;
																				sp.u0->t05F8.u1 = 0x00;
																				sp.u0->t0608.u1 = 0x00;
																				x0 = strlen(x0);
																				sp.u0 = x0 + 0x10;
																				NZCV.u0 = cond(sp);
																				if (Test(ULT,C))
																				{
																					x21 = x0;
																					NZCV.u0 = cond(x0 - 0x17);
																					if (Test(ULT,C))
																					{
																						x25.u1 = sp.u0->t0070.u1;
																						w8 = w21 << 1;
																						sp.u0->t05F8.u0 = (byte) (byte) w8;
																						if (x21 == 0x00)
																							goto l0000000000030764;
																					}
																					else
																					{
																						x8.u1 = x21 + 0x10;
																						x26 = x8 & ~0x0F;
																						x0 = x26;
																						_Znwm();
																						x8 = x26 | 0x01;
																						x25 = x0;
																						sp.u0->t0608.u1 = (size_t) x0;
																						sp.u0->t05F8.u1 = (size_t) x8;
																						sp.u0->t0600.u1 = (size_t) x21;
																					}
																					x0 = x25;
																					x1 = x23;
																					x2 = x21;
																					x0 = memcpy(x0, x1, x2);
l0000000000030764:
																					*(x25 + x21) = (word64) 0x00;
																					Eq_41435 v145;
																					v145.u0 = sp + 0x00B8;
																					x0.u1 = v145.u0->t0000.u1;
																					x2.u1 = v145.u0->t0008.u1;
																					x1.u1 = sp + 0x05F8;
																					_ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE();
																					Eq_14 v146;
																					v146.u0 = sp.u0->t05F8.u0;
																					w8.u1 = (word32) v146;
																					if ((w8 & 0x01) != 0x00)
																					{
																						x0.u1 = sp.u0->t0608.u1;
																						((real64) q0, x0, x1);
																					}
l0000000000030784:
																					x0 = x23;
																					x0 = strlen(x0);
																					Eq_14 v148;
																					v148.u0 = sp.u0->t05B0.u0;
																					w8.u1 = (word32) v148;
																					x9.u1 = sp.u0->t05B8.u1;
																					x10 = x8 >> 1;
																					w31 = w8 & 0x01;
																					NZ.u0 = cond(w31);
																					x9.u1 = Test(EQ,Z) ? x10 : x9;
																					x31 = x0 - x9;
																					NZCV.u0 = cond(x31);
																					if (Test(NE,Z))
																						goto l0000000000030A24;
																					x2 = x0;
																					if (x0 != 0x00)
																					{
																						sp.u0 = x2 + 0x01;
																						NZCV.u0 = cond(sp);
																						if (Test(EQ,Z))
																							goto l0000000000031820;
																						x9.u1 = sp.u0->t05C0.u1;
																						w31 = w8 & 0x01;
																						NZ.u0 = cond(w31);
																						C = false;
																						V = false;
																						x8.u1 = sp.u0->t0088.u1;
																						x1 = x23;
																						x0.u1 = Test(EQ,Z) ? x8 : x9;
																						x0 = SEQ(0x00, memcmp(x0, x1, x2));
																						if (w0 == 0x00)
																							goto l00000000000307D4;
																						goto l0000000000030A24;
																					}
l00000000000307D4:
																					x0.u1 = sp.u0->t0378.u1;
																					sp.u0->t05C8.u1 = (size_t) 0x00;
																					w1 = 0x00 | 0x02;
																					x2.u1 = sp + 0x05C8;
																					rs2_supports_device_info();
																					w21 = w0;
																					x0.u1 = sp.u0->t05C8.u1;
																					fn000000000001ADF0();
																					NZCV.u0 = cond(w21 - 0x01);
																					if (Test(GE,NV))
																					{
																						x0.u1 = sp.u0->t0378.u1;
																						sp.u0->t05C8.u1 = (size_t) 0x00;
																						w1 = 0x00 | 0x02;
																						x2.u1 = sp + 0x05C8;
																						rs2_get_device_info();
																						x21 = x0;
																						x0.u1 = sp.u0->t05C8.u1;
																						fn000000000001ADF0();
																					}
																					else
																					{
																						x21.u0 = 0x00052000;
																						x21.u1 = x21 + 0xF7;
																					}
																					x8.u0 = 0x00071000;
																					x8.u1 = x8 + 0x0118;
																					x11 = x8;
																					w8 = *x8.u1;
																					Eq_14 v150 = *((word32) x11 + 8);
																					w9 = (word32) v150;
																					x10 = *((word32) x11 + 24);
																					x11.u1 = x11 + 0x09;
																					((word32) sp + 368)->u0 = w8;
																					x8.u1 = sp.u0->t0080.u1;
																					w31 = w9 & 0x01;
																					NZ.u0 = cond(w31);
																					x25.u1 = Test(EQ,Z) ? x11 : x10;
																					x0 = x25;
																					Eq_14 v151 = x8;
																					v151.u1->u1 = 0x00;
																					((word32) v151 + 8)->u0 = 0x00;
																					((word32) x8 + 16)->u0 = 0x00;
																					x0 = strlen(x0);
																					sp.u0 = x0 + 0x10;
																					NZCV.u0 = cond(sp);
																					if (Test(UGE,C))
																						goto l0000000000031830;
																					x26 = x0;
																					NZCV.u0 = cond(x0 - 0x17);
																					if (Test(ULT,C))
																					{
																						x27.u1 = *((word32) sp + 0x0068);
																						w8 = w26 << 1;
																						sp.u0->b0178 = (byte) (byte) w8;
																						if (x26 == 0x00)
																							goto l00000000000308D0;
																					}
																					else
																					{
																						x8.u1 = x26 + 0x10;
																						x24 = x8 & ~0x0F;
																						x0 = x24;
																						_Znwm();
																						x8 = x24 | 0x01;
																						x27 = x0;
																						Eq_41733 v154;
																						v154.u0 = sp + 384;
																						v154->u0 = x26;
																						((word32) v154 + 8)->u0 = x0;
																						((word32) sp + 376)->u0 = x8;
																					}
																					x0 = x27;
																					x1 = x25;
																					x2 = x26;
																					x0 = memcpy(x0, x1, x2);
l00000000000308D0:
																					*(x27 + x26) = (word64) 0x00;
																					x0.u1 = sp + 0x0170;
																					((LEVELS) x0);
																					ui32 w25;
																					if ((w0 & 0x01) != 0x00)
																					{
																						x8.u0 = 0x00070000;
																						x8 = *((word32) x8 + 3432);
																						Eq_41790 v152;
																						v152.u0 = sp + 352;
																						v152->u0 = 0x00;
																						((word32) v152 + 8)->u0 = 0x00;
																						sp.u0->t0158.u1 = 0x00;
																						x26 = *x8.u1;
																						x0 = x26;
																						x0 = strlen(x0);
																						sp.u0 = x0 + 0x10;
																						NZCV.u0 = cond(sp);
																						if (Test(UGE,C))
																							goto l0000000000031858;
																						x25 = x0;
																						NZCV.u0 = cond(x0 - 0x17);
																						if (Test(ULT,C))
																						{
																							x27.u1 = sp.u0->t0048.u1;
																							w8 = w25 << 1;
																							sp.u0->t0158.u0 = (byte) (byte) w8;
																							if (x25 == 0x00)
																								goto l0000000000030970;
																						}
																						else
																						{
																							x8.u1 = x25 + 0x10;
																							x24 = x8 & ~0x0F;
																							x0 = x24;
																							_Znwm();
																							x8 = x24 | 0x01;
																							x27 = x0;
																							Eq_41831 v157;
																							v157.u0 = sp + 352;
																							v157.u0->t0000.u1 = (size_t) x25;
																							v157.u0->t0008.u1 = (size_t) x0;
																							sp.u0->t0158.u1 = (size_t) x8;
																						}
																						x0 = x27;
																						x1 = x26;
																						x2 = x25;
																						x0 = memcpy(x0, x1, x2);
l0000000000030970:
																						*(x27 + x25) = (word64) 0x00;
																						x0.u1 = sp + 344;
																						_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
																						Eq_14 v155;
																						v155.u0 = sp.u0->t0158.u0;
																						w8.u1 = (word32) v155;
																						w25 = w0;
																						if ((w8 & 0x01) != 0x00)
																						{
																							byte v156 = sp.u0->b0178;
																							w8.u1 = (word32) v156;
																							if ((w8 & 0x01) != 0x00)
																								goto l0000000000030990;
																							goto l0000000000030930;
																						}
																						x0.u1 = sp.u0->t0168.u1;
																						((real64) q0, x0, x1);
																						byte v158 = sp.u0->b0178;
																						w8.u1 = (word32) v158;
																						if ((w8 & 0x01) != 0x00)
																							goto l0000000000030930;
																						goto l0000000000030990;
																					}
																					w25 = 0x00;
																					Eq_14 v159;
																					v159.u0 = sp.u0->b0178;
																					w8.u1 = (word32) v159;
																					if ((w8 & 0x01) != 0x00)
																					{
l0000000000030930:
																						x0.u1 = sp.u0->t0188.u1;
																						((real64) q0, x0, x1);
																						if ((w25 & 0x01) != 0x00)
																							goto l0000000000030994;
																					}
																					else
																					{
l0000000000030990:
																						if ((w25 & 0x01) != 0x00)
																						{
l0000000000030994:
																							x8.u0 = 0x00070000;
																							x8 = *((word32) x8 + 3432);
																							x1 = *x8.u1;
																							x2.u0 = 0x00071000;
																							x3.u0 = 0x00052000;
																							x0.u1 = sp + 0x05F8;
																							w4 = 0x00 | 0x06;
																							x2.u1 = x2 + 0x0118;
																							x3.u1 = x3 + 0x05EE;
																							x5 = 0x00;
																							_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
																							x0.u1 = sp.u0->t00A0.u1;
																							x1.u0 = 0x00053000;
																							w2 = 0x00 | 0x07;
																							x1.u1 = x1 + 1455;
																							fn000000000001BB30();
																							x25 = x0;
																							x0 = x23;
																							x0 = strlen(x0);
																							x2 = x0;
																							x0 = x25;
																							x1 = x23;
																							fn000000000001BB30();
																							x1.u0 = 0x00052000;
																							w2 = 0x1D;
																							x1.u1 = x1 + 522;
																							fn000000000001BB30();
																							x23 = x0;
																							x0 = x21;
																							x0 = strlen(x0);
																							x2 = x0;
																							x0 = x23;
																							x1 = x21;
																							fn000000000001BB30();
																							x0.u1 = sp + 0x05F8;
																							LogCapture::~LogCapture();
																							sp.u0 = sp + 0x08;
																						}
																					}
																					goto l0000000000030A24;
																				}
																				x0.u1 = sp + 0x05F8;
																				fn000000000001B2D0();
																			}
l0000000000031810:
																			x0 = x22;
																			fn000000000001B2D0();
l0000000000031818:
																			x0.u1 = sp + 0x05B0;
																			fn000000000001C380();
l0000000000031820:
																			x0.u1 = sp + 0x05B0;
																			fn000000000001C380();
l0000000000031828:
																			x0.u1 = sp + 0x0200;
																			fn000000000001B2D0();
l0000000000031830:
																			x0.u1 = sp.u0->t0080.u1;
																			fn000000000001B2D0();
																			x0.u1 = *((word32) sp + 32);
																			fn000000000001B2D0();
																			x0.u1 = sp + 0x01C8;
																			fn000000000001B2D0();
																			x0.u1 = sp + 400;
																			fn000000000001B2D0();
																			x0.u1 = sp.u0->t0028.u1;
																			fn000000000001B2D0();
l0000000000031858:
																			x0.u1 = sp + 344;
																			fn000000000001B2D0();
																			goto l0000000000031860;
																		}
l0000000000030A24:
																		x21.u1 = *((word32) sp + 896);
																		sp.u0->t0370.u1 = (size_t) x28;
																		if (x21 != 0x00)
																			x8.u1 = x21 + 0x08;
																		x1.u1 = (word32) x20 + 1;
																		NZCV.u0 = cond(w19 - w1);
																		x20 = __bfm<word64>(x20, x1, 0, 31);
																	} while (Test(NE,Z));
																	w8.u2 = sp.u0->t0090.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
																	x20.u0 = 0x00071000;
																	x20.u1 = (word32) x20 + 312;
																	if ((w8 & 0x01) == 0x00)
																	{
																		x19.u1 = sp.u0->t0278.u1;
																		if (x19 == 0x00)
																			goto l0000000000030B04;
																		x8.u1 = x19 + 0x08;
																	}
																}
																w8.u0 = 0x8400;
																w8 = SEQ(0x17D7, (word16) w8);
																sp.u0->t0370.u1 = (size_t) x8;
																x0.u1 = sp + 880;
																_ZNSt6__ndk111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILl1ELl1000000000EEEEE();
																x19.u1 = sp.u0->t0278.u1;
															} while (x19 == 0x00);
															x8.u1 = x19 + 0x08;
														}
													}
l0000000000030B04:
													byte v116 = sp.u0->b05D8;
													w8.u1 = (word32) v116;
													if (w8 != 0x00)
													{
														x0.u1 = sp.u0->t05D0.u1;
														_ZNSt6__ndk15mutex6unlockEv();
													}
													w19 = 0x00 | 0x01;
													x20.u1 = *((word32) sp + 968);
													if (x20 != 0x00)
													{
l0000000000030B20:
														x8.u1 = (word32) x20 + 8;
													}
l0000000000030B38:
													Eq_14 v121;
													v121.u0 = sp.u0->t05E0.u0;
													w8.u1 = (word32) v121;
													if ((w8 & 0x01) != 0x00)
													{
														x0.u1 = sp.u0->t05F0.u1;
														((real64) q0, x0, x1);
													}
l0000000000030B48:
													x8.u0 = 0x00070000;
													x8 = *((word32) x8 + 0x0DC0);
													x20.u1 = sp.u0->t0590.u1;
													x21.u1 = x8 + 0x10;
													sp.u0->t0580.u1 = (size_t) x21;
													if (x20 != 0x00)
														x8.u1 = (word32) x20 + 8;
													x20.u1 = sp.u0->t05A8.u1;
													sp.u0->t0598.u1 = (size_t) x21;
													if (x20 != 0x00)
														x8.u1 = (word32) x20 + 8;
													Eq_14 v125;
													v125.u0 = sp.u0->t05B0.u0;
													w8.u1 = (word32) v125;
													if ((w8 & 0x01) != 0x00)
													{
														x0.u1 = sp.u0->t05C0.u1;
														((real64) q0, x0, x1);
													}
													x0 = x29 - 0xC0;
													_ZNSt6__ndk15mutexD1Ev();
													x0 = x29 - 0x90;
													_ZNSt6__ndk118condition_variableD1Ev();
l0000000000030BD4:
													x8.u1 = sp.u0->t0030.u1;
													x8 = *((word32) x8 + 40);
													x9 = *((word32) x29 - 96);
													x31 = x8 - x9;
													NZCV.u0 = cond(x31);
													if (Test(EQ,Z))
													{
														w0 = w19;
														sp.u0 = sp + 0x07B0;
														Eq_40874 v131;
														v131.u0 = sp + 80;
														x29.u1 = v131.u0->t0000.u1;
														x30.u1 = v131.u0->t0008.u1;
														Eq_40883 v132;
														v132.u0 = sp + 64;
														x20.u1 = v132.u0->t0000.u1;
														x19.u1 = v132.u0->t0008.u1;
														Eq_40892 v133;
														v133.u0 = sp + 48;
														x22.u1 = v133.u0->t0000.u1;
														x21.u1 = v133.u0->t0008.u1;
														Eq_40901 v134;
														v134.u0 = sp + 32;
														x24.u1 = v134.u0->t0000.u1;
														x23.u1 = v134.u0->t0008.u1;
														Eq_40910 v135;
														v135.u0 = sp + 16;
														x26.u1 = v135.u0->t0000.u1;
														x25.u1 = v135.u0->t0008.u1;
														Eq_36791 v136 = sp;
														x28.u1 = v136.u0->ptr0000;
														x27.u1 = v136.u0->t0008.u1;
														sp.u0 = sp + 96;
														return;
													}
l0000000000031888:
													__stack_chk_fail();
												}
											}
											else
											{
												x0.u1 = sp.u0->t0398.u1;
												((real64) q0, x0, x1);
												Eq_14 v85;
												v85.u0 = sp.u0->t03A8.u0;
												w8.u1 = (word32) v85;
												if ((w8 & 0x01) == 0x00)
													goto l000000000002ED74;
											}
l000000000002ECFC:
											x0.u1 = sp.u0->t03B8.u1;
											((real64) q0, x0, x1);
											if ((w19 & 0x01) == 0x00)
												goto l000000000002EDF0;
											goto l000000000002ED78;
										}
l00000000000318FC:
										x0.u1 = sp + 0x0388;
										fn000000000001B2D0();
										x0.u1 = sp.u0->t0088.u1;
										fn000000000001B2D0();
										x0.u1 = sp + 1144;
										fn000000000001B2D0();
										goto l0000000000031914;
									}
l00000000000318B4:
									x0 = x22;
									fn000000000001B2D0();
l00000000000318BC:
									x0.u1 = sp + 0x0280;
									fn000000000001B7E0();
l00000000000318C4:
									x0.u1 = sp + 0x05B0;
									fn000000000001B2D0();
									goto l00000000000318CC;
								}
							}
							else
							{
								x0.u1 = sp.u0->t03E0.u1;
								((real64) q0, x0, x1);
								Eq_14 v70;
								v70.u0 = sp.u0->t03F0.u0;
								w8.u1 = (word32) v70;
								if ((w8 & 0x01) == 0x00)
									goto l000000000002EB94;
							}
l000000000002EB1C:
							x0.u1 = sp.u0->t0400.u1;
							((real64) q0, x0, x1);
							if ((w19 & 0x01) == 0x00)
								goto l000000000002EBE4;
							goto l000000000002EB98;
						}
l00000000000318AC:
						x0 = x22;
						fn000000000001B2D0();
						goto l00000000000318B4;
					}
				}
				else
				{
					x0.u1 = *((word32) sp + 0x0418);
					((real64) q0, x0, x1);
					Eq_14 v65;
					v65.u1 = *((word32) sp + 0x0428);
					w8.u1 = (word32) v65;
					if ((w8 & 0x01) == 0x00)
						goto l000000000002E96C;
				}
l000000000002E8F4:
				x0.u1 = *((word32) sp + 1080);
				((real64) q0, x0, x1);
				if ((w19 & 0x01) == 0x00)
					goto l000000000002E9BC;
				goto l000000000002E970;
			}
			x9 = *((word32) x22 + 16);
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x1.u0 = 0x00052000;
			x1.u1 = x1 + 0xF7;
			x0.u1 = Test(NE,Z) ? x9 : x22 + 0x01;
			w2 = 0x00 | 0x07;
			x0 = SEQ(0x00, memcmp(x0, x1, x2));
			if (w0 != 0x00)
				goto l000000000002E7E0;
			x19.u1 = sp.u0->t00B8.u1;
			sp.u0->t05E0.u1 = (size_t) 0x00;
			x19.u1 = x19 + 48;
			x21 = *x19.u1;
			w0 = 0x28;
			_Znwm();
			x1 = x0;
			x8.u0 = 0x0006F000;
			x8.u1 = x8 + 0x0A30;
			x9 = x29 - 0xC0;
			x10.u1 = sp + 0x0580;
			x11.u1 = sp + 0x0598;
			x12 = x29 - 0x90;
			Eq_14 v164 = x1;
			*v164.u1 = x8;
			*((word32) v164 + 8) = x9;
			Eq_37492 v165;
			v165.u0 = x1 + 16;
			v165->u0 = x10;
			((word32) v165 + 8)->u0 = x11;
			*((word32) x1 + 32) = x12;
			x2.u1 = sp + 0x05E0;
			x0 = x21;
			rs2_set_devices_changed_callback_cpp();
			x0.u1 = sp.u0->t05E0.u1;
			fn000000000001ADF0();
			x8.u1 = sp + 880;
			w1 = 0x00 | 0x0E;
			x0 = x19;
			fn000000000001AF40();
			x0.u1 = sp.u0->t0370.u1;
			sp.u0->t05E0.u1 = (size_t) 0x00;
			x1.u1 = sp + 0x05E0;
			rs2_get_device_count();
			w19 = w0;
			x0.u1 = sp.u0->t05E0.u1;
			fn000000000001ADF0();
			x8.u1 = x22 + 0x01;
			sp.u0->t0090.u1 = (size_t) x8;
			if (w19 != 0x00)
			{
				x13.u0 = 0x00070000;
				x13 = *((word32) x13 + 0x0DC0);
				x8.u1 = sp + 0x0528;
				x9.u1 = sp + 0x0490;
				x23.u1 = x8 + 0x08;
				x8.u1 = x8 + 0x09;
				x10.u1 = sp + 0x0510;
				x28.u1 = x13 + 0x10;
				x13.u1 = x9 + 0x08;
				sp.u0->t00D0.u1 = (size_t) x8;
				x8.u1 = x9 + 0x09;
				x11.u1 = sp + 1144;
				x12.u1 = sp + 0x05F8;
				Eq_42126 v166;
				v166.u0 = sp + 0x0080;
				v166.u0->t0000.u1 = (size_t) x8;
				v166.u0->t0008.u1 = (size_t) x13;
				x8 = x10 | 0x01;
				w1 = 0x00;
				x20.u0 = 0x00;
				sp.u0->t00A0.u1 = (size_t) x8;
				x8 = x11 | 0x01;
				x25.u1 = x12 + 0x08;
				sp.u0->t0078.u1 = (size_t) x8;
				do
				{
					x8.u1 = sp + 0x05E0;
					x0.u1 = sp + 880;
					fn000000000001BD80();
					x0.u1 = sp + 0x05E0;
					fn000000000001BEF0();
					if ((w0 & 0x01) != 0x00)
					{
						x8.u0 = 0x00071000;
						x8.u1 = x8 + 0x0118;
						x11 = x8;
						Eq_14 v168 = *((word32) x11 + 8);
						w9 = (word32) v168;
						x10 = *((word32) x11 + 24);
						w8 = *x8.u1;
						x11.u1 = x11 + 0x09;
						w31 = w9 & 0x01;
						NZ.u0 = cond(w31);
						x27.u1 = Test(EQ,Z) ? x11 : x10;
						x0 = x27;
						sp.u0->t0528.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w8;
						Eq_14 v169 = x23;
						v169.u1->u1 = 0x00;
						((word32) v169 + 8)->u0 = 0x00;
						((word32) x23 + 16)->u0 = 0x00;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(ULT,C))
						{
							x21 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								x24.u1 = sp.u0->t00D0.u1;
								w8 = w21 << 1;
								((word32) sp + 0x0530)->u0 = (byte) w8;
								if (x21 == 0x00)
									goto l0000000000031148;
							}
							else
							{
								x8.u1 = x21 + 0x10;
								x26 = x8 & ~0x0F;
								x0 = x26;
								_Znwm();
								x8 = x26 | 0x01;
								x24 = x0;
								((word32) sp + 1344)->u0 = x0;
								((word32) sp + 0x0530)->u0 = x8;
								((word32) sp + 1336)->u0 = x21;
							}
							x0 = x24;
							x1 = x27;
							x2 = x21;
							x0 = memcpy(x0, x1, x2);
l0000000000031148:
							*(x24 + x21) = (word64) 0x00;
							x0.u1 = sp + 0x0528;
							((LEVELS) x0);
							if ((w0 & 0x01) != 0x00)
							{
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 3432);
								((word32) sp + 1312)->u0 = 0x00;
								((word32) sp + 0x0518)->u0 = 0x00;
								((word32) sp + 0x0510)->u0 = 0x00;
								x21 = *x8.u1;
								x0 = x21;
								x0 = strlen(x0);
								sp.u0 = x0 + 0x10;
								NZCV.u0 = cond(sp);
								if (Test(UGE,C))
								{
									x0.u1 = sp + 0x0510;
									fn000000000001B2D0();
									goto l00000000000318A4;
								}
								x27 = x0;
								NZCV.u0 = cond(x0 - 0x17);
								if (Test(ULT,C))
								{
									x24.u1 = sp.u0->t00A0.u1;
									w8 = w27 << 1;
									((word32) sp + 0x0510)->u0 = (byte) w8;
									if (x27 == 0x00)
										goto l00000000000311F0;
								}
								else
								{
									x8.u1 = x27 + 0x10;
									x26 = x8 & ~0x0F;
									x0 = x26;
									_Znwm();
									x8 = x26 | 0x01;
									x24 = x0;
									((word32) sp + 1312)->u0 = x0;
									((word32) sp + 0x0510)->u0 = x8;
									((word32) sp + 0x0518)->u0 = x27;
								}
								x0 = x24;
								x1 = x21;
								x2 = x27;
								x0 = memcpy(x0, x1, x2);
l00000000000311F0:
								*(x24 + x27) = (word64) 0x00;
								x0.u1 = sp + 0x0510;
								_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
								Eq_14 v178;
								v178.u1 = *((word32) sp + 0x0510);
								w8.u1 = (word32) v178;
								w21 = w0;
								if ((w8 & 0x01) != 0x00)
								{
									byte v179 = (byte) *((word32) sp + 0x0530);
									w8.u1 = (word32) v179;
									if ((w8 & 0x01) != 0x00)
										goto l0000000000031210;
									goto l00000000000311AC;
								}
								x0.u1 = *((word32) sp + 1312);
								((real64) q0, x0, x1);
								byte v193 = (byte) *((word32) sp + 0x0530);
								w8.u1 = (word32) v193;
								if ((w8 & 0x01) != 0x00)
									goto l00000000000311AC;
								goto l0000000000031210;
							}
							w21 = 0x00;
							byte v196 = (byte) *((word32) sp + 0x0530);
							w8.u1 = (word32) v196;
							if ((w8 & 0x01) != 0x00)
							{
l00000000000311AC:
								x0.u1 = *((word32) sp + 1344);
								((real64) q0, x0, x1);
								if ((w21 & 0x01) != 0x00)
									goto l0000000000031214;
							}
							else
							{
l0000000000031210:
								if ((w21 & 0x01) != 0x00)
								{
l0000000000031214:
									x8.u0 = 0x00070000;
									x8 = *((word32) x8 + 3432);
									x1 = *x8.u1;
									x2.u0 = 0x00071000;
									x3.u0 = 0x00052000;
									x0.u1 = sp + 0x05F8;
									w4 = 0x00 | 0x06;
									x2.u1 = x2 + 0x0118;
									x3.u1 = x3 + 0x05EE;
									x5 = 0x00;
									_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
									x1.u0 = 0x00052000;
									w2 = 0x13;
									x0 = x25;
									x1.u1 = x1 + 0x030E;
									fn000000000001BB30();
									byte v180 = (byte) *x22.u1;
									w8.u1 = (word32) v180;
									Eq_42920 v181;
									v181.u0 = x22 + 8;
									x10.u1 = v181.u0->ptr0000;
									x9.u1 = v181.u0->t0008.u1;
									x11 = x8 >> 1;
									w31 = w8 & 0x01;
									NZ.u0 = cond(w31);
									C = false;
									V = false;
									x8.u1 = sp.u0->t0090.u1;
									x2.u1 = Test(EQ,Z) ? x11 : x10;
									x1.u1 = Test(EQ,Z) ? x8 : x9;
									fn000000000001BB30();
									x8 = *x0.u1;
									x21 = x0;
									x8 = *((word32) x8 - 24);
									x0.u1 = x0 + x8;
									x8.u1 = sp + 0x03C0;
									_ZNKSt6__ndk18ios_base6getlocEv();
									x1.u0 = 0x00070000;
									x1 = *((word32) x1 + 0x0D90);
									x0.u1 = sp + 0x03C0;
									_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
									x8 = *x0.u1;
									x8 = *((word32) x8 + 56);
									w1 = 0x0A;
									x8();
									ui32 w24 = w0;
									x0.u1 = sp + 0x03C0;
									_ZNSt6__ndk16localeD1Ev();
									x0 = x21;
									w1 = w24;
									fn000000000001C000();
									x0 = x21;
									fn000000000001B260();
									x0.u1 = sp + 0x05F8;
									LogCapture::~LogCapture();
									sp.u0 = sp + 0x08;
								}
							}
							x8.u1 = sp.u0->t05E8.u1;
							x21.u1 = sp.u0->t05F0.u1;
							((word32) sp + 1272)->u0 = x28;
							((word32) sp + 0x0500)->u0 = x8;
							((word32) sp + 1288)->u0 = x21;
							if (x21 != 0x00)
							{
								x8.u1 = x21 + 0x08;
								do
								{
									union Eq_3183 * v187 = &*x8.u1;
									x9 = __load_exclusive<word64>(v187);
									x9.u1 = x9 + 0x01;
									union Eq_3192 * v188 = &*x8.u1;
									w10 = __store_exclusive<word64>(v188, x9);
								} while (w10 != 0x00);
							}
							x0.u1 = sp + 1272;
							fn000000000001B050();
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 0x0DC0);
							x24.u1 = x8 + (union <anonymous> *) 0x10;
							((word32) sp + 1272)->u0 = x24;
							if (x21 != 0x00)
								x8.u1 = x21 + 0x08;
							x9.u1 = sp.u0->t05E8.u1;
							x8.u1 = sp.u0->t05F0.u1;
							((word32) sp + 1224)->u0 = x24;
							((word32) sp + 1232)->u0 = x9;
							((word32) sp + 0x04D8)->u0 = x8;
							if (x8 != 0x00)
							{
								x8.u1 = x8 + 0x08;
								do
								{
									union Eq_3183 * v189 = &*x8.u1;
									x9 = __load_exclusive<word64>(v189);
									x9.u1 = x9 + 0x01;
									union Eq_3192 * v190 = &*x8.u1;
									w10 = __store_exclusive<word64>(v190, x9);
								} while (w10 != 0x00);
							}
							x0.u1 = sp + 0x04E0;
							x1.u1 = sp + 1224;
							fn000000000001BC20();
							x8.u1 = sp.u0->t00C0.u1;
							((word32) sp + 1216)->u0 = 0x00;
							((word32) sp + 0x04B8)->u0 = 0x00;
							((word32) sp + 1200)->u0 = 0x00;
							Eq_14 v191 = x8;
							x24 = *v191.u1;
							x8 = *((word32) v191 + 8);
							x21 = x8 - x24;
							NZCV.u0 = cond(x21);
							if (Test(EQ,Z))
							{
l00000000000313CC:
								x0.u1 = sp + 0x04E0;
								x1.u1 = sp + 0x04B0;
								fn000000000001AED0();
								x0.u1 = *((word32) sp + 1200);
								if (x0 != 0x00)
								{
									((word32) sp + 0x04B8)->u0 = x0;
									((real64) q0, x0, x1);
								}
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 0x0DC0);
								x21.u1 = *((word32) sp + 0x04F0);
								x24.u1 = x8 + 0x10;
								((word32) sp + 0x04E0)->u0 = x24;
								if (x21 != 0x00)
									x8.u1 = x21 + 0x08;
								x21.u1 = *((word32) sp + 0x04D8);
								((word32) sp + 1224)->u0 = x24;
								if (x21 != 0x00)
									x8.u1 = x21 + 0x08;
								w8 = 0x00 | 0x01;
								sp.u0->b00E0 = (byte) w8;
								goto l0000000000031474;
							}
							if ((w21 & 0x00) == 0x00)
							{
								x0 = x21;
								_Znwm();
								x26.u1 = x0 + x21;
								x1 = x24;
								x2 = x21;
								((word32) sp + 0x04B8)->u0 = x0;
								((word32) sp + 1200)->u0 = x0;
								((word32) sp + 1216)->u0 = x26;
								x0 = memcpy(x0, x1, x2);
								((word32) sp + 0x04B8)->u0 = x26;
								goto l00000000000313CC;
							}
							x0.u1 = sp + 0x04B0;
							fn000000000001B7E0();
						}
						else
						{
							x0 = x23;
							fn000000000001B2D0();
l0000000000031870:
							x0 = x23;
							fn000000000001B2D0();
						}
l0000000000031878:
						x0.u1 = sp + 0x05B0;
						fn000000000001C380();
						goto l0000000000031880;
					}
l0000000000031474:
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 0x0DC0);
					x21.u1 = sp.u0->t05F0.u1;
					x8.u1 = x8 + 0x10;
					sp.u0->t05E0.u1 = (size_t) x8;
					if (x21 != 0x00)
						x8.u1 = x21 + 0x08;
					x1.u1 = x20 + 0x01;
					NZCV.u0 = cond(w19 - w1);
					x20 = __bfm<word64>(x20, x1, 0, 31);
				} while (Test(NE,Z));
			}
			x8 = x29 - 0xC0;
			w9 = 0x00 | 0x01;
			sp.u0->t05E0.u1 = (size_t) x8;
			sp.u0->t05E8.u0 = (byte) (byte) w9;
			x0 = x29 - 0xC0;
			_ZNSt6__ndk15mutex4lockEv();
			_ZNSt6__ndk16chrono12steady_clock3nowEv();
			byte v176 = sp.u0->b00E0;
			w8.u1 = (word32) v176;
			if (w8 == 0x00)
			{
				w19 = 0x00;
				Eq_14 v198;
				v198.u0 = sp.u0->t05E8.u0;
				w8.u1 = (word32) v198;
				if (w8 == 0x00)
					goto l00000000000317B8;
				goto l00000000000317B0;
			}
			x8.u0 = 0x00050000;
			q0 = *((word32) x8 + 640);
			x9.u0 = 0x00050000;
			x8.u0 = 0xC800;
			x8 = SEQ(SLICE(x8, word32, 32), 43031, (word16) x8);
			sp.u0->t00C0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
			q0 = *((word32) x9 + 656);
			x8 = SEQ(SLICE(x8, word16, 48), 0x04, (word32) x8);
			x20.u1 = x0 + x8;
			w23 = 1000;
			sp.u0->t00A0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
			do
			{
				x8.u1 = sp.u0->t05A0.u1;
				if (x8 != 0x00)
					break;
				_ZNSt6__ndk16chrono12steady_clock3nowEv();
				x19 = x20 - x0;
				NZCV.u0 = cond(x19 - 0x01);
				if (Test(GE,NV))
				{
					_ZNSt6__ndk16chrono12steady_clock3nowEv();
					_ZNSt6__ndk16chrono12system_clock3nowEv();
					x21 = x0;
					x0 = x19;
					__floatditf();
					q1 = q0;
					q0.u2 = sp.u0->t00C0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
					__subtf3();
					x0 = x21;
					sp.u0->t00D0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
					__floatditf();
					q1.u2 = sp.u0->t00A0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
					__multf3();
					q1.u2 = sp.u0->t00D0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
					__lttf2();
					NZCV.u0 = cond(w0 - 0x00);
					if (Test(LT,NZV))
					{
						x2.u1 = x19 + x21 *64 x23;
						x0 = x29 - 0x90;
						x1.u1 = sp + 0x05E0;
					}
					else
					{
						x0 = x29 - 0x90;
						x1.u1 = sp + 0x05E0;
						x2 = 0x00 | 0x7FFFFFFFFFFFFFFF;
					}
					_ZNSt6__ndk118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE();
					_ZNSt6__ndk16chrono12steady_clock3nowEv();
				}
				_ZNSt6__ndk16chrono12steady_clock3nowEv();
				x31 = x0 - x20;
				NZCV.u0 = cond(x31);
			} while (Test(LT,NV));
			x8.u0 = 0x00071000;
			x8.u1 = x8 + 0x0118;
			x12 = x8;
			Eq_14 v197 = *((word32) x12 + 8);
			w10.u1 = (word32) v197;
			x11 = *((word32) x12 + 24);
			w8 = *x8.u1;
			x12.u1 = x12 + 0x09;
			w31 = w10 & 0x01;
			NZ.u0 = cond(w31);
			x20.u1 = Test(EQ,Z) ? x12 : x11;
			x9.u1 = sp + 1112;
			x0 = x20;
			x21.u1 = x9 + 0x08;
			((word32) sp + 1112)->u0 = w8;
			sp.u0->t0470.u1 = 0x00;
			((word32) sp + 1128)->u0 = 0x00;
			((word32) sp + 1120)->u0 = 0x00;
			x0 = strlen(x0);
			sp.u0 = x0 + 0x10;
			NZCV.u0 = cond(sp);
			if (Test(UGE,C))
			{
l0000000000031914:
				x0 = x21;
				fn000000000001B2D0();
				goto l000000000003191C;
			}
			x19 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			if (Test(ULT,C))
			{
				w8 = w19 << 1;
				x21.u1 = x21 + 0x01;
				sp.u0->b0460 = (byte) (byte) w8;
				if (x19 == 0x00)
					goto l0000000000031668;
			}
			else
			{
				x8.u1 = x19 + 0x10;
				x23 = x8 & ~0x0F;
				x0 = x23;
				_Znwm();
				x8 = x23 | 0x01;
				x21 = x0;
				sp.u0->t0470.u1 = (size_t) x0;
				((word32) sp + 1120)->u0 = x8;
				((word32) sp + 1128)->u0 = x19;
			}
			x0 = x21;
			x1 = x20;
			x2 = x19;
			x0 = memcpy(x0, x1, x2);
l0000000000031668:
			*(x21 + x19) = (word64) 0x00;
			x0.u1 = sp + 1112;
			((LEVELS) x0);
			if ((w0 & 0x01) == 0x00)
			{
				w19 = 0x00;
				Eq_14 v205;
				v205.u0 = sp.u0->b0460;
				w8.u1 = (word32) v205;
				if ((w8 & 0x01) == 0x00)
					goto l0000000000031734;
				goto l00000000000316D0;
			}
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			sp.u0->t0450.u1 = 0x00;
			sp.u0->t0448.u1 = 0x00;
			sp.u0->t0440.u1 = 0x00;
			x19 = *x8.u1;
			x0 = x19;
			x0 = strlen(x0);
			sp.u0 = x0 + 0x10;
			NZCV.u0 = cond(sp);
			if (Test(UGE,C))
			{
l000000000003191C:
				x0.u1 = sp + 0x0440;
				fn000000000001B2D0();
				x21 = x1;
				x24 = x0;
				byte v57 = (byte) *((word32) sp + 1176);
				w8.u1 = (word32) v57;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = *((word32) sp + 1192);
					((real64) q0, x0, x1);
				}
				__cxa_end_catch();
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 0x0DC0);
				x19.u1 = sp.u0->t05F0.u1;
				x8.u1 = x8 + 0x10;
				sp.u0->t05E0.u1 = (size_t) x8;
				if (x19 != 0x00)
					x8.u1 = x19 + 0x08;
				x19.u1 = sp.u0->t0378.u1;
				if (x19 != 0x00)
					x8.u1 = x19 + 0x08;
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 0x0DC0);
				x19.u1 = sp.u0->t0590.u1;
				x20.u1 = x8 + 0x10;
				sp.u0->t0580.u1 = (size_t) x20;
				if (x19 != 0x00)
					x8.u1 = x19 + 0x08;
				x19.u1 = sp.u0->t05A8.u1;
				sp.u0->t0598.u1 = (size_t) x20;
				if (x19 != 0x00)
					x8.u1 = x19 + 0x08;
				Eq_14 v167;
				v167.u0 = sp.u0->t05B0.u0;
				w8.u1 = (word32) v167;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = sp.u0->t05C0.u1;
					((real64) q0, x0, x1);
				}
				x0 = x29 - 0xC0;
				_ZNSt6__ndk15mutexD1Ev();
				x0 = x29 - 0x90;
				_ZNSt6__ndk118condition_variableD1Ev();
				NZCV.u0 = cond(w21 - 0x02);
				if (Test(EQ,Z))
				{
					x0 = x24;
					__cxa_begin_catch();
					x8.u1 = sp.u0->t00B8.u1;
					x20 = x0;
					x19.u1 = x8 + 0x08;
					x1.u0 = 0x00052000;
					x1.u1 = x1 + 1163;
					w2 = 0x14;
					x0 = x19;
					fn000000000001B8B0();
					Eq_14 v170 = *((word32) x20 + 16);
					w8.u1 = (word32) v170;
					Eq_42314 v171;
					v171.u0 = x20 + 24;
					x9.u1 = v171.u0->ptr0000;
					x10.u1 = v171.u0->t0008.u1;
					x11.u1 = x20 + 0x11;
					w31 = w8 & 0x01;
					NZ.u0 = cond(w31);
					C = false;
					V = false;
					x12 = x8 >> 1;
					x1.u1 = Test(EQ,Z) ? x11 : x10;
					x2.u1 = Test(EQ,Z) ? x12 : x9;
					x0 = x19;
					fn000000000001B1B0();
					x1.u0 = 0x00050000;
					x1.u1 = x1 + 1848;
					w2 = 0x00 | 0x01;
					x0 = x19;
					fn000000000001B1B0();
					Eq_14 v172 = *((word32) x20 + 40);
					w8.u1 = (word32) v172;
					Eq_42348 v173;
					v173.u0 = x20 + 48;
					x9.u1 = v173.u0->ptr0000;
					x10.u1 = v173.u0->t0008.u1;
					x11.u1 = x20 + 0x29;
					w31 = w8 & 0x01;
					NZ.u0 = cond(w31);
					C = false;
					V = false;
					x12 = x8 >> 1;
					x1.u1 = Test(EQ,Z) ? x11 : x10;
					x2.u1 = Test(EQ,Z) ? x12 : x9;
					x0 = x19;
					fn000000000001B1B0();
					x1.u0 = 0x00050000;
					x1.u1 = x1 + 0x073A;
					w2 = 0x00 | 0x02;
					x0 = x19;
					fn000000000001B1B0();
					x8 = *x20.u1;
					x0 = x20;
					x8 = *((word32) x8 + 16);
					x8();
					x20 = x0;
					x0 = strlen(x0);
					x2 = x0;
					x0 = x19;
					x1 = x20;
					fn000000000001B1B0();
					x8.u0 = 0x00071000;
					x8.u1 = x8 + 0x0198;
					x9.u1 = sp + 0x0100;
					x22.u1 = x9 + 0x08;
					Eq_14 v174 = *((word32) x8 + 8);
					w9 = (word32) v174;
					x11 = *((word32) x8 + 24);
					w10 = *x8.u1;
					x8.u1 = x8 + 0x09;
					w31 = w9 & 0x01;
					NZ.u0 = cond(w31);
					x21.u1 = Test(EQ,Z) ? x8 : x11;
					x0 = x21;
					((word32) sp + 0x0100)->u0 = w10;
					Eq_42415 v175;
					v175.u0 = sp + 272;
					v175->u0 = 0x00;
					((word32) v175 + 8)->u0 = 0x00;
					((word32) sp + 264)->u0 = 0x00;
					x0 = strlen(x0);
					sp.u0 = x0 + 0x10;
					NZCV.u0 = cond(sp);
					if (Test(ULT,C))
					{
						x20 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							w8 = w20 << 1;
							x22.u1 = x22 + 0x01;
							((word32) sp + 264)->u0 = (byte) w8;
							if (x20 == 0x00)
								goto l00000000000325E4;
						}
						else
						{
							x8.u1 = x20 + 0x10;
							x23 = x8 & ~0x0F;
							x0 = x23;
							_Znwm();
							x8 = x23 | 0x01;
							x22 = x0;
							Eq_42451 v206;
							v206.u0 = sp + 272;
							v206.u0->t0000.u1 = (size_t) x20;
							v206.u0->t0008.u1 = (size_t) x0;
							((word32) sp + 264)->u0 = x8;
						}
						x0 = x22;
						x1 = x21;
						x2 = x20;
						x0 = memcpy(x0, x1, x2);
l00000000000325E4:
						*(x22 + x20) = (word64) 0x00;
						x0.u1 = sp + 0x0100;
						((LEVELS) x0);
						if ((w0 & 0x01) == 0x00)
						{
							w20 = 0x00;
							Eq_14 v195;
							v195.u1 = *((word32) sp + 264);
							w8.u1 = (word32) v195;
							if ((w8 & 0x01) == 0x00)
								goto l0000000000032768;
							goto l0000000000032648;
						}
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						Eq_42736 v177;
						v177.u0 = sp + 0x00F0;
						v177.u0->qw0000 = 0x00;
						v177.u0->t0008.u1 = (size_t) 0x00;
						((word32) sp + 232)->u0 = 0x00;
						x20 = *x8.u1;
						x0 = x20;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(ULT,C))
						{
							x21 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								x9.u1 = sp + 232;
								w8 = w21 << 1;
								x22 = x9 | 0x01;
								((word32) sp + 232)->u0 = (byte) w8;
								if (x21 == 0x00)
									goto l0000000000032748;
							}
							else
							{
								x8.u1 = x21 + 0x10;
								x23 = x8 & ~0x0F;
								x0 = x23;
								_Znwm();
								x8 = x23 | 0x01;
								x22 = x0;
								Eq_42784 v194;
								v194.u0 = sp + 0x00F0;
								v194->u0 = x21;
								((word32) v194 + 8)->u0 = x0;
								((word32) sp + 232)->u0 = x8;
							}
							x0 = x22;
							x1 = x20;
							x2 = x21;
							x0 = memcpy(x0, x1, x2);
l0000000000032748:
							*(x22 + x21) = (word64) 0x00;
							x0.u1 = sp + 232;
							_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
							Eq_14 v183;
							v183.u1 = *((word32) sp + 232);
							w8.u1 = (word32) v183;
							w20 = w0;
							if ((w8 & 0x01) != 0x00)
							{
								Eq_14 v184;
								v184.u1 = *((word32) sp + 264);
								w8.u1 = (word32) v184;
								if ((w8 & 0x01) != 0x00)
								{
l0000000000032768:
									if ((w20 & 0x01) == 0x00)
										goto l00000000000327C8;
l000000000003276C:
									x8.u0 = 0x00070000;
									x8 = *((word32) x8 + 3432);
									x1 = *x8.u1;
									x2.u0 = 0x00071000;
									x3.u0 = 0x00052000;
									x2.u1 = x2 + 0x0198;
									x3.u1 = x3 + 0x05EE;
									x0.u1 = sp + 0x05F8;
									w4 = 0x00 | 0x06;
									x5 = 0x00;
									x20.u1 = sp + 0x05F8;
									_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
									x10.u1 = sp.u0->t00B8.u1;
									x0.u1 = x20 + 0x08;
									Eq_14 v185 = *((word32) x10 + 8);
									w8.u1 = (word32) v185;
									Eq_43063 v186;
									v186.u0 = x10 + 16;
									x9.u1 = v186.u0->t0000.u1;
									x10.u1 = v186.u0->t0008.u1;
									w31 = w8 & 0x01;
									NZ.u0 = cond(w31);
									C = false;
									V = false;
									x11 = x8 >> 1;
									x1.u1 = Test(NE,Z) ? x10 : x19 + 0x01;
									x2.u1 = Test(EQ,Z) ? x11 : x9;
									fn000000000001BB30();
									goto l00000000000327C0;
								}
							}
							else
							{
								x0.u1 = *((word32) sp + 0x00F8);
								((real64) q0, x0, x1);
								Eq_14 v192;
								v192.u1 = *((word32) sp + 264);
								w8.u1 = (word32) v192;
								if ((w8 & 0x01) == 0x00)
									goto l0000000000032768;
							}
l0000000000032648:
							x0.u1 = *((word32) sp + 0x0118);
							((real64) q0, x0, x1);
							if ((w20 & 0x01) == 0x00)
								goto l00000000000327C8;
							goto l000000000003276C;
						}
l0000000000032800:
						x0.u1 = sp + 232;
						fn000000000001B2D0();
						x24 = x0;
						x0.u1 = sp + 0x05F8;
						LogCapture::~LogCapture();
						sp.u0 = sp + 0x08;
						__cxa_end_catch();
l00000000000328B4:
						x0 = x24;
						_Unwind_Resume();
						fn000000000001F990();
						sp.u0 = sp + 0x08;
						_ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
						return;
					}
					x0 = x22;
					fn000000000001B2D0();
l00000000000327F0:
					x0 = x22;
					fn000000000001B2D0();
					goto l00000000000327F8;
				}
				NZCV.u0 = cond(w21 - 0x01);
				if (Test(NE,Z))
					goto l00000000000328B4;
				x0 = x24;
				__cxa_begin_catch();
				x8 = *x0.u1;
				x8 = *((word32) x8 + 16);
				x8();
				x8.u1 = sp.u0->t00B8.u1;
				x20 = x0;
				x19.u1 = x8 + 0x08;
				x0 = strlen(x0);
				x2 = x0;
				x0 = x19;
				x1 = x20;
				fn000000000001B8B0();
				x8.u0 = 0x00071000;
				x8.u1 = x8 + 0x0198;
				x9.u1 = sp + 0x0138;
				x22.u1 = x9 + 0x08;
				Eq_14 v207 = *((word32) x8 + 8);
				w9 = (word32) v207;
				x11 = *((word32) x8 + 24);
				w10 = *x8.u1;
				x8.u1 = x8 + 0x09;
				w31 = w9 & 0x01;
				NZ.u0 = cond(w31);
				x21.u1 = Test(EQ,Z) ? x8 : x11;
				x0 = x21;
				sp.u0->t0138.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w10;
				Eq_43616 v208;
				v208.u0 = sp + 328;
				v208.u0->qw0000 = 0x00;
				v208.u0->t0008.u1 = (size_t) 0x00;
				sp.u0->t0140.u1 = (size_t) 0x00;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(UGE,C))
					goto l00000000000327F0;
				x20 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					w8 = w20 << 1;
					x22.u1 = x22 + 0x01;
					sp.u0->t0140.u0 = (byte) (byte) w8;
					if (x20 == 0x00)
						goto l0000000000032540;
				}
				else
				{
					x8.u1 = x20 + 0x10;
					x23 = x8 & ~0x0F;
					x0 = x23;
					_Znwm();
					x8 = x23 | 0x01;
					x22 = x0;
					Eq_43652 v210;
					v210.u0 = sp + 328;
					v210->u0 = x20;
					((word32) v210 + 8)->u0 = x0;
					sp.u0->t0140.u1 = (size_t) x8;
				}
				x0 = x22;
				x1 = x21;
				x2 = x20;
				x0 = memcpy(x0, x1, x2);
l0000000000032540:
				*(x22 + x20) = (word64) 0x00;
				x0.u1 = sp + 0x0138;
				((LEVELS) x0);
				if ((w0 & 0x01) == 0x00)
				{
					w20 = 0x00;
					Eq_14 v211;
					v211.u0 = sp.u0->t0140.u0;
					w8.u1 = (word32) v211;
					if ((w8 & 0x01) == 0x00)
						goto l00000000000326A8;
					goto l00000000000325A4;
				}
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				Eq_43707 v209;
				v209.u0 = sp + 296;
				v209->u0 = 0x00;
				((word32) v209 + 8)->u0 = 0x00;
				sp.u0->t0120.u1 = 0x00;
				x20 = *x8.u1;
				x0 = x20;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(UGE,C))
				{
l00000000000327F8:
					x0.u1 = sp + 288;
					fn000000000001B2D0();
					goto l0000000000032800;
				}
				x21 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					x9.u1 = sp + 288;
					w8 = w21 << 1;
					x22 = x9 | 0x01;
					sp.u0->t0120.u0 = (byte) (byte) w8;
					if (x21 == 0x00)
						goto l0000000000032688;
				}
				else
				{
					x8.u1 = x21 + 0x10;
					x23 = x8 & ~0x0F;
					x0 = x23;
					_Znwm();
					x8 = x23 | 0x01;
					x22 = x0;
					Eq_43748 v216;
					v216.u0 = sp + 296;
					v216.u0->t0000.u1 = (size_t) x21;
					v216.u0->t0008.u1 = (size_t) x0;
					sp.u0->t0120.u1 = (size_t) x8;
				}
				x0 = x22;
				x1 = x20;
				x2 = x21;
				x0 = memcpy(x0, x1, x2);
l0000000000032688:
				*(x22 + x21) = (word64) 0x00;
				x0.u1 = sp + 288;
				_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
				Eq_14 v212;
				v212.u0 = sp.u0->t0120.u0;
				w8.u1 = (word32) v212;
				w20 = w0;
				if ((w8 & 0x01) != 0x00)
				{
					Eq_14 v213;
					v213.u0 = sp.u0->t0140.u0;
					w8.u1 = (word32) v213;
					if ((w8 & 0x01) != 0x00)
					{
l00000000000326A8:
						if ((w20 & 0x01) == 0x00)
							goto l00000000000327C8;
						goto l00000000000326AC;
					}
				}
				else
				{
					x0.u1 = sp.u0->t0130.u1;
					((real64) q0, x0, x1);
					Eq_14 v217;
					v217.u0 = sp.u0->t0140.u0;
					w8.u1 = (word32) v217;
					if ((w8 & 0x01) == 0x00)
						goto l00000000000326A8;
				}
l00000000000325A4:
				x0.u1 = sp.u0->t0150.u1;
				((real64) q0, x0, x1);
				if ((w20 & 0x01) == 0x00)
					goto l00000000000327C8;
l00000000000326AC:
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				x1 = *x8.u1;
				x2.u0 = 0x00071000;
				x3.u0 = 0x00052000;
				x2.u1 = x2 + 0x0198;
				x3.u1 = x3 + 0x05EE;
				x0.u1 = sp + 0x05F8;
				w4 = 0x00 | 0x06;
				x5 = 0x00;
				x20.u1 = sp + 0x05F8;
				_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
				x10.u1 = sp.u0->t00B8.u1;
				x0.u1 = x20 + 0x08;
				Eq_14 v214 = *((word32) x10 + 8);
				w8.u1 = (word32) v214;
				Eq_43842 v215;
				v215.u0 = x10 + 16;
				x9.u1 = v215.u0->t0000.u1;
				x10.u1 = v215.u0->t0008.u1;
				w31 = w8 & 0x01;
				NZ.u0 = cond(w31);
				C = false;
				V = false;
				x11 = x8 >> 1;
				x1.u1 = Test(NE,Z) ? x10 : x19 + 0x01;
				x2.u1 = Test(EQ,Z) ? x11 : x9;
				fn000000000001BB30();
l00000000000327C0:
				x0.u1 = sp + 0x05F8;
				LogCapture::~LogCapture();
				sp.u0 = sp + 0x08;
l00000000000327C8:
				__cxa_end_catch();
				w19 = 0x00;
				goto l0000000000030BD4;
			}
			x20 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			if (Test(ULT,C))
			{
				x9.u1 = sp + 0x0440;
				w8 = w20 << 1;
				x21 = x9 | 0x01;
				sp.u0->t0440.u0 = (byte) (byte) w8;
				if (x20 == 0x00)
					goto l0000000000031714;
			}
			else
			{
				x8.u1 = x20 + 0x10;
				x23 = x8 & ~0x0F;
				x0 = x23;
				_Znwm();
				x8 = x23 | 0x01;
				x21 = x0;
				sp.u0->t0450.u1 = (size_t) x0;
				sp.u0->t0440.u1 = (size_t) x8;
				sp.u0->t0448.u1 = (size_t) x20;
			}
			x0 = x21;
			x1 = x19;
			x2 = x20;
			x0 = memcpy(x0, x1, x2);
l0000000000031714:
			*(x21 + x20) = (word64) 0x00;
			x0.u1 = sp + 0x0440;
			_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
			Eq_14 v199;
			v199.u0 = sp.u0->t0440.u0;
			w8.u1 = (word32) v199;
			w19 = w0;
			if ((w8 & 0x01) != 0x00)
			{
				byte v200 = sp.u0->b0460;
				w8.u1 = (word32) v200;
				if ((w8 & 0x01) != 0x00)
				{
l0000000000031734:
					if ((w19 & 0x01) == 0x00)
						goto l00000000000317A4;
l0000000000031738:
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					x1 = *x8.u1;
					x2.u0 = 0x00071000;
					x3.u0 = 0x00052000;
					x2.u1 = x2 + 0x0118;
					x3.u1 = x3 + 0x05EE;
					x0.u1 = sp + 0x05F8;
					w4 = 0x00 | 0x06;
					x5 = 0x00;
					x19.u1 = sp + 0x05F8;
					_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
					x0.u1 = x19 + 0x08;
					x1.u0 = 0x00052000;
					x1.u1 = x1 + 0x033B;
					w2 = 22;
					fn000000000001BB30();
					byte v201 = (byte) *x22.u1;
					w8.u1 = (word32) v201;
					Eq_43535 v202;
					v202.u0 = x22 + 8;
					x10.u1 = v202.u0->ptr0000;
					x9.u1 = v202.u0->t0008.u1;
					x11 = x8 >> 1;
					w31 = w8 & 0x01;
					NZ.u0 = cond(w31);
					C = false;
					V = false;
					x8.u1 = sp.u0->t0090.u1;
					x2.u1 = Test(EQ,Z) ? x11 : x10;
					x1.u1 = Test(EQ,Z) ? x8 : x9;
					fn000000000001BB30();
					x0.u1 = sp + 0x05F8;
					LogCapture::~LogCapture();
					sp.u0 = sp + 0x08;
l00000000000317A4:
					w19 = 0x00 | 0x01;
					Eq_14 v203;
					v203.u0 = sp.u0->t05E8.u0;
					w8.u1 = (word32) v203;
					if (w8 == 0x00)
					{
l00000000000317B8:
						x20.u1 = sp.u0->t0378.u1;
						if (x20 != 0x00)
							x8.u1 = x20 + 0x08;
						goto l0000000000030B48;
					}
l00000000000317B0:
					x0.u1 = sp.u0->t05E0.u1;
					_ZNSt6__ndk15mutex6unlockEv();
					goto l00000000000317B8;
				}
			}
			else
			{
				x0.u1 = sp.u0->t0450.u1;
				((real64) q0, x0, x1);
				byte v204 = sp.u0->b0460;
				w8.u1 = (word32) v204;
				if ((w8 & 0x01) == 0x00)
					goto l0000000000031734;
			}
l00000000000316D0:
			x0.u1 = sp.u0->t0470.u1;
			((real64) q0, x0, x1);
			if ((w19 & 0x01) == 0x00)
				goto l00000000000317A4;
			goto l0000000000031738;
		}
	}
	else
	{
		x0.u1 = *((word32) sp + 0x0558);
		((real64) q0, x0, x1);
		Eq_14 v56;
		v56.u0 = sp.u0->t0568.u0;
		w8.u1 = (word32) v56;
		if ((w8 & 0x01) == 0x00)
			goto l000000000002E724;
	}
l000000000002E6C0:
	x0.u1 = sp.u0->t0578.u1;
	((real64) q0, x0, x1);
	if ((w19 & 0x01) == 0x00)
		goto l000000000002E7A0;
	goto l000000000002E728;
}

// 00000000000328C0: define _ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define _ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
{
	word32 w0;
	Eq_14 x0;
	struct Eq_43910 * fp;
	struct Eq_43910 * sp = fp;
	sp -= 0x01A0;
	struct Eq_43915 * v6 = (struct Eq_43915 *) ((char *) &sp->t00C0 + 0x00A0);
	word64 x28;
	v6->qw0000 = x28;
	struct Eq_43921 * x23;
	v6->ptr0008 = x23;
	struct Eq_43926 * v9 = (struct Eq_43926 *) ((char *) &sp->t00C0 + 0x00B0);
	Eq_14 x22;
	v9->t0000.u1 = (size_t) x22;
	word64 x21;
	v9->qw0008 = x21;
	struct Eq_43937 * v12 = (struct Eq_43937 *) ((char *) &sp->t00C0 + 0x00C0);
	Eq_14 x20;
	v12->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v12->t0008.u1 = (size_t) x19;
	struct Eq_43948 * v15 = (struct Eq_43948 *) ((char *) &sp->t00C0 + 0x00D0);
	struct Eq_43950 * x29;
	v15->ptr0000 = x29;
	word64 x30;
	v15->qw0008 = x30;
	x29 = (struct Eq_43950 *) ((char *) &sp->t00C0 + 0x00D0);
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x23->t0028.u1;
	Eq_14 x1 = x0;
	x29->tFFFFFFC8.u1 = (size_t) x8;
	Eq_14 v20 = x19;
	v20.u1->u1 = 0x00;
	((word32) v20 + 8)->u0 = 0x00;
	((word32) x19 + 16)->u0 = 0x00;
	x0.u1 = &sp->t0008.u0;
	ui32 w2 = 0x00 | 0x0E;
	fn0000000000032A90();
	x8.u1 = sp->t0090.u1;
	if (x8 == 0x00)
	{
		x8.u1 = &sp->t0008.u0;
		x20.u1 = (word32) x8 + 16;
		goto l00000000000329D0;
	}
	x0.u1 = &sp->t0008.u0;
	fn000000000001B030();
	if (x1 != 0x00)
	{
		x0 = x19;
		fn000000000001AFE0();
	}
	x0.u1 = &sp->t0008.u0;
	x1.u0 = 0x00;
	w2 = 0x00;
	fn000000000001B480();
	Eq_14 v31 = x19;
	x1 = *v31.u1;
	x8 = *((word32) v31 + 8);
	ptr64 x2 = x8 - x1;
	x0.u1 = &sp->t0008.u0;
	x20.u1 = &sp->t0008.u0;
	fn000000000001C350();
	x22.u1 = sp->t0090.u1;
	x20.u1 = (word32) x20 + 16;
	Eq_14 x9;
	if (x22 != 0x00)
	{
		x8.u1 = sp->t0018.u1;
		x8 = *((word32) x8 + 48);
		x0 = x20;
		x8();
		word32 w21 = w0;
		x0 = x22;
		x0 = SEQ(0x00, fclose(x0));
		if (w0 != 0x00)
		{
			x8.u1 = sp->t0018.u1;
			x8 = *((word32) x8 + 24);
			x0 = x20;
			x1.u0 = 0x00;
			x2 = null;
			x8();
		}
		else
		{
			x8.u1 = sp->t0018.u1;
			sp->t0090.u1 = (size_t) 0x00;
			x8 = *((word32) x8 + 24);
			x0 = x20;
			x1.u0 = 0x00;
			x2 = null;
			x8();
			if (w21 == 0x00)
			{
l00000000000329D0:
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 0x0DC8);
				x9.u1 = &sp->t0008.u0;
				x0 = x20;
				x19.u1 = (word32) x9 + 0x00B8;
				Eq_14 x10;
				x10.u1 = (word32) x8 + 24;
				x8.u1 = (word32) x8 + 64;
				sp->t0008.u1 = (size_t) x10;
				sp->t00C0.u1 = (size_t) x8;
				fn000000000001B280();
				x0 = x19;
				_ZNSt6__ndk18ios_baseD2Ev();
				x8.u1 = x23->t0028.u1;
				x9.u1 = x29->tFFFFFFC8.u1;
				int64 x31 = x8 - x9;
				Eq_44070 NZCV;
				NZCV.u0 = cond(x31);
				bool Z;
				if (Test(NE,Z))
					__stack_chk_fail();
				else
				{
					struct Eq_44078 * v27 = (struct Eq_44078 *) ((char *) &sp->t00C0 + 0x00D0);
					x29 = v27->ptr0000;
					x30 = v27->qw0008;
					struct Eq_44087 * v28 = (struct Eq_44087 *) ((char *) &sp->t00C0 + 0x00C0);
					x20.u1 = v28->t0000.u1;
					x19.u1 = v28->t0008.u1;
					struct Eq_44096 * v29 = (struct Eq_44096 *) ((char *) &sp->t00C0 + 0x00B0);
					x22.u1 = v29->t0000.u1;
					x21 = v29->qw0008;
					struct Eq_44105 * v30 = (struct Eq_44105 *) ((char *) &sp->t00C0 + 0x00A0);
					x28 = v30->qw0000;
					x23 = v30->ptr0008;
					sp = (struct Eq_43910 *) ((char *) &sp->t00C0 + 224);
					return;
				}
			}
		}
	}
	x8.u1 = sp->t0008.u1;
	x9.u1 = &sp->t0008.u0;
	x8 = *((word32) x8 - 24);
	x0.u1 = x9 + x8;
	ui32 w8 = (ui32) *((word32) x0 + 32);
	ui32 w1 = w8 | 0x04;
	_ZNSt6__ndk18ios_base5clearEj();
	goto l00000000000329D0;
}

// 0000000000032A90: define fn0000000000032A90
// Called from:
//      _ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
define fn0000000000032A90
{
	ui32 w2;
	union Eq_14 * fp;
	union Eq_14 * sp = fp;
	sp = (union Eq_14 *) ((char *) sp - 64);
	Eq_14 x23;
	sp->u1 = (size_t) x23;
	struct Eq_44180 * v7 = (struct Eq_44180 *) ((char *) sp + 16);
	word64 x22;
	v7->qw0000 = x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_44191 * v10 = (struct Eq_44191 *) ((char *) sp + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_44202 * v13 = (struct Eq_44202 *) ((char *) sp + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) sp + 48;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3200);
	Eq_14 q0;
	q0.u0 = 0;
	Eq_14 x0;
	x19 = x0;
	x20 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 64;
	x8.u1 = (word32) x8 + 24;
	word128 v0 = SEQ(SLICE(v0, word64, 64), x8);
	ui32 w22 = w2;
	Eq_14 x1;
	x23 = x1;
	x21 = x0;
	x19.u1 = (word32) x19 + 0x00B8;
	*x19.u1 = x9;
	*x20.u1 = q0;
	x20.u1 = (word32) x20 + 16;
	x0 = x19;
	x1 = x20;
	_ZNSt6__ndk18ios_base4initEPv();
	((word32) x21 + 320)->u0 = 0x00;
	x9.u0 = 0x00070000;
	x9 = *((word32) x9 + 0x0DC8);
	ui32 w8 = ~0x00;
	((word32) x21 + 328)->u1 = w8;
	x8.u1 = (word32) x9 + 24;
	x9.u1 = (word32) x9 + 64;
	*x21.u1 = x8;
	*((word32) x21 + 0x00B8) = x9;
	x0 = x20;
	fn000000000001C5A0();
	byte v23 = (byte) *x23.u1;
	w8 = (word32) v23;
	x9 = *((word32) x23 + 16);
	Eq_14 x10 = *((word32) x21 + 0x0088);
	ui32 w31 = w8 & 0x01;
	Eq_44283 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x0.u1 = Test(NE,Z) ? x9 : (word32) x23 + 1;
	if (x10 == 0x00)
	{
		ui32 w23 = w22 | 0x08;
		w8 = w23 & ~0x02;
		w8 -= 0x08;
		ui32 v40 = w8;
		Eq_44306 NZCV;
		NZCV.u0 = cond(w8 - 0x34);
		word32 ZC;
		if (Test(UGT,ZC))
			goto l0000000000032B28;
		x9.u0 = 0x00050000;
		x9.u1 = (word32) x9 + 0x0300;
		x10.u0 = 0x00032B28;
		byte v38 = (byte) *(x9 + x8);
		word32 w11 = (word32) v38;
		ui64 x11;
		x10.u1 = (char *) x10.u1 + (x11 << 2);
		x1.u0 = 0x00052000;
		x1.u1 = (word32) x1 + 3115;
		switch (v40)
		{
		case 0x00:
			break;
		case 0x01:
		case 0x11:
			x1.u0 = 0x00053000;
			x1.u1 = (word32) x1 + 0x0551;
			break;
		case 0x02:
		case 0x03:
		case 0x06:
		case 0x07:
		case 0x08:
		case 0x09:
		case 0x0A:
		case 11:
		case 0x0C:
		case 0x0D:
		case 0x0E:
		case 0x0F:
		case 0x12:
		case 0x13:
		case 22:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case 0x20:
		case 33:
		case 0x22:
		case 0x23:
		case 0x24:
		case 0x25:
		case 0x26:
		case 0x27:
		case 0x28:
		case 0x29:
		case 0x2A:
		case 0x2B:
		case 44:
		case 0x2D:
		case 0x2E:
		case 0x2F:
		case 0x31:
		case 0x32:
		case 0x33:
			goto l0000000000032B28;
		case 0x04:
			x1.u0 = 0x00053000;
			x1.u1 = (word32) x1 + 0x0554;
			break;
		case 0x05:
		case 0x15:
			x1.u0 = 0x00053000;
			x1.u1 = (word32) x1 + 0x055F;
			break;
		case 0x10:
			x1.u0 = 0x00053000;
			x1.u1 = (word32) x1 + 1355;
			break;
		case 0x14:
			x1.u0 = 0x00053000;
			x1.u1 = (word32) x1 + 0x0557;
			break;
		case 0x30:
			x1.u0 = 0x00053000;
			x1.u1 = (word32) x1 + 0x054E;
			break;
		case 0x34:
			x1.u0 = 0x00053000;
			x1.u1 = (word32) x1 + 0x055B;
			break;
		}
		x0 = fopen(x0, x1);
		*((word32) x21 + 0x0088) = x0;
		if (x0 != 0x00)
		{
			((word32) x21 + 0x00A8)->u1 = w23;
			if ((w22 & 0x02) != 0x00)
			{
				w2 = 0x00 | 0x02;
				x1.u0 = 0x00;
				word64 x2;
				x0 = SEQ(0x00, fseek(x0, (int32) x1, (int32) x2));
				word32 w0;
				if (w0 != 0x00)
				{
					x0 = *((word32) x21 + 0x0088);
					x0 = SEQ(0x00, fclose(x0));
					((word32) x21 + 0x0088)->u0 = 0x00;
					goto l0000000000032B28;
				}
			}
l0000000000032B40:
			struct Eq_44371 * v31 = (struct Eq_44371 *) ((char *) sp + 48);
			x29 = v31->ptr0000;
			x30 = v31->qw0008;
			struct Eq_44380 * v32 = (struct Eq_44380 *) ((char *) sp + 32);
			x20.u1 = v32->t0000.u1;
			x19.u1 = v32->t0008.u1;
			struct Eq_44389 * v33 = (struct Eq_44389 *) ((char *) sp + 16);
			x22 = v33->qw0000;
			x21.u1 = v33->t0008.u1;
			x23.u1 = sp->u1;
			sp = (union Eq_14 *) ((char *) sp + 64);
			return;
		}
	}
l0000000000032B28:
	x8 = *x21.u1;
	x8 = *((word32) x8 - 24);
	x0.u1 = x21 + x8;
	w8 = (ui32) *((word32) x0 + 32);
	ui32 w1 = w8 | 0x04;
	_ZNSt6__ndk18ios_base5clearEj();
	goto l0000000000032B40;
}

// 0000000000032C34: define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE5tellgEv
define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE5tellgEv
{
	struct Eq_44437 * x0;
	struct Eq_44437 ** fp;
	struct Eq_44437 ** sp = fp;
	sp = (struct Eq_44437 **) ((char *) sp - 32);
	struct Eq_44437 * x19;
	*sp = (struct Eq_44437 **) x19;
	struct Eq_44442 * v7 = (struct Eq_44442 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	struct Eq_44457 * x8 = x0->ptr0000;
	x19 = x0;
	x8 = x8->ptrFFFFFFE8;
	x0 += x8;
	ui32 w9 = x0->dw0020;
	if (w9 == 0x00)
	{
		x0 = x0->ptr0088;
		word64 x1;
		if (x0 != null)
		{
			fn000000000001B260();
			x8 = x19->ptr0000;
			x8 = x8->ptrFFFFFFE8;
			struct Eq_44520 * x9 = x19 + x8;
			w9 = x9->dw0020;
			if (w9 != 0x00)
			{
l0000000000032C60:
				x0 = null;
				x1 = ~0x00;
l0000000000032CAC:
				struct Eq_44480 * v16 = (struct Eq_44480 *) ((char *) sp + 16);
				x29 = v16->ptr0000;
				x30 = v16->qw0008;
				x19 = (struct Eq_44437 *) *sp;
				sp = (struct Eq_44437 **) ((char *) sp + 32);
				return;
			}
		}
		x8 = x19 + x8;
		x0 = x8->ptr0028;
		x8 = x0->ptr0000;
		x8 = x8->ptr0020;
		ui32 w2 = 0x00 | 0x01;
		ui32 w3 = 0x00 | 0x08;
		x1 = 0x00;
		x8();
		goto l0000000000032CAC;
	}
	else
	{
		ui32 w1 = w9 | 0x04;
		_ZNSt6__ndk18ios_base5clearEj();
		goto l0000000000032C60;
	}
}

// 0000000000032CEC: define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE
define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE
{
	word32 w2;
	struct Eq_44544 * x0;
	word64 * fp;
	word64 * sp = fp;
	sp += -6;
	word64 x21;
	*sp = x21;
	struct Eq_44538 * v7 = (struct Eq_44538 *) (sp + 2);
	word64 x20;
	v7->qw0000 = x20;
	struct Eq_44544 * x19;
	v7->ptr0008 = x19;
	struct Eq_44549 * v10 = (struct Eq_44549 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	struct Eq_44564 * x8 = x0->ptr0000;
	x19 = x0;
	word32 w20 = w2;
	word64 x1;
	x21 = x1;
	x8 = x8->ptrFFFFFFE8;
	x0 += x8;
	ui32 w8 = x0->dw0020;
	ui32 w1 = w8 & ~0x02;
	_ZNSt6__ndk18ios_base5clearEj();
	x8 = x19->ptr0000;
	x8 = x8->ptrFFFFFFE8;
	x0 = x19 + x8;
	ui32 w9 = x0->dw0020;
	if (w9 != 0x00)
	{
		w1 = w9 | 0x04;
		_ZNSt6__ndk18ios_base5clearEj();
		goto l0000000000032D3C;
	}
	x0 = x0->ptr0088;
	if (x0 != null)
	{
		fn000000000001B260();
		x8 = x19->ptr0000;
		x8 = x8->ptrFFFFFFE8;
		struct Eq_44631 * x9 = x19 + x8;
		w9 = x9->dw0020;
		if (w9 != 0x00)
		{
l0000000000032D3C:
			x0 = x19;
			struct Eq_44639 * v19 = (struct Eq_44639 *) (sp + 4);
			x29 = v19->ptr0000;
			x30 = v19->qw0008;
			struct Eq_44648 * v20 = (struct Eq_44648 *) (sp + 2);
			x20 = v20->qw0000;
			x19 = v20->ptr0008;
			x21 = *sp;
			sp += 6;
			return;
		}
	}
	x8 = x19 + x8;
	x0 = x8->ptr0028;
	x8 = x0->ptr0000;
	x8 = x8->ptr0020;
	ui32 w3 = 0x00 | 0x08;
	x1 = x21;
	w2 = w20;
	x8();
	sp = x1 + 0x01;
	Eq_44620 NZCV;
	NZCV.u0 = cond(sp);
	bool Z;
	if (Test(EQ,Z))
	{
		x8 = x19->ptr0000;
		x8 = x8->ptrFFFFFFE8;
		x0 = x19 + x8;
		w8 = x0->dw0020;
		w1 = w8 | 0x04;
		_ZNSt6__ndk18ios_base5clearEj();
	}
	goto l0000000000032D3C;
}

// 0000000000032DEC: define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE4readEPcl
define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE4readEPcl
{
	struct Eq_44690 * x0;
	word64 * fp;
	word64 * sp = fp;
	sp += -6;
	word64 x21;
	*sp = x21;
	struct Eq_44684 * v7 = (struct Eq_44684 *) (sp + 2);
	ui64 x20;
	v7->qw0000 = x20;
	struct Eq_44690 * x19;
	v7->ptr0008 = x19;
	struct Eq_44695 * v10 = (struct Eq_44695 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	struct Eq_44710 * x8 = x0->ptr0000;
	x0->ptr0008 = null;
	x19 = x0;
	x8 = x8->ptrFFFFFFE8;
	x0 += x8;
	ui32 w9 = x0->dw0020;
	ui32 w1;
	if (w9 == 0x00)
	{
		x0 = x0->ptr0088;
		ui64 x2;
		x20 = x2;
		word64 x1;
		x21 = x1;
		if (x0 != null)
		{
			fn000000000001B260();
			x8 = x19->ptr0000;
			x8 = x8->ptrFFFFFFE8;
			x0 = x19 + x8;
			w9 = x0->dw0020;
			if (w9 != 0x00)
			{
l0000000000032E30:
				w1 = w9 | 0x04;
				_ZNSt6__ndk18ios_base5clearEj();
l0000000000032E38:
				x0 = x19;
				struct Eq_44785 * v15 = (struct Eq_44785 *) (sp + 4);
				x29 = v15->ptr0000;
				x30 = v15->qw0008;
				struct Eq_44794 * v16 = (struct Eq_44794 *) (sp + 2);
				x20 = v16->qw0000;
				x19 = v16->ptr0008;
				x21 = *sp;
				sp += 6;
				return;
			}
		}
		x8 = x19 + x8;
		x0 = x8->ptr0028;
		x8 = x0->ptr0000;
		x8 = x8->ptr0040;
		x1 = x21;
		x2 = x20;
		x8();
		ptr64 x31 = x0 - x20;
		Eq_44760 NZCV;
		NZCV.u0 = cond(x31);
		x19->ptr0008 = x0;
		bool Z;
		if (Test(NE,Z))
		{
			x8 = x19->ptr0000;
			x8 = x8->ptrFFFFFFE8;
			x0 = x19 + x8;
			ui32 w8 = x0->dw0020;
			w1 = w8 | 0x06;
			_ZNSt6__ndk18ios_base5clearEj();
		}
		goto l0000000000032E38;
	}
	else
	{
		w1 = w9 | 0x04;
		_ZNSt6__ndk18ios_base5clearEj();
		x8 = x19->ptr0000;
		x8 = x8->ptrFFFFFFE8;
		x0 = x19 + x8;
		w9 = x0->dw0020;
		goto l0000000000032E30;
	}
}

// 0000000000032EE8: define _ZNSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED1Ev
define _ZNSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED1Ev
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_44831 * v7 = (struct Eq_44831 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0DC8);
	union Eq_14 * x0;
	x19 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 24;
	x8.u1 = (word32) x8 + 64;
	x0->u1 = (size_t) x9;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	x19 = (union Eq_14 *) ((char *) x19 + 0x00B8);
	x19->u1 = (size_t) x8;
	fn000000000001B280();
	struct Eq_44865 * v11 = (struct Eq_44865 *) ((char *) sp + 16);
	x29 = v11->ptr0000;
	x30 = v11->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	_ZNSt6__ndk18ios_baseD2Ev();
}

// 0000000000032F24: define _ZN4rgbd18read_firmware_dataEbRKNSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
define _ZN4rgbd18read_firmware_dataEbRKNSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
{
	struct Eq_44880 * fp;
	struct Eq_44880 * sp = fp;
	sp -= 0x80;
	struct Eq_44885 * v6 = (struct Eq_44885 *) ((char *) &sp->t0038 + 8);
	struct Eq_44887 * x24;
	v6->ptr0000 = x24;
	Eq_14 x23;
	v6->t0008.u1 = (size_t) x23;
	struct Eq_44896 * v9 = (struct Eq_44896 *) ((char *) &sp->t0038 + 24);
	Eq_14 x22;
	v9->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v9->t0008.u1 = (size_t) x21;
	struct Eq_44907 * v12 = (struct Eq_44907 *) ((char *) &sp->t0038 + 40);
	Eq_14 x20;
	v12->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v12->t0008.u1 = (size_t) x19;
	struct Eq_44918 * v15 = (struct Eq_44918 *) ((char *) &sp->t0038 + 56);
	ptr64 x29;
	v15->ptr0000 = x29;
	word64 x30;
	v15->qw0008 = x30;
	x29 = (char *) &sp->t0038 + 56;
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x24->t0028.u1;
	sp->t0038.u1 = (size_t) x8;
	ui32 w0;
	Eq_14 x0;
	Eq_14 x9;
	Eq_14 q0;
	word128 q1;
	Eq_44983 q2;
	ui32 w21;
	Eq_14 x1;
	Eq_14 x2;
	if ((w0 & 0x01) == 0x00)
	{
		w0 = 0x48;
		__cxa_allocate_exception();
		x19 = x0;
		struct Eq_44951 * v25 = (struct Eq_44951 *) &sp->t0020.u0;
		v25->qw0000 = 0x00;
		v25->qw0008 = 0x00;
		sp->t0030.u1 = (size_t) 0x00;
		w0 = 0x00 | 0x20;
		_Znwm();
		x9.u0 = 0x00052000;
		x8.u0 = 0x00050000;
		x9.u1 = (word32) x9 + 600;
		q0 = *((word32) x8 + 672);
		q1 = (word128) *((word32) x9 + 0x0E);
		q2.u1 = *x9.u1;
		w21 = 0x00 | 0x01;
		sp->t0030.u1 = (size_t) x0;
		((word32) x0 + 30)->u0 = 0x00;
		sp->t0020.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		((word32) x0 + 0x0E)->u1 = q1;
		x0.u1->u1 = q2;
		x1.u1 = &sp->t0020.u0;
		x0 = x19;
		fn000000000001B140();
		x1.u0 = 0x00070000;
		x2.u0 = 0x00070000;
		x1 = *((word32) x1 + 0x0FC0);
		x2 = *((word32) x2 + 0x0E38);
		x0 = x19;
		w21 = 0x00;
		__cxa_throw();
		goto l0000000000033114;
	}
	struct Eq_45020 * v19 = (struct Eq_45020 *) ((char *) &sp->t0000 + 8);
	v19->qw0000 = 0x00;
	v19->qw0008 = 0x00;
	sp->t0000.u1 = (size_t) 0x00;
	Eq_45036 v22;
	v22.u2 = *x1.u1;
	ui32 w8 = (word32) v22;
	if ((w8 & 0x01) != 0x00)
	{
		x8 = *((word32) x1 + 16);
		q0 = *x1.u1;
		sp->t0010.u1 = (size_t) x8;
		sp->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		goto l0000000000032FD8;
	}
	x20 = *((word32) x1 + 8);
	sp = (struct Eq_44880 *) ((word32) x20 + 16);
	Eq_45049 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(ULT,C))
	{
		x21 = *((word32) x1 + 16);
		NZCV.u0 = cond(x20 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = &sp->t0000.u0;
			ui32 w20;
			w8 = w20 << 1;
			x22 = x9 | 0x01;
			sp->t0000.u0 = (byte) (byte) w8;
			if (x20 == 0x00)
				goto l0000000000032FD4;
		}
		else
		{
			x8.u1 = (word32) x20 + 16;
			x23 = x8 & ~0x0F;
			x0 = x23;
			_Znwm();
			x8 = x23 | 0x01;
			x22 = x0;
			struct Eq_45122 * v44 = (struct Eq_45122 *) ((char *) &sp->t0000 + 8);
			v44->t0000.u1 = (size_t) x20;
			v44->t0008.u1 = (size_t) x0;
			sp->t0000.u1 = (size_t) x8;
		}
		x0 = x22;
		x1 = x21;
		x2 = x20;
		x0 = memcpy(x0, x1, x2);
l0000000000032FD4:
		*(x22 + x20) = (word64) 0x00;
l0000000000032FD8:
		x0.u1 = &sp->t0000.u0;
		x8 = x19;
		fn000000000001BDE0();
		Eq_14 v31;
		v31.u0 = sp->t0000.u0;
		w8 = (word32) v31;
		if ((w8 & 0x01) != 0x00)
		{
			x0.u1 = sp->t0010.u1;
			((real64) q0, x0, x1);
		}
		Eq_14 v35 = x19;
		x8 = *v35.u1;
		x9 = *((word32) v35 + 8);
		int64 x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
		{
			x8.u1 = x24->t0028.u1;
			x9.u1 = sp->t0038.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(EQ,Z))
			{
				struct Eq_45231 * v38 = (struct Eq_45231 *) ((char *) &sp->t0038 + 56);
				x29 = v38->ptr0000;
				x30 = v38->qw0008;
				struct Eq_45240 * v39 = (struct Eq_45240 *) ((char *) &sp->t0038 + 40);
				x20.u1 = v39->t0000.u1;
				x19.u1 = v39->t0008.u1;
				struct Eq_45249 * v40 = (struct Eq_45249 *) ((char *) &sp->t0038 + 24);
				x22.u1 = v40->t0000.u1;
				x21.u1 = v40->t0008.u1;
				struct Eq_45258 * v41 = (struct Eq_45258 *) ((char *) &sp->t0038 + 8);
				x24 = v41->ptr0000;
				x23.u1 = v41->t0008.u1;
				sp = (struct Eq_44880 *) ((char *) &sp->t0038 + 72);
				return;
			}
		}
		else
		{
			w0 = 0x48;
			__cxa_allocate_exception();
			x21 = x0;
			struct Eq_45159 * v42 = (struct Eq_45159 *) &sp->t0020.u0;
			v42->ow0000 = (word128) 0x00;
			v42->qw0008 = 0x00;
			sp->t0030.u1 = (size_t) 0x00;
			w0 = 0x00 | 0x20;
			_Znwm();
			x9.u0 = 0x00052000;
			x8.u0 = 0x00050000;
			x9.u1 = (word32) x9 + 0x0277;
			q0 = *((word32) x8 + 688);
			q1 = (word128) *((word32) x9 + 0x0C);
			q2.u1 = *x9.u1;
			ui32 w22 = 0x00 | 0x01;
			sp->t0030.u1 = (size_t) x0;
			((word32) x0 + 28)->u0 = 0x00;
			sp->t0020.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
			((word32) x0 + 0x0C)->u1 = q1;
			x0.u1->u1 = q2;
			x1.u1 = &sp->t0020.u0;
			x0 = x21;
			fn000000000001B140();
			x1.u0 = 0x00070000;
			x2.u0 = 0x00070000;
			x1 = *((word32) x1 + 0x0FC0);
			x2 = *((word32) x2 + 0x0E38);
			x0 = x21;
			w22 = 0x00;
			__cxa_throw();
		}
l0000000000033114:
		__stack_chk_fail();
	}
	x0.u1 = &sp->t0000.u0;
	fn000000000001B2D0();
	x20 = x0;
	x0 = x21;
	__cxa_free_exception();
	x0 = *x19.u1;
	if (x0 != 0x00)
	{
		*((word32) x19 + 8) = x0;
		((real64) q0, x0, x1);
		x0 = x20;
		_Unwind_Resume();
		Eq_14 v45;
		v45.u0 = sp->t0020.u0;
		w8 = (word32) v45;
		x20 = x0;
		if ((w8 & 0x01) != 0x00)
		{
			if (w21 == 0x00)
				goto l00000000000331AC;
		}
		else
		{
			x0.u1 = sp->t0030.u1;
			((real64) q0, x0, x1);
			if ((w21 & 0x01) == 0x00)
				goto l00000000000331AC;
		}
		x0 = x19;
		__cxa_free_exception();
		x0 = x20;
		_Unwind_Resume();
		Eq_14 v46;
		v46.u0 = sp->t0000.u0;
		w8 = (word32) v46;
		x20 = x0;
		if ((w8 & 0x01) == 0x00)
		{
l00000000000331B4:
			x0.u1 = sp->t0010.u1;
			((real64) q0, x0, x1);
			x0 = x20;
			_Unwind_Resume();
			_ZN3rs25errorC2ERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE();
			return;
		}
	}
l00000000000331AC:
	x0 = x20;
	_Unwind_Resume();
	goto l00000000000331B4;
}

// 00000000000331C4: define _ZN3rs25errorC2ERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
// Called from:
//      _ZN4rgbd18read_firmware_dataEbRKNSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
define _ZN3rs25errorC2ERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
{
	Eq_14 x1;
	struct Eq_45345 ** fp;
	struct Eq_45345 ** sp = fp;
	sp = (struct Eq_45345 **) ((char *) sp - 48);
	struct Eq_45345 * x21;
	*sp = (struct Eq_45345 **) x21;
	struct Eq_45350 * v7 = (struct Eq_45350 *) ((char *) sp + 16);
	struct Eq_45345 * x20;
	v7->ptr0000 = x20;
	struct Eq_45345 * x19;
	v7->ptr0008 = x19;
	struct Eq_45361 * v10 = (struct Eq_45361 *) ((char *) sp + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) sp + 32;
	byte v13 = (byte) *x1.u1;
	ui32 w8 = (word32) v13;
	word64 x9 = (word64) *((word32) x1 + 16);
	struct Eq_45345 * x0;
	x19 = x0;
	ui32 w31 = w8 & 0x01;
	Eq_45388 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x1.u1 = Test(NE,Z) ? x9 : (word32) x1 + 1;
	_ZNSt13runtime_errorC2EPKc();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0E08);
	Eq_14 q0;
	q0.u0 = 0;
	x20 = x19;
	x21 = (struct Eq_45345 *) ((char *) &x19->t0000 + 40);
	x8.u1 = (word32) x8 + 16;
	x19->t0000.u1 = (size_t) x8;
	x20 = (struct Eq_45345 *) ((char *) &x20->t0000 + 16);
	x20->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	struct Eq_45420 * v23 = (struct Eq_45420 *) ((char *) &x19->t0000 + 32);
	v23->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	v23->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x1.u0 = 0x00052000;
	x1.u1 = (word32) x1 + 0x05EE;
	x0 = x20;
	word64 x2 = 0x00;
	fn000000000001B8B0();
	x1.u0 = 0x00052000;
	x1.u1 = (word32) x1 + 0x05EE;
	x0 = x21;
	x2 = 0x00;
	fn000000000001B8B0();
	x19->dw0040 = 0x00;
	struct Eq_45442 * v25 = (struct Eq_45442 *) ((char *) sp + 32);
	x29 = v25->ptr0000;
	x30 = v25->qw0008;
	struct Eq_45451 * v26 = (struct Eq_45451 *) ((char *) sp + 16);
	x20 = v26->ptr0000;
	x19 = v26->ptr0008;
	x21 = (struct Eq_45345 *) *sp;
	sp = (struct Eq_45345 **) ((char *) sp + 48);
}

// 0000000000033280: define _ZN4rgbd6updateEN3rs213update_deviceENSt6__ndk16vectorIhNS2_9allocatorIhEEEE
define _ZN4rgbd6updateEN3rs213update_deviceENSt6__ndk16vectorIhNS2_9allocatorIhEEEE
{
	Eq_45464 fp;
	Eq_45464 sp = fp;
	sp.u1 = (word32) sp - 96;
	Eq_14 x28;
	sp->u1 = x28;
	struct Eq_45473 * v7 = (struct Eq_45473 *) ((word32) sp + 16);
	Eq_14 x26;
	v7->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v7->t0008.u1 = (size_t) x25;
	struct Eq_45484 * v10 = (struct Eq_45484 *) ((word32) sp + 32);
	Eq_14 x24;
	v10->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v10->t0008.u1 = (size_t) x23;
	struct Eq_45495 * v13 = (struct Eq_45495 *) ((word32) sp + 48);
	Eq_14 x22;
	v13->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v13->t0008.u1 = (size_t) x21;
	struct Eq_45506 * v16 = (struct Eq_45506 *) ((word32) sp + 64);
	Eq_14 x20;
	v16->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v16->t0008.u1 = (size_t) x19;
	struct Eq_45517 * v19 = (struct Eq_45517 *) ((word32) sp + 80);
	Eq_14 x29;
	v19->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v19->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 80;
	sp -= 448;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x25 + 40);
	x26.u0 = 0x00071000;
	x26.u1 = (word32) x26 + 0x0118;
	Eq_14 x9;
	x9.u1 = (word32) sp + 80;
	*((word32) x29 - 88) = x8;
	Eq_14 w8 = *x26.u1;
	x23.u1 = (word32) x9 + 8;
	Eq_14 v25 = *((word32) x26 + 8);
	ui32 w9 = (word32) v25;
	ptr64 x10 = (ptr64) ((word32) x26 + 9);
	((word32) sp + 80)->u1 = w8;
	x8 = *((word32) x26 + 24);
	ui32 w31 = w9 & 0x01;
	Eq_45571 NZ;
	NZ.u0 = cond(w31);
	Eq_14 x0;
	x20 = x0;
	Eq_14 x1;
	x19 = x1;
	bool Z;
	x22.u1 = Test(EQ,Z) ? x10 : x8;
	x0 = x22;
	struct Eq_45579 * v34 = (struct Eq_45579 *) ((word32) sp + 96);
	v34->qw0000 = 0x00;
	v34->qw0008 = 0x00;
	((word32) sp + 88)->u1 = 0x00;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	Eq_45599 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x23;
		fn000000000001B2D0();
		goto l00000000000336A4;
	}
	x21 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w21;
	if (Test(ULT,C))
	{
		w8 = w21 << 1;
		x23.u1 = (word32) x23 + 1;
		sp.u0->b0058 = (byte) (byte) w8;
		if (x21 == 0x00)
			goto l0000000000033348;
	}
	else
	{
		x8.u1 = (word32) x21 + 16;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		Eq_45617 v75;
		v75.u0 = sp + 96;
		v75.u0->t0000.u1 = (size_t) x21;
		v75.u0->t0008.u1 = (size_t) x0;
		((word32) sp + 88)->u1 = x8;
	}
	x0 = x23;
	x1 = x22;
	Eq_14 x2 = x21;
	x0 = memcpy(x0, x1, x2);
l0000000000033348:
	*(x23 + x21) = (word64) 0x00;
	x0.u1 = sp + 0x50;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w21 = 0x00;
		Eq_14 v41;
		v41.u0 = sp.u0->b0058;
		w8.u1 = (word32) v41;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000033400;
		goto l0000000000033418;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_45675 v38;
	v38.u0 = sp + 64;
	v38.u0->t0000.u1 = (size_t) 0x00;
	v38.u0->t0008.u1 = (size_t) 0x00;
	((word32) sp + 56)->u1 = 0x00;
	x21 = *x8.u1;
	x0 = x21;
	x0 = strlen(x0);
	sp.u1 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
		x0.u1 = sp + 0x38;
		fn000000000001B2D0();
		goto l00000000000336B8;
	}
	x22 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x38;
		ui32 w22;
		w8 = w22 << 1;
		x23 = x9 | 0x01;
		sp.u0->b0038 = (byte) (byte) w8;
		if (x22 == 0x00)
			goto l00000000000333E0;
	}
	else
	{
		x8.u1 = x22 + 0x10;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		Eq_45716 v42;
		v42.u0 = sp + 64;
		v42->u0 = x22;
		((word32) v42 + 8)->u0 = x0;
		((word32) sp + 56)->u1 = x8;
	}
	x0 = x23;
	x1 = x21;
	x2 = x22;
	x0 = memcpy(x0, x1, x2);
l00000000000333E0:
	*(x23 + x22) = (word64) 0x00;
	x0.u1 = sp + 0x38;
	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
	Eq_14 v43;
	v43.u0 = sp.u0->b0038;
	w8.u1 = (word32) v43;
	w21 = w0;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_14 v44;
		v44.u0 = sp.u0->b0058;
		w8.u1 = (word32) v44;
		if ((w8 & 0x01) != 0x00)
		{
l0000000000033400:
			if ((w21 & 0x01) != 0x00)
				goto l0000000000033470;
			goto l0000000000033424;
		}
	}
	else
	{
		x0.u1 = sp.u0->t0048.u1;
		((real64) q0, x0, x1);
		Eq_14 v58;
		v58.u0 = sp.u0->b0058;
		w8.u1 = (word32) v58;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000033400;
	}
l0000000000033418:
	x0.u1 = sp.u0->t0068.u1;
	((real64) q0, x0, x1);
	if ((w21 & 0x01) == 0x00)
		goto l0000000000033470;
l0000000000033424:
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	x2.u0 = 0x00071000;
	Eq_14 x3;
	x3.u0 = 0x00052000;
	x2.u1 = (word32) x2 + 0x0118;
	x1 = *x8.u1;
	x3.u1 = (word32) x3 + 0x05EE;
	x0.u1 = sp + 0x70;
	ui32 w4 = 0x00 | 0x06;
	word64 x5 = 0x00;
	x21.u1 = sp + 0x70;
	_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
	x0.u1 = x21 + 0x08;
	x1.u0 = 0x00052000;
	x1.u1 = x1 + 660;
	ui32 w2 = 0x17;
	fn000000000001BB30();
	x0.u1 = sp + 0x70;
	LogCapture::~LogCapture();
	sp.u1 = sp + 0x08;
l0000000000033470:
	((word32) sp + 112)->u1 = 0x00;
	x21 = *x19.u1;
	w8 = *((word32) x19 + 8);
	x19 = *((word32) x20 + 8);
	w0 = 0x00 | 0x10;
	ui32 w20 = w8 - w21;
	_Znwm();
	x8.u0 = 0x0006F000;
	x8.u1 = x8 + 2520;
	x3 = x0;
	*x0.u1 = x8;
	Eq_45872 x4;
	x4.u0 = sp + 0x70;
	x0 = x19;
	x1 = x21;
	w2 = w20;
	rs2_update_firmware_cpp();
	x0.u1 = *((word32) sp + 112);
	fn000000000001ADF0();
	Eq_14 v53 = *((word32) x26 + 8);
	ui32 w10 = (word32) v53;
	Eq_14 x11 = *((word32) x26 + 24);
	w8 = *x26.u1;
	ptr64 x12 = (ptr64) ((word32) x26 + 9);
	w31 = w10 & 0x01;
	NZ.u0 = cond(w31);
	x20.u1 = Test(EQ,Z) ? x12 : x11;
	x9.u1 = sp + 0x18;
	x0 = x20;
	x21.u1 = x9 + 0x08;
	((word32) sp + 24)->u1 = w8;
	Eq_45909 v56;
	v56.u0 = sp + 40;
	v56->u0 = 0x00;
	((word32) v56 + 8)->u0 = 0x00;
	((word32) sp + 32)->u1 = 0x00;
	x0 = strlen(x0);
	sp.u1 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(ULT,C))
	{
		x19 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		ui32 w19;
		if (Test(ULT,C))
		{
			w8 = w19 << 1;
			x21.u1 = x21 + 0x01;
			((word32) sp + 32)->u1 = (byte) w8;
			if (x19 == 0x00)
				goto l0000000000033544;
		}
		else
		{
			x8.u1 = x19 + 0x10;
			x22 = x8 & ~0x0F;
			x0 = x22;
			_Znwm();
			x8 = x22 | 0x01;
			x21 = x0;
			Eq_45945 v60;
			v60.u0 = sp + 40;
			v60.u0->t0000.u1 = (size_t) x19;
			v60.u0->t0008.u1 = (size_t) x0;
			((word32) sp + 32)->u1 = x8;
		}
		x0 = x21;
		x1 = x20;
		x2 = x19;
		x0 = memcpy(x0, x1, x2);
l0000000000033544:
		*(x21 + x19) = (word64) 0x00;
		x0.u1 = sp + 0x18;
		((LEVELS) x0);
		if ((w0 & 0x01) == 0x00)
		{
			w19 = 0x00;
			Eq_14 v71;
			v71.u1 = *((word32) sp + 32);
			w8.u1 = (word32) v71;
			if ((w8 & 0x01) == 0x00)
				goto l00000000000335FC;
			goto l0000000000033614;
		}
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		Eq_46001 v59;
		v59.u0 = sp + 8;
		v59.u0->t0000.u1 = (size_t) 0x00;
		v59.u0->t0008.u1 = (size_t) 0x00;
		sp->u1 = 0x00;
		x19 = *x8.u1;
		x0 = x19;
		x0 = strlen(x0);
		sp.u1 = x0 + 0x10;
		NZCV.u0 = cond(sp);
		if (Test(ULT,C))
		{
			x20 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			if (Test(ULT,C))
			{
				x9.u1 = sp + 0x00;
				w8 = w20 << 1;
				x21 = x9 | 0x01;
				*sp.u2 = (char) (byte) w8;
				if (x20 == 0x00)
					goto l00000000000335DC;
			}
			else
			{
				x8.u1 = x20 + 0x10;
				x22 = x8 & ~0x0F;
				x0 = x22;
				_Znwm();
				x8 = x22 | 0x01;
				x21 = x0;
				Eq_46042 v61;
				v61.u0 = sp + 8;
				v61->u0 = x20;
				((word32) v61 + 8)->u0 = x0;
				sp->u1 = x8;
			}
			x0 = x21;
			x1 = x19;
			x2 = x20;
			x0 = memcpy(x0, x1, x2);
l00000000000335DC:
			*(x21 + x20) = (word64) 0x00;
			x0.u1 = sp + 0x00;
			_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
			Eq_14 v62;
			v62.u1 = *sp.u2;
			w8.u1 = (word32) v62;
			w19 = w0;
			if ((w8 & 0x01) != 0x00)
			{
				Eq_14 v63;
				v63.u1 = *((word32) sp + 32);
				w8.u1 = (word32) v63;
				if ((w8 & 0x01) != 0x00)
				{
l00000000000335FC:
					if ((w19 & 0x01) != 0x00)
						goto l000000000003366C;
l0000000000033620:
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					x2.u0 = 0x00071000;
					x3.u0 = 0x00052000;
					x2.u1 = x2 + 0x0118;
					x1 = *x8.u1;
					x3.u1 = x3 + 0x05EE;
					x0.u1 = sp + 0x70;
					w4 = 0x00 | 0x06;
					x5 = 0x00;
					x19.u1 = sp + 0x70;
					_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
					x0.u1 = x19 + 0x08;
					x1.u0 = 0x00052000;
					x1.u1 = x1 + 0x02AC;
					w2 = 0x14;
					fn000000000001BB30();
					x0.u1 = sp + 0x70;
					LogCapture::~LogCapture();
					sp.u1 = sp + 0x08;
l000000000003366C:
					x8 = *((word32) x25 + 40);
					x9 = *((word32) x29 - 88);
					Eq_46172 x31 = x8 - x9;
					NZCV.u0 = cond(x31);
					if (Test(EQ,Z))
					{
						sp.u1 = sp + 448;
						Eq_46182 v65;
						v65.u0 = sp + 80;
						x29.u1 = *v65;
						x30.u1 = *((word32) v65 + 8);
						Eq_46191 v66;
						v66.u0 = sp + 64;
						x20.u1 = *v66;
						x19.u1 = *((word32) v66 + 8);
						Eq_46200 v67;
						v67.u0 = sp + 48;
						x22.u1 = *v67;
						x21.u1 = *((word32) v67 + 8);
						Eq_46209 v68;
						v68.u0 = sp + 32;
						x24.u1 = *v68;
						x23.u1 = *((word32) v68 + 8);
						Eq_46218 v69;
						v69.u0 = sp + 16;
						x26.u1 = *v69;
						x25.u1 = *((word32) v69 + 8);
						x28.u1 = *sp;
						sp.u1 = sp + 96;
						return;
					}
l00000000000336AC:
					__stack_chk_fail();
				}
			}
			else
			{
				x0.u1 = *((word32) sp + 16);
				((real64) q0, x0, x1);
				Eq_14 v70;
				v70.u1 = *((word32) sp + 32);
				w8.u1 = (word32) v70;
				if ((w8 & 0x01) == 0x00)
					goto l00000000000335FC;
			}
l0000000000033614:
			x0.u1 = *((word32) sp + 48);
			((real64) q0, x0, x1);
			if ((w19 & 0x01) == 0x00)
				goto l000000000003366C;
			goto l0000000000033620;
		}
l00000000000336B8:
		x0.u1 = sp + 0x00;
		fn000000000001B2D0();
		x19 = x0;
		LogCapture::~LogCapture();
		sp.u1 = sp + 0x08;
		x0 = x19;
		_Unwind_Resume();
		byte v72 = sp.u0->b0038;
		w8.u1 = (word32) v72;
		x19 = x0;
		if ((w8 & 0x01) != 0x00)
		{
			x0.u1 = sp.u0->t0048.u1;
			((real64) q0, x0, x1);
			byte v73 = sp.u0->b0058;
			w8.u1 = (word32) v73;
			if ((w8 & 0x01) != 0x00)
				goto l0000000000033740;
		}
		else
		{
			byte v74 = sp.u0->b0058;
			w8.u1 = (word32) v74;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000033740;
		}
		x0.u1 = sp.u0->t0068.u1;
		((real64) q0, x0, x1);
l0000000000033740:
		x0 = x19;
		_Unwind_Resume();
		((<anonymous>) x0);
		return;
	}
l00000000000336A4:
	x0 = x21;
	fn000000000001B2D0();
	goto l00000000000336AC;
}

// 0000000000033748: void (Register Eq_6549 x0)
// Called from:
//      _ZN4rgbd6updateEN3rs213update_deviceENSt6__ndk16vectorIhNS2_9allocatorIhEEEE
void (Eq_6549 x0)
{
	word32 w0;
	struct Eq_46293 * fp;
	struct Eq_46293 * sp = fp;
	sp -= 0xB0;
	struct Eq_46298 * v6 = (struct Eq_46298 *) ((char *) &sp->t0048 + 8);
	Eq_14 x28;
	v6->t0000.u1 = (size_t) x28;
	ptr64 x27;
	v6->ptr0008 = x27;
	struct Eq_46309 * v9 = (struct Eq_46309 *) ((char *) &sp->t0048 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v9->t0008.u1 = (size_t) x25;
	struct Eq_46320 * v12 = (struct Eq_46320 *) ((char *) &sp->t0048 + 40);
	struct Eq_46322 * x24;
	v12->ptr0000 = x24;
	word64 x23;
	v12->qw0008 = x23;
	struct Eq_46331 * v15 = (struct Eq_46331 *) ((char *) &sp->t0048 + 56);
	Eq_14 x22;
	v15->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_46342 * v18 = (struct Eq_46342 *) ((char *) &sp->t0048 + 72);
	word64 x20;
	v18->qw0000 = x20;
	word64 x19;
	v18->qw0008 = x19;
	struct Eq_46353 * v21 = (struct Eq_46353 *) ((char *) &sp->t0048 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0048 + 88;
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x24->t0028.u1;
	sp->t0048.u1 = (size_t) x8;
	x8.u1 = &sp->t0038.u0;
	fn000000000001BF10();
	x0.u1 = sp->t0038.u1;
	sp->t0020.u1 = (size_t) 0x00;
	Eq_14 x1;
	x1.u1 = &sp->t0020.u0;
	rs2_get_device_count();
	word32 w19 = w0;
	x0.u1 = sp->t0020.u1;
	fn000000000001ADF0();
	ui32 w2;
	Eq_14 x9;
	Eq_46499 NZCV;
	bool Z;
	if (w19 != 0x00)
	{
		x0.u0 = 0x00070000;
		x0 = *((word32) x0 + 3832);
		x1.u0 = 0x00052000;
		x1.u1 = (word32) x1 + 736;
		w2 = 0x12;
		fn000000000001BB30();
		x0.u1 = sp->t0038.u1;
		sp->t0020.u1 = (size_t) 0x00;
		x1.u1 = &sp->t0020.u0;
		rs2_get_device_count();
		w19 = w0;
		x0.u1 = sp->t0020.u1;
		fn000000000001ADF0();
		if (w19 != 0x00)
		{
			x21.u0 = 0x00070000;
			x25.u0 = 0x00070000;
			x21 = *((word32) x21 + 3832);
			x25 = *((word32) x25 + 0x0DC0);
			x22.u0 = 0x00052000;
			word32 w1 = 0x00;
			word32 w20 = 0x00;
			x26.u0 = 0x00;
			x22.u1 = (word32) x22 + 755;
			x27 = (ptr64) ((word32) x25 + 16);
			do
			{
				x8.u1 = &sp->t0020.u0;
				x0.u1 = &sp->t0038.u0;
				fn000000000001BD80();
				++w20;
				x0 = x21;
				w1 = w20;
				fn000000000001B5B0();
				w2 = 0x00 | 0x02;
				x1 = x22;
				fn000000000001BB30();
				struct Eq_46522 * v31 = (struct Eq_46522 *) ((char *) &sp->t0020 + 8);
				x8.u1 = v31->t0000.u1;
				x23 = v31->qw0008;
				struct Eq_46531 * v32 = (struct Eq_46531 *) &sp->t0008.u0;
				v32->qw0000 = x27;
				v32->t0008.u1 = (size_t) x8;
				sp->qw0018 = x23;
				if (x23 != 0x00)
				{
					x8 = x23 + 0x08;
					Eq_14 w10;
					do
					{
						union Eq_3183 * v34 = &*x8.u1;
						x9 = __load_exclusive<word64>(v34);
						x9.u1 = (word32) x9 + 1;
						union Eq_3192 * v35 = &*x8.u1;
						w10 = __store_exclusive<word64>(v35, x9);
					} while (w10 != 0x00);
				}
				x0.u1 = &sp->t0008.u0;
				fn000000000001B050();
				x28.u1 = (word32) x25 + 16;
				sp->t0008.u1 = (size_t) x28;
				if (x23 != 0x00)
					x8 = x23 + 0x08;
				x23 = sp->qw0030;
				sp->t0020.u1 = (size_t) x28;
				if (x23 != 0x00)
					x8 = x23 + 0x08;
				x1.u1 = (word32) x26 + 1;
				NZCV.u0 = cond(w19 - w1);
				x26 = __bfm<word64>(x26, x1, 0, 31);
			} while (Test(NE,Z));
		}
	}
	else
	{
		x0.u0 = 0x00070000;
		x0 = *((word32) x0 + 3832);
		x1.u0 = 0x00052000;
		x1.u1 = (word32) x1 + 705;
		w2 = 0x00 | 0x1E;
		fn000000000001BB30();
	}
	x19 = sp->qw0040;
	if (x19 == 0x00)
	{
		x8.u1 = x24->t0028.u1;
		x9.u1 = sp->t0048.u1;
		ptr64 x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_46560 * v40 = (struct Eq_46560 *) ((char *) &sp->t0048 + 88);
			x29 = v40->ptr0000;
			x30 = v40->qw0008;
			struct Eq_46569 * v41 = (struct Eq_46569 *) ((char *) &sp->t0048 + 72);
			x20 = v41->qw0000;
			x19 = v41->qw0008;
			struct Eq_46578 * v42 = (struct Eq_46578 *) ((char *) &sp->t0048 + 56);
			x22.u1 = v42->t0000.u1;
			x21.u1 = v42->t0008.u1;
			struct Eq_46587 * v43 = (struct Eq_46587 *) ((char *) &sp->t0048 + 40);
			x24 = v43->ptr0000;
			x23 = v43->qw0008;
			struct Eq_46596 * v44 = (struct Eq_46596 *) ((char *) &sp->t0048 + 24);
			x26.u1 = v44->t0000.u1;
			x25.u1 = v44->t0008.u1;
			struct Eq_46605 * v45 = (struct Eq_46605 *) ((char *) &sp->t0048 + 8);
			x28.u1 = v45->t0000.u1;
			x27 = v45->ptr0008;
			sp = (struct Eq_46293 *) ((char *) &sp->t0048 + 0x0068);
		}
	}
	else
		x8 = x19 + 0x08;
}

// 0000000000033A40: void is<rs2::update_device>::(Register bool x0)
void is<rs2::update_device>::(bool x0)
{
	bool Z;
	struct Eq_46616 * fp;
	struct Eq_46616 * sp = fp;
	sp -= 0x70;
	struct Eq_46621 * v6 = (struct Eq_46621 *) (&sp->ptr0020 + 4);
	ptr64 x22;
	v6->ptr0000 = x22;
	word64 x21;
	v6->qw0008 = x21;
	struct Eq_46632 * v9 = (struct Eq_46632 *) (&sp->ptr0020 + 6);
	struct Eq_46634 * x20;
	v9->ptr0000 = x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_46643 * v12 = (struct Eq_46643 *) (&sp->ptr0020 + 8);
	struct Eq_46645 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_46645 *) (&sp->ptr0020 + 8);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x20->t0028.u1;
	x19.u0 = 0x00070000;
	x19 = *((word32) x19 + 0x0DC0);
	x29->tFFFFFFD8.u1 = (size_t) x8;
	x8.u1 = x0->t0008.u1;
	Eq_14 x9;
	x9.u1 = (word32) x19 + 16;
	struct Eq_46677 * v17 = (struct Eq_46677 *) &sp->ptr0008;
	v17->t0000.u1 = (size_t) x9;
	v17->t0008.u1 = (size_t) x8;
	x8.u1 = x0->t0010.u1;
	sp->t0018.u1 = (size_t) x8;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v18 = &*x8.u1;
			x9 = __load_exclusive<word64>(v18);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v19 = &*x8.u1;
			w10 = __store_exclusive<word64>(v19, x9);
		} while (w10 != 0x00);
	}
	x0 = (struct Eq_46669 *) &sp->ptr0020;
	ptr64 x1 = &sp->ptr0008;
	fn000000000001BC20();
	x22 = (ptr64) ((word32) x19 + 16);
	x19.u1 = sp->t0018.u1;
	sp->ptr0008 = x22;
	if (x19 == 0x00)
	{
		struct Eq_46731 * v22 = (struct Eq_46731 *) (&sp->ptr0020 + 1);
		x21 = v22->qw0000;
		x19.u1 = v22->t0008.u1;
		sp->ptr0020 = x22;
		if (x19 == 0x00)
		{
			x8.u1 = x20->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			Eq_46754 NZCV;
			NZCV.u0 = cond(x21 - 0x00);
			word32 w0 = (word32) Test(NE,Z);
			int64 x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				struct Eq_46770 * v27 = (struct Eq_46770 *) (&sp->ptr0020 + 8);
				x29 = v27->ptr0000;
				x30 = v27->qw0008;
				struct Eq_46779 * v28 = (struct Eq_46779 *) (&sp->ptr0020 + 6);
				x20 = v28->ptr0000;
				x19.u1 = v28->t0008.u1;
				struct Eq_46788 * v29 = (struct Eq_46788 *) (&sp->ptr0020 + 4);
				x22 = v29->ptr0000;
				x21 = v29->qw0008;
				sp = &sp->ptr0020 + 0x0A;
			}
		}
		else
			x8.u1 = (word32) x19 + 8;
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 0000000000033B98: void update_device::update_device(Register Eq_46798 x0)
void update_device::update_device(Eq_46798 x0)
{
	word64 x1;
	struct Eq_46799 * fp;
	struct Eq_46799 * sp = fp;
	sp -= 0x50;
	Eq_14 x23;
	sp->t0010.u1 = (size_t) x23;
	struct Eq_46808 * v7 = (struct Eq_46808 *) ((char *) &sp->t0010 + 16);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	struct Eq_46814 * x21;
	v7->ptr0008 = x21;
	struct Eq_46819 * v10 = (struct Eq_46819 *) ((char *) &sp->t0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_46830 * v13 = (struct Eq_46830 *) ((char *) &sp->t0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->t0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x21->t0028.u1;
	x19 = x0;
	sp->t0008.u1 = (size_t) x8;
	struct Eq_46856 * v18 = x1 + 8;
	x8.u1 = v18->t0000.u1;
	x20.u1 = v18->t0008.u1;
	Eq_14 x9;
	if (x20 == 0x00)
	{
		x9.u0 = 0x00070000;
		x9 = *((word32) x9 + 0x0DC0);
		x23 = x19;
		x22 = x19;
		x9.u1 = (word32) x9 + 16;
		*x19.u1 = x9;
		x23.u1 = (word32) x23 + 8;
		*x23.u1 = x8;
		x22.u1 = (word32) x22 + 16;
		x22.u1->u0 = 0x00;
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3744);
		x8.u1 = (word32) x8 + 16;
		*x19.u1 = x8;
		sp->t0000.u1 = (size_t) 0x00;
		x0 = *((word32) x19 + 8);
		word32 w1 = 0x26;
		word64 * x2 = (word64 *) &sp->t0000.u0;
		rs2_is_device_extendable_to();
		word32 w0;
		if (w0 == 0x00)
		{
			x8.u1 = sp->t0000.u1;
			if (x8 == 0x00)
			{
				x23.u1->u1 = 0x00;
				x20 = *((word32) x19 + 16);
				((word32) x19 + 16)->u0 = 0x00;
				if (x20 != 0x00)
					x8.u1 = (word32) x20 + 8;
			}
		}
		x0.u1 = sp->t0000.u1;
		fn000000000001ADF0();
		x8.u1 = x21->t0028.u1;
		x9.u1 = sp->t0008.u1;
		int64 x31 = x8 - x9;
		Eq_46982 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_47010 * v33 = (struct Eq_47010 *) ((char *) &sp->t0010 + 48);
			x29 = v33->ptr0000;
			x30 = v33->qw0008;
			struct Eq_47019 * v34 = (struct Eq_47019 *) ((char *) &sp->t0010 + 32);
			x20.u1 = v34->t0000.u1;
			x19.u1 = v34->t0008.u1;
			struct Eq_47028 * v35 = (struct Eq_47028 *) ((char *) &sp->t0010 + 16);
			x22.u1 = v35->t0000.u1;
			x21 = v35->ptr0008;
			x23.u1 = sp->t0010.u1;
			sp = (struct Eq_46799 *) ((char *) &sp->t0010 + 64);
		}
	}
	else
	{
		x9.u1 = (word32) x20 + 8;
		Eq_14 x10;
		Eq_14 w11;
		do
		{
			union Eq_3183 * v21 = &*x9.u1;
			x10 = __load_exclusive<word64>(v21);
			x10.u1 = (word32) x10 + 1;
			union Eq_3192 * v22 = &*x9.u1;
			w11 = __store_exclusive<word64>(v22, x10);
		} while (w11 != 0x00);
		x10.u0 = 0x00070000;
		x10 = *((word32) x10 + 0x0DC0);
		x23 = x19;
		x22 = x19;
		x10.u1 = (word32) x10 + 16;
		*x19.u1 = x10;
		x23.u1 = (word32) x23 + 8;
		*x23.u1 = x8;
		x22.u1 = (word32) x22 + 16;
		*x22.u1 = x20;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v24 = &*x9.u1;
			x8 = __load_exclusive<word64>(v24);
			x8.u1 = (word32) x8 + 1;
			union Eq_3192 * v25 = &*x9.u1;
			w10 = __store_exclusive<word64>(v25, x8);
		} while (w10 != 0x00);
	}
}

// 0000000000033D54: void device::~device()
void device::~device()
{
	word64 * fp;
	word64 * sp = fp;
	sp += -4;
	word64 x19;
	*sp = x19;
	struct Eq_47050 * v7 = (struct Eq_47050 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_47063 * x0;
	x19 = x0->qw0010;
	x8 = *((word32) x8 + 0x0DC0);
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x19 == 0x00)
	{
		struct Eq_47078 * v10 = (struct Eq_47078 *) (sp + 2);
		x29 = v10->ptr0000;
		x30 = v10->qw0008;
		x19 = *sp;
		sp += 4;
	}
	else
		x8 = x19 + 0x08;
}

// 0000000000033DBC: void is<rs2::updatable>::(Register bool x0)
void is<rs2::updatable>::(bool x0)
{
	bool Z;
	struct Eq_47094 * fp;
	struct Eq_47094 * sp = fp;
	sp -= 0x70;
	struct Eq_47099 * v6 = (struct Eq_47099 *) (&sp->ptr0020 + 4);
	ptr64 x22;
	v6->ptr0000 = x22;
	word64 x21;
	v6->qw0008 = x21;
	struct Eq_47110 * v9 = (struct Eq_47110 *) (&sp->ptr0020 + 6);
	struct Eq_47112 * x20;
	v9->ptr0000 = x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_47121 * v12 = (struct Eq_47121 *) (&sp->ptr0020 + 8);
	struct Eq_47123 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_47123 *) (&sp->ptr0020 + 8);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x20->t0028.u1;
	x19.u0 = 0x00070000;
	x19 = *((word32) x19 + 0x0DC0);
	x29->tFFFFFFD8.u1 = (size_t) x8;
	x8.u1 = x0->t0008.u1;
	Eq_14 x9;
	x9.u1 = (word32) x19 + 16;
	struct Eq_47155 * v17 = (struct Eq_47155 *) &sp->ptr0008;
	v17->t0000.u1 = (size_t) x9;
	v17->t0008.u1 = (size_t) x8;
	x8.u1 = x0->t0010.u1;
	sp->t0018.u1 = (size_t) x8;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v18 = &*x8.u1;
			x9 = __load_exclusive<word64>(v18);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v19 = &*x8.u1;
			w10 = __store_exclusive<word64>(v19, x9);
		} while (w10 != 0x00);
	}
	x0 = (struct Eq_47147 *) &sp->ptr0020;
	ptr64 x1 = &sp->ptr0008;
	fn000000000001BFB0();
	x22 = (ptr64) ((word32) x19 + 16);
	x19.u1 = sp->t0018.u1;
	sp->ptr0008 = x22;
	if (x19 == 0x00)
	{
		struct Eq_47210 * v22 = (struct Eq_47210 *) (&sp->ptr0020 + 1);
		x21 = v22->qw0000;
		x19.u1 = v22->t0008.u1;
		sp->ptr0020 = x22;
		if (x19 == 0x00)
		{
			x8.u1 = x20->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			Eq_47233 NZCV;
			NZCV.u0 = cond(x21 - 0x00);
			word32 w0 = (word32) Test(NE,Z);
			int64 x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				struct Eq_47249 * v27 = (struct Eq_47249 *) (&sp->ptr0020 + 8);
				x29 = v27->ptr0000;
				x30 = v27->qw0008;
				struct Eq_47258 * v28 = (struct Eq_47258 *) (&sp->ptr0020 + 6);
				x20 = v28->ptr0000;
				x19.u1 = v28->t0008.u1;
				struct Eq_47267 * v29 = (struct Eq_47267 *) (&sp->ptr0020 + 4);
				x22 = v29->ptr0000;
				x21 = v29->qw0008;
				sp = &sp->ptr0020 + 0x0A;
			}
		}
		else
			x8.u1 = (word32) x19 + 8;
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 0000000000033F14: define _ZNK3rs26device2asINS_9updatableEEET_v
define _ZNK3rs26device2asINS_9updatableEEET_v
{
	Eq_14 x0;
	struct Eq_47277 * fp;
	struct Eq_47277 * sp = fp;
	sp -= 0x40;
	struct Eq_47282 * v6 = (struct Eq_47282 *) ((char *) &sp->t0018 + 8);
	struct Eq_47284 * x20;
	v6->ptr0000 = x20;
	Eq_14 x19;
	v6->t0008.u1 = (size_t) x19;
	struct Eq_47293 * v9 = (struct Eq_47293 *) ((char *) &sp->t0018 + 24);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 24;
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9 = x0;
	Eq_14 x8;
	x0 = x8;
	x8.u1 = x20->t0028.u1;
	x19.u0 = 0x00070000;
	x19 = *((word32) x19 + 0x0DC0);
	sp->t0018.u1 = (size_t) x8;
	x8 = *((word32) x9 + 8);
	Eq_14 x10;
	x10.u1 = (word32) x19 + 16;
	struct Eq_47277 * v15 = sp;
	v15->t0000.u1 = (size_t) x10;
	v15->t0008.u1 = (size_t) x8;
	x8 = *((word32) x9 + 16);
	sp->t0010.u1 = (size_t) x8;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v16 = &*x8.u1;
			x9 = __load_exclusive<word64>(v16);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v17 = &*x8.u1;
			w10 = __store_exclusive<word64>(v17, x9);
		} while (w10 != 0x00);
	}
	ptr64 x1 = &sp->t0000.u0;
	fn000000000001BFB0();
	x8.u1 = (word32) x19 + 16;
	x19.u1 = sp->t0010.u1;
	sp->t0000.u1 = (size_t) x8;
	if (x19 == 0x00)
	{
		x8.u1 = x20->t0028.u1;
		x9.u1 = sp->t0018.u1;
		int64 x31 = x8 - x9;
		Eq_47385 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_47395 * v23 = (struct Eq_47395 *) ((char *) &sp->t0018 + 24);
			x29 = v23->ptr0000;
			x30 = v23->qw0008;
			struct Eq_47404 * v24 = (struct Eq_47404 *) ((char *) &sp->t0018 + 8);
			x20 = v24->ptr0000;
			x19.u1 = v24->t0008.u1;
			sp = (struct Eq_47277 *) ((char *) &sp->t0018 + 40);
		}
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 0000000000034024: void (Register Eq_47414 x0, Register Eq_47415 x1, Register (ptr64 char) x2)
void (Eq_47414 x0, Eq_47415 x1, char * x2)
{
	Eq_47417 fp;
	Eq_47417 sp = fp;
	sp.u1 = (word32) sp - 96;
	word64 x28;
	sp.u2->u1 = x28;
	struct Eq_47426 * v7 = (struct Eq_47426 *) ((word32) sp + 16);
	ui64 x26;
	v7->qw0000 = x26;
	Eq_14 x25;
	v7->t0008.u1 = (size_t) x25;
	struct Eq_47437 * v10 = (struct Eq_47437 *) ((word32) sp + 32);
	struct Eq_47439 * x24;
	v10->ptr0000 = x24;
	Eq_14 x23;
	v10->t0008.u1 = (size_t) x23;
	struct Eq_47448 * v13 = (struct Eq_47448 *) ((word32) sp + 48);
	Eq_14 x22;
	v13->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v13->t0008.u1 = (size_t) x21;
	struct Eq_47459 * v16 = (struct Eq_47459 *) &sp.u3->t0040.u0;
	Eq_14 x20;
	v16->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v16->t0008.u1 = (size_t) x19;
	struct Eq_47470 * v19 = (struct Eq_47470 *) &sp.u3->t0050.u0;
	struct Eq_47472 * x29;
	v19->ptr0000 = x29;
	Eq_14 x30;
	v19->t0008.u1 = (size_t) x30;
	x29 = (struct Eq_47472 *) &sp.u3->t0050.u0;
	sp -= 464;
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x24->t0028.u1;
	Eq_14 x3;
	x19 = x3;
	x21 = x1;
	x20 = x2;
	x29->tFFFFFFA8.u1 = (size_t) x8;
	struct Eq_47499 * v27 = (struct Eq_47499 *) ((word32) x1 + 0x0C);
	ui32 w22 = v27->dw0000;
	ui32 w25 = v27->dw0004;
	_ZNSt6__ndk16chrono12system_clock3nowEv();
	x8.u0 = 0xF7CF;
	Eq_14 x9;
	x9.u0 = 13531;
	x8 = SEQ(SLICE(x8, word32, 32), ~0x1CAC, (word16) x8);
	x9 = SEQ(SLICE(x9, word32, 32), 55222, (word16) x9);
	x8 = SEQ(SLICE(x8, word16, 48), ~0x645A, (word32) x8);
	x9 = SEQ(SLICE(x9, word16, 48), 56962, (word32) x9);
	x8 = SEQ(8388, (word48) x8);
	x9 = SEQ(17179, (word48) x9);
	x8.u1 = SLICE(x0 *s128 x8, int64, 64);
	x9.u1 = SLICE(x0 *s128 x9, int64, 64);
	uint64 x12 = x8 >> 63;
	x8 >>= 7;
	int64 x13 = x9 >> 18;
	Eq_14 w10;
	w10.u0 = ~0x03E7;
	ui32 w11 = 0x4240;
	Eq_14 w8;
	word32 w12;
	w8.u1 = (char *) w8.u1 + w12;
	x9 = x13 + (x9 >> 63);
	w11 = SEQ(0x0F, (word16) w11);
	ui32 w9;
	w8.u1 = (char *) w8.u1 + w9 * w10;
	w8 *= w11;
	Eq_14 v37 = x19;
	v37.u1->u1 = w9;
	*((word32) v37 + 4) = w8;
	x8 = *((word32) x21 + 8);
	Eq_14 x11;
	x11.u1 = (word32) x21 + 65;
	x0.u1 = (word32) x19 + 64;
	*((word32) x19 + 8) = x8;
	x8 = *((word32) x21 + 16);
	*((word32) x19 + 16) = x8;
	w8 = *((word32) x21 + 24);
	*((word32) x19 + 24) = w8;
	w8 = *((word32) x21 + 28);
	*((word32) x19 + 28) = w8;
	x8 = *((word32) x21 + 32);
	*((word32) x19 + 32) = x8;
	w8 = *((word32) x21 + 40);
	*((word32) x19 + 40) = w8;
	w8 = *((word32) x21 + 44);
	*((word32) x19 + 44) = w8;
	w8 = *((word32) x21 + 48);
	*((word32) x19 + 48) = w8;
	w8 = *((word32) x21 + 52);
	*((word32) x19 + 52) = w8;
	w8 = *((word32) x21 + 56);
	*((word32) x19 + 56) = w8;
	byte v39 = (byte) *((word32) x21 + 64);
	w8.u1 = (word32) v39;
	x9 = *((word32) x21 + 72);
	uint64 x10 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_47652 NZ;
	NZ.u0 = cond(w31);
	bool Z;
	x8.u1 = Test(EQ,Z) ? x10 : x9;
	*((word32) x19 + 60) = w8;
	byte v46 = (byte) *((word32) x21 + 64);
	w8.u1 = (word32) v46;
	struct Eq_47666 * v47 = (struct Eq_47666 *) ((word32) x21 + 72);
	x9.u1 = v47->qw0000;
	x10 = v47->qw0008;
	x12 = x8 >> 1;
	w31 = w8 & 0x01;
	NZ.u0 = cond(w31);
	x1.u1 = Test(EQ,Z) ? x11 : x10;
	x2.u1 = Test(EQ,Z) ? x12 : x9;
	x0 = memcpy(x0, x1, x2);
	byte v48 = (byte) *((word32) x21 + 64);
	w8.u1 = (word32) v48;
	x9 = *((word32) x21 + 72);
	x10 = x8 >> 1;
	w31 = w8 & 0x01;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	x26 = Test(EQ,Z) ? x10 : x9;
	x8.u1 = (word32) sp + 0x0080;
	x0 = x20;
	fn000000000001ADB0();
	x0.u1 = *((word32) sp + 0x0080);
	((word32) sp + 0x0078)->u1 = 0x00;
	x1.u1 = (word32) sp + 0x0078;
	rs2_get_frame_data();
	x23 = x0;
	x0.u1 = *((word32) sp + 0x0078);
	fn000000000001ADF0();
	x8 = 0x00 | 0x4000000000;
	ui32 w21 = w25 * w22;
	x8.u1 = x8 + (x26 << 32);
	x25 = x8 >> 32;
	x22 = x21 << 1;
	x0.u1 = x19 + x25;
	x1 = x23;
	x2 = x22;
	x0 = memcpy(x0, x1, x2);
	x0.u1 = *((word32) sp + 0x0080);
	if (x0 != 0x00)
		rs2_release_frame();
	x8.u1 = (word32) sp + 0x0080;
	ui32 w1 = 0x00 | 0x01;
	x0 = x20;
	fn000000000001B1E0();
	x0.u1 = *((word32) sp + 0x0080);
	((word32) sp + 0x0078)->u1 = 0x00;
	x1.u1 = (word32) sp + 0x0078;
	rs2_get_frame_data();
	x20 = x0;
	x0.u1 = *((word32) sp + 0x0078);
	fn000000000001ADF0();
	w8 = w25 + w22;
	x0.u1 = (char *) x19.u1 + (int64) w8;
	x1 = x20;
	x2 = x21;
	x0 = memcpy(x0, x1, x2);
	x0.u1 = *((word32) sp + 0x0080);
	if (x0 != 0x00)
		rs2_release_frame();
	x8.u0 = 0x00071000;
	x8.u1 = x8 + 0x0118;
	x9.u1 = (word32) sp + 32;
	x21.u1 = x9 + 0x08;
	Eq_14 v51 = *((word32) x8 + 8);
	w9 = (word32) v51;
	x11 = *((word32) x8 + 24);
	w10 = *x8.u1;
	x8.u1 = x8 + 0x09;
	w31 = w9 & 0x01;
	NZ.u0 = cond(w31);
	x20.u1 = Test(EQ,Z) ? x8 : x11;
	x0 = x20;
	((word32) sp + 32)->u6 = w10;
	struct Eq_47818 * v52 = (struct Eq_47818 *) ((word32) sp + 48);
	v52->qw0000 = 0x00;
	v52->qw0008 = 0x00;
	((word32) sp + 40)->u1 = 0x00;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	Eq_47838 NZCV;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
		x0 = x21;
		fn000000000001B2D0();
		goto l00000000000343F8;
	}
	x19 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w19;
	if (Test(ULT,C))
	{
		w8 = w19 << 1;
		x21.u1 = x21 + 0x01;
		((word32) sp + 40)->u6 = (byte) w8;
		if (x19 == 0x00)
			goto l0000000000034290;
	}
	else
	{
		x8.u1 = x19 + 0x10;
		x22 = x8 & ~0x0F;
		x0 = x22;
		_Znwm();
		x8 = x22 | 0x01;
		x21 = x0;
		Eq_47857 v58 = (Eq_47857) ((word32) sp + 48);
		v58->t0000.u2 = (union Eq_108152 *) x19;
		*((char *) &v58->t0000 + 8) = (Eq_47857) x0;
		((word32) sp + 40)->u6 = x8;
	}
	x0 = x21;
	x1 = x20;
	x2 = x19;
	x0 = memcpy(x0, x1, x2);
l0000000000034290:
	*(x21 + x19) = (word64) 0x00;
	x0.u1 = (word32) sp + 32;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w19 = 0x00;
		Eq_14 v84;
		v84.u1 = *((word32) sp + 40);
		w8.u1 = (word32) v84;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000034348;
		goto l0000000000034360;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_47962 v60 = (Eq_47962) ((word32) sp + 16);
	v60->t0000.u2 = (union Eq_108152 *) 0x00;
	*((char *) &v60->t0000 + 8) = (Eq_47962) 0x00;
	sp.u3->t0008.u1 = (size_t) 0x00;
	x19 = *x8.u1;
	x0 = x19;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	ui32 w20;
	ui32 w4;
	word64 x5;
	ui32 w2;
	word128 q0;
	if (Test(ULT,C))
	{
		x20 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = &sp.u3->t0008.u0;
			w8 = w20 << 1;
			x21 = x9 | 0x01;
			sp.u3->t0008.u0 = (byte) (byte) w8;
			if (x20 == 0x00)
				goto l0000000000034328;
		}
		else
		{
			x8.u1 = (word32) x20 + 16;
			x22 = x8 & ~0x0F;
			x0 = x22;
			_Znwm();
			x8 = x22 | 0x01;
			x21 = x0;
			Eq_48019 v83;
			v83.u1 = (word32) sp + 16;
			v83.u3->t0000.u2 = (union Eq_108152 *) x20;
			v83.u3->t0008.u1 = (size_t) x0;
			sp.u3->t0008.u1 = (size_t) x8;
		}
		x0 = x21;
		x1 = x19;
		x2 = x20;
		x0 = memcpy(x0, x1, x2);
l0000000000034328:
		*(x21 + x20) = (word64) 0x00;
		x0.u1 = &sp.u3->t0008.u0;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v62;
		v62.u0 = sp.u3->t0008.u0;
		w8.u1 = (word32) v62;
		w19 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v63;
			v63.u1 = *((word32) sp + 40);
			w8.u1 = (word32) v63;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000034348:
				if ((w19 & 0x01) != 0x00)
					goto l00000000000343B8;
l000000000003436C:
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				x2.u0 = 0x00071000;
				x3.u0 = 0x00052000;
				x2.u1 = (word32) x2 + 0x0118;
				x1 = *x8.u1;
				x3.u1 = (word32) x3 + 0x05EE;
				x0.u1 = (word32) sp + 0x0080;
				w4 = 0x00 | 0x06;
				x5 = 0x00;
				x19.u1 = (word32) sp + 0x0080;
				_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
				x0.u1 = (word32) x19 + 8;
				x1.u0 = 0x00052000;
				x1.u1 = (word32) x1 + 1201;
				w2 = 0x0A;
				fn000000000001BB30();
				x0.u1 = (word32) sp + 0x0080;
				LogCapture::~LogCapture();
				sp.u1 = &sp.u3->t0008.u0;
l00000000000343B8:
				w0 = 0x00 | 0x01;
				goto l00000000000343BC;
			}
		}
		else
		{
			x0.u1 = *((word32) sp + 24);
			((real64) q0, x0, x1);
			Eq_14 v82;
			v82.u1 = *((word32) sp + 40);
			w8.u1 = (word32) v82;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000034348;
		}
l0000000000034360:
		x0.u1 = *((word32) sp + 56);
		((real64) q0, x0, x1);
		if ((w19 & 0x01) == 0x00)
			goto l00000000000343B8;
		goto l000000000003436C;
	}
l00000000000343F8:
	x0.u1 = &sp.u3->t0008.u0;
	fn000000000001B2D0();
	x19 = x0;
	LogCapture::~LogCapture();
	sp.u1 = &sp.u3->t0008.u0;
	x0 = x19;
	_Unwind_Resume();
	Eq_14 v55;
	v55.u0 = sp.u3->t0008.u0;
	w8.u1 = (word32) v55;
	x19 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = *((word32) sp + 24);
		((real64) q0, x0, x1);
		Eq_14 v57;
		v57.u1 = *((word32) sp + 40);
		w8.u1 = (word32) v57;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000034460;
	}
	else
	{
		Eq_14 v85;
		v85.u1 = *((word32) sp + 40);
		w8.u1 = (word32) v85;
		if ((w8 & 0x01) != 0x00)
			goto l0000000000034460;
	}
l0000000000034468:
	x0.u1 = *((word32) sp + 56);
	((real64) q0, x0, x1);
	x0 = x19;
	_Unwind_Resume();
	x8.u1 = *((word32) sp + 0x0080);
	x20 = x1;
	x19 = x0;
	if (x8 != 0x00)
	{
		x0 = x8;
		rs2_release_frame();
	}
	NZCV.u0 = cond(w20 - 0x01);
	if (Test(NE,Z))
	{
l0000000000034460:
		x0 = x19;
		_Unwind_Resume();
		goto l0000000000034468;
	}
	x0 = x19;
	__cxa_begin_catch();
	x8.u0 = 0x00071000;
	x8.u1 = (word32) x8 + 376;
	x9.u1 = (word32) sp + 88;
	x22.u1 = (word32) x9 + 8;
	Eq_14 v64 = *((word32) x8 + 8);
	w9 = (word32) v64;
	x11 = *((word32) x8 + 24);
	w10 = *x8.u1;
	x8.u1 = (word32) x8 + 9;
	w31 = w9 & 0x01;
	NZ.u0 = cond(w31);
	x21.u1 = Test(EQ,Z) ? x8 : x11;
	x19 = x0;
	x0 = x21;
	((word32) sp + 88)->u6 = w10;
	Eq_48186 v65;
	v65.u1 = (word32) sp + 0x0068;
	v65.u3->t0000.u2 = (union Eq_108152 *) 0x00;
	v65.u3->t0008.u1 = (size_t) 0x00;
	sp.u3->t0060.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
		x0 = x22;
		fn000000000001B2D0();
		goto l00000000000346C0;
	}
	x20 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		w8 = w20 << 1;
		x22.u1 = (word32) x22 + 1;
		sp.u3->t0060.u0 = (byte) (byte) w8;
		if (x20 == 0x00)
			goto l0000000000034558;
	}
	else
	{
		x8.u1 = (word32) x20 + 16;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		Eq_48222 v81;
		v81.u1 = (word32) sp + 0x0068;
		v81.u1->u4 = x20;
		((word32) v81 + 8)->u4 = x0;
		sp.u3->t0060.u1 = (size_t) x8;
	}
	x0 = x22;
	x1 = x21;
	x2 = x20;
	x0 = memcpy(x0, x1, x2);
l0000000000034558:
	*(x22 + x20) = (word64) 0x00;
	x0.u1 = (word32) sp + 88;
	((LEVELS) x0);
	if ((w0 & 0x01) == 0x00)
	{
		w20 = 0x00;
		Eq_14 v80;
		v80.u0 = sp.u3->t0060.u0;
		w8.u1 = (word32) v80;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000034610;
		goto l0000000000034628;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_48332 v72;
	v72.u1 = (word32) sp + 72;
	v72.u1->u1 = 0x00;
	((word32) v72 + 8)->u1 = 0x00;
	sp.u3->t0040.u1 = 0x00;
	x20 = *x8.u1;
	x0 = x20;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	if (Test(ULT,C))
	{
		x21 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = &sp.u3->t0040.u0;
			w8 = w21 << 1;
			x22 = x9 | 0x01;
			sp.u3->t0040.u0 = (byte) (byte) w8;
			if (x21 == 0x00)
				goto l00000000000345F0;
		}
		else
		{
			x8.u1 = (word32) x21 + 16;
			x23 = x8 & ~0x0F;
			x0 = x23;
			_Znwm();
			x8 = x23 | 0x01;
			x22 = x0;
			Eq_48376 v75;
			v75.u1 = (word32) sp + 72;
			v75.u1->u5 = x21;
			v75.u2->t0008.u1 = (size_t) x0;
			sp.u3->t0040.u1 = (size_t) x8;
		}
		x0 = x22;
		x1 = x20;
		x2 = x21;
		x0 = memcpy(x0, x1, x2);
l00000000000345F0:
		*(x22 + x21) = (word64) 0x00;
		x0.u1 = &sp.u3->t0040.u0;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v73;
		v73.u0 = sp.u3->t0040.u0;
		w8.u1 = (word32) v73;
		w20 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v74;
			v74.u0 = sp.u3->t0060.u0;
			w8.u1 = (word32) v74;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000034610:
				if ((w20 & 0x01) != 0x00)
					goto l00000000000346AC;
l0000000000034634:
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				x1 = *x8.u1;
				x2.u0 = 0x00071000;
				x3.u0 = 0x00052000;
				x2.u1 = (word32) x2 + 376;
				x3.u1 = (word32) x3 + 0x05EE;
				x0.u1 = (word32) sp + 0x0080;
				w4 = 0x00 | 0x06;
				x5 = 0x00;
				x20.u1 = (word32) sp + 0x0080;
				_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
				x0.u1 = (word32) x20 + 8;
				x1.u0 = 0x00052000;
				x1.u1 = (word32) x1 + 1184;
				w2 = 0x00 | 0x10;
				fn000000000001BB30();
				x8 = *x19.u1;
				x20 = x0;
				x0 = x19;
				x8 = *((word32) x8 + 16);
				x8();
				x19 = x0;
				x0 = strlen(x0);
				x2 = x0;
				x0 = x20;
				x1 = x19;
				fn000000000001BB30();
				x0.u1 = (word32) sp + 0x0080;
				LogCapture::~LogCapture();
				sp.u1 = &sp.u3->t0008.u0;
l00000000000346AC:
				__cxa_end_catch();
				w0 = 0x00;
l00000000000343BC:
				x8.u1 = x24->t0028.u1;
				x9.u1 = x29->tFFFFFFA8.u1;
				Eq_48522 x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
					__stack_chk_fail();
				else
				{
					sp.u1 = (word32) sp + 464;
					Eq_48269 v67;
					v67.u1 = &sp.u3->t0050.u0;
					x29 = (struct Eq_47472 *) *v67.u1;
					x30.u1 = *((word32) v67 + 8);
					Eq_48278 v68;
					v68.u1 = &sp.u3->t0040.u0;
					x20.u1 = *v68.u1;
					x19.u1 = *((word32) v68 + 8);
					Eq_48287 v69;
					v69.u1 = (word32) sp + 48;
					x22.u1 = *v69.u1;
					x21.u1 = *((word32) v69 + 8);
					Eq_48296 v70;
					v70.u1 = (word32) sp + 32;
					x24 = (struct Eq_47439 *) *v70.u1;
					x23.u1 = *((word32) v70 + 8);
					Eq_48305 v71;
					v71.u1 = (word32) sp + 16;
					x26 = (ui64) *v71.u1;
					x25.u1 = *((word32) v71 + 8);
					x28 = (word64) *sp.u2;
					sp.u1 = &sp.u3->t0060.u0;
					return;
				}
			}
		}
		else
		{
			x0.u1 = sp.u3->t0050.u1;
			((real64) q0, x0, x1);
			Eq_14 v79;
			v79.u0 = sp.u3->t0060.u0;
			w8.u1 = (word32) v79;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000034610;
		}
l0000000000034628:
		x0.u1 = sp.u3->t0070.u1;
		((real64) q0, x0, x1);
		if ((w20 & 0x01) == 0x00)
			goto l00000000000346AC;
		goto l0000000000034634;
	}
l00000000000346C0:
	x0.u1 = &sp.u3->t0040.u0;
	fn000000000001B2D0();
	fn000000000001F990();
	sp.u1 = &sp.u3->t0008.u0;
	x19 = x0;
	__cxa_end_catch();
	goto l0000000000034460;
}

// 0000000000034728: void ()
void ()
{
	struct Eq_48528 * fp;
	struct Eq_48528 * sp = fp;
	sp -= 0x30;
	struct Eq_48533 * v6 = (struct Eq_48533 *) (&sp->qw0008 + 1);
	struct Eq_48535 * x20;
	v6->ptr0000 = x20;
	word64 x19;
	v6->qw0008 = x19;
	struct Eq_48544 * v9 = (struct Eq_48544 *) (&sp->qw0008 + 3);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = &sp->qw0008 + 3;
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	word64 x8;
	x19 = x8;
	x8 = x20->qw0028;
	sp->qw0008 = x8;
	sp->qw0000 = 0x00;
	word64 * x1 = &sp->qw0000;
	ui64 x2 = 0x00 | 0x100000001;
	fn000000000001BE10();
	x1 = &sp->qw0000;
	word64 x0 = x19;
	fn000000000001BD60();
	x0 = sp->qw0000;
	if (x0 != 0x00)
		rs2_release_frame();
	x8 = x20->qw0028;
	word64 x9 = sp->qw0008;
	word64 x31 = x8 - x9;
	Eq_48599 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_48609 * v19 = (struct Eq_48609 *) (&sp->qw0008 + 3);
		x29 = v19->ptr0000;
		x30 = v19->qw0008;
		struct Eq_48618 * v20 = (struct Eq_48618 *) (&sp->qw0008 + 1);
		x20 = v20->ptr0000;
		x19 = v20->qw0008;
		sp = &sp->qw0008 + 5;
	}
}

// 00000000000347D4: void (Register uint64 x0)
void (uint64 x0)
{
	struct Eq_48629 * fp;
	struct Eq_48629 * sp = fp;
	sp -= 0x40;
	struct Eq_48634 * v6 = (struct Eq_48634 *) (&sp->qw0018 + 1);
	struct Eq_48636 * x20;
	v6->ptr0000 = x20;
	word64 x19;
	v6->qw0008 = x19;
	struct Eq_48645 * v9 = (struct Eq_48645 *) (&sp->qw0018 + 3);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = &sp->qw0018 + 3;
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	word64 x8;
	x19 = x8;
	x8 = x20->qw0028;
	sp->qw0018 = x8;
	sp->qw0010 = 0x00;
	word64 * x1;
	if (x1 != null)
	{
		word64 * x2 = x1;
		x1 = &sp->qw0010;
		fn000000000001B960();
	}
	else
	{
		sp->qw0008 = 0x00;
		x1 = &sp->qw0008;
		ui32 w2 = 0x00 | 0x03;
		fn000000000001BE10();
		struct Eq_48687 * v16 = (struct Eq_48687 *) &sp->qw0008;
		x8 = v16->qw0000;
		x0 = v16->qw0008;
		struct Eq_48697 * v17 = (struct Eq_48697 *) &sp->qw0008;
		v17->qw0000 = x0;
		v17->qw0008 = x8;
		if (x0 != 0x00)
			rs2_release_frame();
	}
	x1 = &sp->qw0010;
	x0 = x19;
	fn000000000001C310();
	x0 = sp->qw0010;
	if (x0 != 0x00)
		rs2_release_frame();
	x8 = x20->qw0028;
	word64 x9 = sp->qw0018;
	word64 x31 = x8 - x9;
	Eq_48732 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_48742 * v22 = (struct Eq_48742 *) (&sp->qw0018 + 3);
		x29 = v22->ptr0000;
		x30 = v22->qw0008;
		struct Eq_48751 * v23 = (struct Eq_48751 *) (&sp->qw0018 + 1);
		x20 = v23->ptr0000;
		x19 = v23->qw0008;
		sp = &sp->qw0018 + 5;
	}
}

// 00000000000348A8: void (Register Eq_48761 x0, Register Eq_48762 x1, Register Eq_48763 x2)
void (Eq_48761 x0, Eq_48762 x1, Eq_48763 x2)
{
	ui32 w3;
	struct Eq_48764 * fp;
	struct Eq_48764 * sp = fp;
	sp -= 0x60;
	struct Eq_48768 * x23;
	sp->ptr0020 = x23;
	struct Eq_48773 * v7 = (struct Eq_48773 *) ((char *) &sp->ptr0020 + 16);
	byte * x22;
	v7->ptr0000 = x22;
	byte * x21;
	v7->ptr0008 = x21;
	struct Eq_48784 * v10 = (struct Eq_48784 *) ((char *) &sp->ptr0020 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	word64 x19;
	v10->qw0008 = x19;
	struct Eq_48795 * v13 = (struct Eq_48795 *) ((char *) &sp->ptr0020 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->ptr0020 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	word32 wsp = w3 + 0x01;
	Eq_48819 NZCV;
	NZCV.u0 = cond(wsp);
	sp->t0018.u1 = (size_t) x8;
	bool Z;
	ui32 w19;
	if (Test(EQ,Z))
	{
l0000000000034A34:
		w19 = 0x00;
		goto l0000000000034A38;
	}
	ui32 v31 = w3;
	NZCV.u0 = cond(w3 - 0x03);
	struct Eq_48764 * v20 = sp;
	v20->t0000.u1 = 0x00;
	v20->qw0008 = 0x00;
	sp->ptr0010 = null;
	word32 ZC;
	ui32 w8;
	ui32 w20;
	if (Test(ULE,ZC))
	{
		Eq_14 x9;
		x9.u0 = 0x00050000;
		w8 = w3;
		x9.u1 = (word32) x9 + 0x0335;
		ptr64 x10 = &g_t3490C;
		byte v26 = (byte) *(x9 + x8);
		word32 w11 = (word32) v26;
		ui64 x11;
		x10 += x11 << 2;
		x19 = x2;
		x20 = x1;
		x21 = x0;
		switch (v31)
		{
		case 0x00:
			x1.u0 = 0x00052000;
			x1.u1 = (word32) x1 + 1223;
			x0 = &sp->t0000.u0;
			ui32 w2 = 0x00 | 0x08;
			fn000000000001B8B0();
			x22 = x21 + 0x0200;
			x2 = x21 + 32;
			x1.u1 = &sp->t0000.u0;
			x0 = x22;
			_ZN4rgbd9RGBDParam12createMemoryERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKi();
			x0 = x22;
			();
			sp = (struct Eq_48764 *) &sp->qw0008;
			x1 = x20;
			x2 = x19;
			byte * x3 = x0;
			fn000000000001B240();
			break;
		case 0x01:
			x1.u0 = 0x00052000;
			x1.u1 = (word32) x1 + 1232;
			x0 = &sp->t0000.u0;
			w2 = 0x09;
			fn000000000001B8B0();
			x22 = x21 + 720;
			x2 = x21 + 32;
			x1.u1 = &sp->t0000.u0;
			x0 = x22;
			_ZN4rgbd9RGBDParam12createMemoryERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKi();
			x0 = x22;
			();
			sp = (struct Eq_48764 *) &sp->qw0008;
			x1 = x20;
			x2 = x19;
			x3 = x0;
			fn000000000001B240();
			break;
		case 0x02:
			x1.u0 = 0x00052000;
			x1.u1 = (word32) x1 + 1212;
			x0 = &sp->t0000.u0;
			w2 = 0x0A;
			fn000000000001B8B0();
			x22 = x21 + 928;
			x2 = x21 + 32;
			x1.u1 = &sp->t0000.u0;
			x0 = x22;
			_ZN4rgbd9RGBDParam12createMemoryERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKi();
			x0 = x22;
			();
			sp = (struct Eq_48764 *) &sp->qw0008;
			x1 = x20;
			x2 = x19;
			x3 = x0;
			fn000000000001B240();
			break;
		case 0x03:
			x1.u0 = 0x00052000;
			x1.u1 = (word32) x1 + 1242;
			x0 = &sp->t0000.u0;
			w2 = 0x00 | 0x08;
			fn000000000001B8B0();
			x22 = x21 + 1136;
			x2 = x21 + 32;
			x1.u1 = &sp->t0000.u0;
			x0 = x22;
			_ZN4rgbd9RGBDParam12createMemoryERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKi();
			x0 = x22;
			();
			sp = (struct Eq_48764 *) &sp->qw0008;
			x1 = x20;
			x2 = x19;
			x3 = x0;
			fn000000000001B240();
			break;
		}
		ui32 w0;
		w19 = w0;
		w20 = 0x00;
		Eq_48833 v41;
		v41.u0 = sp->t0000.u0;
		w8 = (word32) v41;
		if ((w8 & 0x01) == 0x00)
		{
l0000000000034A30:
			if (w20 == 0x00)
			{
l0000000000034A38:
				x8.u1 = x23->t0028.u1;
				x9.u1 = sp->t0018.u1;
				word64 x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
					__stack_chk_fail();
				else
				{
					w0 = w19 & 0x01;
					struct Eq_48972 * v35 = (struct Eq_48972 *) ((char *) &sp->ptr0020 + 48);
					x29 = v35->ptr0000;
					x30 = v35->qw0008;
					struct Eq_48981 * v36 = (struct Eq_48981 *) ((char *) &sp->ptr0020 + 32);
					x20.u1 = v36->t0000.u1;
					x19 = v36->qw0008;
					struct Eq_48990 * v37 = (struct Eq_48990 *) ((char *) &sp->ptr0020 + 16);
					x22 = v37->ptr0000;
					x21 = v37->ptr0008;
					x23 = sp->ptr0020;
					sp = (struct Eq_48764 *) ((char *) &sp->ptr0020 + 64);
					return;
				}
			}
			goto l0000000000034A34;
		}
	}
	else
	{
		w20 = 0x00 | 0x01;
		Eq_48833 v43;
		v43.u0 = sp->t0000.u0;
		w8 = (word32) v43;
		if ((w8 & 0x01) != 0x00)
			goto l0000000000034A30;
	}
	x0 = sp->ptr0010;
	word128 q0;
	((real64) q0, x0, x1);
	goto l0000000000034A30;
}

<unknown> g_t3490C = // 000000000003490C;
// 0000000000034A94: void RGBDRealSense::~RGBDRealSense()
void RGBDRealSense::~RGBDRealSense()
{
	union Eq_14 * fp;
	union Eq_14 * sp = fp;
	sp = (union Eq_14 *) ((char *) sp - 48);
	Eq_14 x21;
	sp->u1 = (size_t) x21;
	struct Eq_49045 * v7 = (struct Eq_49045 *) ((char *) sp + 16);
	Eq_14 x20;
	v7->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v7->t0008.u1 = (size_t) x19;
	struct Eq_49056 * v10 = (struct Eq_49056 *) ((char *) sp + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) sp + 32;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	Eq_14 x0;
	x20 = *((word32) x0 + 1400);
	x8 = *((word32) x8 + 3992);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	*x0.u1 = x8;
	ui32 w8;
	word128 q0;
	void * x1;
	if (x20 != 0x00)
	{
		do
		{
			Eq_14 v14 = *((word32) x20 + 24);
			w8 = (word32) v14;
			x21 = *x20.u1;
			if ((w8 & 0x01) != 0x00)
			{
				x0 = *((word32) x20 + 40);
				((real64) q0, x0, x1);
			}
			x0 = x20;
			((real64) q0, x0, x1);
			x20 = x21;
		} while (x21 != 0x00);
	}
	x0 = *((word32) x19 + 0x0568);
	((word32) x19 + 0x0568)->u0 = 0x00;
	if (x0 != 0x00)
		((real64) q0, x0, x1);
	x20 = *((word32) x19 + 0x0550);
	if (x20 != 0x00)
	{
		do
		{
			x21 = *x20.u1;
			x0.u1 = (word32) x20 + 48;
			fn000000000001B2B0();
			Eq_14 v17 = *((word32) x20 + 16);
			w8 = (word32) v17;
			if ((w8 & 0x01) != 0x00)
			{
				x0 = *((word32) x20 + 32);
				((real64) q0, x0, x1);
			}
			x0 = x20;
			((real64) q0, x0, x1);
			x20 = x21;
		} while (x21 != 0x00);
	}
	x0 = *((word32) x19 + 1344);
	((word32) x19 + 1344)->u0 = 0x00;
	if (x0 != 0x00)
		((real64) q0, x0, x1);
	x0.u1 = (word32) x19 + 1136;
	fn000000000001B2B0();
	x0.u1 = (word32) x19 + 928;
	fn000000000001B2B0();
	x0.u1 = (word32) x19 + 720;
	fn000000000001B2B0();
	x0.u1 = (word32) x19 + 0x0200;
	fn000000000001B2B0();
	x0.u1 = (word32) x19 + 432;
	_ZNSt6__ndk118condition_variableD1Ev();
	x1 = (void *) *((word32) x19 + 408);
	x0.u1 = (word32) x19 + 400;
	fn000000000001BDB0();
	x20 = *((word32) x19 + 0x0188);
	((word32) x19 + 0x0188)->u0 = 0x00;
	if (x20 != 0x00)
	{
		x0 = x20;
		_ZNSt6__ndk16threadD1Ev();
		x0 = x20;
		((real64) q0, x0, x1);
	}
	x20 = *((word32) x19 + 384);
	((word32) x19 + 384)->u0 = 0x00;
	if (x20 != 0x00)
	{
		x0 = x20;
		_ZNSt6__ndk16threadD1Ev();
		x0 = x20;
		((real64) q0, x0, x1);
	}
	x0 = *((word32) x19 + 368);
	x8.u1 = (word32) x19 + 336;
	int64 x31 = x8 - x0;
	Eq_49245 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
	{
		if (x0 == 0x00)
			goto l0000000000034BD0;
		x8 = *x0.u1;
		x8 = *((word32) x8 + 40);
	}
	else
	{
		x8 = *x0.u1;
		x8 = *((word32) x8 + 32);
	}
	x8();
l0000000000034BD0:
	x0.u1 = (word32) x19 + 288;
	_ZNSt6__ndk15mutexD1Ev();
	x1 = (void *) *((word32) x19 + 264);
	x0.u1 = (word32) x19 + 0x0100;
	fn000000000001B660();
	x1 = (void *) *((word32) x19 + 232);
	x0.u1 = (word32) x19 + 224;
	fn000000000001C2D0();
	x1 = (void *) *((word32) x19 + 0x00D0);
	x0.u1 = (word32) x19 + 200;
	fn000000000001C370();
	x1 = (void *) *((word32) x19 + 0x00B8);
	x0.u1 = (word32) x19 + 0x00B0;
	fn000000000001BAE0();
	x1 = (void *) *((word32) x19 + 0x00A0);
	x0.u1 = (word32) x19 + 0x0098;
	fn000000000001C0A0();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3488);
	x20 = *((word32) x19 + 0x0080);
	Eq_14 x9;
	x9.u1 = x8 + 0x10;
	x8.u1 = x8 + 0x38;
	*((word32) x19 + 80) = x9;
	*((word32) x19 + 112) = x8;
	if (x20 == 0x00)
	{
		x8.u0 = 0x00070000;
		x20 = *((word32) x19 + 0x0068);
		x8 = *((word32) x8 + 3664);
		x8.u1 = (word32) x8 + 16;
		*((word32) x19 + 80) = x8;
		if (x20 == 0x00)
		{
			x20 = *((word32) x19 + 72);
			if (x20 == 0x00)
			{
				x20 = *((word32) x19 + 56);
				if (x20 == 0x00)
				{
					Eq_14 v22 = *((word32) x19 + 8);
					w8 = (word32) v22;
					if ((w8 & 0x01) == 0x00)
					{
						x0 = *((word32) x19 + 24);
						struct Eq_49373 * v25 = (struct Eq_49373 *) ((char *) sp + 32);
						x29 = v25->ptr0000;
						x30 = v25->qw0008;
						struct Eq_49382 * v26 = (struct Eq_49382 *) ((char *) sp + 16);
						x20.u1 = v26->t0000.u1;
						x19.u1 = v26->t0008.u1;
						x21.u1 = sp->u1;
						sp = (union Eq_14 *) ((char *) sp + 48);
						((real64) q0, x0, x1);
					}
					else
					{
						struct Eq_49403 * v23 = (struct Eq_49403 *) ((char *) sp + 32);
						x29 = v23->ptr0000;
						x30 = v23->qw0008;
						struct Eq_49412 * v24 = (struct Eq_49412 *) ((char *) sp + 16);
						x20.u1 = v24->t0000.u1;
						x19.u1 = v24->t0008.u1;
						x21.u1 = sp->u1;
						sp = (union Eq_14 *) ((char *) sp + 48);
					}
				}
				else
					x8.u1 = (word32) x20 + 8;
			}
			else
				x8.u1 = (word32) x20 + 8;
		}
		else
			x8.u1 = (word32) x20 + 8;
	}
	else
		x8.u1 = (word32) x20 + 8;
}

// 0000000000034D64: void RGBDRealSense::~RGBDRealSense()
void RGBDRealSense::~RGBDRealSense()
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_49434 * v7 = (struct Eq_49434 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	fn000000000001B330();
	struct Eq_49450 * v9 = (struct Eq_49450 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000034D88: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
{
	struct Eq_49472 * fp;
	struct Eq_49472 * sp = fp;
	struct Eq_49474 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_49472 *) ((char *) sp - 32);
	struct Eq_49474 * x20;
	sp->ptr0000 = x20;
	struct Eq_49474 * x19;
	sp->ptr0008 = x19;
	struct Eq_49488 * v9 = (struct Eq_49488 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_49474 * x0;
	x20 = x0;
	fn000000000001AEA0();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001AEA0();
	byte v12 = x19->b0020;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_49520 * v14 = (struct Eq_49520 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_49472 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_49472 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000034DD8: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
{
	struct Eq_49555 * fp;
	struct Eq_49555 * sp = fp;
	struct Eq_49557 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_49555 *) ((char *) sp - 32);
	struct Eq_49557 * x20;
	sp->ptr0000 = x20;
	struct Eq_49557 * x19;
	sp->ptr0008 = x19;
	struct Eq_49571 * v9 = (struct Eq_49571 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_49557 * x0;
	x20 = x0;
	fn000000000001B130();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001B130();
	byte v12 = x19->b0020;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_49603 * v14 = (struct Eq_49603 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_49555 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_49555 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000034E28: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3mapIS7_P9_jfieldIDNS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEEEENS_19__map_value_compareIS7_SI_SC_Lb1EEENS5_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3mapIS7_P9_jfieldIDNS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEEEENS_19__map_value_compareIS7_SI_SC_Lb1EEENS5_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE
{
	struct Eq_49638 * fp;
	struct Eq_49638 * sp = fp;
	struct Eq_49640 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_49638 *) ((char *) sp - 32);
	struct Eq_49640 * x20;
	sp->ptr0000 = x20;
	struct Eq_49640 * x19;
	sp->ptr0008 = x19;
	struct Eq_49654 * v9 = (struct Eq_49654 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_49640 * x0;
	x20 = x0;
	fn000000000001B830();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001B830();
	x1 = x19->ptr0040;
	x0 = (struct Eq_49640 *) ((char *) &x19->ptr0030 + 8);
	fn000000000001AF20();
	byte v12 = x19->b0020;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_49693 * v14 = (struct Eq_49693 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_49638 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_49638 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000034E84: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP9_jfieldIDEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP9_jfieldIDEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
{
	struct Eq_49728 * fp;
	struct Eq_49728 * sp = fp;
	struct Eq_49730 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_49728 *) ((char *) sp - 32);
	struct Eq_49730 * x20;
	sp->ptr0000 = x20;
	struct Eq_49730 * x19;
	sp->ptr0008 = x19;
	struct Eq_49744 * v9 = (struct Eq_49744 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_49730 * x0;
	x20 = x0;
	fn000000000001AF20();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001AF20();
	byte v12 = x19->b0020;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_49776 * v14 = (struct Eq_49776 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_49728 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_49728 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000034ED4: define _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
{
	struct Eq_49811 * fp;
	struct Eq_49811 * sp = fp;
	struct Eq_49813 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_49811 *) ((char *) sp - 32);
	struct Eq_49813 * x20;
	sp->ptr0000 = x20;
	struct Eq_49813 * x19;
	sp->ptr0008 = x19;
	struct Eq_49827 * v9 = (struct Eq_49827 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_49813 * x0;
	x20 = x0;
	fn000000000001BFE0();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001BFE0();
	byte v12 = x19->b0028;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	struct Eq_49859 * v14 = (struct Eq_49859 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_49811 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_49811 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000034F24: define _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationEP8_jobjectEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationEP8_jobjectEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE
{
	struct Eq_49894 * fp;
	struct Eq_49894 * sp = fp;
	struct Eq_49896 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_49894 *) ((char *) sp - 32);
	struct Eq_49896 * x20;
	sp->ptr0000 = x20;
	struct Eq_49896 * x19;
	sp->ptr0008 = x19;
	struct Eq_49910 * v9 = (struct Eq_49910 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_49896 * x0;
	x20 = x0;
	fn000000000001B110();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001B110();
	struct Eq_49932 * v11 = (struct Eq_49932 *) ((char *) &sp->ptr0008 + 8);
	x29 = v11->ptr0000;
	x30 = v11->qw0008;
	x0 = x19;
	struct Eq_49894 * v12 = sp;
	x20 = v12->ptr0000;
	x19 = v12->ptr0008;
	sp = (struct Eq_49894 *) ((char *) &sp->ptr0008 + 24);
	word128 q0;
	((real64) q0, x0, x1);
}

// 0000000000034F64: define _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationEP10_jmethodIDEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationEP10_jmethodIDEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE
{
	struct Eq_49957 * fp;
	struct Eq_49957 * sp = fp;
	struct Eq_49959 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_49957 *) ((char *) sp - 32);
	struct Eq_49959 * x20;
	sp->ptr0000 = x20;
	struct Eq_49959 * x19;
	sp->ptr0008 = x19;
	struct Eq_49973 * v9 = (struct Eq_49973 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_49959 * x0;
	x20 = x0;
	fn000000000001BB70();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001BB70();
	struct Eq_49995 * v11 = (struct Eq_49995 *) ((char *) &sp->ptr0008 + 8);
	x29 = v11->ptr0000;
	x30 = v11->qw0008;
	x0 = x19;
	struct Eq_49957 * v12 = sp;
	x20 = v12->ptr0000;
	x19 = v12->ptr0008;
	sp = (struct Eq_49957 *) ((char *) &sp->ptr0008 + 24);
	word128 q0;
	((real64) q0, x0, x1);
}

// 0000000000034FA4: void (Register (ptr64 Eq_50020) x0)
void (rs2_error * x0)
{
	int64 x8;
	word32 w0;
	struct Eq_50021 * fp;
	struct Eq_50021 * sp = fp;
	sp -= 0x30;
	struct Eq_50026 * v6 = (struct Eq_50026 *) ((char *) &sp->t0008 + 8);
	Eq_14 x20;
	v6->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v6->t0008.u1 = (size_t) x19;
	struct Eq_50037 * v9 = (struct Eq_50037 *) ((char *) &sp->t0008 + 24);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 24;
	if (x0 != 0x00)
	{
		sp->t0008.u1 = (size_t) x0;
		rs2_get_librealsense_exception_type();
		word32 w8 = w0 - 0x01;
		word32 v23 = w8;
		Eq_50064 NZCV;
		NZCV.u0 = cond(w8 - 0x05);
		word32 ZC;
		Eq_14 x1;
		if (Test(ULE,ZC))
		{
			Eq_14 x9;
			x9.u0 = 0x00050000;
			x9.u1 = (word32) x9 + 0x0339;
			ptr64 x10 = &g_t34FF4;
			byte v21 = (byte) *((char *) x9.u1 + x8);
			word32 w11 = (word32) v21;
			ui64 x11;
			x10 += x11 << 2;
			switch (v23)
			{
			case 0x00:
				w0 = 0x48;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001C2F0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3424);
				break;
			case 0x01:
				w0 = 0x48;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001C0C0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3344);
				break;
			case 0x02:
				w0 = 0x48;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001BDD0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3880);
				break;
			case 0x03:
				w0 = 0x48;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001B290();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 4024);
				break;
			case 0x04:
				w0 = 0x48;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001B180();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0D88);
				break;
			case 0x05:
				w0 = 0x48;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001B4F0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0F50);
				break;
			}
		}
		else
		{
			w0 = 0x48;
			__cxa_allocate_exception();
			x19 = x0;
			x1.u1 = sp->t0008.u1;
			fn000000000001BD90();
			x1.u0 = 0x00070000;
			x1 = *((word32) x1 + 0x0FC0);
		}
		Eq_14 x2;
		x2.u0 = 0x00070000;
		x2 = *((word32) x2 + 0x0E38);
		x0 = x19;
		__cxa_throw();
		x20 = x0;
		x0 = x19;
		__cxa_free_exception();
		x0 = x20;
		_Unwind_Resume();
		_ZNSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEED0Ev();
	}
	else
	{
		struct Eq_50069 * v11 = (struct Eq_50069 *) ((char *) &sp->t0008 + 24);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		struct Eq_50078 * v12 = (struct Eq_50078 *) ((char *) &sp->t0008 + 8);
		x20.u1 = v12->t0000.u1;
		x19.u1 = v12->t0008.u1;
		sp = (struct Eq_50021 *) ((char *) &sp->t0008 + 40);
	}
}

<unknown> g_t34FF4 = // 0000000000034FF4;
// 00000000000350F4: define _ZNSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEED0Ev
// Called from:
//      
define _ZNSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_50202 * v7 = (struct Eq_50202 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_50218 * v9 = (struct Eq_50218 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000035118: define _ZNSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_50240 * fp;
	struct Eq_50240 * sp = fp;
	sp = (struct Eq_50240 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_50256 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_50240 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 0000000000035138: define _ZNKSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_50278 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 0x0FD8);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_50292 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000035154: define _ZNSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP11rs2_contextPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000035158: void camera_disconnected_error::camera_disconnected_error(Register (ptr64 Eq_50310) x0)
void camera_disconnected_error::camera_disconnected_error(rs2_error * x0)
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_50320 * v7 = (struct Eq_50320 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	x19 = x0;
	fn000000000001BD90();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0EB8);
	x8.u1 = (word32) x8 + 16;
	x19->u1 = (size_t) x8;
	struct Eq_50344 * v10 = (struct Eq_50344 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
}

// 000000000003518C: void backend_error::backend_error(Register (ptr64 Eq_50357) x0)
void backend_error::backend_error(rs2_error * x0)
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_50367 * v7 = (struct Eq_50367 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	x19 = x0;
	fn000000000001BD90();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0CC0);
	x8.u1 = (word32) x8 + 16;
	x19->u1 = (size_t) x8;
	struct Eq_50391 * v10 = (struct Eq_50391 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
}

// 00000000000351C0: void error::~error()
void error::~error()
{
	struct Eq_50408 * x0;
	struct Eq_50408 ** fp;
	struct Eq_50408 ** sp = fp;
	sp = (struct Eq_50408 **) ((char *) sp - 32);
	struct Eq_50408 * x19;
	*sp = (struct Eq_50408 **) x19;
	struct Eq_50413 * v7 = (struct Eq_50413 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	byte v11 = x0->b0028;
	ui32 w8 = (word32) v11;
	x9 = *((word32) x9 + 0x0E08);
	x19 = x0;
	x9.u1 = (word32) x9 + 16;
	x0->t0000.u1 = (size_t) x9;
	word128 q0;
	void * x1;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0010;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0020;
		((real64) q0, x0, x1);
	}
	struct Eq_50467 * v15 = (struct Eq_50467 *) ((char *) sp + 16);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	x19 = (struct Eq_50408 *) *sp;
	sp = (struct Eq_50408 **) ((char *) sp + 32);
	_ZNSt13runtime_errorD2Ev();
}

// 0000000000035210: void invalid_value_error::invalid_value_error(Register (ptr64 Eq_50492) x0)
void invalid_value_error::invalid_value_error(rs2_error * x0)
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_50502 * v7 = (struct Eq_50502 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	x19 = x0;
	fn000000000001BD90();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3800);
	x8.u1 = (word32) x8 + 16;
	x19->u1 = (size_t) x8;
	struct Eq_50526 * v10 = (struct Eq_50526 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
}

// 0000000000035244: void wrong_api_call_sequence_error::wrong_api_call_sequence_error(Register (ptr64 Eq_50539) x0)
void wrong_api_call_sequence_error::wrong_api_call_sequence_error(rs2_error * x0)
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_50549 * v7 = (struct Eq_50549 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	x19 = x0;
	fn000000000001BD90();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3376);
	x8.u1 = (word32) x8 + 16;
	x19->u1 = (size_t) x8;
	struct Eq_50573 * v10 = (struct Eq_50573 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
}

// 0000000000035278: void not_implemented_error::not_implemented_error(Register (ptr64 Eq_50586) x0)
void not_implemented_error::not_implemented_error(rs2_error * x0)
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_50596 * v7 = (struct Eq_50596 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	x19 = x0;
	fn000000000001BD90();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0CE0);
	x8.u1 = (word32) x8 + 16;
	x19->u1 = (size_t) x8;
	struct Eq_50620 * v10 = (struct Eq_50620 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
}

// 00000000000352AC: void device_in_recovery_mode_error::device_in_recovery_mode_error(Register (ptr64 Eq_50633) x0)
void device_in_recovery_mode_error::device_in_recovery_mode_error(rs2_error * x0)
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_50643 * v7 = (struct Eq_50643 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	x19 = x0;
	fn000000000001BD90();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0E00);
	x8.u1 = (word32) x8 + 16;
	x19->u1 = (size_t) x8;
	struct Eq_50667 * v10 = (struct Eq_50667 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
}

// 00000000000352E0: void error::error(Register (ptr64 Eq_50680) x0)
void error::error(rs2_error * x0)
{
	Eq_50681 fp;
	Eq_50681 sp = fp;
	sp -= 0x80;
	Eq_14 x27;
	sp.u0->t0020.u1 = (size_t) x27;
	struct Eq_50690 * v7 = (struct Eq_50690 *) ((word32) sp + 48);
	struct Eq_50692 * x26;
	v7->ptr0000 = x26;
	Eq_14 x25;
	v7->t0008.u1 = (size_t) x25;
	struct Eq_50701 * v10 = (struct Eq_50701 *) ((word32) sp + 64);
	Eq_14 x24;
	v10->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v10->t0008.u1 = (size_t) x23;
	struct Eq_50712 * v13 = (struct Eq_50712 *) ((word32) sp + 80);
	Eq_14 x22;
	v13->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v13->t0008.u1 = (size_t) x21;
	struct Eq_50723 * v16 = (struct Eq_50723 *) ((word32) sp + 96);
	Eq_14 x20;
	v16->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v16->t0008.u1 = (size_t) x19;
	struct Eq_50734 * v19 = (struct Eq_50734 *) ((word32) sp + 112);
	ptr64 x29;
	v19->ptr0000 = x29;
	Eq_14 x30;
	v19->t0008.u1 = (size_t) x30;
	x29 = (ptr64) ((word32) sp + 112);
	Eq_1720 sysreg3_3_13_0_2;
	x27 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x27 + 40);
	x19 = x0;
	Eq_14 x1;
	x0 = x1;
	x20 = x1;
	sp.u0->t0018.u1 = (size_t) x8;
	rs2_get_error_message();
	x1 = x0;
	x0 = x19;
	_ZNSt13runtime_errorC2EPKc();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0E08);
	Eq_50766 q0;
	q0.u1 = 0;
	x25 = x19;
	x26 = (struct Eq_50692 *) ((word32) x19 + 40);
	x8.u1 = (word32) x8 + 16;
	*x19.u1 = x8;
	x25.u1 = (word32) x25 + 16;
	x25.u1->u1 = q0;
	struct Eq_50781 * v25 = (struct Eq_50781 *) ((word32) x19 + 32);
	v25->t0000.u1 = (word128) q0;
	v25->t0010.u1 = (word128) q0;
	x0 = x20;
	rs2_get_failed_function();
	ui32 w8;
	if (x0 == 0x00)
	{
		Eq_50681 v32 = sp;
		v32.u0->t0000.u2 = 0x00;
		v32.u0->qw0008 = 0x00;
		sp.u0->t0010.u1 = (size_t) 0x00;
		Eq_50766 v33 = *x25.u1;
		w8 = (word32) v33;
		if ((w8 & 0x01) == 0x00)
			goto l000000000003540C;
		goto l00000000000353AC;
	}
	x0 = x20;
	rs2_get_failed_function();
	x21 = x0;
	Eq_50681 v26 = sp;
	v26.u0->t0000.u2 = 0x00;
	v26.u0->qw0008 = 0x00;
	sp.u0->t0010.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u0 = (word32) x0 + 16;
	Eq_50837 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0.u1 = sp + 0x00;
		fn000000000001B2D0();
		goto l0000000000035544;
	}
	x22 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	Eq_14 x9;
	ui32 w22;
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x00;
		w8 = w22 << 1;
		x23 = x9 | 0x01;
		sp.u0->t0000.u0 = (byte) w8;
		if (x22 == 0x00)
			goto l0000000000035400;
	}
	else
	{
		x8.u1 = x22 + 0x10;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		Eq_50857 v52;
		v52.u0 = sp + 8;
		v52->u0 = x22;
		((word32) v52 + 8)->u0 = x0;
		sp.u0->t0000.u2 = (word64) x8;
	}
	x0 = x23;
	x1 = x21;
	Eq_14 x2 = x22;
	x0 = memcpy(x0, x1, x2);
l0000000000035400:
	*(x23 + x22) = (word64) 0x00;
	Eq_50766 v35 = *x25.u1;
	w8 = (word32) v35;
	if ((w8 & 0x01) != 0x00)
	{
l000000000003540C:
		x25.u1->u1 = 0x00;
		goto l0000000000035410;
	}
l00000000000353AC:
	x8 = *((word32) x19 + 32);
	x8.u1->u0 = 0x00;
	Eq_14 v34 = *((word32) x19 + 16);
	w8 = (word32) v34;
	((word32) x19 + 24)->u0 = 0x00;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = *((word32) x19 + 32);
		((real64) q0, x0, x1);
		((word32) x19 + 16)->u0 = 0x00;
	}
l0000000000035410:
	x8.u1 = sp.u0->t0010.u1;
	q0.u1 = sp.u0->t0000.u1;
	*((word32) x25 + 16) = x8;
	x25.u1->u1 = q0;
	x0 = x20;
	rs2_get_failed_args();
	if (x0 == 0x00)
	{
		Eq_50681 v49 = sp;
		v49.u0->t0000.u2 = 0x00;
		v49.u0->qw0008 = (word64) 0x00;
		sp.u0->t0010.u1 = (size_t) 0x00;
		Eq_50766 v50;
		v50.u0 = x26->t0000.u0;
		w8 = (word32) v50;
		if ((w8 & 0x01) == 0x00)
			goto l00000000000354E0;
		goto l0000000000035480;
	}
	x0 = x20;
	rs2_get_failed_args();
	x21 = x0;
	Eq_50681 v36 = sp;
	v36.u0->t0000.u2 = 0x00;
	v36.u0->qw0008 = (word64) 0x00;
	sp.u0->t0010.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(ULT,C))
	{
		x22 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = sp + 0x00;
			w8 = w22 << 1;
			x23 = x9 | 0x01;
			sp.u0->t0000.u0 = (byte) w8;
			if (x22 == 0x00)
				goto l00000000000354D4;
		}
		else
		{
			x8.u1 = x22 + 0x10;
			x24 = x8 & ~0x0F;
			x0 = x24;
			_Znwm();
			x8 = x24 | 0x01;
			x23 = x0;
			Eq_51016 v47;
			v47.u0 = sp + 8;
			v47->u0 = x22;
			((word32) v47 + 8)->u0 = x0;
			sp.u0->t0000.u2 = (word64) x8;
		}
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = memcpy(x0, x1, x2);
l00000000000354D4:
		*(x23 + x22) = (word64) 0x00;
		Eq_50766 v38;
		v38.u0 = x26->t0000.u0;
		w8 = (word32) v38;
		if ((w8 & 0x01) != 0x00)
		{
l00000000000354E0:
			x26->t0000.u3 = 0x00;
l00000000000354E4:
			x8.u1 = sp.u0->t0010.u1;
			q0.u1 = sp.u0->t0000.u1;
			x26->t0010.u1 = (size_t) x8;
			x26->t0000.u1 = (word128) q0;
			x0 = x20;
			rs2_get_librealsense_exception_type();
			Eq_14 w0;
			*((word32) x19 + 64) = w0;
			x0 = x20;
			rs2_free_error();
			x8 = *((word32) x27 + 40);
			x9.u1 = sp.u0->t0018.u1;
			Eq_51160 x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			bool Z;
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				Eq_51085 v42;
				v42.u0 = sp + 112;
				x29 = (ptr64) *v42;
				x30.u1 = *((word32) v42 + 8);
				Eq_51094 v43;
				v43.u0 = sp + 96;
				x20.u1 = *v43;
				x19.u1 = *((word32) v43 + 8);
				Eq_51103 v44;
				v44.u0 = sp + 80;
				x22.u1 = *v44;
				x21.u1 = *((word32) v44 + 8);
				Eq_51112 v45;
				v45.u0 = sp + 64;
				x24.u1 = *v45;
				x23.u1 = *((word32) v45 + 8);
				Eq_51121 v46;
				v46.u0 = sp + 48;
				x26 = (struct Eq_50692 *) *v46;
				x25.u1 = *((word32) v46 + 8);
				x27.u1 = sp.u0->t0020.u1;
				sp.u0 = sp + 0x80;
				return;
			}
		}
l0000000000035480:
		x8 = *((word32) x19 + 56);
		x8.u1->u0 = 0x00;
		Eq_14 v48 = *((word32) x19 + 40);
		w8 = (word32) v48;
		((word32) x19 + 48)->u0 = 0x00;
		if ((w8 & 0x01) != 0x00)
		{
			x0 = *((word32) x19 + 56);
			((real64) q0, x0, x1);
			((word32) x19 + 40)->u0 = 0x00;
		}
		goto l00000000000354E4;
	}
l0000000000035544:
	x0.u1 = sp + 0x00;
	fn000000000001B2D0();
	Eq_50766 v51;
	v51.u0 = x26->t0000.u0;
	w8 = (word32) v51;
	x20 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = *((word32) x19 + 56);
		((real64) q0, x0, x1);
	}
	Eq_50766 v53 = *x25.u1;
	w8 = (word32) v53;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = *((word32) x19 + 32);
		((real64) q0, x0, x1);
	}
	x0 = x19;
	_ZNSt13runtime_errorD2Ev();
	x0 = x20;
	_Unwind_Resume();
	camera_disconnected_error::~camera_disconnected_error();
}

// 0000000000035588: void camera_disconnected_error::~camera_disconnected_error()
// Called from:
//      error::error
void camera_disconnected_error::~camera_disconnected_error()
{
	struct Eq_51228 * x0;
	struct Eq_51228 ** fp;
	struct Eq_51228 ** sp = fp;
	sp = (struct Eq_51228 **) ((char *) sp - 32);
	struct Eq_51228 * x19;
	*sp = (struct Eq_51228 **) x19;
	struct Eq_51233 * v7 = (struct Eq_51233 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	byte v11 = x0->b0028;
	ui32 w8 = (word32) v11;
	x9 = *((word32) x9 + 0x0E08);
	x19 = x0;
	x9.u1 = (word32) x9 + 16;
	x0->t0000.u1 = (size_t) x9;
	word128 q0;
	void * x1;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0010;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0020;
		((real64) q0, x0, x1);
	}
	x0 = x19;
	_ZNSt13runtime_errorD2Ev();
	struct Eq_51289 * v15 = (struct Eq_51289 *) ((char *) sp + 16);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	x19 = (struct Eq_51228 *) *sp;
	sp = (struct Eq_51228 **) ((char *) sp + 32);
	((real64) q0, x0, x1);
}

// 00000000000355E0: void error::~error()
void error::~error()
{
	struct Eq_51323 * x0;
	struct Eq_51323 ** fp;
	struct Eq_51323 ** sp = fp;
	sp = (struct Eq_51323 **) ((char *) sp - 32);
	struct Eq_51323 * x19;
	*sp = (struct Eq_51323 **) x19;
	struct Eq_51328 * v7 = (struct Eq_51328 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	byte v11 = x0->b0028;
	ui32 w8 = (word32) v11;
	x9 = *((word32) x9 + 0x0E08);
	x19 = x0;
	x9.u1 = (word32) x9 + 16;
	x0->t0000.u1 = (size_t) x9;
	word128 q0;
	void * x1;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0010;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0020;
		((real64) q0, x0, x1);
	}
	x0 = x19;
	_ZNSt13runtime_errorD2Ev();
	struct Eq_51384 * v15 = (struct Eq_51384 *) ((char *) sp + 16);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	x19 = (struct Eq_51323 *) *sp;
	sp = (struct Eq_51323 **) ((char *) sp + 32);
	((real64) q0, x0, x1);
}

// 0000000000035638: void backend_error::~backend_error()
void backend_error::~backend_error()
{
	struct Eq_51418 * x0;
	struct Eq_51418 ** fp;
	struct Eq_51418 ** sp = fp;
	sp = (struct Eq_51418 **) ((char *) sp - 32);
	struct Eq_51418 * x19;
	*sp = (struct Eq_51418 **) x19;
	struct Eq_51423 * v7 = (struct Eq_51423 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	byte v11 = x0->b0028;
	ui32 w8 = (word32) v11;
	x9 = *((word32) x9 + 0x0E08);
	x19 = x0;
	x9.u1 = (word32) x9 + 16;
	x0->t0000.u1 = (size_t) x9;
	word128 q0;
	void * x1;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0010;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0020;
		((real64) q0, x0, x1);
	}
	x0 = x19;
	_ZNSt13runtime_errorD2Ev();
	struct Eq_51479 * v15 = (struct Eq_51479 *) ((char *) sp + 16);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	x19 = (struct Eq_51418 *) *sp;
	sp = (struct Eq_51418 **) ((char *) sp + 32);
	((real64) q0, x0, x1);
}

// 0000000000035690: void invalid_value_error::~invalid_value_error()
void invalid_value_error::~invalid_value_error()
{
	struct Eq_51513 * x0;
	struct Eq_51513 ** fp;
	struct Eq_51513 ** sp = fp;
	sp = (struct Eq_51513 **) ((char *) sp - 32);
	struct Eq_51513 * x19;
	*sp = (struct Eq_51513 **) x19;
	struct Eq_51518 * v7 = (struct Eq_51518 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	byte v11 = x0->b0028;
	ui32 w8 = (word32) v11;
	x9 = *((word32) x9 + 0x0E08);
	x19 = x0;
	x9.u1 = (word32) x9 + 16;
	x0->t0000.u1 = (size_t) x9;
	word128 q0;
	void * x1;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0010;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0020;
		((real64) q0, x0, x1);
	}
	x0 = x19;
	_ZNSt13runtime_errorD2Ev();
	struct Eq_51574 * v15 = (struct Eq_51574 *) ((char *) sp + 16);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	x19 = (struct Eq_51513 *) *sp;
	sp = (struct Eq_51513 **) ((char *) sp + 32);
	((real64) q0, x0, x1);
}

// 00000000000356E8: void wrong_api_call_sequence_error::~wrong_api_call_sequence_error()
void wrong_api_call_sequence_error::~wrong_api_call_sequence_error()
{
	struct Eq_51608 * x0;
	struct Eq_51608 ** fp;
	struct Eq_51608 ** sp = fp;
	sp = (struct Eq_51608 **) ((char *) sp - 32);
	struct Eq_51608 * x19;
	*sp = (struct Eq_51608 **) x19;
	struct Eq_51613 * v7 = (struct Eq_51613 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	byte v11 = x0->b0028;
	ui32 w8 = (word32) v11;
	x9 = *((word32) x9 + 0x0E08);
	x19 = x0;
	x9.u1 = (word32) x9 + 16;
	x0->t0000.u1 = (size_t) x9;
	word128 q0;
	void * x1;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0010;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0020;
		((real64) q0, x0, x1);
	}
	x0 = x19;
	_ZNSt13runtime_errorD2Ev();
	struct Eq_51669 * v15 = (struct Eq_51669 *) ((char *) sp + 16);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	x19 = (struct Eq_51608 *) *sp;
	sp = (struct Eq_51608 **) ((char *) sp + 32);
	((real64) q0, x0, x1);
}

// 0000000000035740: void not_implemented_error::~not_implemented_error()
void not_implemented_error::~not_implemented_error()
{
	struct Eq_51703 * x0;
	struct Eq_51703 ** fp;
	struct Eq_51703 ** sp = fp;
	sp = (struct Eq_51703 **) ((char *) sp - 32);
	struct Eq_51703 * x19;
	*sp = (struct Eq_51703 **) x19;
	struct Eq_51708 * v7 = (struct Eq_51708 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	byte v11 = x0->b0028;
	ui32 w8 = (word32) v11;
	x9 = *((word32) x9 + 0x0E08);
	x19 = x0;
	x9.u1 = (word32) x9 + 16;
	x0->t0000.u1 = (size_t) x9;
	word128 q0;
	void * x1;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0010;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0020;
		((real64) q0, x0, x1);
	}
	x0 = x19;
	_ZNSt13runtime_errorD2Ev();
	struct Eq_51764 * v15 = (struct Eq_51764 *) ((char *) sp + 16);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	x19 = (struct Eq_51703 *) *sp;
	sp = (struct Eq_51703 **) ((char *) sp + 32);
	((real64) q0, x0, x1);
}

// 0000000000035798: void device_in_recovery_mode_error::~device_in_recovery_mode_error()
void device_in_recovery_mode_error::~device_in_recovery_mode_error()
{
	struct Eq_51798 * x0;
	struct Eq_51798 ** fp;
	struct Eq_51798 ** sp = fp;
	sp = (struct Eq_51798 **) ((char *) sp - 32);
	struct Eq_51798 * x19;
	*sp = (struct Eq_51798 **) x19;
	struct Eq_51803 * v7 = (struct Eq_51803 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	byte v11 = x0->b0028;
	ui32 w8 = (word32) v11;
	x9 = *((word32) x9 + 0x0E08);
	x19 = x0;
	x9.u1 = (word32) x9 + 16;
	x0->t0000.u1 = (size_t) x9;
	word128 q0;
	void * x1;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0010;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0020;
		((real64) q0, x0, x1);
	}
	x0 = x19;
	_ZNSt13runtime_errorD2Ev();
	struct Eq_51859 * v15 = (struct Eq_51859 *) ((char *) sp + 16);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	x19 = (struct Eq_51798 *) *sp;
	sp = (struct Eq_51798 **) ((char *) sp + 32);
	((real64) q0, x0, x1);
}

// 00000000000357F0: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_configPFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_configPFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_51898 * v7 = (struct Eq_51898 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_51914 * v9 = (struct Eq_51914 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000035814: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_configPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_configPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_51936 * fp;
	struct Eq_51936 * sp = fp;
	sp = (struct Eq_51936 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_51952 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_51936 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 0000000000035834: define _ZNKSt6__ndk120__shared_ptr_pointerIP10rs2_configPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP10rs2_configPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_51974 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 0x0D00);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_51988 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000035850: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_configPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_configPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000035854: void ()
void ()
{
	struct Eq_52006 * fp;
	struct Eq_52006 * sp = fp;
	sp -= 0x40;
	struct Eq_52011 * v6 = (struct Eq_52011 *) ((char *) &sp->t0008 + 8);
	struct Eq_52013 * x22;
	v6->ptr0000 = x22;
	Eq_14 x21;
	v6->t0008.u1 = (size_t) x21;
	struct Eq_52022 * v9 = (struct Eq_52022 *) ((char *) &sp->t0008 + 24);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_52033 * v12 = (struct Eq_52033 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x20 = x8;
	x8.u1 = x22->t0028.u1;
	Eq_14 x0;
	x0.u1 = &sp->t0000.u0;
	sp->t0008.u1 = (size_t) x8;
	sp->t0000.u1 = (size_t) 0x00;
	rs2_create_pointcloud();
	x21 = x0;
	*x20.u1 = x0;
	word32 w0 = 0x28;
	_Znwm();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0EA8);
	struct Eq_52076 * v17 = (struct Eq_52076 *) ((word32) x0 + 16);
	v17->qw0000 = 0x00;
	v17->t0008.u1 = (size_t) x21;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	x19 = x0;
	x9 = *((word32) x9 + 0x0EC8);
	x0.u1 = sp->t0000.u1;
	x8.u1 = (word32) x8 + 16;
	Eq_14 v19 = x19;
	*v19.u1 = x8;
	((word32) v19 + 8)->u0 = 0x00;
	*((word32) x19 + 32) = x9;
	*((word32) x20 + 8) = x19;
	fn000000000001ADF0();
	x8.u1 = x22->t0028.u1;
	x9.u1 = sp->t0008.u1;
	int64 x31 = x8 - x9;
	Eq_52117 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_52125 * v23 = (struct Eq_52125 *) ((char *) &sp->t0008 + 40);
		x29 = v23->ptr0000;
		x30 = v23->qw0008;
		struct Eq_52134 * v24 = (struct Eq_52134 *) ((char *) &sp->t0008 + 24);
		x20.u1 = v24->t0000.u1;
		x19.u1 = v24->t0008.u1;
		struct Eq_52143 * v25 = (struct Eq_52143 *) ((char *) &sp->t0008 + 8);
		x22 = v25->ptr0000;
		x21.u1 = v25->t0008.u1;
		sp = (struct Eq_52006 *) ((char *) &sp->t0008 + 56);
	}
}

// 000000000003594C: define _ZN3rs26filterC2ENSt6__ndk110shared_ptrI20rs2_processing_blockEEi
define _ZN3rs26filterC2ENSt6__ndk110shared_ptrI20rs2_processing_blockEEi
{
	struct Eq_52210 * x1;
	word32 w2;
	struct Eq_52153 * fp;
	struct Eq_52153 * sp = fp;
	sp -= 0x70;
	struct Eq_52157 * x23;
	sp->ptr0030 = x23;
	struct Eq_52162 * v7 = (struct Eq_52162 *) ((char *) &sp->ptr0030 + 16);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	word64 x21;
	v7->qw0008 = x21;
	struct Eq_52173 * v10 = (struct Eq_52173 *) ((char *) &sp->ptr0030 + 32);
	word64 x20;
	v10->qw0000 = x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_52184 * v13 = (struct Eq_52184 *) ((char *) &sp->ptr0030 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->ptr0030 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	word32 w20 = w2;
	Eq_14 x0;
	x19 = x0;
	sp->t0028.u1 = (size_t) x8;
	struct Eq_52210 * v20 = x1;
	x8.u1 = v20->qw0000;
	x21 = v20->qw0008;
	Eq_14 x9;
	if (x21 != 0x00)
	{
		x9 = x21 + 0x08;
		Eq_14 w11;
		do
		{
			union Eq_3183 * v23 = &*x9.u1;
			Eq_14 x10 = __load_exclusive<word64>(v23);
			x10.u1 = (word32) x10 + 1;
			union Eq_3192 * v24 = &*x9.u1;
			w11 = __store_exclusive<word64>(v24, x10);
		} while (w11 != 0x00);
	}
	x22.u0 = 0x00070000;
	x22 = *((word32) x22 + 3664);
	struct Eq_52224 * v26 = (struct Eq_52224 *) ((word32) x19 + 16);
	v26->t0000.u1 = (size_t) x8;
	v26->qw0008 = x21;
	x9.u1 = (word32) x22 + 16;
	Eq_14 v27 = x19;
	*v27.u1 = x9;
	*((word32) v27 + 8) = x8;
	Eq_14 w10;
	if (x21 == 0x00)
	{
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3488);
		x0.u1 = (word32) x19 + 40;
		x9.u1 = (word32) x8 + 16;
		x8.u1 = (word32) x8 + 56;
		*x19.u1 = x9;
		*((word32) x19 + 32) = x8;
		word32 w1 = w20;
		w2 = 0x00;
		fn000000000001AE90();
		x8 = *((word32) x19 + 40);
		sp->t0008.u1 = (size_t) x8;
		x8 = *((word32) x19 + 48);
		sp->t0010.u1 = (size_t) x8;
		if (x8 != 0x00)
		{
			x8.u1 = (word32) x8 + 8;
			do
			{
				union Eq_3183 * v32 = &*x8.u1;
				x9 = __load_exclusive<word64>(v32);
				x9.u1 = (word32) x9 + 1;
				union Eq_3192 * v33 = &*x8.u1;
				w10 = __store_exclusive<word64>(v33, x9);
			} while (w10 != 0x00);
		}
		Eq_14 v35 = *((word32) x19 + 64);
		word32 w8 = (word32) v35;
		x9 = *((word32) x19 + 56);
		sp->b0020 = (byte) w8;
		sp->t0018.u1 = (size_t) x9;
		x1 = (struct Eq_52210 *) &sp->t0008.u0;
		x0 = x19;
		fn000000000001C270();
		x19.u1 = sp->t0010.u1;
		if (x19 == 0x00)
		{
			x8.u1 = x23->t0028.u1;
			x9.u1 = sp->t0028.u1;
			int64 x31 = x8 - x9;
			Eq_52373 NZCV;
			NZCV.u0 = cond(x31);
			bool Z;
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				struct Eq_52383 * v39 = (struct Eq_52383 *) ((char *) &sp->ptr0030 + 48);
				x29 = v39->ptr0000;
				x30 = v39->qw0008;
				struct Eq_52392 * v40 = (struct Eq_52392 *) ((char *) &sp->ptr0030 + 32);
				x20 = v40->qw0000;
				x19.u1 = v40->t0008.u1;
				struct Eq_52401 * v41 = (struct Eq_52401 *) ((char *) &sp->ptr0030 + 16);
				x22.u1 = v41->t0000.u1;
				x21 = v41->qw0008;
				x23 = sp->ptr0030;
				sp = (struct Eq_52153 *) ((char *) &sp->ptr0030 + 64);
			}
		}
		else
			x8.u1 = (word32) x19 + 8;
	}
	else
	{
		x8 = x21 + 0x08;
		do
		{
			union Eq_3183 * v28 = &*x8.u1;
			x9 = __load_exclusive<word64>(v28);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v29 = &*x8.u1;
			w10 = __store_exclusive<word64>(v29, x9);
		} while (w10 != 0x00);
	}
}

// 0000000000035B80: void pointcloud::~pointcloud()
void pointcloud::~pointcloud()
{
	struct Eq_52414 * fp;
	struct Eq_52414 * sp = fp;
	sp = (struct Eq_52414 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_52422 * x19;
	sp->ptr0008 = x19;
	struct Eq_52427 * v8 = (struct Eq_52427 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3488);
	struct Eq_52422 * x0;
	x20 = x0->qw0030;
	x19 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 16;
	x8.u1 = (word32) x8 + 56;
	x0->t0000.u1 = (size_t) x9;
	x0->t0020.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		x8.u0 = 0x00070000;
		x20 = x19->qw0018;
		x8 = *((word32) x8 + 3664);
		x8.u1 = (word32) x8 + 16;
		x19->t0000.u1 = (size_t) x8;
		if (x20 == 0x00)
		{
			struct Eq_52476 * v12 = (struct Eq_52476 *) ((char *) &sp->ptr0008 + 8);
			x29 = v12->ptr0000;
			x30 = v12->qw0008;
			x0 = x19;
			struct Eq_52414 * v13 = sp;
			x20 = v13->qw0000;
			x19 = v13->ptr0008;
			sp = (struct Eq_52414 *) ((char *) &sp->ptr0008 + 24);
			word128 q0;
			void * x1;
			((real64) q0, x0, x1);
		}
		else
			x8 = x20 + 0x08;
	}
	else
		x8 = x20 + 0x08;
}

// 0000000000035C38: void (Register Eq_52504 x0)
void (Eq_52504 x0)
{
	struct Eq_52505 * fp;
	struct Eq_52505 * sp = fp;
	sp -= 0x40;
	struct Eq_52510 * v6 = (struct Eq_52510 *) ((char *) &sp->t0008 + 8);
	struct Eq_52512 * x22;
	v6->ptr0000 = x22;
	Eq_14 x21;
	v6->t0008.u1 = (size_t) x21;
	struct Eq_52521 * v9 = (struct Eq_52521 *) ((char *) &sp->t0008 + 24);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_52532 * v12 = (struct Eq_52532 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u1 = x22->t0028.u1;
	x20 = x0;
	Eq_14 x8;
	x19 = x8;
	sp->t0008.u1 = (size_t) x9;
	Eq_14 x1;
	x21 = *x1.u1;
	if (x21 != 0x00)
	{
		x1.u1 = &sp->t0000.u0;
		x0 = x21;
		sp->t0000.u1 = (size_t) 0x00;
		rs2_frame_add_ref();
		x0.u1 = sp->t0000.u1;
		fn000000000001ADF0();
	}
	sp->t0000.u1 = (size_t) 0x00;
	x0 = *((word32) x20 + 16);
	Eq_14 x2;
	x2.u1 = &sp->t0000.u0;
	x1 = x21;
	rs2_process_frame();
	x0.u1 = sp->t0000.u1;
	fn000000000001ADF0();
	x0.u1 = (word32) x20 + 40;
	x19.u1->u0 = 0x00;
	x1 = x19;
	fn000000000001BB60();
	ui32 w0;
	if ((w0 & 0x01) != 0x00)
	{
		x8.u1 = x22->t0028.u1;
		x9.u1 = sp->t0008.u1;
		word64 x31 = x8 - x9;
		Eq_52629 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(EQ,Z))
		{
			struct Eq_52637 * v23 = (struct Eq_52637 *) ((char *) &sp->t0008 + 40);
			x29 = v23->ptr0000;
			x30 = v23->qw0008;
			struct Eq_52646 * v24 = (struct Eq_52646 *) ((char *) &sp->t0008 + 24);
			x20.u1 = v24->t0000.u1;
			x19.u1 = v24->t0008.u1;
			struct Eq_52655 * v25 = (struct Eq_52655 *) ((char *) &sp->t0008 + 8);
			x22 = v25->ptr0000;
			x21.u1 = v25->t0008.u1;
			sp = (struct Eq_52505 *) ((char *) &sp->t0008 + 56);
			return;
		}
	}
	else
	{
		w0 = 0x00 | 0x10;
		__cxa_allocate_exception();
		x21 = x0;
		x1.u0 = 0x00052000;
		x1.u1 = (word32) x1 + 1251;
		_ZNSt13runtime_errorC1EPKc();
		x1.u0 = 0x00070000;
		x2.u0 = 0x00070000;
		x1 = *((word32) x1 + 3936);
		x2 = *((word32) x2 + 0x0E28);
		x0 = x21;
		__cxa_throw();
	}
	__stack_chk_fail();
}

// 0000000000035D44: define _ZThn32_NK3rs26filter7processENS_5frameE
define _ZThn32_NK3rs26filter7processENS_5frameE
{
	ptr64 fp;
	ptr64 sp = fp;
	word64 x0 = x0 - 0x20;
	Eq_14 x16;
	x16.u0 = 0x00070000;
	<anonymous> * x17 = (<anonymous> *) *((word32) x16 + 2656);
	x16.u1 = (word32) x16 + 2656;
	x17();
}

// 0000000000035D4C: define _ZThn32_N3rs210pointcloudD1Ev
define _ZThn32_N3rs210pointcloudD1Ev
{
	struct Eq_52677 * fp;
	struct Eq_52677 * sp = fp;
	sp = (struct Eq_52677 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_52685 * x19;
	sp->ptr0008 = x19;
	struct Eq_52690 * v8 = (struct Eq_52690 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3488);
	struct Eq_52685 * x0;
	x20 = x0->qw0010;
	x19 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 16;
	x8.u1 = (word32) x8 + 56;
	x0->tFFFFFFE0.u1 = (size_t) x9;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		x8.u0 = 0x00070000;
		x20 = x19->qwFFFFFFF8;
		x8 = *((word32) x8 + 3664);
		x8.u1 = (word32) x8 + 16;
		x19->tFFFFFFE0.u1 = (size_t) x8;
		if (x20 == 0x00)
		{
			struct Eq_52739 * v12 = (struct Eq_52739 *) ((char *) &sp->ptr0008 + 8);
			x29 = v12->ptr0000;
			x30 = v12->qw0008;
			struct Eq_52677 * v13 = sp;
			x20 = v13->qw0000;
			x19 = v13->ptr0008;
			sp = (struct Eq_52677 *) ((char *) &sp->ptr0008 + 24);
		}
		else
			x8 = x20 + 0x08;
	}
	else
		x8 = x20 + 0x08;
}

// 0000000000035E08: define _ZThn32_N3rs210pointcloudD0Ev
define _ZThn32_N3rs210pointcloudD0Ev
{
	word64 * fp;
	word64 * sp = fp;
	sp += -6;
	word64 x21;
	*sp = x21;
	struct Eq_52767 * v7 = (struct Eq_52767 *) (sp + 2);
	struct Eq_52769 * x20;
	v7->ptr0000 = x20;
	struct Eq_52769 * x19;
	v7->ptr0008 = x19;
	struct Eq_52778 * v10 = (struct Eq_52778 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3488);
	struct Eq_52769 * x0;
	x19 = x0;
	x20 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 16;
	x19 = (struct Eq_52769 *) &x19->tFFFFFFE0.u0;
	x19->t0000.u1 = (size_t) x9;
	x21 = x0->qw0010;
	x8.u1 = (word32) x8 + 56;
	x0->t0000.u1 = (size_t) x8;
	if (x21 == 0x00)
	{
		x8.u0 = 0x00070000;
		x21 = x20->qwFFFFFFF8;
		x8 = *((word32) x8 + 3664);
		x8.u1 = (word32) x8 + 16;
		x20->tFFFFFFE0.u1 = (size_t) x8;
		if (x21 == 0x00)
		{
			x0 = x19;
			struct Eq_52829 * v14 = (struct Eq_52829 *) (sp + 4);
			x29 = v14->ptr0000;
			x30 = v14->qw0008;
			struct Eq_52838 * v15 = (struct Eq_52838 *) (sp + 2);
			x20 = v15->ptr0000;
			x19 = v15->ptr0008;
			x21 = *sp;
			sp += 6;
			word128 q0;
			void * x1;
			((real64) q0, x0, x1);
		}
		else
			x8 = x21 + 0x08;
	}
	else
		x8 = x21 + 0x08;
}

// 0000000000035ECC: define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_processing_blockPFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_processing_blockPFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_52871 * v7 = (struct Eq_52871 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_52887 * v9 = (struct Eq_52887 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000035EF0: define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_processing_blockPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_processing_blockPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_52909 * fp;
	struct Eq_52909 * sp = fp;
	sp = (struct Eq_52909 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_52925 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_52909 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 0000000000035F10: define _ZNKSt6__ndk120__shared_ptr_pointerIP20rs2_processing_blockPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP20rs2_processing_blockPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_52947 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 0x0F48);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_52961 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000035F2C: define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_processing_blockPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_processing_blockPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000035F30: void frame_queue::frame_queue(Register uint32 x0, Register bool x1)
void frame_queue::frame_queue(uint32 x0, bool x1)
{
	word32 w1;
	ui32 w2;
	struct Eq_52981 * fp;
	struct Eq_52981 * sp = fp;
	sp -= 0x40;
	struct Eq_52985 * x21;
	sp->ptr0010 = x21;
	struct Eq_52990 * v7 = (struct Eq_52990 *) ((char *) &sp->ptr0010 + 16);
	Eq_14 x20;
	v7->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v7->t0008.u1 = (size_t) x19;
	struct Eq_53001 * v10 = (struct Eq_53001 *) ((char *) &sp->ptr0010 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0010 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u1 = x21->t0028.u1;
	x19 = x0;
	ui32 w10 = w2 & 0x01;
	word32 w11 = w1;
	word32 w8 = w1;
	sp->t0008.u1 = (size_t) x9;
	Eq_14 v19 = x0;
	v19.u1->u0 = 0x00;
	((word32) v19 + 8)->u0 = 0x00;
	Eq_14 x11;
	*((word32) x0 + 16) = x11;
	*((word32) x0 + 24) = (byte) w10;
	sp->t0000.u1 = (size_t) 0x00;
	x1 = (word64 *) &sp->t0000.u0;
	word32 w0 = w8;
	rs2_create_frame_queue();
	x20 = x0;
	w0 = 0x28;
	_Znwm();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F90);
	struct Eq_53067 * v24 = (struct Eq_53067 *) ((word32) x0 + 16);
	v24->qw0000 = 0x00;
	v24->t0008.u1 = (size_t) x20;
	x9.u0 = 0x00070000;
	x9 = *((word32) x9 + 0x0D50);
	x8.u1 = (word32) x8 + 16;
	Eq_14 v25 = x0;
	*v25.u1 = x8;
	((word32) v25 + 8)->u0 = 0x00;
	*((word32) x0 + 32) = x9;
	*x19.u1 = x20;
	x19.u1 = (word32) x19 + 8;
	x20 = *x19.u1;
	*x19.u1 = x0;
	if (x20 == 0x00)
	{
		x0.u1 = sp->t0000.u1;
		fn000000000001ADF0();
		x8.u1 = x21->t0028.u1;
		x9.u1 = sp->t0008.u1;
		int64 x31 = x8 - x9;
		Eq_53117 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_53127 * v29 = (struct Eq_53127 *) ((char *) &sp->ptr0010 + 32);
			x29 = v29->ptr0000;
			x30 = v29->qw0008;
			struct Eq_53136 * v30 = (struct Eq_53136 *) ((char *) &sp->ptr0010 + 16);
			x20.u1 = v30->t0000.u1;
			x19.u1 = v30->t0008.u1;
			x21 = sp->ptr0010;
			sp = (struct Eq_52981 *) ((char *) &sp->ptr0010 + 48);
		}
	}
	else
		x8.u1 = (word32) x20 + 8;
}

// 0000000000036090: void start<rs2::frame_queue>::()
void start<rs2::frame_queue>::()
{
	struct Eq_53149 * fp;
	struct Eq_53149 * sp = fp;
	sp -= 0x50;
	struct Eq_53154 * v6 = (struct Eq_53154 *) ((char *) &sp->t0018 + 8);
	struct Eq_53156 * x22;
	v6->ptr0000 = x22;
	Eq_14 x21;
	v6->t0008.u1 = (size_t) x21;
	struct Eq_53165 * v9 = (struct Eq_53165 *) ((char *) &sp->t0018 + 24);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_53176 * v12 = (struct Eq_53176 *) ((char *) &sp->t0018 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x22->t0028.u1;
	Eq_14 x1;
	x21 = x1;
	sp->t0018.u1 = (size_t) x8;
	sp->t0000.u1 = (size_t) 0x00;
	Eq_14 x0;
	x20 = *((word32) x0 + 16);
	word32 w0 = 0x28;
	_Znwm();
	Eq_14 v18 = x21;
	x8 = *v18.u1;
	x19 = *((word32) v18 + 8);
	x1 = x0;
	Eq_14 x9;
	if (x19 != 0x00)
	{
		x9.u1 = (word32) x19 + 8;
		Eq_14 w11;
		do
		{
			union Eq_3183 * v21 = &*x9.u1;
			Eq_14 x10 = __load_exclusive<word64>(v21);
			x10.u1 = (word32) x10 + 1;
			union Eq_3192 * v22 = &*x9.u1;
			w11 = __store_exclusive<word64>(v22, x10);
		} while (w11 != 0x00);
	}
	Eq_14 x11;
	x11.u0 = 0x00070000;
	x9 = *((word32) x21 + 16);
	Eq_14 v26 = *((word32) x21 + 24);
	Eq_14 w10;
	w10.u1 = (word32) v26;
	x11 = *((word32) x11 + 4000);
	*((word32) x1 + 16) = x19;
	sp->t0008.u1 = (size_t) x9;
	sp->b0010 = (byte) w10;
	x11.u1 = (word32) x11 + 16;
	Eq_14 v27 = x1;
	*v27.u1 = x11;
	*((word32) v27 + 8) = x8;
	if (x19 != 0x00)
	{
		x8.u1 = (word32) x19 + 8;
		do
		{
			union Eq_3183 * v28 = &*x8.u1;
			x9 = __load_exclusive<word64>(v28);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v29 = &*x8.u1;
			w10 = __store_exclusive<word64>(v29, x9);
		} while (w10 != 0x00);
	}
	byte v31 = sp->b0010;
	word32 w8 = (word32) v31;
	x9.u1 = sp->t0008.u1;
	((word32) x1 + 32)->u0 = (byte) w8;
	*((word32) x1 + 24) = x9;
	word64 * x2 = (word64 *) &sp->t0000.u0;
	x0 = x20;
	rs2_start_processing();
	if (x19 == 0x00)
	{
		x0.u1 = sp->t0000.u1;
		fn000000000001ADF0();
		x8.u1 = x22->t0028.u1;
		x9.u1 = sp->t0018.u1;
		int64 x31 = x8 - x9;
		Eq_53333 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_53343 * v36 = (struct Eq_53343 *) ((char *) &sp->t0018 + 40);
			x29 = v36->ptr0000;
			x30 = v36->qw0008;
			struct Eq_53352 * v37 = (struct Eq_53352 *) ((char *) &sp->t0018 + 24);
			x20.u1 = v37->t0000.u1;
			x19.u1 = v37->t0008.u1;
			struct Eq_53361 * v38 = (struct Eq_53361 *) ((char *) &sp->t0018 + 8);
			x22 = v38->ptr0000;
			x21.u1 = v38->t0008.u1;
			sp = (struct Eq_53149 *) ((char *) &sp->t0018 + 56);
		}
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 00000000000361E0: void filter::~filter()
void filter::~filter()
{
	struct Eq_53371 * fp;
	struct Eq_53371 * sp = fp;
	sp = (struct Eq_53371 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_53379 * x19;
	sp->ptr0008 = x19;
	struct Eq_53384 * v8 = (struct Eq_53384 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3488);
	struct Eq_53379 * x0;
	x20 = x0->qw0030;
	x19 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 16;
	x8.u1 = (word32) x8 + 56;
	x0->t0000.u1 = (size_t) x9;
	x0->t0020.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		x8.u0 = 0x00070000;
		x20 = x19->qw0018;
		x8 = *((word32) x8 + 3664);
		x8.u1 = (word32) x8 + 16;
		x19->t0000.u1 = (size_t) x8;
		if (x20 == 0x00)
		{
			struct Eq_53433 * v12 = (struct Eq_53433 *) ((char *) &sp->ptr0008 + 8);
			x29 = v12->ptr0000;
			x30 = v12->qw0008;
			x0 = x19;
			struct Eq_53371 * v13 = sp;
			x20 = v13->qw0000;
			x19 = v13->ptr0008;
			sp = (struct Eq_53371 *) ((char *) &sp->ptr0008 + 24);
			word128 q0;
			void * x1;
			((real64) q0, x0, x1);
		}
		else
			x8 = x20 + 0x08;
	}
	else
		x8 = x20 + 0x08;
}

// 0000000000036298: define _ZThn32_N3rs26filterD1Ev
define _ZThn32_N3rs26filterD1Ev
{
	struct Eq_53461 * fp;
	struct Eq_53461 * sp = fp;
	sp = (struct Eq_53461 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_53469 * x19;
	sp->ptr0008 = x19;
	struct Eq_53474 * v8 = (struct Eq_53474 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3488);
	struct Eq_53469 * x0;
	x20 = x0->qw0010;
	x19 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 16;
	x8.u1 = (word32) x8 + 56;
	x0->tFFFFFFE0.u1 = (size_t) x9;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		x8.u0 = 0x00070000;
		x20 = x19->qwFFFFFFF8;
		x8 = *((word32) x8 + 3664);
		x8.u1 = (word32) x8 + 16;
		x19->tFFFFFFE0.u1 = (size_t) x8;
		if (x20 == 0x00)
		{
			struct Eq_53523 * v12 = (struct Eq_53523 *) ((char *) &sp->ptr0008 + 8);
			x29 = v12->ptr0000;
			x30 = v12->qw0008;
			struct Eq_53461 * v13 = sp;
			x20 = v13->qw0000;
			x19 = v13->ptr0008;
			sp = (struct Eq_53461 *) ((char *) &sp->ptr0008 + 24);
		}
		else
			x8 = x20 + 0x08;
	}
	else
		x8 = x20 + 0x08;
}

// 0000000000036354: define _ZThn32_N3rs26filterD0Ev
define _ZThn32_N3rs26filterD0Ev
{
	word64 * fp;
	word64 * sp = fp;
	sp += -6;
	word64 x21;
	*sp = x21;
	struct Eq_53551 * v7 = (struct Eq_53551 *) (sp + 2);
	struct Eq_53553 * x20;
	v7->ptr0000 = x20;
	struct Eq_53553 * x19;
	v7->ptr0008 = x19;
	struct Eq_53562 * v10 = (struct Eq_53562 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3488);
	struct Eq_53553 * x0;
	x19 = x0;
	x20 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 16;
	x19 = (struct Eq_53553 *) &x19->tFFFFFFE0.u0;
	x19->t0000.u1 = (size_t) x9;
	x21 = x0->qw0010;
	x8.u1 = (word32) x8 + 56;
	x0->t0000.u1 = (size_t) x8;
	if (x21 == 0x00)
	{
		x8.u0 = 0x00070000;
		x21 = x20->qwFFFFFFF8;
		x8 = *((word32) x8 + 3664);
		x8.u1 = (word32) x8 + 16;
		x20->tFFFFFFE0.u1 = (size_t) x8;
		if (x21 == 0x00)
		{
			x0 = x19;
			struct Eq_53613 * v14 = (struct Eq_53613 *) (sp + 4);
			x29 = v14->ptr0000;
			x30 = v14->qw0008;
			struct Eq_53622 * v15 = (struct Eq_53622 *) (sp + 2);
			x20 = v15->ptr0000;
			x19 = v15->ptr0008;
			x21 = *sp;
			sp += 6;
			word128 q0;
			void * x1;
			((real64) q0, x0, x1);
		}
		else
			x8 = x21 + 0x08;
	}
	else
		x8 = x21 + 0x08;
}

// 0000000000036418: void processing_block::~processing_block()
void processing_block::~processing_block()
{
	word64 * fp;
	word64 * sp = fp;
	sp += -4;
	word64 x19;
	*sp = x19;
	struct Eq_53655 * v7 = (struct Eq_53655 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_53668 * x0;
	x19 = x0->qw0018;
	x8 = *((word32) x8 + 3664);
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x19 == 0x00)
	{
		struct Eq_53683 * v10 = (struct Eq_53683 *) (sp + 2);
		x29 = v10->ptr0000;
		x30 = v10->qw0008;
		x19 = *sp;
		sp += 4;
	}
	else
		x8 = x19 + 0x08;
}

// 0000000000036480: void processing_block::~processing_block()
void processing_block::~processing_block()
{
	struct Eq_53698 * fp;
	struct Eq_53698 * sp = fp;
	sp = (struct Eq_53698 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_53706 * x19;
	sp->ptr0008 = x19;
	struct Eq_53711 * v8 = (struct Eq_53711 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_53706 * x0;
	x20 = x0->qw0018;
	x8 = *((word32) x8 + 3664);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_53739 * v11 = (struct Eq_53739 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_53698 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_53698 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 00000000000364E8: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_frame_queuePFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_frame_queuePFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_53776 * v7 = (struct Eq_53776 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_53792 * v9 = (struct Eq_53792 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003650C: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_frame_queuePFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_frame_queuePFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_53814 * fp;
	struct Eq_53814 * sp = fp;
	sp = (struct Eq_53814 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_53830 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_53814 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 000000000003652C: define _ZNKSt6__ndk120__shared_ptr_pointerIP15rs2_frame_queuePFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP15rs2_frame_queuePFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_53852 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 3944);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_53866 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000036548: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_frame_queuePFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_frame_queuePFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003654C: void frame_callback<rs2::frame_queue>::on_frame(Register (ptr64 Eq_53884) x0)
void frame_callback<rs2::frame_queue>::on_frame(rs2_frame * x0)
{
	struct Eq_53885 * fp;
	struct Eq_53885 * sp = fp;
	sp = (struct Eq_53885 *) ((char *) sp - 32);
	struct Eq_53889 * x20;
	sp->ptr0000 = x20;
	struct Eq_53889 * x19;
	sp->ptr0008 = x19;
	struct Eq_53898 * v8 = (struct Eq_53898 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	byte v11 = x0->b0020;
	word32 w8 = (word32) v11;
	x20 = x0;
	struct Eq_53889 * x1;
	x19 = x1;
	if (w8 != 0x00)
	{
		x0 = x19;
		rs2_keep_frame();
	}
	x1 = x20->ptr0008;
	x0 = x19;
	rs2_enqueue_frame();
	struct Eq_53926 * v13 = (struct Eq_53926 *) ((char *) &sp->ptr0008 + 8);
	x29 = v13->ptr0000;
	x30 = v13->qw0008;
	struct Eq_53885 * v14 = sp;
	x20 = v14->ptr0000;
	x19 = v14->ptr0008;
	sp = (struct Eq_53885 *) ((char *) &sp->ptr0008 + 24);
}

// 00000000000365A4: void frame_callback<rs2::frame_queue>::release()
void frame_callback<rs2::frame_queue>::release()
{
	ptr64 fp;
	ptr64 sp = fp;
	struct Eq_53952 ** x0;
	if (x0 == null)
		return;
	struct Eq_53952 * x8 = (struct Eq_53952 *) *x0;
	<anonymous> * x1 = x8->ptr0018;
	x1();
}

// 00000000000365B8: void frame_callback<rs2::frame_queue>::~frame_callback<rs2::frame_queue>()
void frame_callback<rs2::frame_queue>::~frame_callback<rs2::frame_queue>()
{
	word64 * fp;
	word64 * sp = fp;
	sp += -4;
	word64 x19;
	*sp = x19;
	struct Eq_53967 * v7 = (struct Eq_53967 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_53980 * x0;
	x19 = x0->qw0010;
	x8 = *((word32) x8 + 4000);
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x19 == 0x00)
	{
		struct Eq_53995 * v10 = (struct Eq_53995 *) (sp + 2);
		x29 = v10->ptr0000;
		x30 = v10->qw0008;
		x19 = *sp;
		sp += 4;
	}
	else
		x8 = x19 + 0x08;
}

// 0000000000036620: void frame_callback<rs2::frame_queue>::~frame_callback<rs2::frame_queue>()
void frame_callback<rs2::frame_queue>::~frame_callback<rs2::frame_queue>()
{
	struct Eq_54010 * fp;
	struct Eq_54010 * sp = fp;
	sp = (struct Eq_54010 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_54018 * x19;
	sp->ptr0008 = x19;
	struct Eq_54023 * v8 = (struct Eq_54023 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_54018 * x0;
	x20 = x0->qw0010;
	x8 = *((word32) x8 + 4000);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_54051 * v11 = (struct Eq_54051 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_54010 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_54010 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 0000000000036688: void rs2_frame_callback::~rs2_frame_callback()
void rs2_frame_callback::~rs2_frame_callback()
{
	ptr64 fp;
	ptr64 sp = fp;
}

// 000000000003668C: define _ZNK3rs211frame_queue14poll_for_frameINS_5frameEEENSt6__ndk19enable_ifIXsr3std10is_base_ofIS2_T_EE5valueEbE4typeEPS5_
define _ZNK3rs211frame_queue14poll_for_frameINS_5frameEEENSt6__ndk19enable_ifIXsr3std10is_base_ofIS2_T_EE5valueEbE4typeEPS5_
{
	word32 w0;
	struct Eq_54081 * fp;
	struct Eq_54081 * sp = fp;
	sp -= 0x50;
	struct Eq_54086 * v6 = (struct Eq_54086 *) ((char *) &sp->ptr0018 + 8);
	struct Eq_54088 * x22;
	v6->ptr0000 = x22;
	word64 * x21;
	v6->ptr0008 = x21;
	struct Eq_54097 * v9 = (struct Eq_54097 *) ((char *) &sp->ptr0018 + 24);
	struct Eq_54099 * x20;
	v9->ptr0000 = x20;
	word64 x19;
	v9->qw0008 = x19;
	struct Eq_54108 * v12 = (struct Eq_54108 *) ((char *) &sp->ptr0018 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->ptr0018 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	struct Eq_54099 * x8 = x22->ptr0028;
	word64 * x1;
	x21 = x1;
	x1 = &sp->ptr0000;
	ptr64 x2 = &sp->ptr0008;
	sp->ptr0018 = x8;
	struct Eq_54081 * v17 = sp;
	v17->ptr0000 = null;
	v17->ptr0008 = null;
	struct Eq_54099 * x0 = x0->ptr0000;
	rs2_poll_for_frame();
	x8 = sp->ptr0008;
	word32 w19 = w0;
	x0 = x8;
	fn000000000001ADF0();
	x20 = sp->ptr0000;
	if (w19 != 0x00)
	{
		if (x20 != null)
		{
			sp->ptr0010 = null;
			x1 = &sp->ptr0010;
			x0 = x20;
			rs2_frame_add_ref();
			x0 = sp->ptr0010;
			fn000000000001ADF0();
		}
		x0 = *x21;
		*x21 = x20;
		if (x0 != null)
			rs2_release_frame();
	}
	if (x20 != null)
	{
		x0 = x20;
		rs2_release_frame();
	}
	x8 = x22->ptr0028;
	struct Eq_54099 * x9 = sp->ptr0018;
	Eq_54196 NZCV;
	NZCV.u0 = cond(w19 - 0x00);
	word32 NZV;
	w0 = (word32) Test(GT,NZV);
	word64 x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_54212 * v26 = (struct Eq_54212 *) ((char *) &sp->ptr0018 + 40);
		x29 = v26->ptr0000;
		x30 = v26->qw0008;
		struct Eq_54221 * v27 = (struct Eq_54221 *) ((char *) &sp->ptr0018 + 24);
		x20 = v27->ptr0000;
		x19 = v27->qw0008;
		struct Eq_54230 * v28 = (struct Eq_54230 *) ((char *) &sp->ptr0018 + 8);
		x22 = v28->ptr0000;
		x21 = v28->ptr0008;
		sp = (struct Eq_54081 *) ((char *) &sp->ptr0018 + 56);
	}
}

// 0000000000036764: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
{
	struct Eq_54242 * fp;
	struct Eq_54242 * sp = fp;
	struct Eq_54244 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_54242 *) ((char *) sp - 32);
	struct Eq_54244 * x20;
	sp->ptr0000 = x20;
	struct Eq_54244 * x19;
	sp->ptr0008 = x19;
	struct Eq_54258 * v9 = (struct Eq_54258 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_54244 * x0;
	x20 = x0;
	fn000000000001BDB0();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001BDB0();
	byte v12 = x19->b0020;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_54290 * v14 = (struct Eq_54290 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_54242 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_54242 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 00000000000367B4: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
{
	struct Eq_54325 * fp;
	struct Eq_54325 * sp = fp;
	struct Eq_54327 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_54325 *) ((char *) sp - 32);
	struct Eq_54327 * x20;
	sp->ptr0000 = x20;
	struct Eq_54327 * x19;
	sp->ptr0008 = x19;
	struct Eq_54341 * v9 = (struct Eq_54341 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_54327 * x0;
	x20 = x0;
	fn000000000001B660();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001B660();
	byte v12 = x19->b0020;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_54373 * v14 = (struct Eq_54373 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_54325 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_54325 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000036804: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
{
	struct Eq_54408 * fp;
	struct Eq_54408 * sp = fp;
	struct Eq_54410 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_54408 *) ((char *) sp - 32);
	struct Eq_54410 * x20;
	sp->ptr0000 = x20;
	struct Eq_54410 * x19;
	sp->ptr0008 = x19;
	struct Eq_54424 * v9 = (struct Eq_54424 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_54410 * x0;
	x20 = x0;
	fn000000000001C2D0();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001C2D0();
	x0 = (struct Eq_54410 *) ((char *) &x19->ptr0008 + 24);
	fn000000000001B100();
	struct Eq_54450 * v11 = (struct Eq_54450 *) ((char *) &sp->ptr0008 + 8);
	x29 = v11->ptr0000;
	x30 = v11->qw0008;
	x0 = x19;
	struct Eq_54408 * v12 = sp;
	x20 = v12->ptr0000;
	x19 = v12->ptr0008;
	sp = (struct Eq_54408 *) ((char *) &sp->ptr0008 + 24);
	word128 q0;
	((real64) q0, x0, x1);
}

// 000000000003684C: define _ZNSt6__ndk14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEED2Ev
define _ZNSt6__ndk14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEED2Ev
{
	word64 * fp;
	word64 * sp = fp;
	sp += -6;
	word64 x21;
	*sp = x21;
	struct Eq_54484 * v7 = (struct Eq_54484 *) (sp + 2);
	struct Eq_54486 * x20;
	v7->ptr0000 = x20;
	struct Eq_54486 * x19;
	v7->ptr0008 = x19;
	struct Eq_54495 * v10 = (struct Eq_54495 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	struct Eq_54486 * x0;
	x19 = x0;
	x0 = (struct Eq_54486 *) ((char *) &x0->ptr0040 + 24);
	_ZNSt6__ndk16threadD1Ev();
	x20 = x19->ptr0040;
	word64 x8;
	if (x20 == null)
	{
		x20 = x19->ptr0030;
		x19->ptr0030 = null;
		word128 q0;
		void * x1;
		if (x20 != null)
		{
			x21 = x20->qw0008;
			if (x21 != 0x00)
				x8 = x21 + 0x08;
			x0 = x20;
			((real64) q0, x0, x1);
		}
		byte v14 = x19->b0018;
		ui32 w8 = (word32) v14;
		if ((w8 & 0x01) != 0x00)
		{
			x0 = x19->ptr0028;
			((real64) q0, x0, x1);
		}
		byte v17 = x19->b0000;
		w8 = (word32) v17;
		if ((w8 & 0x01) == 0x00)
		{
			x0 = x19->ptr0010;
			struct Eq_54578 * v20 = (struct Eq_54578 *) (sp + 4);
			x29 = v20->ptr0000;
			x30 = v20->qw0008;
			struct Eq_54587 * v21 = (struct Eq_54587 *) (sp + 2);
			x20 = v21->ptr0000;
			x19 = v21->ptr0008;
			x21 = *sp;
			sp += 6;
			((real64) q0, x0, x1);
		}
		else
		{
			struct Eq_54608 * v18 = (struct Eq_54608 *) (sp + 4);
			x29 = v18->ptr0000;
			x30 = v18->qw0008;
			struct Eq_54617 * v19 = (struct Eq_54617 *) (sp + 2);
			x20 = v19->ptr0000;
			x19 = v19->ptr0008;
			x21 = *sp;
			sp += 6;
		}
	}
	else
		x8 = &x20->qw0008;
}

// 0000000000036928: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEdEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEdEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
{
	struct Eq_54630 * fp;
	struct Eq_54630 * sp = fp;
	struct Eq_54632 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_54630 *) ((char *) sp - 32);
	struct Eq_54632 * x20;
	sp->ptr0000 = x20;
	struct Eq_54632 * x19;
	sp->ptr0008 = x19;
	struct Eq_54646 * v9 = (struct Eq_54646 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_54632 * x0;
	x20 = x0;
	fn000000000001C370();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001C370();
	byte v12 = x19->b0020;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_54678 * v14 = (struct Eq_54678 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_54630 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_54630 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000036978: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8pudutech9RGBD_INFOEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8pudutech9RGBD_INFOEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
{
	struct Eq_54713 * fp;
	struct Eq_54713 * sp = fp;
	struct Eq_54715 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_54713 *) ((char *) sp - 32);
	struct Eq_54715 * x20;
	sp->ptr0000 = x20;
	struct Eq_54715 * x19;
	sp->ptr0008 = x19;
	struct Eq_54729 * v9 = (struct Eq_54729 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_54715 * x0;
	x20 = x0;
	fn000000000001BAE0();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001BAE0();
	byte v12 = x19->b0078;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0088;
		((real64) q0, x0, x1);
	}
	byte v14 = x19->b0020;
	w8 = (word32) v14;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_54781 * v15 = (struct Eq_54781 *) ((char *) &sp->ptr0008 + 8);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	x0 = x19;
	struct Eq_54713 * v16 = sp;
	x20 = v16->ptr0000;
	x19 = v16->ptr0008;
	sp = (struct Eq_54713 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 00000000000369D8: define _ZNSt6__ndk16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
{
	struct Eq_54815 * fp;
	struct Eq_54815 * sp = fp;
	struct Eq_54817 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_54815 *) ((char *) sp - 32);
	struct Eq_54817 * x20;
	sp->ptr0000 = x20;
	struct Eq_54817 * x19;
	sp->ptr0008 = x19;
	struct Eq_54831 * v9 = (struct Eq_54831 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_54817 * x0;
	x20 = x0;
	fn000000000001C0A0();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001C0A0();
	byte v12 = x19->b0028;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	struct Eq_54863 * v14 = (struct Eq_54863 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_54815 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_54815 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000036A28: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_device_listPFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_device_listPFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_54907 * v7 = (struct Eq_54907 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_54923 * v9 = (struct Eq_54923 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000036A4C: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_device_listPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_device_listPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_54945 * fp;
	struct Eq_54945 * sp = fp;
	sp = (struct Eq_54945 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_54961 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_54945 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 0000000000036A6C: define _ZNKSt6__ndk120__shared_ptr_pointerIP15rs2_device_listPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP15rs2_device_listPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_54983 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 0x0DA8);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_54997 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000036A88: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_device_listPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_device_listPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000036A8C: define _ZNK3rs211device_listixEj
define _ZNK3rs211device_listixEj
{
	struct Eq_55015 * fp;
	struct Eq_55015 * sp = fp;
	sp -= 0x50;
	Eq_14 x23;
	sp->t0010.u1 = (size_t) x23;
	struct Eq_55024 * v7 = (struct Eq_55024 *) ((char *) &sp->t0010 + 16);
	struct Eq_55026 * x22;
	v7->ptr0000 = x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_55035 * v10 = (struct Eq_55035 *) ((char *) &sp->t0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_55046 * v13 = (struct Eq_55046 *) ((char *) &sp->t0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->t0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u1 = x22->t0028.u1;
	ptr64 x2 = &sp->t0000.u0;
	Eq_14 x8;
	x21 = x8;
	sp->t0008.u1 = (size_t) x9;
	sp->t0000.u1 = (size_t) 0x00;
	Eq_14 x0 = *x0.u1;
	rs2_create_device();
	x20 = x0;
	word32 w0 = 0x28;
	_Znwm();
	((word32) x0 + 16)->u0 = 0x00;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0ED0);
	x9.u0 = 0x00070000;
	x19 = x0;
	x23 = x0;
	x9 = *((word32) x9 + 0x0DF8);
	x0.u1 = sp->t0000.u1;
	x23.u1 = (word32) x23 + 8;
	x23.u1->u0 = 0x00;
	x8.u1 = (word32) x8 + 16;
	*x19.u1 = x8;
	struct Eq_55112 * v20 = (struct Eq_55112 *) ((word32) x19 + 24);
	v20->t0000.u1 = (size_t) x20;
	v20->t0008.u1 = (size_t) x9;
	fn000000000001ADF0();
	Eq_14 w9;
	do
	{
		union Eq_3183 * v21 = &*x23.u1;
		x8 = __load_exclusive<word64>(v21);
		x8.u1 = (word32) x8 + 1;
		union Eq_3192 * v22 = &*x23.u1;
		w9 = __store_exclusive<word64>(v22, x8);
	} while (w9 != 0x00);
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0DC0);
	*((word32) x21 + 16) = x19;
	x8.u1 = (word32) x8 + 16;
	Eq_14 v24 = x21;
	*v24.u1 = x8;
	*((word32) v24 + 8) = x20;
	do
	{
		union Eq_3183 * v25 = &*x23.u1;
		x8 = __load_exclusive<word64>(v25);
		x8.u1 = (word32) x8 + 1;
		union Eq_3192 * v26 = &*x23.u1;
		w9 = __store_exclusive<word64>(v26, x8);
	} while (w9 != 0x00);
}

// 0000000000036C14: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_devicePFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_devicePFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_55182 * v7 = (struct Eq_55182 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_55198 * v9 = (struct Eq_55198 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000036C38: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_devicePFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_devicePFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_55220 * fp;
	struct Eq_55220 * sp = fp;
	sp = (struct Eq_55220 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_55236 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_55220 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 0000000000036C58: define _ZNKSt6__ndk120__shared_ptr_pointerIP10rs2_devicePFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP10rs2_devicePFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_55258 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 0x0CB0);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_55272 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000036C74: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_devicePFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_devicePFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000036C78: void device::~device()
void device::~device()
{
	struct Eq_55290 * fp;
	struct Eq_55290 * sp = fp;
	sp = (struct Eq_55290 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_55298 * x19;
	sp->ptr0008 = x19;
	struct Eq_55303 * v8 = (struct Eq_55303 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_55298 * x0;
	x20 = x0->qw0010;
	x8 = *((word32) x8 + 0x0DC0);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_55331 * v11 = (struct Eq_55331 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_55290 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_55290 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 0000000000036CE0: define _ZNSt6__ndk16__treeINS_12__value_typeI15rs2_camera_infoNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS2_S9_NS_4lessIS2_EELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeI15rs2_camera_infoNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS2_S9_NS_4lessIS2_EELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE
{
	struct Eq_55359 * fp;
	struct Eq_55359 * sp = fp;
	struct Eq_55361 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_55359 *) ((char *) sp - 32);
	struct Eq_55361 * x20;
	sp->ptr0000 = x20;
	struct Eq_55361 * x19;
	sp->ptr0008 = x19;
	struct Eq_55375 * v9 = (struct Eq_55375 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_55361 * x0;
	x20 = x0;
	fn000000000001B760();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001B760();
	byte v12 = x19->b0028;
	ui32 w8 = (word32) v12;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0038;
		((real64) q0, x0, x1);
	}
	struct Eq_55407 * v14 = (struct Eq_55407 *) ((char *) &sp->ptr0008 + 8);
	x29 = v14->ptr0000;
	x30 = v14->qw0008;
	x0 = x19;
	struct Eq_55359 * v15 = sp;
	x20 = v15->ptr0000;
	x19 = v15->ptr0008;
	sp = (struct Eq_55359 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 0000000000036D30: void sensor::~sensor()
void sensor::~sensor()
{
	struct Eq_55442 * fp;
	struct Eq_55442 * sp = fp;
	sp = (struct Eq_55442 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_55450 * x19;
	sp->ptr0008 = x19;
	struct Eq_55455 * v8 = (struct Eq_55455 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_55450 * x0;
	x20 = x0->qw0018;
	x8 = *((word32) x8 + 0x0C68);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_55483 * v11 = (struct Eq_55483 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_55442 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_55442 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 0000000000036D98: define _ZN4rgbd9RGBDParamC2ERKS0_
define _ZN4rgbd9RGBDParamC2ERKS0_
{
	Eq_14 x1;
	struct Eq_55511 * fp;
	struct Eq_55511 * sp = fp;
	sp = (struct Eq_55511 *) ((char *) sp - 80);
	Eq_14 x26;
	sp->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	sp->t0008.u1 = (size_t) x25;
	struct Eq_55524 * v8 = (struct Eq_55524 *) ((char *) &sp->t0008 + 8);
	Eq_14 x24;
	v8->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v8->t0008.u1 = (size_t) x23;
	struct Eq_55535 * v11 = (struct Eq_55535 *) ((char *) &sp->t0008 + 24);
	Eq_14 x22;
	v11->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v11->t0008.u1 = (size_t) x21;
	struct Eq_55546 * v14 = (struct Eq_55546 *) ((char *) &sp->t0008 + 40);
	Eq_14 x20;
	v14->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v14->t0008.u1 = (size_t) x19;
	struct Eq_55557 * v17 = (struct Eq_55557 *) ((char *) &sp->t0008 + 56);
	ptr64 x29;
	v17->ptr0000 = x29;
	word64 x30;
	v17->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 56;
	Eq_14 q0;
	q0.u0 = 0;
	Eq_14 x0;
	x20 = x0;
	((word32) x0 + 32)->u0 = 0x00;
	x20.u1 = (word32) x20 + 16;
	*x20.u1 = q0;
	*x0.u1 = q0;
	Eq_14 x8 = x1;
	x8.u1 = (word32) x8 + 16;
	Eq_14 v23 = *x8.u1;
	ui32 w9 = (word32) v23;
	x22 = x1;
	x19 = x0;
	Eq_14 x9;
	if ((w9 & 0x01) != 0x00)
	{
		x9 = *((word32) x8 + 16);
		q0 = *x8.u1;
		*((word32) x20 + 16) = x9;
		*x20.u1 = q0;
		goto l0000000000036E4C;
	}
	x21 = *((word32) x22 + 24);
	sp = (struct Eq_55511 *) ((word32) x21 + 16);
	Eq_55603 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x20;
		fn000000000001B2D0();
		goto l0000000000036FE4;
	}
	x23 = *((word32) x22 + 32);
	NZCV.u0 = cond(x21 - 0x17);
	Eq_14 w8;
	if (Test(ULT,C))
	{
		ui32 w21;
		w8 = w21 << 1;
		x24 = x20;
		*x24.u1 = (byte) w8;
		x24.u1 = (word32) x24 + 1;
		if (x21 == 0x00)
			goto l0000000000036E48;
	}
	else
	{
		x8.u1 = (word32) x21 + 16;
		x25 = x8 & ~0x0F;
		x0 = x25;
		_Znwm();
		x8 = x25 | 0x01;
		x24 = x0;
		struct Eq_55675 * v47 = (struct Eq_55675 *) ((word32) x19 + 24);
		v47->t0000.u1 = (size_t) x21;
		v47->t0008.u1 = (size_t) x0;
		*((word32) x19 + 16) = x8;
	}
	x0 = x24;
	x1 = x23;
	Eq_14 x2 = x21;
	x0 = memcpy(x0, x1, x2);
l0000000000036E48:
	*(x24 + x21) = (word64) 0x00;
l0000000000036E4C:
	Eq_14 v29 = *((word32) x22 + 40);
	w8.u1 = (word32) v29;
	x21 = x19;
	x21.u1 = (word32) x21 + 48;
	x21.u1->u0 = 0x00;
	struct Eq_55633 * v30 = (struct Eq_55633 *) ((word32) x21 + 8);
	v30->qw0000 = 0x00;
	v30->qw0008 = 0x00;
	((word32) x21 - 8)->u0 = (byte) w8;
	x8 = x22;
	x8.u1 = (word32) x8 + 48;
	Eq_14 v31 = *x8.u1;
	w9 = (word32) v31;
	if ((w9 & 0x01) != 0x00)
	{
		x9 = *((word32) x8 + 16);
		q0 = *x8.u1;
		*((word32) x21 + 16) = x9;
		*x21.u1 = q0;
		goto l0000000000036EE0;
	}
	x23 = *((word32) x22 + 56);
	sp = (struct Eq_55511 *) ((word32) x23 + 16);
	NZCV.u0 = cond(sp);
	if (Test(ULT,C))
	{
		x24 = *((word32) x22 + 64);
		NZCV.u0 = cond(x23 - 0x17);
		if (Test(ULT,C))
		{
			ui32 w23;
			w8 = w23 << 1;
			x25 = x21;
			*x25.u1 = (byte) w8;
			x25.u1 = (word32) x25 + 1;
			if (x23 == 0x00)
				goto l0000000000036EDC;
		}
		else
		{
			x8.u1 = (word32) x23 + 16;
			x26 = x8 & ~0x0F;
			x0 = x26;
			_Znwm();
			x8 = x26 | 0x01;
			x25 = x0;
			struct Eq_55775 * v45 = (struct Eq_55775 *) ((word32) x19 + 56);
			v45->t0000.u1 = (size_t) x23;
			v45->t0008.u1 = (size_t) x0;
			*((word32) x19 + 48) = x8;
		}
		x0 = x25;
		x1 = x24;
		x2 = x23;
		x0 = memcpy(x0, x1, x2);
l0000000000036EDC:
		*(x25 + x23) = (word64) 0x00;
l0000000000036EE0:
		Eq_14 v33 = *((word32) x22 + 72);
		w8.u1 = (word32) v33;
		*((word32) x19 + 72) = (byte) w8;
		x8 = *((word32) x22 + 80);
		*((word32) x19 + 80) = x8;
		x8 = *((word32) x22 + 88);
		*((word32) x19 + 88) = x8;
		if (x8 != 0x00)
		{
			x8.u1 = (word32) x8 + 8;
			Eq_14 w10;
			do
			{
				union Eq_3183 * v34 = &*x8.u1;
				x9 = __load_exclusive<word64>(v34);
				x9.u1 = (word32) x9 + 1;
				union Eq_3192 * v35 = &*x8.u1;
				w10 = __store_exclusive<word64>(v35, x9);
			} while (w10 != 0x00);
		}
		w8 = *((word32) x22 + 0x0068);
		x9 = *((word32) x22 + 96);
		x23.u1 = (word32) x19 + 112;
		*((word32) x19 + 0x0068) = w8;
		*((word32) x19 + 96) = x9;
		x0 = *((word32) x22 + 144);
		Eq_55857 x31;
		bool Z;
		if (x0 != 0x00)
		{
			x8.u1 = (word32) x22 + 112;
			x31 = x8 - x0;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
			{
				x8 = *x0.u1;
				x8 = *((word32) x8 + 16);
				x8();
				*((word32) x19 + 144) = x0;
				x0 = *((word32) x22 + 0x00C0);
				if (x0 == 0x00)
				{
l0000000000036FA4:
					((word32) x19 + 0x00C0)->u0 = 0x00;
					goto l0000000000036FC4;
				}
			}
			else
			{
				*((word32) x19 + 144) = x23;
				x0 = *((word32) x22 + 144);
				x8 = *x0.u1;
				x8 = *((word32) x8 + 24);
				x1 = x23;
				x8();
				x0 = *((word32) x22 + 0x00C0);
				if (x0 == 0x00)
					goto l0000000000036FA4;
			}
		}
		else
		{
			((word32) x19 + 144)->u0 = 0x00;
			x0 = *((word32) x22 + 0x00C0);
			if (x0 == 0x00)
				goto l0000000000036FA4;
		}
		x8.u1 = (word32) x22 + 0x00A0;
		x31 = x8 - x0;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x8 = *x0.u1;
			x8 = *((word32) x8 + 16);
			x8();
			*((word32) x19 + 0x00C0) = x0;
		}
		else
		{
			x1.u1 = (word32) x19 + 0x00A0;
			*((word32) x19 + 0x00C0) = x1;
			x0 = *((word32) x22 + 0x00C0);
			x8 = *x0.u1;
			x8 = *((word32) x8 + 24);
			x8();
		}
l0000000000036FC4:
		struct Eq_55903 * v40 = (struct Eq_55903 *) ((char *) &sp->t0008 + 56);
		x29 = v40->ptr0000;
		x30 = v40->qw0008;
		struct Eq_55912 * v41 = (struct Eq_55912 *) ((char *) &sp->t0008 + 40);
		x20.u1 = v41->t0000.u1;
		x19.u1 = v41->t0008.u1;
		struct Eq_55921 * v42 = (struct Eq_55921 *) ((char *) &sp->t0008 + 24);
		x22.u1 = v42->t0000.u1;
		x21.u1 = v42->t0008.u1;
		struct Eq_55930 * v43 = (struct Eq_55930 *) ((char *) &sp->t0008 + 8);
		x24.u1 = v43->t0000.u1;
		x23.u1 = v43->t0008.u1;
		struct Eq_55511 * v44 = sp;
		x26.u1 = v44->t0000.u1;
		x25.u1 = v44->t0008.u1;
		sp = (struct Eq_55511 *) ((char *) &sp->t0008 + 72);
		return;
	}
l0000000000036FE4:
	x0 = x21;
	fn000000000001B2D0();
	x22 = x0;
	Eq_14 v46 = *x20.u1;
	w8.u1 = (word32) v46;
	while ((w8 & 0x01) != 0x00)
	{
		x0 = *((word32) x19 + 32);
		((real64) q0, x0, x1);
		x0 = *((word32) x19 + 8);
		if (x0 != 0x00)
		{
l00000000000370C4:
			_ZNSt6__ndk119__shared_weak_count14__release_weakEv();
			x0 = x22;
			_Unwind_Resume();
			_ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertIPKhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISA_EE5valueENS_11__wrap_iterIPcEEE4typeENSB_IPKcEESA_SA_();
			return;
		}
l000000000003709C:
		x0 = x22;
		_Unwind_Resume();
		x0 = *((word32) x19 + 64);
		((real64) q0, x0, x1);
		Eq_14 v48 = *x20.u1;
		w8.u1 = (word32) v48;
	}
	x0 = *((word32) x19 + 8);
	if (x0 != 0x00)
		goto l00000000000370C4;
	goto l000000000003709C;
}

// 00000000000370D0: define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertIPKhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISA_EE5valueENS_11__wrap_iterIPcEEE4typeENSB_IPKcEESA_SA_
// Called from:
//      _ZN4rgbd9RGBDParamC2ERKS0_
define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertIPKhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISA_EE5valueENS_11__wrap_iterIPcEEE4typeENSB_IPKcEESA_SA_
{
	struct Eq_56017 * fp;
	struct Eq_56017 * sp = fp;
	sp -= 0x70;
	struct Eq_56022 * v6 = (struct Eq_56022 *) ((char *) &sp->t0008 + 8);
	Eq_56024 x28;
	v6->t0000.u1 = (size_t) x28;
	Eq_56028 x27;
	v6->t0008.u1 = (void *) x27;
	struct Eq_56033 * v9 = (struct Eq_56033 *) ((char *) &sp->t0008 + 24);
	Eq_56024 x26;
	v9->t0000.u1 = (size_t) x26;
	Eq_56024 x25;
	v9->t0008.u1 = (size_t) x25;
	struct Eq_56044 * v12 = (struct Eq_56044 *) ((char *) &sp->t0008 + 40);
	Eq_56024 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_56050 x23;
	v12->t0008.u1 = (struct Eq_108289 *) x23;
	struct Eq_56055 * v15 = (struct Eq_56055 *) ((char *) &sp->t0008 + 56);
	Eq_14 x22;
	v15->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_56066 * v18 = (struct Eq_56066 *) ((char *) &sp->t0008 + 72);
	Eq_56068 x20;
	v18->t0000.u1 = (size_t) x20;
	Eq_56024 x19;
	v18->t0008.u1 = (size_t) x19;
	struct Eq_56077 * v21 = (struct Eq_56077 *) ((char *) &sp->t0008 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 88;
	Eq_56092 v24;
	Eq_56024 x0;
	v24.u1 = *x0;
	ui32 w8 = (word32) v24;
	Eq_56068 x3;
	x20 = x3;
	Eq_14 x2;
	x22 = x2;
	x19 = x0;
	Eq_56024 x1;
	x26 = x1;
	if ((w8 & 0x01) != 0x00)
		x28.u1 = (word32) x19 + 1;
	else
		x28 = *((word32) x19 + 16);
	x27 = x20 - x22;
	Eq_56109 NZCV;
	NZCV.u0 = cond(x27);
	x21 = x26 - x28;
	bool Z;
	Eq_56024 x8;
	if (Test(EQ,Z))
	{
l00000000000372F0:
		Eq_56092 v33;
		v33.u1 = *x19;
		w8 = (word32) v33;
		if ((w8 & 0x01) != 0x00)
			x8.u1 = (word32) x19 + 1;
		else
			x8 = *((word32) x19 + 16);
		x0.u1 = x8 + x21;
		struct Eq_56159 * v39 = (struct Eq_56159 *) ((char *) &sp->t0008 + 88);
		x29 = v39->ptr0000;
		x30 = v39->qw0008;
		struct Eq_56168 * v40 = (struct Eq_56168 *) ((char *) &sp->t0008 + 72);
		x20.u1 = v40->t0000.u1;
		x19.u1 = v40->t0008.u1;
		struct Eq_56177 * v41 = (struct Eq_56177 *) ((char *) &sp->t0008 + 56);
		x22.u1 = v41->t0000.u1;
		x21.u1 = v41->t0008.u1;
		struct Eq_56186 * v42 = (struct Eq_56186 *) ((char *) &sp->t0008 + 40);
		x24.u1 = v42->t0000.u1;
		x23.u1 = v42->t0008.u1;
		struct Eq_56195 * v43 = (struct Eq_56195 *) ((char *) &sp->t0008 + 24);
		x26.u1 = v43->t0000.u1;
		x25.u1 = v43->t0008.u1;
		struct Eq_56204 * v44 = (struct Eq_56204 *) ((char *) &sp->t0008 + 8);
		x28.u1 = v44->t0000.u1;
		x27.u1 = v44->t0008.u1;
		sp = (struct Eq_56017 *) ((char *) &sp->t0008 + 0x0068);
		return;
	}
	ui32 w9;
	Eq_56092 x9;
	struct Eq_56136 * x10;
	if ((w8 & 0x01) != 0x00)
	{
		x25 = x8 >> 1;
		word32 w23 = 22;
		w9 = w8;
	}
	else
	{
		Eq_56024 v55 = x19;
		x9.u1 = *v55;
		x25 = *((word32) v55 + 8);
		x10 = x9 & ~0x01;
		x23 = x10 - 0x01;
	}
	x10 = x23 - x25;
	Eq_56147 x31 = x10 - x27;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(ULT,C))
	{
		x9.u1 = x25 + x27;
		x10 = 0x00 | ~0x10;
		Eq_56222 x11 = x9 - x23;
		x10 -= x23;
		x31 = x10 - x11;
		NZCV.u0 = cond(x31);
		if (Test(ULT,C))
		{
			x0 = x19;
			fn000000000001B2D0();
			_ZNSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEED0Ev();
			return;
		}
		if ((w8 & 0x01) != 0x00)
			x8.u1 = (word32) x19 + 1;
		else
			x8 = *((word32) x19 + 16);
		struct Eq_56017 * v45 = sp;
		v45->t0000.u1 = (size_t) x26;
		v45->t0008.u1 = (size_t) x8;
		x8.u0 = ~0x19;
		x8 = SEQ(0x7FFF, (word48) x8);
		x31 = x23 - x8;
		NZCV.u0 = cond(x31);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x8 = x23 << 1;
			x31 = x9 - x8;
			NZCV.u0 = cond(x31);
			x8.u1 = Test(ULT,C) ? x8 : x9;
			NZCV.u0 = cond(x8 - 0x17);
			if (Test(ULT,C))
			{
				word32 w26 = 0x17;
			}
			else
			{
				x8.u1 = (word32) x8 + 16;
				x26 = x8 & ~0x0F;
			}
		}
		else
			x26 = 0x00 | ~0x10;
		x0 = x26;
		_Znwm();
		x24 = x0;
		if (x21 != 0x00)
		{
			x1.u1 = sp->t0008.u1;
			x0 = x24;
			x2 = x21;
			x0 = memcpy(x0, x1, x2);
		}
		x2 = x25 - x21;
		NZCV.u0 = cond(x2);
		if (Test(NE,Z))
		{
			x8.u1 = x24 + x21;
			x0.u1 = x8 + x27;
			x8.u1 = sp->t0008.u1;
			x1.u1 = x8 + x21;
			x0 = memcpy(x0, x1, x2);
		}
		NZCV.u0 = cond(x23 - 22);
		word128 q0;
		if (Test(NE,Z))
		{
			x0.u1 = sp->t0008.u1;
			((real64) q0, x0, x1);
		}
		x9 = x26 | 0x01;
		x26.u1 = sp->t0000.u1;
		*((word32) x19 + 16) = x24;
		x19->u1 = x9;
		x8.u1 = x25 + x27;
		if ((w9 & 0x01) != 0x00)
		{
l0000000000037264:
			*((word32) x19 + 8) = x8;
			goto l0000000000037268;
		}
l0000000000037188:
		w9 = w8 << 1;
		x19->u1 = (byte) w9;
l0000000000037268:
		x31 = x22 - x20;
		NZCV.u0 = cond(x31);
		*(x24 + x8) = (word64) 0x00;
		if (Test(EQ,Z))
			goto l00000000000372F0;
		NZCV.u0 = cond(x27 - 0x20);
		x8.u1 = x24 + x21;
		if (Test(ULT,C))
		{
l00000000000372E0:
			do
			{
				byte v54 = (byte) *x22.u1;
				w9 = (word32) v54;
				x22.u1 = (word32) x22 + 1;
				x31 = x20 - x22;
				NZCV.u0 = cond(x31);
				x8->u1 = (byte) w9;
				x8.u1 = (word32) x8 + 1;
			} while (Test(NE,Z));
			goto l00000000000372F0;
		}
		x31 = x8 - x20;
		NZCV.u0 = cond(x31);
		if (Test(ULT,C))
		{
			x9 = x26 - x22;
			x9 -= x28;
			x9.u1 = x20 + x9;
			x9.u1 = x24 + x9;
			x31 = x9 - x22;
			NZCV.u0 = cond(x31);
			if (Test(UGT,ZC))
				goto l00000000000372E0;
		}
		x11.u1 = (word32) x26 + 16;
		x9 = x27 & ~0x1F;
		x11 -= x28;
		x10 = (struct Eq_56136 *) ((word32) x22 + 16);
		x8.u1 = x8 + x9;
		x22.u1 = x22 + x9;
		x11.u1 = x24 + x11;
		Eq_56092 x12 = x9;
		do
		{
			struct Eq_56425 * v52 = x10 + (struct Eq_56424 *) -16;
			q0 = v52->ow0000;
			word128 q1 = v52->ow0010;
			x10 += (struct Eq_56434 *) 0x20;
			x12 -= 0x20;
			NZCV.u0 = cond(x12);
			Eq_56440 v53 = (word32) x11 - 16;
			*v53 = q0;
			*((word32) v53 + 16) = q1;
			x11.u1 = (word32) x11 + 32;
		} while (Test(NE,Z));
		x31 = x27 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			goto l00000000000372E0;
		goto l00000000000372F0;
	}
	if ((w8 & 0x01) != 0x00)
	{
		x24.u1 = (word32) x19 + 1;
		x2 = x25 - x21;
		NZCV.u0 = cond(x2);
		if (Test(EQ,Z))
		{
l0000000000037180:
			x8.u1 = x25 + x27;
			if ((w9 & 0x01) == 0x00)
				goto l0000000000037264;
			goto l0000000000037188;
		}
	}
	else
	{
		x24 = *((word32) x19 + 16);
		x2 = x25 - x21;
		NZCV.u0 = cond(x2);
		if (Test(EQ,Z))
			goto l0000000000037180;
	}
	x1.u1 = x24 + x21;
	x0.u1 = x1 + x27;
	x0 = memmove(x0, x1, x2);
	Eq_56092 v49;
	v49.u1 = *x19;
	w9 = (word32) v49;
	x8.u1 = x25 + x27;
	if ((w9 & 0x01) != 0x00)
		goto l0000000000037264;
	goto l0000000000037188;
}

// 0000000000037330: define _ZNSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEED0Ev
// Called from:
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertIPKhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISA_EE5valueENS_11__wrap_iterIPcEEE4typeENSB_IPKcEESA_SA_
define _ZNSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_56463 * v7 = (struct Eq_56463 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_56479 * v9 = (struct Eq_56479 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000037354: define _ZNSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_56501 * fp;
	struct Eq_56501 * sp = fp;
	sp = (struct Eq_56501 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_56517 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_56501 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 0000000000037374: define _ZNKSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_56539 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 0x0F80);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_56553 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000037390: define _ZNSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP19rs2_raw_data_bufferPFvPKS1_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000037394: define _ZNKSt6__ndk121__basic_string_commonILb1EE20__throw_length_errorEv
define _ZNKSt6__ndk121__basic_string_commonILb1EE20__throw_length_errorEv
{
	struct Eq_56571 * fp;
	struct Eq_56571 * sp = fp;
	sp = (struct Eq_56571 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	Eq_14 x0;
	x0.u0 = 0x00052000;
	x0.u1 = (word32) x0 + 0x055C;
	fn00000000000373A8();
	fn00000000000373A8();
}

// 00000000000373A8: define fn00000000000373A8
// Called from:
//      _ZNKSt6__ndk121__basic_string_commonILb1EE20__throw_length_errorEv
//      _ZNKSt6__ndk120__vector_base_commonILb1EE20__throw_length_errorEv
//      _ZNSt6__ndk16vectorIN3rs26sensorENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE8__rehashEm
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE8__rehashEm
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE21__push_back_slow_pathISB_EEvOT_
//      _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathIRKSC_EEvOT_
//      _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathISC_EEvOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJNS1_6detail7value_tEEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRdEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRbEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJDnEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRlEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRS9_EEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_
define fn00000000000373A8
{
	struct Eq_56591 * fp;
	struct Eq_56591 * sp = fp;
	sp = (struct Eq_56591 *) ((char *) sp - 32);
	Eq_14 x20;
	sp->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	sp->t0008.u1 = (size_t) x19;
	struct Eq_56604 * v8 = (struct Eq_56604 *) ((char *) &sp->t0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 8;
	Eq_14 x0;
	x20 = x0;
	ui32 w0 = 0x00 | 0x10;
	__cxa_allocate_exception();
	x19 = x0;
	Eq_14 x1 = x20;
	fn00000000000373F8();
	x1.u0 = 0x00070000;
	Eq_14 x2;
	x2.u0 = 0x00070000;
	x1 = *((word32) x1 + 0x0F58);
	x2 = *((word32) x2 + 0x0EB0);
	x0 = x19;
	__cxa_throw();
	x20 = x0;
	x0 = x19;
	__cxa_free_exception();
	x0 = x20;
	_Unwind_Resume();
	fn00000000000373F8();
}

// 00000000000373F8: define fn00000000000373F8
// Called from:
//      fn00000000000373A8
define fn00000000000373F8
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_56649 * v7 = (struct Eq_56649 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	union Eq_14 * x0;
	x19 = x0;
	_ZNSt11logic_errorC2EPKc();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3552);
	x8.u1 = (word32) x8 + 16;
	x19->u1 = (size_t) x8;
	struct Eq_56674 * v10 = (struct Eq_56674 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
}

// 0000000000037428: void ()
void ()
{
	struct Eq_56687 * fp;
	struct Eq_56687 * sp = fp;
	sp -= 0xB0;
	struct Eq_56691 * x27;
	sp->ptr0050 = x27;
	struct Eq_56696 * v7 = (struct Eq_56696 *) ((char *) &sp->ptr0050 + 16);
	struct Eq_56698 * x26;
	v7->ptr0000 = x26;
	Eq_14 x25;
	v7->t0008.u1 = (size_t) x25;
	struct Eq_56707 * v10 = (struct Eq_56707 *) ((char *) &sp->ptr0050 + 32);
	Eq_14 x24;
	v10->t0000.u1 = (size_t) x24;
	word64 x23;
	v10->qw0008 = x23;
	struct Eq_56718 * v13 = (struct Eq_56718 *) ((char *) &sp->ptr0050 + 48);
	word64 x22;
	v13->qw0000 = x22;
	Eq_14 x21;
	v13->t0008.u1 = (size_t) x21;
	struct Eq_56729 * v16 = (struct Eq_56729 *) ((char *) &sp->ptr0050 + 64);
	Eq_14 x20;
	v16->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v16->t0008.u1 = (size_t) x19;
	struct Eq_56740 * v19 = (struct Eq_56740 *) ((char *) &sp->ptr0050 + 80);
	ptr64 x29;
	v19->ptr0000 = x29;
	word64 x30;
	v19->qw0008 = x30;
	x29 = (char *) &sp->ptr0050 + 80;
	Eq_1720 sysreg3_3_13_0_2;
	x26 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x26->t0028.u1;
	sp->t0048.u1 = (size_t) x8;
	Eq_14 v22 = x19;
	v22.u1->u1 = 0x00;
	((word32) v22 + 8)->u0 = 0x00;
	((word32) x19 + 16)->u0 = 0x00;
	sp->t0008.u1 = (size_t) 0x00;
	Eq_14 x0 = *x0.u1;
	Eq_14 x1;
	x1.u1 = &sp->t0008.u0;
	rs2_pipeline_profile_get_streams();
	x21 = x0;
	word32 w0 = 0x28;
	_Znwm();
	((word32) x0 + 16)->u0 = 0x00;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 4008);
	Eq_14 x9;
	x9.u0 = 0x00070000;
	x20 = x0;
	x25 = x0;
	x9 = *((word32) x9 + 0x0FF8);
	x0.u1 = sp->t0008.u1;
	x25.u1 = (word32) x25 + 8;
	x25.u1->u0 = 0x00;
	x8.u1 = (word32) x8 + 16;
	*x20.u1 = x8;
	struct Eq_56819 * v27 = (struct Eq_56819 *) ((word32) x20 + 24);
	v27->t0000.u1 = (size_t) x21;
	v27->t0008.u1 = (size_t) x9;
	fn000000000001ADF0();
	x1.u1 = &sp->t0008.u0;
	x0 = x21;
	rs2_get_stream_profiles_count();
	word32 w22 = w0;
	x0.u1 = sp->t0008.u1;
	fn000000000001ADF0();
	Eq_56839 NZCV;
	NZCV.u0 = cond(w22 - 0x01);
	word32 NV;
	if (Test(GE,NV))
	{
		x8.u1 = &sp->t0010.u0;
		word32 w23 = 0x00;
		x27 = (struct Eq_56691 *) ((word32) x8 + 24);
		do
		{
			union Eq_56928 ** x2 = (union Eq_56928 **) &sp->t0008.u0;
			x0 = x21;
			word32 w1 = w23;
			rs2_get_stream_profile();
			x1 = x0;
			x0.u1 = &sp->t0010.u0;
			fn000000000001C3A0();
			x0.u1 = sp->t0008.u1;
			fn000000000001ADF0();
			struct Eq_56942 * v34 = (struct Eq_56942 *) ((word32) x19 + 8);
			x8.u1 = v34->ptr0000;
			x9.u1 = v34->t0008.u1;
			int64 x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			bool Z;
			if (Test(NE,Z))
			{
				Eq_14 q0;
				q0.u2 = sp->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
				*x8.u1 = q0;
				x9.u1 = sp->t0020.u1;
				*((word32) x8 + 16) = x9;
				if (x9 != 0x00)
				{
					x9.u1 = (word32) x9 + 8;
					Eq_14 w11;
					do
					{
						union Eq_3183 * v39 = &*x9.u1;
						Eq_14 x10 = __load_exclusive<word64>(v39);
						x10.u1 = (word32) x10 + 1;
						union Eq_3192 * v40 = &*x9.u1;
						w11 = __store_exclusive<word64>(v40, x10);
					} while (w11 != 0x00);
				}
				x9.u1 = x27->t000D.u1;
				q0.u2 = x27->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
				*((word32) x8 + 37) = x9;
				*((word32) x8 + 24) = q0;
				x8 = *((word32) x19 + 8);
				x8.u1 = (word32) x8 + 48;
				*((word32) x19 + 8) = x8;
				x24.u1 = sp->t0020.u1;
				if (x24 == 0x00)
					goto l00000000000375A0;
l0000000000037570:
				x8.u1 = (word32) x24 + 8;
			}
			x1.u1 = &sp->t0010.u0;
			x0 = x19;
			fn000000000001B3C0();
			x24.u1 = sp->t0020.u1;
			if (x24 != 0x00)
				goto l0000000000037570;
l00000000000375A0:
			++w23;
			NZCV.u0 = cond(w23 - w22);
		} while (Test(LT,NV));
	}
}

// 000000000003773C: void stream_profile::stream_profile(Register (ptr64 Eq_56955) x0)
void stream_profile::stream_profile(rs2_stream_profile * x0)
{
	bool Z;
	struct Eq_56967 * x1;
	struct Eq_56956 * fp;
	struct Eq_56956 * sp = fp;
	sp -= 0x30;
	struct Eq_56961 * v6 = (struct Eq_56961 *) ((char *) &sp->ptr0008 + 8);
	struct Eq_56963 * x20;
	v6->ptr0000 = x20;
	struct Eq_56967 * x19;
	v6->ptr0008 = x19;
	struct Eq_56972 * v9 = (struct Eq_56972 *) ((char *) &sp->ptr0008 + 24);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 24;
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	struct Eq_56967 * x9 = x20->ptr0028;
	struct Eq_56967 * x8 = x1;
	x19 = x0;
	x1 = (struct Eq_56967 *) ((char *) &x0->qw0025 + 3);
	word128 q0 = 0;
	struct Eq_56967 * x3 = x0;
	word64 x4 = (char *) &x0->ow0008 + 20;
	word64 x5 = (char *) &x0->ow0008 + 24;
	word64 x2 = (char *) &x0->ow0008 + 28;
	sp->ptr0008 = x9;
	x0->ptr0000 = (struct Eq_108299 *) x8;
	x0->qw0025 = 0x00;
	x0->ow0008 = q0;
	x3 = &x3->ow0008 + 1;
	x3->ptr0000 = (struct Eq_108299 *) q0;
	sp->ptr0000 = null;
	word64 * x6 = &sp->ptr0000;
	x0 = x8;
	rs2_get_stream_profile_data();
	x0 = sp->ptr0000;
	fn000000000001ADF0();
	x0 = (struct Eq_56967 *) x19->ptr0000;
	x1 = (struct Eq_56967 *) &sp->ptr0000;
	rs2_is_stream_profile_default();
	Eq_57050 NZCV;
	word32 w0;
	NZCV.u0 = cond(w0 - 0x00);
	word32 w8 = (word32) Test(NE,Z);
	x19->b002C = (byte) w8;
	x0 = sp->ptr0000;
	fn000000000001ADF0();
	x8 = x20->ptr0028;
	x9 = sp->ptr0008;
	word64 x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_57078 * v26 = (struct Eq_57078 *) ((char *) &sp->ptr0008 + 24);
		x29 = v26->ptr0000;
		x30 = v26->qw0008;
		struct Eq_57087 * v27 = (struct Eq_57087 *) ((char *) &sp->ptr0008 + 8);
		x20 = v27->ptr0000;
		x19 = v27->ptr0008;
		sp = (struct Eq_56956 *) ((char *) &sp->ptr0008 + 40);
	}
}

// 0000000000037828: define _ZNSt6__ndk120__shared_ptr_pointerIP23rs2_stream_profile_listPFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP23rs2_stream_profile_listPFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_57106 * v7 = (struct Eq_57106 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_57122 * v9 = (struct Eq_57122 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003784C: define _ZNSt6__ndk120__shared_ptr_pointerIP23rs2_stream_profile_listPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP23rs2_stream_profile_listPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_57144 * fp;
	struct Eq_57144 * sp = fp;
	sp = (struct Eq_57144 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_57160 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_57144 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 000000000003786C: define _ZNKSt6__ndk120__shared_ptr_pointerIP23rs2_stream_profile_listPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP23rs2_stream_profile_listPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_57182 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 0x0F18);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_57196 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000037888: define _ZNSt6__ndk120__shared_ptr_pointerIP23rs2_stream_profile_listPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP23rs2_stream_profile_listPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003788C: define _ZNSt6__ndk16vectorIN3rs214stream_profileENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
define _ZNSt6__ndk16vectorIN3rs214stream_profileENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
{
	Eq_57240 x0;
	struct Eq_57214 * fp;
	struct Eq_57214 * sp = fp;
	sp = (struct Eq_57214 *) ((char *) sp - 64);
	int64 x24;
	sp->qw0000 = x24;
	ui64 x23;
	sp->qw0008 = x23;
	struct Eq_57227 * v8 = (struct Eq_57227 *) (&sp->qw0008 + 1);
	struct Eq_57229 * x22;
	v8->ptr0000 = x22;
	struct Eq_57233 * x21;
	v8->ptr0008 = x21;
	struct Eq_57238 * v11 = (struct Eq_57238 *) (&sp->qw0008 + 3);
	Eq_57240 x20;
	v11->t0000.u1 = (struct Eq_108300 *) x20;
	Eq_57240 x19;
	v11->t0008.u1 = (struct Eq_108300 *) x19;
	struct Eq_57249 * v14 = (struct Eq_57249 *) (&sp->qw0008 + 5);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = &sp->qw0008 + 5;
	Eq_57240 v16 = x0;
	x19.u1 = v16.u1->t0000.u1;
	x22 = v16.u1->ptr0008;
	struct Eq_57229 * x9 = 0x00 | 0xAAAAAAAAAAAAAAAA;
	x9 = SEQ(SLICE(x9, word48, 16), ~0x5554);
	x24 = 0x00 | 0x5555555555555555;
	Eq_57240 x8 = x22 - x19;
	x8 >>= 4;
	x23 = x8 *64 x9;
	x24 = SEQ(0x0555, (word48) x24);
	x8 = x23 + 0x01;
	x20 = x0;
	Eq_57289 x31 = x8 - x24;
	Eq_57291 NZCV;
	NZCV.u0 = cond(x31);
	word32 ZC;
	if (Test(UGT,ZC))
	{
		x0 = x20;
		fn000000000001B7E0();
		_ZNKSt6__ndk120__vector_base_commonILb1EE20__throw_length_errorEv();
		return;
	}
	struct Eq_57229 * x10 = x20.u1->ptr0010;
	struct Eq_57233 * x1;
	x21 = x1;
	x10 -= x19;
	x10 >>= 4;
	x9 = x10 * x9;
	x10 = 0x00 | 0xAAAAAAAAAAAAAAAA;
	x10 = SEQ(SLICE(x10, word48, 16), 0xAAA9);
	x10 = SEQ(0x02AA, (word48) x10);
	x31 = x9 - x10;
	NZCV.u0 = cond(x31);
	if (Test(ULE,ZC))
	{
		x9 <<= 1;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		bool C;
		x24 = Test(ULT,C) ? x8 : x9;
		if (x24 == 0x00)
		{
			x0.u0 = 0x00;
l0000000000037914:
			Eq_57240 q0;
			q0.u0 = x21->t0000.u0;
			ui32 w9 = 0x00 | 0x30;
			x8.u1 = (char *) &x0.u1->t0000.u0 + x23 * x9;
			x8.u1->t0000.u0 = (word128) q0;
			x10 = x21->ptr0010;
			x8.u1->ptr0010 = x10;
			Eq_14 x11;
			if (x10 != null)
			{
				x10 = &x10->qw0000 + 1;
				Eq_14 w12;
				do
				{
					union Eq_3183 * v28 = &x10->qw0000;
					x11 = __load_exclusive<word64>(v28);
					x11.u1 = (word32) x11 + 1;
					union Eq_3192 * v29 = &x10->qw0000;
					w12 = __store_exclusive<word64>(v29, x11);
				} while (w12 != 0x00);
				Eq_57240 v31 = x20;
				x19.u1 = v31.u1->t0000.u1;
				x22 = v31.u1->ptr0008;
			}
			x11.u1 = x21->t0025.u1;
			q0.u0 = x21->t0018.u0;
			ui32 w10 = 0x00 | 0x30;
			x10 = (struct Eq_57229 *) ((char *) &x0.u1->t0000.u0 + x23 * x10);
			x9 = (struct Eq_57229 *) ((char *) &x0.u1->t0000.u0 + x24 * x9);
			x31 = x22 - x19;
			NZCV.u0 = cond(x31);
			x10->t0025.u1 = (size_t) x11;
			x10->t0018.u0 = (word128) q0;
			x10 = (struct Eq_57229 *) ((word32) x8 + 48);
			bool Z;
			if (Test(NE,Z))
			{
				x11.u0 = 0x00;
				word64 x12 = x19 - x22;
				do
				{
					struct Eq_57408 * x13 = x22 + x11;
					q0.u0 = x13->tFFFFFFD0.u0;
					struct Eq_57413 * x14 = x8 + x11;
					x11 -= 0x30;
					x31 = x12 - x11;
					NZCV.u0 = cond(x31);
					x14->tFFFFFFD0.u0 = (word128) q0;
					word64 x15 = x13->qwFFFFFFE0;
					x14->qwFFFFFFE0 = x15;
					x15 = x13->qwFFFFFFF5;
					q0.u0 = x13->tFFFFFFE8.u0;
					struct Eq_57436 * v38 = (struct Eq_57436 *) ((char *) &x13->tFFFFFFD0 + 8);
					v38->qw0000 = 0x00;
					v38->qw0008 = 0x00;
					x14->qwFFFFFFF5 = x15;
					x14->tFFFFFFE8.u0 = (word128) q0;
				} while (Test(NE,Z));
				Eq_57240 v39 = x20;
				x19.u1 = v39.u1->t0000.u1;
				x22 = v39.u1->ptr0008;
				x8.u1 = x8 + x11;
			}
			x31 = x22 - x19;
			NZCV.u0 = cond(x31);
			Eq_57240 v40 = x20;
			v40.u1->t0000.u1 = (struct Eq_108300 *) x8;
			v40.u1->ptr0008 = x10;
			x20.u1->ptr0010 = x9;
			while (Test(NE,Z))
			{
				x20.u1 = x22->tFFFFFFE0.u1;
				x22 -= 0x30;
				if (x20 != 0x00)
					x8.u1 = &x20.u1->ptr0008;
				x31 = x22 - x19;
				NZCV.u0 = cond(x31);
			}
			if (x19 == 0x00)
			{
				struct Eq_57496 * v45 = (struct Eq_57496 *) (&sp->qw0008 + 5);
				x29 = v45->ptr0000;
				x30 = v45->qw0008;
				struct Eq_57505 * v46 = (struct Eq_57505 *) (&sp->qw0008 + 3);
				x20.u1 = v46->t0000.u1;
				x19.u1 = v46->t0008.u1;
				struct Eq_57514 * v47 = (struct Eq_57514 *) (&sp->qw0008 + 1);
				x22 = v47->ptr0000;
				x21 = v47->ptr0008;
				struct Eq_57214 * v48 = sp;
				x24 = v48->qw0000;
				x23 = v48->qw0008;
				sp = &sp->qw0008 + 7;
				return;
			}
			else
			{
				x0 = x19;
				struct Eq_57532 * v41 = (struct Eq_57532 *) (&sp->qw0008 + 5);
				x29 = v41->ptr0000;
				x30 = v41->qw0008;
				struct Eq_57541 * v42 = (struct Eq_57541 *) (&sp->qw0008 + 3);
				x20.u1 = v42->t0000.u1;
				x19.u1 = v42->t0008.u1;
				struct Eq_57550 * v43 = (struct Eq_57550 *) (&sp->qw0008 + 1);
				x22 = v43->ptr0000;
				x21 = v43->ptr0008;
				struct Eq_57214 * v44 = sp;
				x24 = v44->qw0000;
				x23 = v44->qw0008;
				sp = &sp->qw0008 + 7;
				((real64) q0, x0, x1);
				return;
			}
		}
	}
	x8 = x24 + (x24 << 1);
	x0 = x8 << 4;
	_Znwm();
	goto l0000000000037914;
}

// 0000000000037A58: define _ZNKSt6__ndk120__vector_base_commonILb1EE20__throw_length_errorEv
// Called from:
//      _ZNSt6__ndk16vectorIN3rs214stream_profileENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
define _ZNKSt6__ndk120__vector_base_commonILb1EE20__throw_length_errorEv
{
	struct Eq_57574 * fp;
	struct Eq_57574 * sp = fp;
	sp = (struct Eq_57574 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	Eq_14 x0;
	x0.u0 = 0x00052000;
	x0.u1 = (word32) x0 + 1499;
	fn00000000000373A8();
	_ZNSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEED0Ev();
}

// 0000000000037A6C: define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEED0Ev
// Called from:
//      _ZNKSt6__ndk120__vector_base_commonILb1EE20__throw_length_errorEv
define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_57603 * v7 = (struct Eq_57603 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_57619 * v9 = (struct Eq_57619 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000037A90: define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_57641 * fp;
	struct Eq_57641 * sp = fp;
	sp = (struct Eq_57641 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_57657 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_57641 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 0000000000037AB0: define _ZNKSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_57679 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 3232);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_57693 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000037ACC: define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP20rs2_pipeline_profilePFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000037AD0: define _ZTv0_n24_NSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED1Ev
define _ZTv0_n24_NSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED1Ev
{
	struct Eq_57735 ** x0;
	struct Eq_57735 *** fp;
	struct Eq_57735 *** sp = fp;
	sp = (struct Eq_57735 ***) ((char *) sp - 32);
	struct Eq_57735 ** x19;
	*sp = (struct Eq_57735 ***) x19;
	struct Eq_57720 * v7 = (struct Eq_57720 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	struct Eq_57735 * x8 = (struct Eq_57735 *) *x0;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	x8 = x8->ptrFFFFFFE8;
	x9 = *((word32) x9 + 0x0DC8);
	x19 = x0 + x8;
	struct Eq_57735 * x10 = (struct Eq_57735 *) ((word32) x9 + 24);
	x0 = x19;
	x8 = (struct Eq_57735 *) ((word32) x9 + 64);
	*x0 = (struct Eq_57735 **) x10;
	x0 = (struct Eq_57735 **) ((char *) x0 + 16);
	x19 = (struct Eq_57735 **) ((char *) x19 + 0x00B8);
	*x19 = (struct Eq_57735 **) x8;
	fn000000000001B280();
	struct Eq_57762 * v12 = (struct Eq_57762 *) ((char *) sp + 16);
	x29 = v12->ptr0000;
	x30 = v12->qw0008;
	x0 = x19;
	x19 = (struct Eq_57735 **) *sp;
	sp = (struct Eq_57735 ***) ((char *) sp + 32);
	_ZNSt6__ndk18ios_baseD2Ev();
}

// 0000000000037B18: define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEED1Ev
define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEED1Ev
{
	ptr64 fp;
	ptr64 sp = fp;
	word64 x0 = x0 + 0x10;
	_ZNSt6__ndk18ios_baseD2Ev();
}

// 0000000000037B20: define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEED0Ev
define _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_57793 * v7 = (struct Eq_57793 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	x0 += 0x10;
	_ZNSt6__ndk18ios_baseD2Ev();
	struct Eq_57811 * v9 = (struct Eq_57811 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000037B48: define _ZTv0_n24_NSt6__ndk113basic_istreamIcNS_11char_traitsIcEEED1Ev
define _ZTv0_n24_NSt6__ndk113basic_istreamIcNS_11char_traitsIcEEED1Ev
{
	struct Eq_57838 ** x0;
	ptr64 fp;
	ptr64 sp = fp;
	struct Eq_57838 * x8 = (struct Eq_57838 *) *x0;
	x8 = x8->ptrFFFFFFE8;
	x8 = x0 + x8;
	x0 = (struct Eq_57838 **) ((char *) &x8->ptrFFFFFFE8 + 40);
	_ZNSt6__ndk18ios_baseD2Ev();
}

// 0000000000037B5C: define _ZTv0_n24_NSt6__ndk113basic_istreamIcNS_11char_traitsIcEEED0Ev
define _ZTv0_n24_NSt6__ndk113basic_istreamIcNS_11char_traitsIcEEED0Ev
{
	struct Eq_57872 ** x0;
	struct Eq_57872 *** fp;
	struct Eq_57872 *** sp = fp;
	sp = (struct Eq_57872 ***) ((char *) sp - 32);
	struct Eq_57872 ** x19;
	*sp = (struct Eq_57872 ***) x19;
	struct Eq_57857 * v7 = (struct Eq_57857 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	struct Eq_57872 * x8 = (struct Eq_57872 *) *x0;
	x8 = x8->ptrFFFFFFE8;
	x19 = x0 + x8;
	x0 = (struct Eq_57872 **) ((char *) x19 + 16);
	_ZNSt6__ndk18ios_baseD2Ev();
	struct Eq_57883 * v10 = (struct Eq_57883 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (struct Eq_57872 **) *sp;
	sp = (struct Eq_57872 ***) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000037B8C: define _ZNSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED0Ev
define _ZNSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED0Ev
{
	struct Eq_57905 * fp;
	struct Eq_57905 * sp = fp;
	sp = (struct Eq_57905 *) ((char *) sp - 32);
	union Eq_14 * x20;
	sp->ptr0000 = x20;
	union Eq_14 * x19;
	sp->ptr0008 = x19;
	struct Eq_57918 * v8 = (struct Eq_57918 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0DC8);
	union Eq_14 * x0;
	x19 = x0;
	x20 = x0;
	Eq_14 x9;
	x9.u1 = (word32) x8 + 24;
	x8.u1 = (word32) x8 + 64;
	x0->u1 = (size_t) x9;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	x20 = (union Eq_14 *) ((char *) x20 + 0x00B8);
	x20->u1 = (size_t) x8;
	fn000000000001B280();
	x0 = x20;
	_ZNSt6__ndk18ios_baseD2Ev();
	struct Eq_57954 * v12 = (struct Eq_57954 *) ((char *) &sp->ptr0008 + 8);
	x29 = v12->ptr0000;
	x30 = v12->qw0008;
	x0 = x19;
	struct Eq_57905 * v13 = sp;
	x20 = v13->ptr0000;
	x19 = v13->ptr0008;
	sp = (struct Eq_57905 *) ((char *) &sp->ptr0008 + 24);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000037BD4: define _ZTv0_n24_NSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED0Ev
define _ZTv0_n24_NSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED0Ev
{
	struct Eq_58008 ** x0;
	struct Eq_57980 * fp;
	struct Eq_57980 * sp = fp;
	sp = (struct Eq_57980 *) ((char *) sp - 32);
	struct Eq_58008 ** x20;
	sp->ptr0000 = x20;
	struct Eq_58008 ** x19;
	sp->ptr0008 = x19;
	struct Eq_57993 * v8 = (struct Eq_57993 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	struct Eq_58008 * x8 = (struct Eq_58008 *) *x0;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	x8 = x8->ptrFFFFFFE8;
	x9 = *((word32) x9 + 0x0DC8);
	x19 = x0 + x8;
	struct Eq_58008 * x10 = (struct Eq_58008 *) ((word32) x9 + 24);
	x0 = x19;
	x8 = (struct Eq_58008 *) ((word32) x9 + 64);
	x20 = x19;
	*x0 = (struct Eq_58008 **) x10;
	x0 = (struct Eq_58008 **) ((char *) x0 + 16);
	x20 = (struct Eq_58008 **) ((char *) x20 + 0x00B8);
	*x20 = (struct Eq_58008 **) x8;
	fn000000000001B280();
	x0 = x20;
	_ZNSt6__ndk18ios_baseD2Ev();
	struct Eq_58037 * v13 = (struct Eq_58037 *) ((char *) &sp->ptr0008 + 8);
	x29 = v13->ptr0000;
	x30 = v13->qw0008;
	x0 = x19;
	struct Eq_57980 * v14 = sp;
	x20 = v14->ptr0000;
	x19 = v14->ptr0008;
	sp = (struct Eq_57980 *) ((char *) &sp->ptr0008 + 24);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

<anonymous> g_t37C24 = <code>; // 0000000000037C24
// 0000000000037C28: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEED2Ev
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEED2Ev
{
	word64 * fp;
	word64 * sp = fp;
	sp += -6;
	word64 x21;
	*sp = x21;
	struct Eq_58072 * v7 = (struct Eq_58072 *) (sp + 2);
	FILE * x20;
	v7->ptr0000 = x20;
	FILE * x19;
	v7->ptr0008 = x19;
	struct Eq_58083 * v10 = (struct Eq_58083 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	FILE * x0;
	x20 = x0->ptr0078;
	x8 = *((word32) x8 + 3776);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 != null)
	{
		x0 = x19;
		fn000000000001C630();
		x0 = x20;
		x0 = SEQ(0x00, fclose(x0));
		word32 w0;
		if (w0 == 0x00)
			x19->ptr0078 = null;
		x8.u1 = x19->t0000.u1;
		x8 = *((word32) x8 + 24);
		x0 = x19;
		word64 x1 = 0x00;
		word64 x2 = 0x00;
		x8();
	}
	byte v15 = x19->b00A0;
	word32 w8 = (word32) v15;
	if (w8 != 0x00)
	{
		x0 = x19->ptr0040;
		if (x0 != null)
			_ZdaPv();
	}
	byte v16 = x19->b00A1;
	w8 = (word32) v16;
	if (w8 != 0x00)
	{
		x0 = x19->ptr0068;
		if (x0 != null)
			_ZdaPv();
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 4064);
	x8.u1 = (word32) x8 + 16;
	x19->t0000.u1 = (size_t) x8;
	x19 = (FILE *) ((char *) &x19->t0000 + 8);
	x0 = x19;
	struct Eq_58168 * v17 = (struct Eq_58168 *) (sp + 4);
	x29 = v17->ptr0000;
	x30 = v17->qw0008;
	struct Eq_58177 * v18 = (struct Eq_58177 *) (sp + 2);
	x20 = v18->ptr0000;
	x19 = v18->ptr0008;
	x21 = *sp;
	sp += 6;
	_ZNSt6__ndk16localeD1Ev();
}

// 0000000000037D08: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEED0Ev
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_58208 * v7 = (struct Eq_58208 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	fn000000000001B280();
	struct Eq_58223 * v9 = (struct Eq_58223 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000037D2C: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
{
	ui32 w0;
	Eq_14 x0;
	struct Eq_58245 * fp;
	struct Eq_58245 * sp = fp;
	sp = (struct Eq_58245 *) ((char *) sp - 32);
	Eq_14 x20;
	sp->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	sp->t0008.u1 = (size_t) x19;
	struct Eq_58258 * v8 = (struct Eq_58258 *) ((char *) &sp->t0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 8;
	Eq_14 x8 = *x0.u1;
	x19 = x0;
	Eq_14 x1;
	x20 = x1;
	x8 = *((word32) x8 + 48);
	x8();
	x1.u0 = 0x00070000;
	x1 = *((word32) x1 + 3600);
	x0 = x20;
	_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
	*((word32) x19 + 0x0080) = x0;
	x8 = *x0.u1;
	byte v13 = (byte) *((word32) x19 + 0x00A2);
	word32 w20 = (word32) v13;
	x8 = *((word32) x8 + 56);
	x8();
	ui32 w8 = w0 & 0x01;
	Eq_58304 NZCV;
	NZCV.u0 = cond(w20 - w8);
	((word32) x19 + 0x00A2)->u0 = (byte) w8;
	bool Z;
	if (Test(NE,Z))
	{
		Eq_58332 v18 = *((word32) x19 + 0x00A0);
		w8 = (word32) v18;
		Eq_14 q0;
		q0.u0 = 0;
		struct Eq_58338 * v20 = (struct Eq_58338 *) ((word32) x19 + 32);
		v20->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		v20->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		*((word32) x19 + 16) = q0;
		Eq_14 x9;
		if ((w0 & 0x01) == 0x00)
		{
			if (w8 == 0x00)
			{
				x8 = *((word32) x19 + 64);
				x9.u1 = (word32) x19 + 88;
				int64 x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					x0 = *((word32) x19 + 96);
					((word32) x19 + 161)->u0 = 0x00;
					struct Eq_58440 * v29 = (struct Eq_58440 *) ((word32) x19 + 0x0068);
					v29->qw0000 = (word64) x8;
					v29->t0008.u1 = (size_t) x0;
					_Znam();
					w8 = 0x00 | 0x01;
					*((word32) x19 + 64) = x0;
					((word32) x19 + 0x00A0)->u1 = (byte) w8;
					goto l0000000000037E10;
				}
			}
			x0 = *((word32) x19 + 96);
			*((word32) x19 + 112) = x0;
			_Znam();
			w8 = 0x00 | 0x01;
			*((word32) x19 + 0x0068) = x0;
			((word32) x19 + 161)->u0 = (byte) w8;
			goto l0000000000037E10;
		}
		if (w8 != 0x00)
		{
			x0 = *((word32) x19 + 64);
			if (x0 != 0x00)
				_ZdaPv();
		}
		byte v23 = (byte) *((word32) x19 + 161);
		w8 = (word32) v23;
		struct Eq_58363 * v26 = (struct Eq_58363 *) ((word32) x19 + 0x0068);
		x9.u1 = v26->t0000.u1;
		word64 x10 = v26->qw0008;
		((word32) x19 + 161)->u0 = 0x00;
		((word32) x19 + 112)->u0 = 0x00;
		((word32) x19 + 0x00A0)->u1 = (byte) w8;
		struct Eq_58386 * v27 = (struct Eq_58386 *) ((word32) x19 + 96);
		v27->qw0000 = x10;
		v27->qw0008 = 0x00;
		*((word32) x19 + 64) = x9;
	}
l0000000000037E10:
	struct Eq_58313 * v21 = (struct Eq_58313 *) ((char *) &sp->t0008 + 8);
	x29 = v21->ptr0000;
	x30 = v21->qw0008;
	struct Eq_58245 * v22 = sp;
	x20.u1 = v22->t0000.u1;
	x19.u1 = v22->t0008.u1;
	sp = (struct Eq_58245 *) ((char *) &sp->t0008 + 24);
}

// 0000000000037E1C: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE6setbufEPcl
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE6setbufEPcl
{
	struct Eq_58468 * x0;
	struct Eq_58460 * fp;
	struct Eq_58460 * sp = fp;
	sp = (struct Eq_58460 *) ((char *) sp - 48);
	word64 x22;
	sp->qw0000 = x22;
	struct Eq_58468 * x21;
	sp->ptr0008 = x21;
	struct Eq_58473 * v8 = (struct Eq_58473 *) ((char *) &sp->ptr0008 + 8);
	struct Eq_58468 * x20;
	v8->ptr0000 = x20;
	struct Eq_58468 * x19;
	v8->ptr0008 = x19;
	struct Eq_58484 * v11 = (struct Eq_58484 *) ((char *) &sp->ptr0008 + 24);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 24;
	byte v14 = x0->b00A0;
	ui32 w8 = (word32) v14;
	struct Eq_58468 * x2;
	x21 = x2;
	struct Eq_58468 * x1;
	x20 = x1;
	x19 = x0;
	word128 q0 = 0;
	struct Eq_58508 * v18 = (struct Eq_58508 *) (&x0->ow0010 + 1);
	v18->ow0000 = q0;
	v18->ow0010 = q0;
	x0->ow0010 = q0;
	if (w8 != 0x00)
	{
		x0 = x19->ptr0040;
		if (x0 != null)
			_ZdaPv();
	}
	byte v19 = x19->b00A1;
	w8 = (word32) v19;
	if (w8 != 0x00)
	{
		x0 = x19->ptr0068;
		if (x0 != null)
			_ZdaPv();
	}
	Eq_58537 NZCV;
	NZCV.u0 = cond(x21 - 0x09);
	x19->ptr0060 = x21;
	bool C;
	word32 w22;
	struct Eq_58468 * x8;
	if (Test(UGE,C))
	{
		byte v23 = x19->b00A2;
		w22 = (word32) v23;
		if (x20 != null && w22 != 0x00)
		{
			x19->ptr0040 = x20;
			x19->b00A0 = 0x00;
l0000000000037EAC:
			x19->b00A1 = 0x00;
			struct Eq_58610 * v26 = (struct Eq_58610 *) &x19->ptr0068;
			v26->qw0000 = 0x00;
			v26->qw0008 = 0x00;
			goto l0000000000037EB4;
		}
		x0 = x21;
		_Znam();
		w8 = 0x00 | 0x01;
		x19->ptr0040 = x0;
		x19->b00A0 = (byte) w8;
		if (w22 != 0x00)
			goto l0000000000037EAC;
	}
	else
	{
		byte v24 = x19->b00A2;
		w22 = (word32) v24;
		x8 = (struct Eq_58468 *) ((char *) &x19->ptr0040 + 24);
		x19->ptr0040 = x8;
		w8 = 0x00 | 0x08;
		x19->ptr0060 = x8;
		x19->b00A0 = 0x00;
		if (w22 != 0x00)
			goto l0000000000037EAC;
	}
	NZCV.u0 = cond(x21 - 0x08);
	w8 = 0x00 | 0x08;
	word32 NZV;
	x0 = Test(GT,NZV) ? x21 : x8;
	x19->ptr0070 = x0;
	if (x20 != null)
	{
		NZCV.u0 = cond(x0 - 0x08);
		if (Test(UGE,C))
		{
			x19->ptr0068 = x20;
			x19->b00A1 = 0x00;
l0000000000037EB4:
			x0 = x19;
			struct Eq_58658 * v27 = (struct Eq_58658 *) ((char *) &sp->ptr0008 + 24);
			x29 = v27->ptr0000;
			x30 = v27->qw0008;
			struct Eq_58667 * v28 = (struct Eq_58667 *) ((char *) &sp->ptr0008 + 8);
			x20 = v28->ptr0000;
			x19 = v28->ptr0008;
			struct Eq_58460 * v29 = sp;
			x22 = v29->qw0000;
			x21 = v29->ptr0008;
			sp = (struct Eq_58460 *) ((char *) &sp->ptr0008 + 40);
			return;
		}
	}
	_Znam();
	w8 = 0x00 | 0x01;
	x19->ptr0068 = x0;
	x19->b00A1 = (byte) w8;
	goto l0000000000037EB4;
}

// 0000000000037F1C: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj
{
	int32 w0;
	word32 w2;
	struct Eq_58684 * fp;
	struct Eq_58684 * sp = fp;
	sp = (struct Eq_58684 *) ((char *) sp - 48);
	word64 x22;
	sp->qw0000 = x22;
	Eq_14 x21;
	sp->t0008.u1 = (size_t) x21;
	struct Eq_58697 * v8 = (struct Eq_58697 *) ((char *) &sp->t0008 + 8);
	word64 x20;
	v8->qw0000 = x20;
	Eq_14 x19;
	v8->t0008.u1 = (size_t) x19;
	struct Eq_58708 * v11 = (struct Eq_58708 *) ((char *) &sp->t0008 + 24);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 24;
	Eq_14 x0;
	x19 = x0;
	x0 = *((word32) x0 + 0x0080);
	if (x0 == 0x00)
	{
		fn00000000000389E0();
		sp = (struct Eq_58684 *) &sp->t0008.u0;
		_ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI9mbstate_tEEj();
		return;
	}
	Eq_14 x8 = *x0.u1;
	word32 w20 = w2;
	Eq_14 x1;
	x21 = x1;
	x8 = *((word32) x8 + 48);
	x8();
	x8 = *((word32) x19 + 0x0078);
	if (x8 == 0x00)
	{
l0000000000037FAC:
		x1.u0 = ~0x00;
		goto l0000000000037FB0;
	}
	int32 w22 = w0;
	Eq_58762 NZCV;
	if (x21 != 0x00)
	{
		NZCV.u0 = cond(w22 - 0x01);
		word32 NV;
		if (Test(LT,NV))
			goto l0000000000037FA8;
	}
	x8 = *x19.u1;
	x0 = x19;
	x8 = *((word32) x8 + 48);
	x8();
	x8.u0 = 0x00;
	x1.u0 = ~0x00;
	if (w0 == 0x00)
	{
		NZCV.u0 = cond(w20 - 0x02);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x0 = *((word32) x19 + 0x0078);
			x8.u1 = (int64) w22;
			x8 *= x21;
			NZCV.u0 = cond(w22 - 0x00);
			word32 NZV;
			x1.u1 = Test(GT,NZV) ? x8 : 0x00;
			w2 = w20;
			word64 x2;
			x0 = SEQ(0x00, fseeko(x0, x1, (int32) x2));
			if (w0 != 0x00)
			{
l0000000000037FA8:
				x8.u0 = 0x00;
				goto l0000000000037FAC;
			}
			x0 = *((word32) x19 + 0x0078);
			ftello();
			x8 = *((word32) x19 + 0x0088);
			x1 = x0;
		}
	}
l0000000000037FB0:
	struct Eq_58768 * v24 = (struct Eq_58768 *) ((char *) &sp->t0008 + 24);
	x29 = v24->ptr0000;
	x30 = v24->qw0008;
	struct Eq_58777 * v25 = (struct Eq_58777 *) ((char *) &sp->t0008 + 8);
	x20 = v25->qw0000;
	x19.u1 = v25->t0008.u1;
	x0 = x8;
	struct Eq_58684 * v26 = sp;
	x22 = v26->qw0000;
	x21.u1 = v26->t0008.u1;
	sp = (struct Eq_58684 *) ((char *) &sp->t0008 + 40);
}

// 0000000000037FDC: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI9mbstate_tEEj
// Called from:
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI9mbstate_tEEj
{
	Eq_14 x0;
	union Eq_14 * fp;
	union Eq_14 * sp = fp;
	sp = (union Eq_14 *) ((char *) sp - 48);
	Eq_14 x21;
	sp->u1 = (size_t) x21;
	struct Eq_58842 * v7 = (struct Eq_58842 *) ((char *) sp + 16);
	Eq_14 x20;
	v7->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v7->t0008.u1 = (size_t) x19;
	struct Eq_58853 * v10 = (struct Eq_58853 *) ((char *) sp + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) sp + 32;
	Eq_14 x8 = *((word32) x0 + 0x0078);
	if (x8 != 0x00)
	{
		x8 = *x0.u1;
		Eq_14 x2;
		x19 = x2;
		x21 = x0;
		Eq_14 x1;
		x20 = x1;
		x8 = *((word32) x8 + 48);
		x8();
		word32 w0;
		if (w0 == 0x00)
		{
			x0 = *((word32) x21 + 0x0078);
			x1 = x19;
			word32 w2 = 0x00;
			x0 = SEQ(0x00, fseeko(x0, x1, (int32) x2));
			if (w0 == 0x00)
			{
				*((word32) x21 + 0x0088) = x20;
l000000000003802C:
				x0 = x20;
				x1 = x19;
				struct Eq_58905 * v17 = (struct Eq_58905 *) ((char *) sp + 32);
				x29 = v17->ptr0000;
				x30 = v17->qw0008;
				struct Eq_58914 * v18 = (struct Eq_58914 *) ((char *) sp + 16);
				x20.u1 = v18->t0000.u1;
				x19.u1 = v18->t0008.u1;
				x21.u1 = sp->u1;
				sp = (union Eq_14 *) ((char *) sp + 48);
				return;
			}
		}
	}
	x20.u0 = 0x00;
	x19.u0 = ~0x00;
	goto l000000000003802C;
}

<anonymous> g_t37FF0 = <code>; // 0000000000037FF0
// 000000000003804C: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE4syncEv
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE4syncEv
{
	struct Eq_58927 * fp;
	struct Eq_58927 * sp = fp;
	sp -= 0x50;
	struct Eq_58931 * x23;
	sp->ptr0010 = x23;
	struct Eq_58936 * v7 = (struct Eq_58936 *) ((char *) &sp->ptr0010 + 16);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	word64 x21;
	v7->qw0008 = x21;
	struct Eq_58947 * v10 = (struct Eq_58947 *) ((char *) &sp->ptr0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_58958 * v13 = (struct Eq_58958 *) ((char *) &sp->ptr0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->ptr0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	sp->t0008.u1 = (size_t) x8;
	Eq_14 x0;
	x8 = *((word32) x0 + 0x0078);
	int32 w20;
	if (x8 != 0x00)
	{
		x19 = x0;
		x0 = *((word32) x0 + 0x0080);
		if (x0 == 0x00)
		{
			fn00000000000389E0();
			sp = (struct Eq_58927 *) &sp->t0008.u0;
			_ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv();
			return;
		}
		Eq_58999 w8 = *((word32) x19 + 0x009C);
		Eq_14 x9;
		int32 w21;
		Eq_14 x3;
		Eq_59017 NZCV;
		int32 w0;
		ptr64 x31;
		bool Z;
		Eq_14 x2;
		Eq_14 x1;
		word64 * x4;
		if ((w8 & 0x10) != 0x00)
		{
			if ((w8 & 0x08) != 0x00)
			{
				x8 = *((word32) x19 + 144);
				sp->qw0000 = (word64) x8;
				byte v18 = (byte) *((word32) x19 + 0x00A2);
				w8 = (word32) v18;
				if (w8 != 0x00)
				{
					struct Eq_59062 * v20 = (struct Eq_59062 *) ((word32) x19 + 24);
					x8.u1 = v20->t0000.u1;
					x9.u1 = v20->t0008.u1;
					w21 = 0x00;
					x20 = x9 - x8;
				}
				else
				{
					x8 = *x0.u1;
					x8 = *((word32) x8 + 48);
					x8();
					struct Eq_59045 * v31 = (struct Eq_59045 *) ((word32) x19 + 72);
					x3.u1 = v31->t0000.u1;
					x8.u1 = v31->t0008.u1;
					NZCV.u0 = cond(w0 - 0x01);
					x20 = x8 - x3;
					word32 NV;
					Eq_14 x10;
					if (Test(GE,NV))
					{
						struct Eq_59143 * v33 = (struct Eq_59143 *) ((word32) x19 + 24);
						x8.u1 = v33->t0000.u1;
						x9.u1 = v33->t0008.u1;
						x10.u1 = (int64) w0;
						w21 = 0x00;
						x8 = x9 - x8;
						x20.u1 = x20 + x8 *64 x10;
					}
					else
					{
						struct Eq_59131 * v38 = (struct Eq_59131 *) ((word32) x19 + 24);
						x8.u1 = v38->t0000.u1;
						x9.u1 = v38->t0008.u1;
						x31 = x8 - x9;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
						{
							x0 = *((word32) x19 + 0x0080);
							x10 = *((word32) x19 + 16);
							x2 = *((word32) x19 + 64);
							x1.u1 = &sp->qw0000;
							x9 = *x0.u1;
							x4 = x8 - x10;
							x9 = *((word32) x9 + 64);
							x9();
							struct Eq_59227 * v40 = (struct Eq_59227 *) ((word32) x19 + 64);
							x9.u1 = v40->ptr0000;
							x8.u1 = v40->t0008.u1;
							w21 = 0x00 | 0x01;
							x8.u1 = x8 + x20;
							x8 -= (int64) w0;
							x20 = x8 - x9;
						}
						else
							w21 = 0x00;
					}
				}
				x0 = *((word32) x19 + 0x0078);
				x1 = 0x00 - x20;
				ui32 w2 = 0x00 | 0x01;
				x0 = SEQ(0x00, fseeko(x0, x1, (int32) x2));
				if (w0 != 0x00)
					goto l00000000000381DC;
				if (w21 != 0x00)
				{
					x8.u1 = sp->qw0000;
					*((word32) x19 + 0x0088) = x8;
				}
				x8 = *((word32) x19 + 64);
				((word32) x19 + 0x009C)->u1 = 0x00;
				struct Eq_59177 * v41 = (struct Eq_59177 *) ((word32) x19 + 24);
				v41->qw0000 = 0x00;
				v41->qw0008 = 0x00;
				((word32) x19 + 16)->u0 = 0x00;
				struct Eq_59192 * v42 = (struct Eq_59192 *) ((word32) x19 + 72);
				v42->t0000.u1 = (size_t) x8;
				v42->t0008.u1 = (size_t) x8;
			}
		}
		else
		{
			struct Eq_59006 * v43 = (struct Eq_59006 *) ((word32) x19 + 40);
			x8.u1 = v43->t0000.u1;
			x9.u1 = v43->t0008.u1;
			x31 = x9 - x8;
			NZCV.u0 = cond(x31);
			ui32 w1;
			if (Test(NE,Z))
			{
				x8 = *x19.u1;
				w1 = ~0x00;
				x0 = x19;
				w20 = ~0x00;
				x8 = *((word32) x8 + 0x0068);
				x8();
				int32 wsp = w0 + 0x01;
				NZCV.u0 = cond(wsp);
				if (Test(EQ,Z))
				{
l0000000000038208:
					x8.u1 = x23->t0028.u1;
					x9.u1 = sp->t0008.u1;
					x31 = x8 - x9;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
						__stack_chk_fail();
					else
					{
						w0 = w20;
						struct Eq_59099 * v27 = (struct Eq_59099 *) ((char *) &sp->ptr0010 + 48);
						x29 = v27->ptr0000;
						x30 = v27->qw0008;
						struct Eq_59108 * v28 = (struct Eq_59108 *) ((char *) &sp->ptr0010 + 32);
						x20.u1 = v28->t0000.u1;
						x19.u1 = v28->t0008.u1;
						struct Eq_59117 * v29 = (struct Eq_59117 *) ((char *) &sp->ptr0010 + 16);
						x22.u1 = v29->t0000.u1;
						x21 = v29->qw0008;
						x23 = sp->ptr0010;
						sp = (struct Eq_58927 *) ((char *) &sp->ptr0010 + 64);
						return;
					}
				}
			}
			x20.u1 = (word32) x19 + 0x0088;
			do
			{
				x0 = *((word32) x19 + 0x0080);
				x2 = *((word32) x19 + 64);
				x9 = *((word32) x19 + 96);
				x4 = &sp->qw0000;
				x8 = *x0.u1;
				x1 = x20;
				x3.u1 = x2 + x9;
				x8 = *((word32) x8 + 40);
				x8();
				w21 = w0;
				x8.u1 = sp->qw0000;
				x0 = *((word32) x19 + 64);
				x3 = *((word32) x19 + 0x0078);
				w1 = 0x00 | 0x01;
				x22 = x8 - x0;
				x2 = x22;
				x0 = fwrite(x0, x1, x2, x3);
				x31 = x0 - x22;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
					goto l00000000000381DC;
				NZCV.u0 = cond(w21 - 0x01);
			} while (Test(EQ,Z));
			NZCV.u0 = cond(w21 - 0x02);
			if (Test(EQ,Z))
			{
l00000000000381DC:
				w20 = ~0x00;
				goto l0000000000038208;
			}
			x0 = *((word32) x19 + 0x0078);
			x0 = SEQ(0x00, fflush(x0));
			if (w0 != 0x00)
				goto l00000000000381DC;
		}
	}
	w20 = 0x00;
	goto l0000000000038208;
}

<anonymous> g_t3813C = <code>; // 000000000003813C
// 000000000003823C: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
// Called from:
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE4syncEv
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word64 x0 = 0x00;
}

// 0000000000038244: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl
{
	word32 w0;
	struct Eq_59324 * fp;
	struct Eq_59324 * sp = fp;
	sp = (struct Eq_59324 *) ((char *) sp - 64);
	ui64 x24;
	sp->qw0000 = x24;
	Eq_14 x23;
	sp->t0008.u1 = (size_t) x23;
	struct Eq_59337 * v8 = (struct Eq_59337 *) ((char *) &sp->t0008 + 8);
	Eq_59339 x22;
	v8->t0000.u1 = (struct Eq_108302 *) x22;
	Eq_59339 x21;
	v8->t0008.u1 = (struct Eq_108302 *) x21;
	struct Eq_59348 * v11 = (struct Eq_59348 *) ((char *) &sp->t0008 + 24);
	Eq_14 x20;
	v11->t0000.u1 = (size_t) x20;
	Eq_59339 x19;
	v11->t0008.u1 = (struct Eq_108302 *) x19;
	struct Eq_59359 * v14 = (struct Eq_59359 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_59374 NZCV;
	Eq_14 x2;
	NZCV.u0 = cond(x2 - 0x01);
	word32 NV;
	Eq_59339 x0;
	if (Test(GE,NV))
	{
		x20 = x2;
		Eq_59339 x1;
		x21 = x1;
		x22 = x0;
		x19.u0 = 0x00;
		ui32 w24 = 0x00 | 0x7FFFFFFF;
		do
		{
			struct Eq_59480 * v22 = (struct Eq_59480 *) &x22.u1->t0018.u0;
			x1.u1 = v22->ptr0000;
			Eq_59339 x8;
			x8.u1 = v22->t0008.u1;
			Eq_59403 x31 = x1 - x8;
			NZCV.u0 = cond(x31);
			bool C;
			int32 w23;
			if (Test(ULT,C))
			{
				x8 -= x1;
				ui64 x9 = x20 - x19;
				x31 = x9 - x8;
				NZCV.u0 = cond(x31);
				x8.u1 = Test(LT,NV) ? x9 : x8;
				x31 = x8 - x24;
				NZCV.u0 = cond(x31);
				x23.u1 = Test(LT,NV) ? x8 : x24;
				if (x23 != 0x00)
				{
					x0 = x21;
					x2 = x23;
					x0 = memcpy(x0, x1, x2);
					x1.u1 = x22.u1->t0018.u1;
				}
				x8.u1 = (char *) &x1.u1->t0000 + (int64) w23;
				x21.u1 = x21 + x23;
				x22.u1->t0018.u1 = (struct Eq_108302 *) x8;
			}
			else
			{
				x8 = x22.u1->t0000;
				x0 = x22;
				x8.u1 = x8.u1->t0050.u1;
				x8();
				word32 wsp = w0 + 0x01;
				NZCV.u0 = cond(wsp);
				bool Z;
				if (Test(EQ,Z))
					break;
				x21.u1->t0000 = (<anonymous>) (byte) w0;
				x21.u1 = (word32) x21 + 1;
				w23 = 0x00 | 0x01;
			}
			x19.u1 = x23 + x19;
			x31 = x19 - x20;
			NZCV.u0 = cond(x31);
		} while (Test(LT,NV));
	}
	else
		x19.u0 = 0x00;
	x0 = x19;
	struct Eq_59435 * v26 = (struct Eq_59435 *) ((char *) &sp->t0008 + 40);
	x29 = v26->ptr0000;
	x30 = v26->qw0008;
	struct Eq_59444 * v27 = (struct Eq_59444 *) ((char *) &sp->t0008 + 24);
	x20.u1 = v27->t0000.u1;
	x19.u1 = v27->t0008.u1;
	struct Eq_59453 * v28 = (struct Eq_59453 *) ((char *) &sp->t0008 + 8);
	x22.u1 = v28->t0000.u1;
	x21.u1 = v28->t0008.u1;
	struct Eq_59324 * v29 = sp;
	x24 = v29->qw0000;
	x23.u1 = v29->t0008.u1;
	sp = (struct Eq_59324 *) ((char *) &sp->t0008 + 56);
}

<anonymous> g_t38284 = <code>; // 0000000000038284
// 0000000000038308: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE9underflowEv
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE9underflowEv
{
	struct Eq_59492 * fp;
	struct Eq_59492 * sp = fp;
	sp -= 0x60;
	struct Eq_59497 * v6 = (struct Eq_59497 *) ((char *) &sp->t0018 + 8);
	Eq_14 x24;
	v6->t0000.u1 = (size_t) x24;
	struct Eq_59503 * x23;
	v6->ptr0008 = x23;
	struct Eq_59508 * v9 = (struct Eq_59508 *) ((char *) &sp->t0018 + 24);
	Eq_14 x22;
	v9->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v9->t0008.u1 = (size_t) x21;
	struct Eq_59519 * v12 = (struct Eq_59519 *) ((char *) &sp->t0018 + 40);
	Eq_14 x20;
	v12->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v12->t0008.u1 = (size_t) x19;
	struct Eq_59530 * v15 = (struct Eq_59530 *) ((char *) &sp->t0018 + 56);
	ptr64 x29;
	v15->ptr0000 = x29;
	word64 x30;
	v15->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 56;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	sp->t0018.u1 = (size_t) x8;
	Eq_14 x0;
	x8 = *((word32) x0 + 0x0078);
	word32 w0;
	if (x8 == 0x00)
	{
		w0 = ~0x00;
		goto l0000000000038560;
	}
	Eq_58999 v20 = *((word32) x0 + 0x009C);
	ui32 w8 = (word32) v20;
	x19 = x0;
	Eq_58999 w9;
	Eq_14 x10;
	if ((w8 & 0x08) != 0x00)
	{
		byte v21 = (byte) *((word32) x19 + 0x00A2);
		w8 = (word32) v21;
		w9 = 0x00 | 0x60;
		ui32 w10 = 0x00 | 0x70;
		struct Eq_59591 * v24 = (struct Eq_59591 *) ((word32) x19 + 40);
		v24->qw0000 = 0x00;
		v24->qw0008 = 0x00;
		Eq_59603 NZCV;
		NZCV.u0 = cond(w8 - 0x00);
		w8 = 0x00 | 0x40;
		Eq_14 x9;
		bool Z;
		x9.u1 = Test(EQ,Z) ? x10 : x9;
		w10 = 0x68;
		((word32) x19 + 56)->u0 = 0x00;
		x8.u1 = Test(EQ,Z) ? x10 : x8;
		x10.u1 = *(x19 + x8);
		x8.u1 = *(x19 + x9);
		w9 = 0x00 | 0x08;
		((word32) x19 + 0x009C)->u1 = w9;
		w9 = 0x00 | 0x01;
		x8.u1 = x10 + x8;
		struct Eq_59635 * v29 = (struct Eq_59635 *) ((word32) x19 + 16);
		v29->t0000.u1 = (size_t) x10;
		v29->t0008.u1 = (size_t) x8;
		*((word32) x19 + 32) = x8;
		if (x8 != 0x00)
		{
l000000000003838C:
			int64 x31;
			if (w9 != 0x00)
			{
l0000000000038390:
				x9 = *((word32) x19 + 32);
				x20.u0 = 0x00;
				x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
					goto l00000000000383A0;
				goto l0000000000038400;
			}
l00000000000383D4:
			x9 = *((word32) x19 + 32);
			x10 = *((word32) x19 + 16);
			ui32 w11 = 0x00 | 0x04;
			x10 = x9 - x10;
			NZCV.u0 = cond(x10 - null);
			word32 NV;
			if (Test(GE,NV))
				x10.u1 = x10 + (union Eq_59938 *) 0x01;
			x10 >>= 1;
			NZCV.u0 = cond(x10 - (union Eq_59930 *) 0x04);
			bool C;
			ui64 x11;
			x20.u1 = Test(ULT,C) ? x10 : x11;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
			{
l00000000000383A0:
				byte v32 = (byte) *x8.u1;
				w0 = (word32) v32;
				x24.u1 = (word32) x19 + 16;
				goto l0000000000038548;
			}
l0000000000038400:
			x24 = x19;
			x24.u1 = (word32) x24 + 16;
			x0 = *x24.u1;
			Eq_14 x1 = x8 - x20;
			Eq_14 x2 = x20;
			x0 = memmove(x0, x1, x2);
			byte v40 = (byte) *((word32) x24 + 0x0092);
			w8 = (word32) v40;
			Eq_14 x3;
			ui32 w1;
			if (w8 != 0x00)
			{
				x8 = *((word32) x19 + 32);
				x9 = *((word32) x19 + 16);
				x3 = *((word32) x19 + 0x0078);
				w1 = 0x00 | 0x01;
				x8 -= x20;
				x2 = x8 - x9;
				x0.u1 = x9 + x20;
				x0 = fread(x0, x1, x2, x3);
				if (x0 != 0x00)
				{
					x8 = *((word32) x19 + 16);
					x8.u1 = x8 + x20;
					x9.u1 = x8 + x0;
					goto l0000000000038538;
				}
				goto l0000000000038544;
			}
			x21 = x19;
			x21.u1 = (word32) x21 + 72;
			x1 = *x21.u1;
			x9 = *((word32) x21 + 8);
			x2 = x9 - x1;
			NZCV.u0 = cond(x2);
			if (Test(NE,Z))
			{
				x0 = *((word32) x19 + 64);
				x0 = memmove(x0, x1, x2);
				struct Eq_59873 * v43 = (struct Eq_59873 *) ((word32) x19 + 72);
				x1.u1 = v43->qw0000;
				x9.u1 = v43->t0008.u1;
			}
			x8 = *((word32) x19 + 64);
			x9 -= x1;
			x10.u1 = (word32) x19 + 88;
			x0.u1 = x8 + x9;
			x31 = x8 - x10;
			NZCV.u0 = cond(x31);
			*((word32) x19 + 72) = x0;
			if (Test(NE,Z))
				x9 = *((word32) x19 + 96);
			else
				w9 = 0x00 | 0x08;
			x22 = x19;
			x22.u1 = (word32) x22 + 0x0088;
			x10 = *x22.u1;
			x8.u1 = x8 + x9;
			x11 = x8 - x0;
			w1 = 0x00 | 0x01;
			struct Eq_59899 * v50 = (struct Eq_59899 *) ((word32) x22 - 24);
			x9.u1 = v50->t0000.u1;
			x3.u1 = v50->t0008.u1;
			*((word32) x22 - 56) = x8;
			*((word32) x22 + 8) = x10;
			x8 = x9 - x20;
			x31 = x11 - x8;
			NZCV.u0 = cond(x31);
			x2.u1 = Test(ULT,C) ? x11 : x8;
			x0 = fread(x0, x1, x2, x3);
			if (x0 != 0x00)
			{
				x8 = x0;
				x0 = *((word32) x19 + 0x0080);
				if (x0 == 0x00)
				{
					fn00000000000389E0();
					sp = (struct Eq_59492 *) &sp->t0008.u0;
					_ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE5uflowEv();
					return;
				}
				struct Eq_59949 * v52 = (struct Eq_59949 *) ((word32) x19 + 64);
				x2.u1 = v52->ptr0000;
				x9.u1 = v52->t0008.u1;
				x10 = *((word32) x19 + 112);
				ptr64 x7 = &sp->t0008.u0;
				x1 = x22;
				x3.u1 = x9 + x8;
				*((word32) x19 + 80) = x3;
				x8 = *x0.u1;
				x9 = *((word32) x19 + 16);
				Eq_14 x4 = x21;
				x8 = *((word32) x8 + 32);
				ptr64 x5 = x9 + x20;
				ptr64 x6 = x9 + x10;
				x8();
				NZCV.u0 = cond(w0 - 0x03);
				if (Test(EQ,Z))
				{
					x8 = *((word32) x19 + 64);
					x9 = *((word32) x19 + 80);
					*((word32) x19 + 16) = x8;
l0000000000038538:
					struct Eq_59837 * v44 = (struct Eq_59837 *) ((word32) x19 + 24);
					v44->qw0000 = (word64) x8;
					v44->t0008.u1 = (size_t) x9;
					Eq_59847 v45;
					v45.u3 = *x8.u1;
					w0 = (word32) v45;
l0000000000038548:
					x8 = *x24.u1;
					x9.u1 = (char *) &sp->t0008 + 0x0C;
					x31 = x8 - x9;
					NZCV.u0 = cond(x31);
					if (Test(EQ,Z))
					{
						struct Eq_59738 * v33 = (struct Eq_59738 *) ((word32) x19 + 16);
						v33->qw0000 = 0x00;
						v33->qw0008 = 0x00;
						((word32) x19 + 32)->u0 = 0x00;
					}
l0000000000038560:
					x8.u1 = x23->t0028.u1;
					x9.u1 = sp->t0018.u1;
					x31 = x8 - x9;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
						__stack_chk_fail();
					else
					{
						struct Eq_59756 * v34 = (struct Eq_59756 *) ((char *) &sp->t0018 + 56);
						x29 = v34->ptr0000;
						x30 = v34->qw0008;
						struct Eq_59765 * v35 = (struct Eq_59765 *) ((char *) &sp->t0018 + 40);
						x20.u1 = v35->t0000.u1;
						x19.u1 = v35->t0008.u1;
						struct Eq_59774 * v36 = (struct Eq_59774 *) ((char *) &sp->t0018 + 24);
						x22.u1 = v36->t0000.u1;
						x21.u1 = v36->t0008.u1;
						struct Eq_59783 * v37 = (struct Eq_59783 *) ((char *) &sp->t0018 + 8);
						x24.u1 = v37->t0000.u1;
						x23 = v37->ptr0008;
						sp = (struct Eq_59492 *) ((char *) &sp->t0018 + 72);
						return;
					}
				}
				x8 = *x24.u1;
				x9.u1 = sp->t0008.u1;
				x8.u1 = x8 + x20;
				x31 = x9 - x8;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
					goto l0000000000038538;
			}
l0000000000038544:
			w0 = ~0x00;
			goto l0000000000038548;
		}
	}
	else
	{
		x8 = *((word32) x19 + 24);
		w9.u0 = 0x00;
		if (x8 != 0x00)
			goto l000000000003838C;
	}
	x10.u1 = (char *) &sp->t0008 + 0x0C;
	x8 = x10 | 0x01;
	struct Eq_59653 * v48 = (struct Eq_59653 *) ((word32) x19 + 16);
	v48->t0000.u1 = (size_t) x10;
	v48->t0008.u1 = (size_t) x8;
	*((word32) x19 + 32) = x8;
	if (w9 != 0x00)
		goto l0000000000038390;
	goto l00000000000383D4;
}

<anonymous> g_t3838C = <code>; // 000000000003838C
// 0000000000038590: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
// Called from:
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE9underflowEv
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE5uflowEv
{
	word32 w0;
	struct Eq_60010 * x0;
	struct Eq_60010 ** fp;
	struct Eq_60010 ** sp = fp;
	sp = (struct Eq_60010 **) ((char *) sp - 32);
	struct Eq_60010 * x19;
	*sp = (struct Eq_60010 **) x19;
	struct Eq_60015 * v7 = (struct Eq_60015 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	struct Eq_60030 * x8 = x0->ptr0000;
	x19 = x0;
	x8 = x8->ptr0048;
	x8();
	word32 wsp = w0 + 0x01;
	Eq_60039 NZCV;
	NZCV.u0 = cond(wsp);
	bool Z;
	if (Test(NE,Z))
	{
		x8 = x19->ptr0018;
		struct Eq_60030 * x9 = (struct Eq_60030 *) ((char *) &x8->t0000 + 1);
		x19->ptr0018 = x9;
		Eq_60068 v15 = x8->t0000;
		w0 = (word32) v15;
	}
	struct Eq_60044 * v16 = (struct Eq_60044 *) ((char *) sp + 16);
	x29 = v16->ptr0000;
	x30 = v16->qw0008;
	x19 = (struct Eq_60010 *) *sp;
	sp = (struct Eq_60010 **) ((char *) sp + 32);
}

// 00000000000385D0: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi
{
	struct Eq_60073 * x0;
	ptr64 fp;
	ptr64 sp = fp;
	byte * x9 = x0->ptr0078;
	word32 w0;
	if (x9 == null)
	{
l0000000000038608:
		w0 = ~0x00;
	}
	else
	{
		struct Eq_60083 * v7 = (struct Eq_60083 *) ((char *) x0 + 16);
		word64 x10 = v7->qw0000;
		x9 = v7->ptr0008;
		struct Eq_60073 * x8 = x0;
		word64 x31 = x10 - x9;
		Eq_60095 NZCV;
		NZCV.u0 = cond(x31);
		bool C;
		if (Test(UGE,C))
			goto l0000000000038608;
		word32 w1;
		w0 = w1;
		word32 wsp = w1 + 0x01;
		NZCV.u0 = cond(wsp);
		bool Z;
		if (Test(EQ,Z))
		{
			w0 = 0x00;
			--x9;
			x8->ptr0018 = x9;
			return;
		}
		byte v17 = x8->b0098;
		ui32 w10 = (word32) v17;
		if ((w10 & 0x10) != 0x00)
		{
			x9 += -1;
			byte v18 = *x9;
			w10 = (word32) v18;
			NZCV.u0 = cond(w10 - (uint32) ((byte) w0));
			if (Test(NE,Z))
				goto l0000000000038608;
		}
		else
			--x9;
		x8->ptr0018 = x9;
		*x9 = (byte) w0;
	}
}

// 0000000000038630: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl
{
	word32 w0;
	union Eq_14 * fp;
	union Eq_14 * sp = fp;
	sp = (union Eq_14 *) ((char *) sp - 64);
	Eq_14 x23;
	sp->u1 = (size_t) x23;
	struct Eq_60152 * v7 = (struct Eq_60152 *) ((char *) sp + 16);
	struct Eq_60154 * x22;
	v7->ptr0000 = x22;
	struct Eq_60154 * x21;
	v7->ptr0008 = x21;
	struct Eq_60163 * v10 = (struct Eq_60163 *) ((char *) sp + 32);
	byte * x20;
	v10->ptr0000 = x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_60174 * v13 = (struct Eq_60174 *) ((char *) sp + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) sp + 48;
	Eq_60189 NZCV;
	Eq_14 x2;
	NZCV.u0 = cond(x2 - 0x01);
	word32 NV;
	struct Eq_60154 * x0;
	if (Test(GE,NV))
	{
		x19 = x2;
		byte * x1;
		x20 = x1;
		x22 = x0;
		x21 = null;
		do
		{
			struct Eq_60246 * v20 = (struct Eq_60246 *) &x22->ptr0030;
			x0 = (struct Eq_60154 *) v20->ptr0000;
			struct Eq_60154 * x8 = v20->ptr0008;
			int64 x31 = x0 - x8;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				x8 -= x0;
				ui64 x9 = x19 - x21;
				x31 = x9 - x8;
				NZCV.u0 = cond(x31);
				x23.u1 = Test(LT,NV) ? x9 : x8;
				if (x23 != 0x00)
				{
					x1 = x20;
					x2 = x23;
					x0 = memcpy(x0, x1, x2);
					x0 = x22->ptr0030;
				}
				x8 = x0 + x23;
				x20 += x23;
				x21 = x23 + x21;
				x22->ptr0030 = x8;
				x31 = x21 - x19;
				NZCV.u0 = cond(x31);
				if (Test(GE,NV))
					break;
				continue;
			}
			x8 = (struct Eq_60154 *) x22->t0000;
			byte v28 = *x20;
			word32 w1 = (word32) v28;
			x0 = x22;
			x8 = x8->ptr0068;
			x8();
			word32 wsp = w0 + 0x01;
			NZCV.u0 = cond(wsp);
			bool Z;
			if (Test(EQ,Z))
				break;
			++x20;
			x21 = (struct Eq_60154 *) ((char *) &x21->t0000 + 1);
			x31 = x21 - x19;
			NZCV.u0 = cond(x31);
		} while (Test(LT,NV));
	}
	else
		x21 = null;
	x0 = x21;
	struct Eq_60259 * v24 = (struct Eq_60259 *) ((char *) sp + 48);
	x29 = v24->ptr0000;
	x30 = v24->qw0008;
	struct Eq_60268 * v25 = (struct Eq_60268 *) ((char *) sp + 32);
	x20 = v25->ptr0000;
	x19.u1 = v25->t0008.u1;
	struct Eq_60277 * v26 = (struct Eq_60277 *) ((char *) sp + 16);
	x22 = v26->ptr0000;
	x21 = v26->ptr0008;
	x23.u1 = sp->u1;
	sp = (union Eq_14 *) ((char *) sp + 64);
}

// 00000000000386F4: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE8overflowEi
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE8overflowEi
{
	ui32 w1;
	struct Eq_60297 * fp;
	struct Eq_60297 * sp = fp;
	sp -= 0x80;
	struct Eq_60302 * v6 = (struct Eq_60302 *) ((char *) &sp->t0018 + 8);
	Eq_14 x28;
	v6->t0000.u1 = (size_t) x28;
	Eq_14 x27;
	v6->t0008.u1 = (size_t) x27;
	struct Eq_60313 * v9 = (struct Eq_60313 *) ((char *) &sp->t0018 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v9->t0008.u1 = (size_t) x25;
	struct Eq_60324 * v12 = (struct Eq_60324 *) ((char *) &sp->t0018 + 40);
	struct Eq_60326 * x24;
	v12->ptr0000 = x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_60335 * v15 = (struct Eq_60335 *) ((char *) &sp->t0018 + 56);
	word64 x22;
	v15->qw0000 = x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_60346 * v18 = (struct Eq_60346 *) ((char *) &sp->t0018 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	word64 x19;
	v18->qw0008 = x19;
	struct Eq_60357 * v21 = (struct Eq_60357 *) ((char *) &sp->t0018 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 88;
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x24->t0028.u1;
	sp->t0018.u1 = (size_t) x8;
	Eq_14 x0;
	x8 = *((word32) x0 + 0x0078);
	word32 w0;
	if (x8 != 0x00)
	{
		Eq_58999 v26 = *((word32) x0 + 0x009C);
		Eq_58999 w8 = (word32) v26;
		x20 = x0;
		ui32 w19 = w1;
		Eq_60431 NZCV;
		Eq_14 x2;
		if ((w8 & 0x10) != 0x00)
		{
			x8 = *((word32) x20 + 96);
			struct Eq_60415 * v29 = (struct Eq_60415 *) ((word32) x20 + 16);
			v29->qw0000 = 0x00;
			v29->qw0008 = 0x00;
			((word32) x20 + 32)->u0 = 0x00;
			NZCV.u0 = cond(x8 - 0x09);
			bool C;
			if (Test(UGE,C))
			{
				byte v33 = (byte) *((word32) x20 + 0x00A2);
				word32 w9 = (word32) v33;
				if (w9 != 0x00)
					x2 = *((word32) x20 + 64);
				else
				{
					struct Eq_60462 * v49 = (struct Eq_60462 *) ((word32) x20 + 0x0068);
					x2.u1 = v49->t0000.u1;
					x8.u1 = v49->t0008.u1;
				}
				x8.u1 = x2 + x8;
				x26 = x8 - 0x01;
				x25.u1 = (word32) x20 + 40;
				struct Eq_60479 * v45 = (struct Eq_60479 *) ((word32) x20 + 40);
				v45->t0000.u1 = (size_t) x2;
				v45->t0008.u1 = (size_t) x2;
				x27.u1 = (word32) x20 + 56;
				*((word32) x20 + 56) = x26;
			}
			else
			{
				x25 = x20;
				x25.u1 = (word32) x25 + 40;
				x25.u1->u0 = 0x00;
				x27 = x25;
				x2.u0 = 0x00;
				x26.u0 = 0x00;
				x27.u1 = (word32) x27 + 16;
				x27.u1->u0 = 0x00;
				((word32) x25 + 8)->u1 = 0x00;
			}
			w8 = 0x00 | 0x10;
			((word32) x20 + 0x009C)->u1 = w8;
		}
		else
		{
			x25 = x20;
			x25.u1 = (word32) x25 + 40;
			x2 = *x25.u1;
			x27 = x25;
			x27.u1 = (word32) x27 + 16;
			x26 = *x27.u1;
		}
		Eq_14 x3 = *((word32) x20 + 48);
		x28 = x2;
		word32 wsp = w19 + 0x01;
		NZCV.u0 = cond(wsp);
		bool Z;
		if (Test(NE,Z))
		{
			if (x3 == 0x00)
			{
				x3.u1 = (char *) &sp->t0008 + 0x0C;
				x8 = x3 | 0x01;
				struct Eq_60581 * v48 = (struct Eq_60581 *) ((word32) x20 + 40);
				v48->t0000.u1 = (size_t) x3;
				v48->t0008.u1 = (size_t) x3;
				*((word32) x20 + 56) = x8;
			}
			x3.u1->u0 = (byte) w19;
			struct Eq_60563 * v50 = (struct Eq_60563 *) ((word32) x20 + 40);
			x2.u1 = v50->t0000.u1;
			x8.u1 = v50->t0008.u1;
			x3.u1 = (word32) x8 + 1;
			*((word32) x20 + 48) = x3;
		}
		x21 = x3 - x2;
		NZCV.u0 = cond(x21);
		Eq_14 x9;
		Eq_60646 x31;
		if (Test(EQ,Z))
		{
l0000000000038820:
			wsp = w19 + 0x01;
			NZCV.u0 = cond(wsp);
			w0 = Test(EQ,Z) ? 0x00 : w19;
l0000000000038908:
			x8.u1 = x24->t0028.u1;
			x9.u1 = sp->t0018.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				struct Eq_60496 * v39 = (struct Eq_60496 *) ((char *) &sp->t0018 + 88);
				x29 = v39->ptr0000;
				x30 = v39->qw0008;
				struct Eq_60505 * v40 = (struct Eq_60505 *) ((char *) &sp->t0018 + 72);
				x20.u1 = v40->t0000.u1;
				x19 = v40->qw0008;
				struct Eq_60514 * v41 = (struct Eq_60514 *) ((char *) &sp->t0018 + 56);
				x22 = v41->qw0000;
				x21.u1 = v41->t0008.u1;
				struct Eq_60523 * v42 = (struct Eq_60523 *) ((char *) &sp->t0018 + 40);
				x24 = v42->ptr0000;
				x23.u1 = v42->t0008.u1;
				struct Eq_60532 * v43 = (struct Eq_60532 *) ((char *) &sp->t0018 + 24);
				x26.u1 = v43->t0000.u1;
				x25.u1 = v43->t0008.u1;
				struct Eq_60541 * v44 = (struct Eq_60541 *) ((char *) &sp->t0018 + 8);
				x28.u1 = v44->t0000.u1;
				x27.u1 = v44->t0008.u1;
				sp = (struct Eq_60297 *) ((char *) &sp->t0018 + 0x0068);
				return;
			}
		}
		byte v51 = (byte) *((word32) x20 + 0x00A2);
		w8 = (word32) v51;
		Eq_14 x1;
		if (w8 != 0x00)
		{
			x3 = *((word32) x20 + 0x0078);
			w1 = 0x00 | 0x01;
			x0 = x2;
l0000000000038804:
			x2 = x21;
			x0 = fwrite(x0, x1, x2, x3);
			x31 = x0 - x21;
			NZCV.u0 = cond(x31);
			if (Test(EQ,Z))
			{
l0000000000038814:
				*((word32) x20 + 48) = x28;
				*x25.u1 = x28;
				*x27.u1 = x26;
				goto l0000000000038820;
			}
		}
		else
		{
			Eq_14 x5 = *((word32) x20 + 64);
			sp->t0008.u1 = (size_t) x5;
			x0 = *((word32) x20 + 0x0080);
			if (x0 == 0x00)
			{
l0000000000038954:
				fn00000000000389E0();
				sp = (struct Eq_60297 *) &sp->t0008.u0;
				_ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEED2Ev();
				return;
			}
			x8 = *x0.u1;
			x9 = *((word32) x20 + 96);
			x21.u1 = (word32) x20 + 0x0088;
			word64 * x4 = &sp->qw0000;
			x8 = *((word32) x8 + 24);
			ptr64 x6 = x5 + x9;
			union Eq_60670 ** x7 = (union Eq_60670 **) &sp->t0008.u0;
			x1 = x21;
			x8();
			x9.u1 = sp->qw0000;
			x8 = *((word32) x20 + 40);
			x31 = x9 - x8;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
			{
				word32 w22 = w0;
				do
				{
					NZCV.u0 = cond(w22 - 0x03);
					if (Test(EQ,Z))
					{
						x9 = *((word32) x20 + 48);
						x3 = *((word32) x20 + 0x0078);
						w1 = 0x00 | 0x01;
						x0 = x8;
						x21 = x9 - x8;
						goto l0000000000038804;
					}
					NZCV.u0 = cond(w22 - 0x01);
					word32 ZC;
					if (Test(UGT,ZC))
						break;
					x8.u1 = sp->t0008.u1;
					x0 = *((word32) x20 + 64);
					x3 = *((word32) x20 + 0x0078);
					w1 = 0x00 | 0x01;
					x23 = x8 - x0;
					x2 = x23;
					x0 = fwrite(x0, x1, x2, x3);
					x31 = x0 - x23;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
						break;
					NZCV.u0 = cond(w22 - 0x01);
					if (Test(NE,Z))
						goto l0000000000038814;
					x2.u1 = sp->qw0000;
					x3 = *((word32) x20 + 48);
					*x25.u1 = x2;
					*x27.u1 = x3;
					x0 = *((word32) x20 + 0x0080);
					*((word32) x20 + 48) = x3;
					if (x0 == 0x00)
						goto l0000000000038954;
					x8 = *x0.u1;
					x5 = *((word32) x20 + 64);
					x9 = *((word32) x20 + 96);
					x4 = &sp->qw0000;
					x8 = *((word32) x8 + 24);
					x7 = (union Eq_60670 **) &sp->t0008.u0;
					x6 = x5 + x9;
					x1 = x21;
					x8();
					x9.u1 = sp->qw0000;
					x8 = *((word32) x20 + 40);
					w22 = w0;
					x31 = x9 - x8;
					NZCV.u0 = cond(x31);
				} while (Test(NE,Z));
			}
		}
	}
	w0 = ~0x00;
	goto l0000000000038908;
}

// 0000000000038958: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEED2Ev
// Called from:
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE8overflowEi
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEED2Ev
{
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 4064);
	x8.u1 = (word32) x8 + 16;
	union Eq_14 * x0;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 8);
	_ZNSt6__ndk16localeD1Ev();
}

// 000000000003896C: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEED0Ev
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEED0Ev
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_60819 * v7 = (struct Eq_60819 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 4064);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 8);
	_ZNSt6__ndk16localeD1Ev();
	struct Eq_60846 * v10 = (struct Eq_60846 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 00000000000389A0: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE
{
	ptr64 fp;
	ptr64 sp = fp;
}

// 00000000000389A4: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl
{
	ptr64 fp;
	ptr64 sp = fp;
}

// 00000000000389A8: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj
{
	ptr64 fp;
	ptr64 sp = fp;
	word64 x1 = ~0x00;
	word64 x0 = 0x00;
}

// 00000000000389B4: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI9mbstate_tEEj
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI9mbstate_tEEj
{
	ptr64 fp;
	ptr64 sp = fp;
	word64 x1 = ~0x00;
	word64 x0 = 0x00;
}

// 00000000000389C0: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE4syncEv
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE4syncEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word32 w0 = 0x00;
}

// 00000000000389C8: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE9underflowEv
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE9underflowEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word32 w0 = ~0x00;
}

// 00000000000389D0: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi
{
	ptr64 fp;
	ptr64 sp = fp;
	word32 w0 = ~0x00;
}

// 00000000000389D8: define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE8overflowEi
define _ZNSt6__ndk115basic_streambufIcNS_11char_traitsIcEEE8overflowEi
{
	ptr64 fp;
	ptr64 sp = fp;
	word32 w0 = ~0x00;
}

// 00000000000389E0: define fn00000000000389E0
// Called from:
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE4syncEv
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE9underflowEv
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEE8overflowEi
define fn00000000000389E0
{
	word64 * fp;
	word64 * sp = fp;
	sp += -4;
	word64 x19;
	*sp = x19;
	struct Eq_60909 * v7 = (struct Eq_60909 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	ui32 w0 = 0x00 | 0x08;
	__cxa_allocate_exception();
	word64 x0;
	x19 = x0;
	_ZNSt8bad_castC1Ev();
	Eq_14 x1;
	x1.u0 = 0x00070000;
	Eq_14 x2;
	x2.u0 = 0x00070000;
	x1 = *((word32) x1 + 0x0FF0);
	x2 = *((word32) x2 + 0x0F00);
	x0 = x19;
	__cxa_throw();
	update_device::~update_device();
}

// 0000000000038A14: void update_device::~update_device()
// Called from:
//      fn00000000000389E0
void update_device::~update_device()
{
	struct Eq_60943 * fp;
	struct Eq_60943 * sp = fp;
	sp = (struct Eq_60943 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_60951 * x19;
	sp->ptr0008 = x19;
	struct Eq_60956 * v8 = (struct Eq_60956 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_60951 * x0;
	x20 = x0->qw0010;
	x8 = *((word32) x8 + 0x0DC0);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_60984 * v11 = (struct Eq_60984 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_60943 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_60943 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 0000000000038A7C: define _ZNK3rs28frameset10foreach_rsIZNKS0_16first_or_defaultE10rs2_stream10rs2_formatEUlNS_5frameEE_EEvT_
define _ZNK3rs28frameset10foreach_rsIZNKS0_16first_or_defaultE10rs2_stream10rs2_formatEUlNS_5frameEE_EEvT_
{
	word32 w20;
	struct Eq_61012 * fp;
	struct Eq_61012 * sp = fp;
	sp -= 0x70;
	word64 x23;
	sp->qw0030 = x23;
	struct Eq_61021 * v7 = (struct Eq_61021 *) (&sp->qw0030 + 2);
	struct Eq_61023 * x22;
	v7->ptr0000 = x22;
	struct Eq_61027 * x21;
	v7->ptr0008 = x21;
	struct Eq_61032 * v10 = (struct Eq_61032 *) (&sp->qw0030 + 4);
	word64 x20;
	v10->qw0000 = x20;
	struct Eq_61027 * x19;
	v10->ptr0008 = x19;
	struct Eq_61043 * v13 = (struct Eq_61043 *) (&sp->qw0030 + 6);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = &sp->qw0030 + 6;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	struct Eq_61027 * x8 = x22->ptr0028;
	sp->ptr0028 = x8;
	struct Eq_61067 * v18 = (struct Eq_61067 *) ((char *) &sp->ptr0010 + 8);
	word64 * x1;
	v18->ptr0000 = x1;
	word64 * x2;
	v18->ptr0008 = x2;
	sp->ptr0010 = null;
	struct Eq_61027 * x0;
	x23 = x0->qw0008;
	word64 x31;
	Eq_61096 NZCV;
	if (x23 != 0x00)
	{
		x19 = x0;
		x20 = 0x00;
		bool C;
		do
		{
			x0 = x19->ptr0000;
			x2 = &sp->ptr0010;
			word32 w1 = w20;
			rs2_extract_frame();
			x8 = sp->ptr0010;
			x21 = x0;
			x0 = x8;
			fn000000000001ADF0();
			sp->ptr0008 = x21;
			x0 = (struct Eq_61027 *) ((char *) &sp->ptr0010 + 8);
			x1 = &sp->ptr0008;
			fn000000000001B5E0();
			x0 = sp->ptr0008;
			if (x0 != null)
				rs2_release_frame();
			++x20;
			x31 = x20 - x23;
			NZCV.u0 = cond(x31);
		} while (Test(ULT,C));
	}
	x8 = x22->ptr0028;
	struct Eq_61027 * x9 = sp->ptr0028;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_61113 * v26 = (struct Eq_61113 *) (&sp->qw0030 + 6);
		x29 = v26->ptr0000;
		x30 = v26->qw0008;
		struct Eq_61122 * v27 = (struct Eq_61122 *) (&sp->qw0030 + 4);
		x20 = v27->qw0000;
		x19 = v27->ptr0008;
		struct Eq_61131 * v28 = (struct Eq_61131 *) (&sp->qw0030 + 2);
		x22 = v28->ptr0000;
		x21 = v28->ptr0008;
		x23 = sp->qw0030;
		sp = &sp->qw0030 + 8;
	}
}

// 0000000000038B50: define _ZZNK3rs28frameset16first_or_defaultE10rs2_stream10rs2_formatENKUlNS_5frameEE_clES3_
define _ZZNK3rs28frameset16first_or_defaultE10rs2_stream10rs2_formatENKUlNS_5frameEE_clES3_
{
	struct Eq_61171 * fp;
	struct Eq_61171 * sp = fp;
	sp -= 0xB0;
	word64 x23;
	sp->qw0070 = x23;
	struct Eq_61180 * v7 = (struct Eq_61180 *) (&sp->qw0070 + 2);
	struct Eq_61182 * x22;
	v7->ptr0000 = x22;
	struct Eq_61186 * x21;
	v7->ptr0008 = x21;
	struct Eq_61191 * v10 = (struct Eq_61191 *) (&sp->qw0070 + 4);
	struct Eq_61186 * x20;
	v10->ptr0000 = x20;
	struct Eq_61186 * x19;
	v10->ptr0008 = x19;
	struct Eq_61202 * v13 = (struct Eq_61202 *) (&sp->qw0070 + 6);
	struct Eq_61204 * x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (struct Eq_61204 *) (&sp->qw0070 + 6);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	struct Eq_61186 * x8 = x22->ptr0028;
	x29->ptrFFFFFFC8 = x8;
	struct Eq_61186 * x0;
	x8 = (struct Eq_61186 *) x0->ptr0000;
	x8 = (struct Eq_61186 *) x8->ptr0000;
	struct Eq_61186 * x9;
	Eq_61243 NZCV;
	bool Z;
	if (x8 != null)
	{
l0000000000038CB4:
		x8 = x22->ptr0028;
		x9 = x29->ptrFFFFFFC8;
		ptr64 x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_61333 * v25 = (struct Eq_61333 *) (&sp->qw0070 + 6);
			x29 = v25->ptr0000;
			x30 = v25->qw0008;
			struct Eq_61342 * v26 = (struct Eq_61342 *) (&sp->qw0070 + 4);
			x20 = v26->ptr0000;
			x19 = v26->ptr0008;
			struct Eq_61351 * v27 = (struct Eq_61351 *) (&sp->qw0070 + 2);
			x22 = v27->ptr0000;
			x21 = v27->ptr0008;
			x23 = sp->qw0070;
			sp = &sp->qw0070 + 8;
			return;
		}
	}
	sp->ptr0008 = null;
	x19 = x0;
	struct Eq_61186 * x1;
	x0 = (struct Eq_61186 *) x1->ptr0000;
	x20 = x1;
	x1 = (struct Eq_61186 *) &sp->ptr0008;
	rs2_get_frame_stream_profile();
	x8 = sp->ptr0008;
	x21 = x0;
	x0 = x8;
	fn000000000001ADF0();
	x0 = (struct Eq_61186 *) (&sp->dw002C + 3);
	x1 = x21;
	fn000000000001C3A0();
	ui32 w8 = sp->dw0060;
	word32 w9 = x19->dw0008;
	NZCV.u0 = cond(w8 - w9);
	ui32 w23;
	if (Test(EQ,Z))
	{
		w23 = x19->dw000C;
		if (w23 == 0x00)
		{
			w23 = 0x00 | 0x01;
			x21 = sp->ptr0048;
			if (x21 != null)
				goto l0000000000038C50;
			goto l0000000000038C94;
		}
		sp->ptr0000 = null;
		x0 = (struct Eq_61186 *) x20->ptr0000;
		x1 = (struct Eq_61186 *) &sp->ptr0000;
		rs2_get_frame_stream_profile();
		x21 = x0;
		x0 = sp->ptr0000;
		fn000000000001ADF0();
		x0 = (struct Eq_61186 *) &sp->ptr0008;
		x1 = x21;
		fn000000000001C3A0();
		w8 = sp->dw002C;
		x21 = sp->ptr0018;
		NZCV.u0 = cond(w23 - w8);
		w23 = (word32) Test(EQ,Z);
		if (x21 != null)
			x8 = (struct Eq_61186 *) &x21->dw0008;
	}
	else
		w23 = 0x00;
	x21 = sp->ptr0048;
	if (x21 != null)
	{
l0000000000038C50:
		x8 = (struct Eq_61186 *) &x21->dw0008;
	}
l0000000000038C94:
	if (w23 != 0x00)
	{
		x8 = (struct Eq_61186 *) x20->ptr0000;
		x20->ptr0000 = (struct Eq_108321 *) null;
		x9 = (struct Eq_61186 *) x19->ptr0000;
		x0 = (struct Eq_61186 *) x9->ptr0000;
		x9->ptr0000 = (struct Eq_108321 *) x8;
		if (x0 != null)
			rs2_release_frame();
	}
	goto l0000000000038CB4;
}

// 0000000000038D28: void depth_frame::depth_frame(Register Eq_61388 x0)
void depth_frame::depth_frame(Eq_61388 x0)
{
	struct Eq_61389 * fp;
	struct Eq_61389 * sp = fp;
	sp -= 0x40;
	struct Eq_61393 * x21;
	sp->ptr0010 = x21;
	struct Eq_61398 * v7 = (struct Eq_61398 *) ((char *) &sp->ptr0010 + 16);
	struct Eq_61404 ** x20;
	v7->ptr0000 = x20;
	struct Eq_61404 * x19;
	v7->ptr0008 = x19;
	struct Eq_61409 * v10 = (struct Eq_61409 *) ((char *) &sp->ptr0010 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0010 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	struct Eq_61404 * x8 = x21->ptr0028;
	struct Eq_61404 ** x1;
	x20 = x1;
	x19 = x0;
	sp->ptr0008 = x8;
	fn000000000001C310();
	sp->ptr0000 = null;
	x0 = (struct Eq_61404 *) *x20;
	if (x0 != null)
	{
		ui32 w1 = 0x00 | 0x0C;
		word64 * x2 = &sp->ptr0000;
		rs2_is_frame_extendable_to();
		x8 = sp->ptr0000;
		word32 w0;
		if (w0 != 0x00 || x8 != null)
			goto l0000000000038D94;
	}
	x0 = x19->ptr0000;
	if (x0 != null)
	{
		rs2_release_frame();
		x8 = sp->ptr0000;
	}
	else
		x8 = null;
	x19->ptr0000 = null;
l0000000000038D94:
	x0 = x8;
	fn000000000001ADF0();
	x8 = x21->ptr0028;
	struct Eq_61404 * x9 = sp->ptr0008;
	word64 x31 = x8 - x9;
	Eq_61474 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_61494 * v22 = (struct Eq_61494 *) ((char *) &sp->ptr0010 + 32);
		x29 = v22->ptr0000;
		x30 = v22->qw0008;
		struct Eq_61503 * v23 = (struct Eq_61503 *) ((char *) &sp->ptr0010 + 16);
		x20 = v23->ptr0000;
		x19 = v23->ptr0008;
		x21 = sp->ptr0010;
		sp = (struct Eq_61389 *) ((char *) &sp->ptr0010 + 48);
	}
}

// 0000000000038DE4: define _ZNK3rs28frameset10foreach_rsIZNKS0_18get_infrared_frameEmEUlRKNS_5frameEE_EEvT_
define _ZNK3rs28frameset10foreach_rsIZNKS0_18get_infrared_frameEmEUlRKNS_5frameEE_EEvT_
{
	word32 w20;
	struct Eq_61516 * fp;
	struct Eq_61516 * sp = fp;
	sp -= 0x70;
	word64 x23;
	sp->qw0030 = x23;
	struct Eq_61525 * v7 = (struct Eq_61525 *) (&sp->qw0030 + 2);
	struct Eq_61527 * x22;
	v7->ptr0000 = x22;
	struct Eq_61531 * x21;
	v7->ptr0008 = x21;
	struct Eq_61536 * v10 = (struct Eq_61536 *) (&sp->qw0030 + 4);
	word64 x20;
	v10->qw0000 = x20;
	struct Eq_61531 * x19;
	v10->ptr0008 = x19;
	struct Eq_61547 * v13 = (struct Eq_61547 *) (&sp->qw0030 + 6);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = &sp->qw0030 + 6;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	struct Eq_61531 * x8 = x22->ptr0028;
	sp->ptr0028 = x8;
	struct Eq_61571 * v18 = (struct Eq_61571 *) ((char *) &sp->ptr0010 + 8);
	word64 * x1;
	v18->ptr0000 = x1;
	word64 * x2;
	v18->ptr0008 = x2;
	sp->ptr0010 = null;
	struct Eq_61531 * x0;
	x23 = x0->qw0008;
	word64 x31;
	Eq_61600 NZCV;
	if (x23 != 0x00)
	{
		x19 = x0;
		x20 = 0x00;
		bool C;
		do
		{
			x0 = x19->ptr0000;
			x2 = &sp->ptr0010;
			word32 w1 = w20;
			rs2_extract_frame();
			x8 = sp->ptr0010;
			x21 = x0;
			x0 = x8;
			fn000000000001ADF0();
			sp->ptr0008 = x21;
			x0 = (struct Eq_61531 *) ((char *) &sp->ptr0010 + 8);
			x1 = &sp->ptr0008;
			fn000000000001BA00();
			x0 = sp->ptr0008;
			if (x0 != null)
				rs2_release_frame();
			++x20;
			x31 = x20 - x23;
			NZCV.u0 = cond(x31);
		} while (Test(ULT,C));
	}
	x8 = x22->ptr0028;
	struct Eq_61531 * x9 = sp->ptr0028;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_61617 * v26 = (struct Eq_61617 *) (&sp->qw0030 + 6);
		x29 = v26->ptr0000;
		x30 = v26->qw0008;
		struct Eq_61626 * v27 = (struct Eq_61626 *) (&sp->qw0030 + 4);
		x20 = v27->qw0000;
		x19 = v27->ptr0008;
		struct Eq_61635 * v28 = (struct Eq_61635 *) (&sp->qw0030 + 2);
		x22 = v28->ptr0000;
		x21 = v28->ptr0008;
		x23 = sp->qw0030;
		sp = &sp->qw0030 + 8;
	}
}

// 0000000000038EB8: void video_frame::video_frame(Register Eq_61675 x0)
void video_frame::video_frame(Eq_61675 x0)
{
	struct Eq_61676 * fp;
	struct Eq_61676 * sp = fp;
	sp -= 0x40;
	struct Eq_61680 * x21;
	sp->ptr0010 = x21;
	struct Eq_61685 * v7 = (struct Eq_61685 *) ((char *) &sp->ptr0010 + 16);
	word64 * x20;
	v7->ptr0000 = x20;
	struct Eq_61691 * x19;
	v7->ptr0008 = x19;
	struct Eq_61696 * v10 = (struct Eq_61696 *) ((char *) &sp->ptr0010 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0010 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	struct Eq_61691 * x8 = x21->ptr0028;
	word64 * x1;
	x20 = x1;
	x19 = x0;
	sp->ptr0008 = x8;
	x8 = *x1;
	x0->ptr0000 = x8;
	if (x8 != null)
	{
		x1 = &sp->ptr0000;
		x0 = x8;
		sp->ptr0000 = null;
		rs2_frame_add_ref();
		x0 = sp->ptr0000;
		fn000000000001ADF0();
	}
	sp->ptr0000 = null;
	x0 = *x20;
	if (x0 != null)
	{
		ui32 w1 = 0x00 | 0x08;
		struct Eq_61691 *** x2 = (struct Eq_61691 ***) &sp->ptr0000;
		rs2_is_frame_extendable_to();
		x8 = sp->ptr0000;
		word32 w0;
		if (w0 != 0x00 || x8 != null)
			goto l0000000000038F44;
	}
	x0 = x19->ptr0000;
	if (x0 != null)
	{
		rs2_release_frame();
		x8 = sp->ptr0000;
	}
	else
		x8 = null;
	x19->ptr0000 = null;
l0000000000038F44:
	x0 = x8;
	fn000000000001ADF0();
	x8 = x21->ptr0028;
	struct Eq_61691 * x9 = sp->ptr0008;
	ptr64 x31 = x8 - x9;
	Eq_61780 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_61800 * v22 = (struct Eq_61800 *) ((char *) &sp->ptr0010 + 32);
		x29 = v22->ptr0000;
		x30 = v22->qw0008;
		struct Eq_61809 * v23 = (struct Eq_61809 *) ((char *) &sp->ptr0010 + 16);
		x20 = v23->ptr0000;
		x19 = v23->ptr0008;
		x21 = sp->ptr0010;
		sp = (struct Eq_61676 *) ((char *) &sp->ptr0010 + 48);
	}
}

// 0000000000038F94: define _ZZNK3rs28frameset18get_infrared_frameEmENKUlRKNS_5frameEE_clES3_
define _ZZNK3rs28frameset18get_infrared_frameEmENKUlRKNS_5frameEE_clES3_
{
	struct Eq_61822 * fp;
	struct Eq_61822 * sp = fp;
	sp -= 0xB0;
	word64 x23;
	sp->qw0070 = x23;
	struct Eq_61831 * v7 = (struct Eq_61831 *) (&sp->qw0070 + 2);
	struct Eq_61833 * x22;
	v7->ptr0000 = x22;
	Eq_61837 x21;
	v7->t0008.u0 = (ptr64 *) x21;
	struct Eq_61842 * v10 = (struct Eq_61842 *) (&sp->qw0070 + 4);
	Eq_61837 x20;
	v10->t0000.u0 = (ptr64 *) x20;
	Eq_61837 x19;
	v10->t0008.u0 = (ptr64 *) x19;
	struct Eq_61853 * v13 = (struct Eq_61853 *) (&sp->qw0070 + 6);
	struct Eq_61855 * x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (struct Eq_61855 *) (&sp->qw0070 + 6);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_61837 x8;
	x8.u0 = x22->t0028.u0;
	Eq_61837 x1;
	x20 = x1;
	Eq_61837 x0;
	x19 = x0;
	x29->tFFFFFFC8.u0 = (ptr64 *) x8;
	sp->t0008.u0 = 0x00;
	x8.u0 = *x1.u0;
	x1.u0 = &sp->t0008.u0;
	x0 = x8;
	rs2_get_frame_stream_profile();
	x8.u0 = sp->t0008.u0;
	x21 = x0;
	x0 = x8;
	fn000000000001ADF0();
	x0.u0 = &sp->t0038.u0;
	x1 = x21;
	fn000000000001C3A0();
	word32 w8 = sp->dw0060;
	Eq_61902 NZCV;
	NZCV.u0 = cond(w8 - 0x03);
	bool Z;
	Eq_61837 x9;
	union Eq_61837 * x31;
	word32 w23;
	if (Test(EQ,Z))
	{
		sp->t0000.u0 = 0x00;
		x0.u0 = *x20.u0;
		x1.u0 = &sp->t0000.u0;
		rs2_get_frame_stream_profile();
		x21 = x0;
		x0.u0 = sp->t0000.u0;
		fn000000000001ADF0();
		x0.u0 = &sp->t0008.u0;
		x1 = x21;
		fn000000000001C3A0();
		int32 v21 = sp->dw0010;
		x8.u0 = (int64) v21;
		x9.u0 = x19.u1->t0008.u0;
		x21.u0 = sp->t0018.u0;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		w23 = (word32) Test(EQ,Z);
		if (x21 != 0x00)
			x8.u0 = &x21.u1->t0008.u0;
	}
	else
		w23 = 0x00;
	x21.u0 = sp->t0048.u0;
	if (x21 == 0x00)
	{
		if (w23 != 0x00)
		{
			x20.u0 = *x20.u0;
			if (x20 != 0x00)
			{
				x1.u0 = &sp->t0038.u0;
				x0 = x20;
				sp->t0038.u0 = 0x00;
				rs2_frame_add_ref();
				x0.u0 = sp->t0038.u0;
				fn000000000001ADF0();
			}
			x8.u0 = *x19.u0;
			x0.u0 = *x8.u0;
			*x8.u0 = (ptr64) x20;
			if (x0 != 0x00)
				rs2_release_frame();
		}
		x8.u0 = x22->t0028.u0;
		x9.u0 = x29->tFFFFFFC8.u0;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_61997 * v25 = (struct Eq_61997 *) (&sp->qw0070 + 6);
			x29 = v25->ptr0000;
			x30 = v25->qw0008;
			struct Eq_62006 * v26 = (struct Eq_62006 *) (&sp->qw0070 + 4);
			x20.u0 = v26->t0000.u0;
			x19.u0 = v26->t0008.u0;
			struct Eq_62015 * v27 = (struct Eq_62015 *) (&sp->qw0070 + 2);
			x22 = v27->ptr0000;
			x21.u0 = v27->t0008.u0;
			x23 = sp->qw0070;
			sp = &sp->qw0070 + 8;
		}
	}
	else
		x8.u0 = &x21.u1->t0008.u0;
}

// 0000000000039168: define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
{
	union Eq_62034 * fp;
	union Eq_62034 * sp = fp;
	sp = (union Eq_62034 *) ((char *) sp - 80);
	Eq_62034 x25;
	sp->u0 = (int64) x25;
	struct Eq_62039 * v7 = (struct Eq_62039 *) ((char *) sp + 16);
	struct Eq_62041 * x24;
	v7->ptr0000 = x24;
	struct Eq_62041 * x23;
	v7->ptr0008 = x23;
	struct Eq_62050 * v10 = (struct Eq_62050 *) ((char *) sp + 32);
	struct Eq_62041 * x22;
	v10->ptr0000 = x22;
	void * x21;
	v10->ptr0008 = x21;
	struct Eq_62061 * v13 = (struct Eq_62061 *) ((char *) sp + 48);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	struct Eq_62041 * x19;
	v13->ptr0008 = x19;
	struct Eq_62072 * v16 = (struct Eq_62072 *) ((char *) sp + 64);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = (char *) sp + 64;
	Eq_62087 v19;
	struct Eq_62041 * x0;
	v19.u1 = x0->t0000.u1;
	ui32 w8 = (word32) v19;
	Eq_14 x2;
	x20 = x2;
	x19 = x0;
	void * x1;
	x21 = x1;
	Eq_62105 x31;
	Eq_62107 NZCV;
	bool C;
	Eq_62087 x9;
	if ((w8 & 0x01) != 0x00)
	{
		word32 w25 = 22;
		x31 = x25 - x20;
		NZCV.u0 = cond(x31);
		if (Test(UGE,C))
		{
l00000000000391A0:
			if ((w8 & 0x01) != 0x00)
			{
				x22 = (struct Eq_62041 *) ((char *) &x19->t0000 + 1);
				if (x20 == 0x00)
					goto l00000000000391FC;
			}
			else
			{
				x22 = x19->ptr0010;
				if (x20 == 0x00)
					goto l00000000000391FC;
			}
			x0 = x22;
			x1 = x21;
			x2 = x20;
			x0 = memmove(x0, x1, x2);
l00000000000391FC:
			*(x22 + x20) = (word64) 0x00;
			Eq_62087 v28;
			v28.u1 = x19->t0000.u1;
			w8 = (word32) v28;
			if ((w8 & 0x01) != 0x00)
			{
				ui32 w20;
				w8 = w20 << 1;
				x19->t0000.u1 = (byte) (byte) w8;
			}
			else
				x19->t0008.u1 = (size_t) x20;
			goto l0000000000039294;
		}
	}
	else
	{
		x9.u0 = x19->t0000.u0;
		x9 &= ~0x01;
		x25 = x9 - 0x01;
		x31 = x25 - x20;
		NZCV.u0 = cond(x31);
		if (Test(UGE,C))
			goto l00000000000391A0;
	}
	word64 x10 = ~0x11;
	x9 = x20 - x25;
	x10 -= x25;
	x31 = x10 - x9;
	NZCV.u0 = cond(x31);
	if (Test(ULT,C))
	{
		x0 = x19;
		fn000000000001B2D0();
		_ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev();
		return;
	}
	if ((w8 & 0x01) != 0x00)
		x22 = (struct Eq_62041 *) ((char *) &x19->t0000 + 1);
	else
		x22 = x19->ptr0010;
	Eq_62087 x8;
	x8.u0 = ~0x19;
	x8 = SEQ(0x7FFF, (word48) x8);
	x31 = x25 - x8;
	NZCV.u0 = cond(x31);
	word32 ZC;
	if (Test(ULE,ZC))
	{
		x8 = x25 << 1;
		x31 = x8 - x20;
		NZCV.u0 = cond(x31);
		x8 = Test(UGT,ZC) ? x8 : x20;
		NZCV.u0 = cond(x8 - 0x17);
		if (Test(ULT,C))
		{
			word32 w23 = 0x17;
		}
		else
		{
			x8 = (word32) x8 + 16;
			x23 = x8 & ~0x0F;
		}
	}
	else
		x23 = 0x00 | ~0x10;
	x0 = x23;
	_Znwm();
	x1 = x21;
	x2 = x20;
	x24 = x0;
	x0 = memcpy(x0, x1, x2);
	NZCV.u0 = cond(x25 - 22);
	bool Z;
	if (Test(NE,Z))
	{
		x0 = x22;
		word128 q0;
		((real64) q0, x0, x1);
	}
	x8 = x23 | 0x01;
	struct Eq_62259 * v39 = (struct Eq_62259 *) &x19->t0008.u0;
	v39->qw0000 = (word64) x20;
	v39->ptr0008 = x24;
	x19->t0000.u0 = (int64) x8;
	*(x24 + x20) = (word64) 0x00;
l0000000000039294:
	x0 = x19;
	struct Eq_62184 * v33 = (struct Eq_62184 *) ((char *) sp + 64);
	x29 = v33->ptr0000;
	x30 = v33->qw0008;
	struct Eq_62193 * v34 = (struct Eq_62193 *) ((char *) sp + 48);
	x20.u1 = v34->t0000.u1;
	x19 = v34->ptr0008;
	struct Eq_62202 * v35 = (struct Eq_62202 *) ((char *) sp + 32);
	x22 = v35->ptr0000;
	x21 = v35->ptr0008;
	struct Eq_62211 * v36 = (struct Eq_62211 *) ((char *) sp + 16);
	x24 = v36->ptr0000;
	x23 = v36->ptr0008;
	x25.u0 = sp->u0;
	sp = (union Eq_62034 *) ((char *) sp + 80);
}

// 00000000000392B8: define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev
// Called from:
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev
{
	Eq_62287 x0;
	union Eq_62287 * fp;
	union Eq_62287 * sp = fp;
	sp = (union Eq_62287 *) ((char *) sp - 32);
	Eq_62287 x19;
	sp->u0 = (struct Eq_108323 *) x19;
	struct Eq_62292 * v7 = (struct Eq_62292 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	struct Eq_62307 * x8 = x0.u0->ptr0008;
	Eq_62287 x9 = x8->t0000;
	x9.u0 = x9.u0->tFFFFFFE8.u0;
	x8 += x9;
	x9.u0 = x8->t0028.u0;
	if (x9 != 0x00)
	{
		word32 w9 = x8->dw0020;
		if (w9 == 0x00)
		{
			byte v13 = x8->b0009;
			ui32 w8 = (word32) v13;
			if ((w8 & 0x20) != 0x00)
			{
				x19 = x0;
				std::uncaught_exception();
				sp = (union Eq_62287 *) ((char *) sp + 8);
				ui32 w0;
				if ((w0 & 0x01) != 0x00)
				{
					x8 = x19.u0->ptr0008;
					x9 = x8->t0000;
					x9.u0 = x9.u0->tFFFFFFE8.u0;
					x8 += x9;
					x0.u0 = x8->t0028.u0;
					x8 = x0.u0->ptr0000;
					x8 = x8->ptr0030;
					x8();
					ui32 wsp = w0 + 0x01;
					Eq_62384 NZCV;
					NZCV.u0 = cond(wsp);
					bool Z;
					if (Test(EQ,Z))
					{
						x8 = x19.u0->ptr0008;
						x9 = x8->t0000;
						x9.u0 = x9.u0->tFFFFFFE8.u0;
						x0.u0 = x8 + x9;
						w8 = x0.u0->dw0020;
						ui32 w1 = w8 | 0x01;
						_ZNSt6__ndk18ios_base5clearEj();
					}
				}
			}
		}
	}
	struct Eq_62323 * v19 = (struct Eq_62323 *) ((char *) sp + 16);
	x29 = v19->ptr0000;
	x30 = v19->qw0008;
	x19.u0 = sp->u0;
	sp = (union Eq_62287 *) ((char *) sp + 32);
}

// 0000000000039358: define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
{
	word32 w0;
	struct Eq_62406 * fp;
	struct Eq_62406 * sp = fp;
	sp -= 0x50;
	struct Eq_62410 * x21;
	sp->ptr0020 = x21;
	struct Eq_62415 * v7 = (struct Eq_62415 *) ((char *) &sp->ptr0020 + 16);
	word64 x20;
	v7->qw0000 = x20;
	Eq_62421 x19;
	v7->t0008.u1 = (struct Eq_108325 *) x19;
	struct Eq_62426 * v10 = (struct Eq_62426 *) ((char *) &sp->ptr0020 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0020 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_62421 x8;
	x8.u1 = x21->t0028.u1;
	Eq_62421 x0;
	x19 = x0;
	sp->t0018.u1 = (struct Eq_108325 *) x8;
	x8.u1 = x0.u1->t0000.u1;
	x8.u1 = &x8.u1->tFFFFFFE8.u0;
	Eq_62421 x9;
	x9.u1 = x8.u1->t0000.u1;
	x9.u1 = x0 + x9;
	x9.u1 = x9.u1->t0028.u1;
	Eq_62473 NZCV;
	bool Z;
	if (x9 != 0x00)
	{
		sp->b0008 = 0x00;
		sp->t0010.u1 = (struct Eq_108325 *) x19;
		x9.u1 = x8.u1->t0000.u1;
		x9.u1 = x19 + x9;
		word32 w10 = x9.u1->dw0020;
		if (w10 == 0x00)
		{
			x0.u1 = x9.u1->t0088.u1;
			if (x0 != 0x00)
			{
				fn000000000001B260();
				x8.u1 = x19.u1->t0000.u1;
				x8 -= 0x18;
			}
			ui32 w9 = 0x00 | 0x01;
			sp->b0008 = (byte) w9;
			x8.u1 = x8.u1->t0000.u1;
			x8.u1 = x19 + x8;
			x0.u1 = x8.u1->t0028.u1;
			x8.u1 = x0.u1->t0000.u1;
			x8.u1 = x8.u1->t0030.u1;
			x8();
			word32 wsp = w0 + 0x01;
			NZCV.u0 = cond(wsp);
			if (Test(EQ,Z))
			{
				x8.u1 = x19.u1->t0000.u1;
				x8.u1 = x8.u1->tFFFFFFE8.u1;
				x0.u1 = x19 + x8;
				ui32 w8 = x0.u1->dw0020;
				ui32 w1 = w8 | 0x01;
				_ZNSt6__ndk18ios_base5clearEj();
			}
		}
		x0.u1 = &sp->b0008;
		fn000000000001BCE0();
	}
	x8.u1 = x21->t0028.u1;
	x9.u1 = sp->t0018.u1;
	word64 x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		x0 = x19;
		struct Eq_62539 * v19 = (struct Eq_62539 *) ((char *) &sp->ptr0020 + 32);
		x29 = v19->ptr0000;
		x30 = v19->qw0008;
		struct Eq_62548 * v20 = (struct Eq_62548 *) ((char *) &sp->ptr0020 + 16);
		x20 = v20->qw0000;
		x19.u1 = v20->t0008.u1;
		x21 = sp->ptr0020;
		sp = (struct Eq_62406 *) ((char *) &sp->ptr0020 + 48);
	}
}

// 0000000000039478: define _ZNSt6__ndk124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m
define _ZNSt6__ndk124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m
{
	ui32 w0;
	struct Eq_62577 * fp;
	struct Eq_62577 * sp = fp;
	sp -= 0x70;
	struct Eq_62582 * v6 = (struct Eq_62582 *) ((char *) &sp->t0018 + 8);
	word64 x26;
	v6->qw0000 = x26;
	struct Eq_62588 * x25;
	v6->ptr0008 = x25;
	struct Eq_62593 * v9 = (struct Eq_62593 *) ((char *) &sp->t0018 + 24);
	word64 x24;
	v9->qw0000 = x24;
	struct Eq_62599 * x23;
	v9->ptr0008 = x23;
	struct Eq_62604 * v12 = (struct Eq_62604 *) ((char *) &sp->t0018 + 40);
	struct Eq_62599 * x22;
	v12->ptr0000 = x22;
	Eq_14 x21;
	v12->t0008.u1 = (size_t) x21;
	struct Eq_62615 * v15 = (struct Eq_62615 *) ((char *) &sp->t0018 + 56);
	word64 x20;
	v15->qw0000 = x20;
	struct Eq_62599 * x19;
	v15->ptr0008 = x19;
	struct Eq_62626 * v18 = (struct Eq_62626 *) ((char *) &sp->t0018 + 72);
	ptr64 x29;
	v18->ptr0000 = x29;
	word64 x30;
	v18->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 72;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	Eq_62644 x8;
	x8.u1 = x25->t0028.u1;
	struct Eq_62599 * x0;
	x19 = x0;
	sp->t0018.u1 = (struct Eq_108328 *) x8;
	sp->b0000 = 0x00;
	sp->ptr0008 = x0;
	x8.u0 = x0->b0000;
	x8.u1 = &x8.u1->tFFFFFFE8.u0;
	Eq_62644 x9;
	x9.u1 = x8.u1->t0000.u1;
	x9.u1 = x0 + x9;
	word32 w10 = x9.u1->dw0020;
	Eq_62684 NZCV;
	bool Z;
	if (w10 == 0x00)
	{
		x0 = x9.u1->ptr0088;
		word64 x2;
		x20 = x2;
		Eq_14 x1;
		x21 = x1;
		if (x0 != null)
		{
			fn000000000001B260();
			x8.u0 = x19->b0000;
			x8 -= 0x18;
		}
		ui32 w9 = 0x00 | 0x01;
		sp->b0000 = (byte) w9;
		x8.u1 = x8.u1->t0000.u1;
		x22 = x19 + x8;
		ui32 w5 = x22->dw0090;
		x23 = x22->ptr0028;
		ui32 w26 = x22->dw0008;
		word32 wsp = w5 + 0x01;
		NZCV.u0 = cond(wsp);
		ui32 w1;
		if (Test(EQ,Z))
		{
			x8.u1 = (char *) &sp->ptr0008 + 8;
			x0 = x22;
			_ZNKSt6__ndk18ios_base6getlocEv();
			x1.u0 = 0x00070000;
			x1 = *((word32) x1 + 0x0D90);
			x0 = (struct Eq_62599 *) ((char *) &sp->ptr0008 + 8);
			_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
			x8.u0 = x0->b0000;
			x8.u1 = x8.u1->t0038.u1;
			w1 = 0x00 | 0x20;
			x8();
			ui32 w24 = w0;
			x0 = (struct Eq_62599 *) ((char *) &sp->ptr0008 + 8);
			_ZNSt6__ndk16localeD1Ev();
			w5 = w24 & 0xFF;
			x22->dw0090 = w5;
		}
		ui32 w8 = 0xB0;
		w8 = w26 & w8;
		word64 x3 = (char *) x21.u1 + x20;
		NZCV.u0 = cond(w8 - 0x20);
		x2 = Test(EQ,Z) ? x3 : x21;
		x0 = x23;
		x1 = x21;
		struct Eq_62599 * x4 = x22;
		fn000000000003961C();
		if (x0 == null)
		{
			x8.u0 = x19->b0000;
			w9 = 0x05;
			x8.u1 = x8.u1->tFFFFFFE8.u1;
			x0 = x19 + x8;
			w8 = x0->dw0020;
			w1 = w8 | w9;
			_ZNSt6__ndk18ios_base5clearEj();
		}
	}
	x0 = (struct Eq_62599 *) &sp->b0000;
	fn000000000001BCE0();
	x8.u1 = x25->t0028.u1;
	x9.u1 = sp->t0018.u1;
	word64 x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		x0 = x19;
		struct Eq_62733 * v29 = (struct Eq_62733 *) ((char *) &sp->t0018 + 72);
		x29 = v29->ptr0000;
		x30 = v29->qw0008;
		struct Eq_62742 * v30 = (struct Eq_62742 *) ((char *) &sp->t0018 + 56);
		x20 = v30->qw0000;
		x19 = v30->ptr0008;
		struct Eq_62751 * v31 = (struct Eq_62751 *) ((char *) &sp->t0018 + 40);
		x22 = v31->ptr0000;
		x21.u1 = v31->t0008.u1;
		struct Eq_62760 * v32 = (struct Eq_62760 *) ((char *) &sp->t0018 + 24);
		x24 = v32->qw0000;
		x23 = v32->ptr0008;
		struct Eq_62769 * v33 = (struct Eq_62769 *) ((char *) &sp->t0018 + 8);
		x26 = v33->qw0000;
		x25 = v33->ptr0008;
		sp = (struct Eq_62577 *) ((char *) &sp->t0018 + 88);
	}
}

// 000000000003961C: define fn000000000003961C
// Called from:
//      _ZNSt6__ndk124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m
define fn000000000003961C
{
	word32 w5;
	struct Eq_62840 * fp;
	struct Eq_62840 * sp = fp;
	sp -= 0x80;
	struct Eq_62844 * x27;
	sp->ptr0020 = x27;
	struct Eq_62849 * v7 = (struct Eq_62849 *) ((char *) &sp->ptr0020 + 16);
	Eq_14 x26;
	v7->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v7->t0008.u1 = (size_t) x25;
	struct Eq_62860 * v10 = (struct Eq_62860 *) ((char *) &sp->ptr0020 + 32);
	Eq_14 x24;
	v10->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v10->t0008.u1 = (size_t) x23;
	struct Eq_62871 * v13 = (struct Eq_62871 *) ((char *) &sp->ptr0020 + 48);
	Eq_14 x22;
	v13->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v13->t0008.u1 = (size_t) x21;
	struct Eq_62882 * v16 = (struct Eq_62882 *) ((char *) &sp->ptr0020 + 64);
	struct Eq_62884 * x20;
	v16->ptr0000 = x20;
	Eq_14 x19;
	v16->t0008.u1 = (size_t) x19;
	struct Eq_62893 * v19 = (struct Eq_62893 *) ((char *) &sp->ptr0020 + 80);
	ptr64 x29;
	v19->ptr0000 = x29;
	word64 x30;
	v19->qw0008 = x30;
	x29 = (char *) &sp->ptr0020 + 80;
	Eq_1720 sysreg3_3_13_0_2;
	x27 = __mrs(sysreg3_3_13_0_2);
	Eq_62911 x8;
	x8.u1 = x27->t0028.u1;
	Eq_14 x0;
	x19 = x0;
	sp->t0018.u1 = (word64 *) x8;
	Eq_62911 x9;
	ptr64 x31;
	Eq_62928 NZCV;
	bool Z;
	if (x0 == 0x00)
	{
l000000000003977C:
		x8.u1 = x27->t0028.u1;
		x9.u1 = sp->t0018.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			x0 = x19;
			struct Eq_63077 * v39 = (struct Eq_63077 *) ((char *) &sp->ptr0020 + 80);
			x29 = v39->ptr0000;
			x30 = v39->qw0008;
			struct Eq_63086 * v40 = (struct Eq_63086 *) ((char *) &sp->ptr0020 + 64);
			x20 = v40->ptr0000;
			x19.u1 = v40->t0008.u1;
			struct Eq_63095 * v41 = (struct Eq_63095 *) ((char *) &sp->ptr0020 + 48);
			x22.u1 = v41->t0000.u1;
			x21.u1 = v41->t0008.u1;
			struct Eq_63104 * v42 = (struct Eq_63104 *) ((char *) &sp->ptr0020 + 32);
			x24.u1 = v42->t0000.u1;
			x23.u1 = v42->t0008.u1;
			struct Eq_63113 * v43 = (struct Eq_63113 *) ((char *) &sp->ptr0020 + 16);
			x26.u1 = v43->t0000.u1;
			x25.u1 = v43->t0008.u1;
			x27 = sp->ptr0020;
			sp = (struct Eq_62840 *) ((char *) &sp->ptr0020 + 96);
			return;
		}
	}
	struct Eq_62884 * x4;
	x8.u1 = x4->t0018.u1;
	Eq_14 x3;
	Eq_14 x1;
	x9 = x3 - x1;
	Eq_14 x2;
	x25 = x2 - x1;
	word32 w24 = w5;
	x8 -= x9;
	NZCV.u0 = cond(x8);
	x20 = x4;
	x22 = x3;
	x21 = x2;
	word32 NZV;
	x23.u1 = Test(GT,NZV) ? x8 : 0x00;
	NZCV.u0 = cond(x25 - 0x01);
	word32 NV;
	if (Test(GE,NV))
	{
		x8.u1 = *x19.u1;
		x0 = x19;
		x2 = x25;
		x8.u1 = x8.u2->t0060.u1;
		x8();
		x31 = x0 - x25;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			goto l0000000000039778;
	}
	NZCV.u0 = cond(x23 - 0x01);
	if (Test(GE,NV))
	{
		NZCV.u0 = cond(x23 - 0x17);
		struct Eq_62840 * v35 = sp;
		v35->t0000.u1 = (word64 *) 0x00;
		v35->qw0008 = 0x00;
		sp->t0010.u1 = (size_t) 0x00;
		bool C;
		ui32 w8;
		if (Test(ULT,C))
		{
			x9.u1 = &sp->t0000.u0;
			x26 = x9 | 0x01;
			ui32 w23;
			w8 = w23 << 1;
			x25 = x26;
			sp->t0000.u0 = (byte) (byte) w8;
		}
		else
		{
			x8.u1 = (word32) x23 + 16;
			x26 = x8 & ~0x0F;
			x0 = x26;
			_Znwm();
			x8 = x26 | 0x01;
			x9.u1 = &sp->t0000.u0;
			x25 = x0;
			struct Eq_63002 * v44 = (struct Eq_63002 *) &sp->qw0008;
			v44->t0000.u1 = (size_t) x23;
			v44->t0008.u1 = (size_t) x0;
			sp->t0000.u1 = (word64 *) x8;
			x26 = x9 | 0x01;
		}
		x0 = x25;
		word32 w1 = w24;
		x2 = x23;
		x0 = memset(x0, (int32) x1, x2);
		*(x25 + x23) = (word64) 0x00;
		x8.u1 = *x19.u1;
		Eq_62911 v47;
		v47.u0 = sp->t0000.u0;
		ui32 w9 = (word32) v47;
		Eq_14 x10;
		x10.u1 = sp->t0010.u1;
		x8.u1 = x8.u2->t0060.u1;
		ui32 w31 = w9 & 0x01;
		Eq_63057 NZ;
		NZ.u0 = cond(w31);
		C = false;
		bool V = false;
		x1.u1 = Test(EQ,Z) ? x26 : x10;
		x0 = x19;
		x2 = x23;
		x8();
		Eq_62911 v52;
		v52.u0 = sp->t0000.u0;
		w8 = (word32) v52;
		x24 = x0;
		if ((w8 & 0x01) != 0x00)
		{
			x0.u1 = sp->t0010.u1;
			word128 q0;
			((real64) q0, x0, x1);
		}
		x31 = x24 - x23;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			goto l0000000000039778;
	}
	x22 -= x21;
	NZCV.u0 = cond(x22 - 0x01);
	if (Test(LT,NV))
	{
l0000000000039770:
		x20->t0018.u1 = (word64 *) 0x00;
		goto l000000000003977C;
	}
	x8.u1 = *x19.u1;
	x0 = x19;
	x1 = x21;
	x2 = x22;
	x8.u1 = x8.u2->t0060.u1;
	x8();
	x31 = x0 - x22;
	NZCV.u0 = cond(x31);
	if (Test(EQ,Z))
		goto l0000000000039770;
l0000000000039778:
	x19.u0 = 0x00;
	goto l000000000003977C;
}

// 00000000000397D0: define _ZNKSt6__ndk121__basic_string_commonILb1EE20__throw_out_of_rangeEv
define _ZNKSt6__ndk121__basic_string_commonILb1EE20__throw_out_of_rangeEv
{
	struct Eq_63153 * fp;
	struct Eq_63153 * sp = fp;
	sp = (struct Eq_63153 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	Eq_14 x0;
	x0.u0 = 0x00052000;
	x0.u1 = (word32) x0 + 0x055C;
	fn00000000000397E4();
	fn00000000000397E4();
}

<anonymous> g_t397D4 = <code>; // 00000000000397D4
// 00000000000397E4: define fn00000000000397E4
// Called from:
//      _ZNKSt6__ndk121__basic_string_commonILb1EE20__throw_out_of_rangeEv
define fn00000000000397E4
{
	struct Eq_63173 * fp;
	struct Eq_63173 * sp = fp;
	sp = (struct Eq_63173 *) ((char *) sp - 32);
	Eq_14 x20;
	sp->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	sp->t0008.u1 = (size_t) x19;
	struct Eq_63186 * v8 = (struct Eq_63186 *) ((char *) &sp->t0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 8;
	Eq_14 x0;
	x20 = x0;
	ui32 w0 = 0x00 | 0x10;
	__cxa_allocate_exception();
	x19 = x0;
	Eq_14 x1 = x20;
	fn0000000000039834();
	x1.u0 = 0x00070000;
	Eq_14 x2;
	x2.u0 = 0x00070000;
	x1 = *((word32) x1 + 3320);
	x2 = *((word32) x2 + 0x0CD0);
	x0 = x19;
	__cxa_throw();
	x20 = x0;
	x0 = x19;
	__cxa_free_exception();
	x0 = x20;
	_Unwind_Resume();
	fn0000000000039834();
}

// 0000000000039834: define fn0000000000039834
// Called from:
//      fn00000000000397E4
define fn0000000000039834
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_63231 * v7 = (struct Eq_63231 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	union Eq_14 * x0;
	x19 = x0;
	_ZNSt11logic_errorC2EPKc();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0FE8);
	x8.u1 = (word32) x8 + 16;
	x19->u1 = (size_t) x8;
	struct Eq_63256 * v10 = (struct Eq_63256 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
}

// 0000000000039864: define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
{
	Eq_14 x0;
	union Eq_63273 * fp;
	union Eq_63273 * sp = fp;
	sp = (union Eq_63273 *) ((char *) sp - 96);
	Eq_63273 x27;
	sp->u0 = (int64) x27;
	struct Eq_63278 * v7 = (struct Eq_63278 *) ((char *) sp + 16);
	Eq_63280 x26;
	v7->t0000.u0 = (int64) x26;
	Eq_14 x25;
	v7->t0008.u1 = (size_t) x25;
	struct Eq_63289 * v10 = (struct Eq_63289 *) ((char *) sp + 32);
	Eq_14 x24;
	v10->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v10->t0008.u1 = (size_t) x23;
	struct Eq_63300 * v13 = (struct Eq_63300 *) ((char *) sp + 48);
	Eq_14 x22;
	v13->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v13->t0008.u1 = (size_t) x21;
	struct Eq_63311 * v16 = (struct Eq_63311 *) ((char *) sp + 64);
	Eq_14 x20;
	v16->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v16->t0008.u1 = (size_t) x19;
	struct Eq_63322 * v19 = (struct Eq_63322 *) ((char *) sp + 80);
	ptr64 x29;
	v19->ptr0000 = x29;
	word64 x30;
	v19->qw0008 = x30;
	x29 = (char *) sp + 80;
	Eq_14 v22 = *x0.u1;
	ui32 w8 = (word32) v22;
	Eq_14 x2;
	x20 = x2;
	x19 = x0;
	Eq_14 x1;
	x21 = x1;
	Eq_14 x8;
	Eq_14 x9;
	if ((w8 & 0x01) != 0x00)
	{
		x22 = x8 >> 1;
		word32 w26 = 22;
	}
	else
	{
		Eq_14 v28 = x19;
		x9 = *v28.u1;
		x22 = *((word32) v28 + 8);
		x9 &= ~0x01;
		x26 = x9 - 0x01;
	}
	x9 = x26 - x22;
	Eq_63365 x31 = x9 - x20;
	Eq_63367 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(ULT,C))
	{
		x27 = x22 + x20;
		x9.u0 = ~0x11;
		Eq_63375 x10 = x27 - x26;
		x9 -= x26;
		x31 = x9 - x10;
		NZCV.u0 = cond(x31);
		if (Test(ULT,C))
		{
			x0 = x19;
			fn000000000001B2D0();
			_ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj();
			return;
		}
		if ((w8 & 0x01) != 0x00)
			x23.u1 = (word32) x19 + 1;
		else
			x23 = *((word32) x19 + 16);
		x8.u0 = ~0x19;
		x8 = SEQ(0x7FFF, (word48) x8);
		x31 = x26 - x8;
		NZCV.u0 = cond(x31);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x8 = x26 << 1;
			x31 = x27 - x8;
			NZCV.u0 = cond(x31);
			x8.u1 = Test(ULT,C) ? x8 : x27;
			NZCV.u0 = cond(x8 - 0x17);
			if (Test(ULT,C))
			{
				word32 w24 = 0x17;
			}
			else
			{
				x8.u1 = (word32) x8 + 16;
				x24 = x8 & ~0x0F;
			}
		}
		else
			x24 = 0x00 | ~0x10;
		x0 = x24;
		_Znwm();
		x25 = x0;
		if (x22 != 0x00)
		{
			x0 = x25;
			x1 = x23;
			x2 = x22;
			x0 = memcpy(x0, x1, x2);
		}
		x0.u1 = x25 + x22;
		x1 = x21;
		x2 = x20;
		x0 = memcpy(x0, x1, x2);
		NZCV.u0 = cond(x26 - 22);
		bool Z;
		if (Test(NE,Z))
		{
			x0 = x23;
			word128 q0;
			((real64) q0, x0, x1);
		}
		x8 = x24 | 0x01;
		*x19.u1 = x8;
		x8.u1 = x25 + x27;
		struct Eq_63539 * v39 = (struct Eq_63539 *) ((word32) x19 + 8);
		v39->qw0000 = (word64) x27;
		v39->t0008.u1 = (size_t) x25;
	}
	else
	{
		if (x20 == 0x00)
			goto l00000000000399BC;
		if ((w8 & 0x01) != 0x00)
			x23.u1 = (word32) x19 + 1;
		else
			x23 = *((word32) x19 + 16);
		x0.u1 = x23 + x22;
		x1 = x21;
		x2 = x20;
		x0 = memcpy(x0, x1, x2);
		Eq_14 v36 = *x19.u1;
		ui32 w9 = (word32) v36;
		x8.u1 = x22 + x20;
		if ((w9 & 0x01) != 0x00)
		{
			w9 = w8 << 1;
			*x19.u1 = (byte) w9;
			x8.u1 = x23 + x8;
		}
		else
		{
			*((word32) x19 + 8) = x8;
			x8.u1 = x23 + x8;
		}
	}
	x8.u1->u0 = 0x00;
l00000000000399BC:
	x0 = x19;
	struct Eq_63400 * v40 = (struct Eq_63400 *) ((char *) sp + 80);
	x29 = v40->ptr0000;
	x30 = v40->qw0008;
	struct Eq_63409 * v41 = (struct Eq_63409 *) ((char *) sp + 64);
	x20.u1 = v41->t0000.u1;
	x19.u1 = v41->t0008.u1;
	struct Eq_63418 * v42 = (struct Eq_63418 *) ((char *) sp + 48);
	x22.u1 = v42->t0000.u1;
	x21.u1 = v42->t0008.u1;
	struct Eq_63427 * v43 = (struct Eq_63427 *) ((char *) sp + 32);
	x24.u1 = v43->t0000.u1;
	x23.u1 = v43->t0008.u1;
	struct Eq_63436 * v44 = (struct Eq_63436 *) ((char *) sp + 16);
	x26.u0 = v44->t0000.u0;
	x25.u1 = v44->t0008.u1;
	x27.u0 = sp->u0;
	sp = (union Eq_63273 *) ((char *) sp + 96);
}

<anonymous> g_t39910 = <code>; // 0000000000039910
// 00000000000399E4: define _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
// Called from:
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
define _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
{
	ui32 w3;
	ui32 w4;
	ui32 w5;
	Eq_14 x1;
	struct Eq_63557 * fp;
	struct Eq_63557 * sp = fp;
	sp -= 0x90;
	struct Eq_63562 * v6 = (struct Eq_63562 *) ((char *) &sp->t0028 + 8);
	Eq_14 x28;
	v6->t0000.u1 = (size_t) x28;
	Eq_14 x27;
	v6->t0008.u1 = (size_t) x27;
	struct Eq_63573 * v9 = (struct Eq_63573 *) ((char *) &sp->t0028 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v9->t0008.u1 = (size_t) x25;
	struct Eq_63584 * v12 = (struct Eq_63584 *) ((char *) &sp->t0028 + 40);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_63595 * v15 = (struct Eq_63595 *) ((char *) &sp->t0028 + 56);
	word64 x22;
	v15->qw0000 = x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_63606 * v18 = (struct Eq_63606 *) ((char *) &sp->t0028 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v18->t0008.u1 = (size_t) x19;
	struct Eq_63617 * v21 = (struct Eq_63617 *) ((char *) &sp->t0028 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0028 + 88;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x25 + 40);
	sp->t0028.u1 = (size_t) x8;
	byte v26 = (byte) *x1.u1;
	ui32 w8 = (word32) v26;
	ui32 v41 = w8;
	Eq_63650 NZCV;
	NZCV.u0 = cond(w8 - 0x08);
	word32 ZC;
	Eq_14 x9;
	Eq_63711 x31;
	bool Z;
	if (Test(ULE,ZC))
	{
		x9.u0 = 0x00050000;
		x9.u1 = (word32) x9 + 840;
		Eq_14 x10;
		x10.u0 = 0x00039A48;
		byte v32 = (byte) *(x9 + x8);
		word32 w11 = (word32) v32;
		ui64 x11;
		x10.u1 = (char *) x10.u1 + (x11 << 2);
		ui32 w28 = w5;
		ui32 w21 = w4;
		ui32 w22 = w3;
		x23 = x1;
		Eq_14 x0;
		x19 = x0;
		switch (v41)
		{
		case 0x00:
			goto l0000000000039B84;
		case 0x01:
			x8 = *((word32) x23 + 8);
			x0 = *x19.u1;
			x8 = *((word32) x8 + 16);
			ui32 w2;
			ui32 w9;
			bool C;
			ui32 w1;
			Eq_14 x2;
			if (x8 == 0x00)
			{
				x8 = *x0.u1;
				x1.u0 = 0x00052000;
				x1.u1 = (word32) x1 + 0x05E2;
				goto l0000000000039C00;
			}
			else
			{
				sp->t0010.u1 = (size_t) x25;
				ui32 w25;
				if ((w2 & 0x01) != 0x00)
				{
					x8 = *x0.u1;
					x1.u0 = 0x00052000;
					x1.u1 = (word32) x1 + 0x05E5;
					w2 = 0x00 | 0x02;
					x8 = *((word32) x8 + 8);
					x8();
					byte v51 = (byte) *((word32) x19 + 608);
					w8 = (word32) v51;
					w9 = w28 + w21;
					sp->dw001C = w9;
					sp->dw000C = w28;
					if ((w8 & 0x01) != 0x00)
						x9 = x8 >> 1;
					else
						x9 = *((word32) x19 + 616);
					ui32 w10 = sp->dw001C;
					x26.u1 = (word32) x19 + 608;
					w25 = w10;
					x31 = x9 - x25;
					NZCV.u0 = cond(x31);
					if (Test(ULT,C))
					{
						if ((w8 & 0x01) != 0x00)
							x1 = __ubfm<word64>(x8, 1, 1);
						else
							x1 = *((word32) x19 + 616);
						x9 = x1 << 1;
						x31 = x9 - x1;
						NZCV.u0 = cond(x31);
						if (Test(UGT,ZC))
						{
							w2 = 0x00 | 0x20;
							x0 = x26;
							fn000000000001B070();
						}
						else if ((w8 & 0x01) != 0x00)
						{
							x8.u1 = x26 + x9;
							w9 = w1 << 2;
							((word32) x8 + 1)->u0 = 0x00;
							x26.u1->u0 = (byte) w9;
						}
						else
						{
							x8 = *((word32) x19 + 624);
							*(x8 + x9) = (word64) 0x00;
							*((word32) x19 + 616) = x9;
						}
					}
					x8 = *((word32) x23 + 8);
					x27.u0 = 0x00;
					x26.u1 = (word32) x26 + 1;
					x20 = *x8.u1;
					while (true)
					{
						x8 = *((word32) x8 + 16);
						byte v57 = (byte) *((word32) x19 + 608);
						w9 = (word32) v57;
						x0 = *x19.u1;
						x1 = x26;
						x24 = x8 - 0x01;
						if ((w9 & 0x01) != 0x00)
							x1 = *((word32) x19 + 624);
						x8 = *x0.u1;
						x2 = x25;
						x8 = *((word32) x8 + 8);
						x8();
						x0 = *x19.u1;
						w1 = 0x22;
						x8 = *x0.u1;
						x8 = *x8.u1;
						x8();
						w28 = w22 & 0x01;
						x1.u1 = (word32) x20 + 32;
						x0 = x19;
						w2 = w28;
						fn000000000001BA30();
						x0 = *x19.u1;
						x1.u0 = 0x00052000;
						w2 = 0x00 | 0x03;
						x1.u1 = x1 + 1512;
						x8 = *x0.u1;
						x8 = *((word32) x8 + 8);
						x8();
						w5 = sp->dw001C;
						x1.u1 = (word32) x20 + 56;
						w2 = 0x00 | 0x01;
						x0 = x19;
						w3 = w28;
						w4 = w21;
						fn000000000001B3F0();
						x0 = *x19.u1;
						x31 = x27 - x24;
						NZCV.u0 = cond(x31);
						if (Test(UGE,C))
							break;
						x8 = *x0.u1;
						x1.u0 = 0x00052000;
						w2 = 0x00 | 0x02;
						x1.u1 = x1 + 1516;
						x8 = *((word32) x8 + 8);
						x8();
						x8 = *((word32) x20 + 8);
						x27.u1 = x27 + 0x01;
						while (x8 != 0x00)
						{
							x20 = x8;
							x8 = *x8.u1;
						}
						x8 = *((word32) x23 + 8);
					}
					x8 = *x0.u1;
					w1 = 0x0A;
					x8 = *x8.u1;
					x8();
					byte v59 = (byte) *((word32) x19 + 608);
					w8 = (word32) v59;
					x0 = *x19.u1;
					if ((w8 & 0x01) != 0x00)
						x26 = *((word32) x19 + 624);
					x8 = *x0.u1;
					w9 = sp->dw000C;
					x1 = x26;
					x8 = *((word32) x8 + 8);
					w2 = w9;
					x8();
					x0 = *x19.u1;
					x8 = *x0.u1;
					x8 = *x8.u1;
				}
				else
				{
					x8 = *x0.u1;
					w1 = 0x7B;
					x8 = *x8.u1;
					x8();
					x8 = *((word32) x23 + 8);
					x24.u0 = 0x00052000;
					x20.u0 = 0x00;
					x24.u1 = (word32) x24 + 1519;
					x26 = *x8.u1;
					while (true)
					{
						x0 = *x19.u1;
						x8 = *((word32) x8 + 16);
						w1 = 0x22;
						x9 = *x0.u1;
						x27 = x8 - 0x01;
						x9 = *x9.u1;
						x9();
						w25 = w22 & 0x01;
						x1.u1 = (word32) x26 + 32;
						x0 = x19;
						w2 = w25;
						fn000000000001BA30();
						x0 = *x19.u1;
						w2 = 0x00 | 0x02;
						x1 = x24;
						x8 = *x0.u1;
						x8 = *((word32) x8 + 8);
						x8();
						x1.u1 = (word32) x26 + 56;
						x0 = x19;
						w2 = 0x00;
						w3 = w25;
						w4 = w21;
						w5 = w28;
						fn000000000001B3F0();
						x0 = *x19.u1;
						x31 = x20 - x27;
						NZCV.u0 = cond(x31);
						x8 = *x0.u1;
						x8 = *x8.u1;
						if (Test(UGE,C))
							break;
						w1 = 44;
						x8();
						x8 = *((word32) x26 + 8);
						x20.u1 = (word32) x20 + 1;
						while (x8 != 0x00)
						{
							x26 = x8;
							x8 = *x8.u1;
						}
						x8 = *((word32) x23 + 8);
					}
				}
				w1 = 0x7D;
				x8();
				x8.u1 = sp->t0010.u1;
				x8 = *((word32) x8 + 40);
				goto l0000000000039E10;
			}
		case 0x02:
			x8 = *((word32) x23 + 8);
			x0 = *x19.u1;
			Eq_14 v67 = x8;
			x9 = *v67.u1;
			x8 = *((word32) v67 + 8);
			x31 = x9 - x8;
			NZCV.u0 = cond(x31);
			if (Test(EQ,Z))
			{
				x8 = *x0.u1;
				x1.u0 = 0x00052000;
				x1.u1 = x1 + 1522;
l0000000000039C00:
				x8 = *((word32) x8 + 8);
				w2 = 0x00 | 0x02;
				goto l0000000000039C08;
			}
			if ((w2 & 0x01) == 0x00)
			{
				x8 = *x0.u1;
				w1 = 0x5B;
				x8 = *x8.u1;
				x8();
				x8 = *((word32) x23 + 8);
				Eq_14 v78 = x8;
				x24 = *v78.u1;
				x9 = *((word32) v78 + 8);
				x1 = x9 - 0x10;
				x31 = x24 - x1;
				NZCV.u0 = cond(x31);
				while (Test(NE,Z))
				{
					w3 = w22 & 0x01;
					x0 = x19;
					x1 = x24;
					w2 = 0x00;
					w4 = w21;
					w5 = w28;
					fn000000000001B3F0();
					x0 = *x19.u1;
					w1 = 44;
					x8 = *x0.u1;
					x8 = *x8.u1;
					x8();
					x8 = *((word32) x23 + 8);
					x24.u1 = x24 + 0x10;
					x8 = *((word32) x8 + 8);
					x1 = x8 - 0x10;
					x31 = x24 - x1;
					NZCV.u0 = cond(x31);
				}
				w3 = w22 & 0x01;
				x0 = x19;
				w2 = 0x00;
				w4 = w21;
				w5 = w28;
				fn000000000001B3F0();
				x0 = *x19.u1;
				w1 = 0x5D;
				goto l0000000000039DA0;
			}
			else
			{
				x8 = *x0.u1;
				x1.u0 = 0x00052000;
				x1.u1 = x1 + 0x05F5;
				w2 = 0x00 | 0x02;
				x8 = *((word32) x8 + 8);
				x8();
				byte v68 = (byte) *((word32) x19 + 608);
				w8 = (word32) v68;
				ui32 w24 = w28 + w21;
				sp->t0010.u1 = (size_t) x25;
				sp->dw000C = w28;
				if ((w8 & 0x01) != 0x00)
					x9 = x8 >> 1;
				else
					x9 = *((word32) x19 + 616);
				ui32 w26 = w24;
				x31 = x9 - x26;
				NZCV.u0 = cond(x31);
				x25.u1 = (word32) x19 + 608;
				if (Test(ULT,C))
				{
					if ((w8 & 0x01) != 0x00)
						x1 = __ubfm<word64>(x8, 1, 1);
					else
						x1 = *((word32) x19 + 616);
					x9 = x1 << 1;
					x31 = x9 - x1;
					NZCV.u0 = cond(x31);
					if (Test(UGT,ZC))
					{
						w2 = 0x00 | 0x20;
						x0 = x25;
						fn000000000001B070();
					}
					else if ((w8 & 0x01) != 0x00)
					{
						x8.u1 = x25 + x9;
						w9 = w1 << 2;
						((word32) x8 + 1)->u0 = 0x00;
						x25.u1->u0 = (byte) w9;
					}
					else
					{
						x8 = *((word32) x19 + 624);
						*(x8 + x9) = (word64) 0x00;
						*((word32) x19 + 616) = x9;
					}
				}
				x8 = *((word32) x23 + 8);
				byte v71 = (byte) *((word32) x19 + 608);
				w9 = (word32) v71;
				x0 = *x19.u1;
				Eq_14 v72 = x8;
				x27 = *v72.u1;
				x10 = *((word32) v72 + 8);
				ui32 w31 = w9 & 0x01;
				Eq_64437 NZ;
				NZ.u0 = cond(w31);
				w8 = (word32) Test(EQ,Z);
				x9 = x10 - (struct Eq_64441 *) 0x10;
				x31 = x27 - x9;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					x28.u0 = 0x00052000;
					x20.u1 = x25 + 0x01;
					x28.u1 = (word32) x28 + 1516;
					do
					{
						x1 = x20;
						if ((w8 & 0x01) != 0x00)
							x1 = *((word32) x19 + 624);
						x8 = *x0.u1;
						x2 = x26;
						x8 = *((word32) x8 + 8);
						x8();
						w3 = w22 & 0x01;
						w2 = 0x00 | 0x01;
						x0 = x19;
						x1 = x27;
						w4 = w21;
						w5 = w24;
						fn000000000001B3F0();
						x0 = *x19.u1;
						w2 = 0x00 | 0x02;
						x1 = x28;
						x8 = *x0.u1;
						x8 = *((word32) x8 + 8);
						x8();
						x8 = *((word32) x23 + 8);
						byte v76 = (byte) *((word32) x19 + 608);
						w9 = (word32) v76;
						x0 = *x19.u1;
						x27.u1 = x27 + 0x10;
						x8 = *((word32) x8 + 8);
						w31 = w9 & 0x01;
						NZ.u0 = cond(w31);
						x9 = x8 - 0x10;
						w8 = (word32) Test(EQ,Z);
						x31 = x27 - x9;
						NZCV.u0 = cond(x31);
					} while (Test(NE,Z));
				}
				if ((w8 & 0x01) != 0x00)
					x1.u1 = x25 + 0x01;
				else
					x1 = *((word32) x19 + 624);
				x8 = *x0.u1;
				x2 = x26;
				x8 = *((word32) x8 + 8);
				x8();
				x8 = *((word32) x23 + 8);
				w3 = w22 & 0x01;
				w2 = 0x00 | 0x01;
				x0 = x19;
				x8 = *((word32) x8 + 8);
				w4 = w21;
				w5 = w24;
				x1 = x8 - 0x10;
				fn000000000001B3F0();
				x0 = *x19.u1;
				w1 = 0x0A;
				x8 = *x0.u1;
				x8 = *x8.u1;
				x8();
				byte v77 = (byte) *((word32) x19 + 608);
				w8 = (word32) v77;
				x0 = *x19.u1;
				if ((w8 & 0x01) != 0x00)
					x1.u1 = x25 + 0x01;
				else
					x1 = *((word32) x19 + 624);
				x8 = *x0.u1;
				w9 = sp->dw000C;
				x20.u1 = sp->t0010.u1;
				x8 = *((word32) x8 + 8);
				w2 = w9;
				x8();
				x0 = *x19.u1;
				w1 = 0x5D;
				x8 = *x0.u1;
				x8 = *x8.u1;
				x8();
				x8 = *((word32) x20 + 40);
				goto l0000000000039E10;
			}
		case 0x03:
			x0 = *x19.u1;
			w1 = 0x22;
			x8 = *x0.u1;
			x8 = *x8.u1;
			x8();
			x1 = *((word32) x23 + 8);
			w2 = w22 & 0x01;
			x0 = x19;
			fn000000000001BA30();
			x0 = *x19.u1;
			w1 = 0x22;
l0000000000039DA0:
			x8 = *x0.u1;
			x8 = *x8.u1;
			x8();
			break;
		case 0x04:
			x0 = *x19.u1;
			Eq_14 v66 = *((word32) x23 + 8);
			w9 = (word32) v66;
			x8 = *x0.u1;
			x8 = *((word32) x8 + 8);
			if (w9 != 0x00)
			{
				x1.u0 = 0x00052000;
				x1.u1 = x1 + 0x05F8;
				w2 = 0x00 | 0x04;
			}
			else
			{
				x1.u0 = 0x00052000;
				x1.u1 = x1 + 1533;
				w2 = 0x05;
			}
			goto l0000000000039C08;
		case 0x05:
			x1 = *((word32) x23 + 8);
			x0 = x19;
			fn000000000001BC40();
			break;
		case 0x06:
			x1 = *((word32) x23 + 8);
			x0 = x19;
			fn000000000001C180();
			break;
		case 0x07:
			Eq_14 d0 = *((word32) x23 + 8);
			x8.u0 = 0x00050000;
			real64 d1 = (real64) *((word32) x8 + 832);
			Eq_14 v63 = d0;
			real64 d2 = fabs(v63);
			NZCV.u0 = cond(d2 - d1);
			bool N;
			word32 NZV;
			if (Test(GE,N) && Test(LE,NZV))
			{
l0000000000039B84:
				x0 = *x19.u1;
				x1.u0 = 0x00052000;
				x1.u1 = (word32) x1 + 1551;
				w2 = 0x00 | 0x04;
				goto l0000000000039BC8;
			}
			x20.u1 = (word32) x19 + 16;
			x8 = d0;
			if ((w8 & 0x00) == 0x00)
			{
				x21 = x20;
				NZCV.u0 = cond(d0 - 0.0);
				if (Test(EQ,Z))
					goto l0000000000039B6C;
				goto l0000000000039DC8;
			}
			d0 = -d0;
			x21.u1 = (word32) x19 + 0x0011;
			w8 = 0x2D;
			*((word32) x19 + 16) = (byte) w8;
			NZCV.u0 = cond(d0 - 0.0);
			if (Test(NE,Z))
			{
l0000000000039DC8:
				x1.u1 = (char *) &sp->qw0020 + 4;
				x2.u1 = &sp->qw0020;
				x0 = x21;
				sp->qw0020 = 0x00;
				fn000000000001BE20();
				struct Eq_64296 * v79 = (struct Eq_64296 *) &sp->qw0020;
				w2 = (ui32) v79->qw0000;
				w1 = v79->dw0004;
				w3 = 0x00 | ~0x03;
				w4 = 0x00 | 0x0F;
				x0 = x21;
				fn000000000001C0B0();
			}
			else
			{
l0000000000039B6C:
				w8 = 0x2E30;
				w9 = 0x00 | 0x30;
				x0.u1 = x21 + 0x03;
				x21.u1->u1 = (word16) w8;
				((word32) x21 + 2)->u0 = (byte) w9;
			}
			x8 = *x19.u1;
			x2 = x0 - x20;
			x1 = x20;
			x9 = *x8.u1;
			x0 = x8;
			x9 = *((word32) x9 + 8);
			x9();
			break;
		case 0x08:
			x0 = *x19.u1;
			x1.u0 = 0x00052000;
			x1.u1 = (word32) x1 + 0x0603;
			w2 = 11;
l0000000000039BC8:
			x8 = *x0.u1;
			x8 = *((word32) x8 + 8);
l0000000000039C08:
			x8();
			break;
		}
	}
	x8 = *((word32) x25 + 40);
l0000000000039E10:
	x9.u1 = sp->t0028.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_63793 * v44 = (struct Eq_63793 *) ((char *) &sp->t0028 + 88);
		x29 = v44->ptr0000;
		x30 = v44->qw0008;
		struct Eq_63802 * v45 = (struct Eq_63802 *) ((char *) &sp->t0028 + 72);
		x20.u1 = v45->t0000.u1;
		x19.u1 = v45->t0008.u1;
		struct Eq_63811 * v46 = (struct Eq_63811 *) ((char *) &sp->t0028 + 56);
		x22 = v46->qw0000;
		x21.u1 = v46->t0008.u1;
		struct Eq_63820 * v47 = (struct Eq_63820 *) ((char *) &sp->t0028 + 40);
		x24.u1 = v47->t0000.u1;
		x23.u1 = v47->t0008.u1;
		struct Eq_63829 * v48 = (struct Eq_63829 *) ((char *) &sp->t0028 + 24);
		x26.u1 = v48->t0000.u1;
		x25.u1 = v48->t0008.u1;
		struct Eq_63838 * v49 = (struct Eq_63838 *) ((char *) &sp->t0028 + 8);
		x28.u1 = v49->t0000.u1;
		x27.u1 = v49->t0008.u1;
		sp = (struct Eq_63557 *) ((char *) &sp->t0028 + 0x0068);
	}
}

<anonymous> g_t39ADC = <code>; // 0000000000039ADC
// 000000000003A1D8: define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEED2Ev
define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEED2Ev
{
	ptr64 fp;
	ptr64 sp = fp;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
}

// 000000000003A1DC: define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_64681 * v7 = (struct Eq_64681 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_64697 * v9 = (struct Eq_64697 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003A200: define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEE16__on_zero_sharedEv
{
	ptr64 fp;
	ptr64 sp = fp;
	struct Eq_64726 ** x0 = (struct Eq_64726 **) ((char *) x0 + 24);
	struct Eq_64726 * x8 = (struct Eq_64726 *) *x0;
	<anonymous> * x1 = x8->ptr0010;
	x1();
}

// 000000000003A20C: define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003A210: define _ZN8nlohmann6detail21output_string_adapterIcNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15write_characterEc
define _ZN8nlohmann6detail21output_string_adapterIcNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15write_characterEc
{
	ptr64 fp;
	ptr64 sp = fp;
	struct Eq_64746 * x0 = x0->ptr0008;
	fn000000000001C0E0();
}

// 000000000003A218: define _ZN8nlohmann6detail21output_string_adapterIcNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE16write_charactersEPKcm
define _ZN8nlohmann6detail21output_string_adapterIcNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE16write_charactersEPKcm
{
	ptr64 fp;
	ptr64 sp = fp;
	struct Eq_64754 * x0 = x0->ptr0008;
	fn000000000001B1B0();
}

// 000000000003A220: void output_adapter_protocol<prim(Character,1)>::~output_adapter_protocol<prim(Character,1)>()
void output_adapter_protocol<prim(Character,1)>::~output_adapter_protocol<prim(Character,1)>()
{
	ptr64 fp;
	ptr64 sp = fp;
}

// 000000000003A224: define _ZN8nlohmann6detail21output_string_adapterIcNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev
define _ZN8nlohmann6detail21output_string_adapterIcNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003A228: define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
{
	word32 w1;
	Eq_14 x0;
	Eq_64773 fp;
	Eq_64773 sp = fp;
	sp = (word32) sp - 80;
	Eq_14 x25;
	*sp = x25;
	struct Eq_64782 * v7 = (struct Eq_64782 *) ((word32) sp + 16);
	Eq_14 x24;
	v7->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_64793 * v10 = (struct Eq_64793 *) ((word32) sp + 32);
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_64804 * v13 = (struct Eq_64804 *) ((word32) sp + 48);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_64815 * v16 = (struct Eq_64815 *) ((word32) sp + 64);
	Eq_14 x29;
	v16->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v16->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 64;
	Eq_14 v19 = *x0.u1;
	ui32 w8 = (word32) v19;
	x20 = x0;
	word32 w19 = w1;
	Eq_14 x9;
	Eq_64845 x31;
	Eq_64847 NZCV;
	bool Z;
	Eq_14 x8;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_14 v23 = x20;
		x9 = *v23.u1;
		x25 = *((word32) v23 + 8);
		x9 &= ~0x01;
		x21 = x9 - 0x01;
		x31 = x25 - x21;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
l000000000003A264:
			if ((w8 & 0x01) == 0x00)
			{
				ui32 w25;
				w8 = w25 << 1;
				w8 += 0x02;
				*x20.u1 = (byte) w8;
				x20.u1 = (word32) x20 + 1;
				x23 = x20;
				goto l000000000003A328;
			}
			x23 = *((word32) x20 + 16);
l000000000003A320:
			x8.u1 = (word32) x25 + 1;
			*((word32) x20 + 8) = x8;
l000000000003A328:
			x8.u1 = x23 + x25;
			*x8.u1 = (byte) w19;
			((word32) x8 + 1)->u0 = 0x00;
			Eq_64977 v29 = (word32) sp + 64;
			x29.u1 = *v29;
			x30.u1 = *((word32) v29 + 8);
			Eq_64986 v30 = (word32) sp + 48;
			x20.u1 = *v30;
			x19.u1 = *((word32) v30 + 8);
			Eq_64995 v31 = (word32) sp + 32;
			x22.u1 = *v31;
			x21.u1 = *((word32) v31 + 8);
			Eq_65004 v32 = (word32) sp + 16;
			x24.u1 = *v32;
			x23.u1 = *((word32) v32 + 8);
			x25.u1 = *sp;
			sp = (word32) sp + 80;
			return;
		}
	}
	else
	{
		x25 = x8 >> 1;
		word32 w21 = 22;
		x31 = x25 - x21;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			goto l000000000003A264;
	}
	sp = (word32) x21 + 0x0011;
	NZCV.u0 = cond(sp);
	if (Test(EQ,Z))
	{
		x0 = x20;
		fn000000000001B2D0();
		_ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_escapedERKSB_b();
		return;
	}
	if ((w8 & 0x01) != 0x00)
		x22.u1 = (word32) x20 + 1;
	else
		x22 = *((word32) x20 + 16);
	x8.u0 = ~0x19;
	x8 = SEQ(0x7FFF, (word48) x8);
	x31 = x21 - x8;
	NZCV.u0 = cond(x31);
	word32 ZC;
	if (Test(ULE,ZC))
	{
		x8.u1 = (word32) x21 + 1;
		x9 = x21 << 1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		bool C;
		x8.u1 = Test(ULT,C) ? x9 : (word32) x21 + 1;
		NZCV.u0 = cond(x8 - 0x17);
		if (Test(ULT,C))
		{
			word32 w24 = 0x17;
		}
		else
		{
			x8.u1 = (word32) x8 + 16;
			x24 = x8 & ~0x0F;
		}
	}
	else
		x24 = 0x00 | ~0x10;
	x0 = x24;
	_Znwm();
	Eq_14 x1 = x22;
	Eq_14 x2 = x21;
	x23 = x0;
	x0 = memcpy(x0, x1, x2);
	NZCV.u0 = cond(x21 - 22);
	if (Test(NE,Z))
	{
		x0 = x22;
		word128 q0;
		((real64) q0, x0, x1);
	}
	x8 = x24 | 0x01;
	*((word32) x20 + 16) = x23;
	*x20.u1 = x8;
	goto l000000000003A320;
}

// 000000000003A354: define _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_escapedERKSB_b
// Called from:
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
define _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_escapedERKSB_b
{
	int64 x3;
	ui32 w2;
	Eq_14 x1;
	struct Eq_65017 * fp;
	struct Eq_65017 * sp = fp;
	sp -= 0x0100;
	struct Eq_65022 * v6 = (struct Eq_65022 *) ((char *) &sp->t0070 + 48);
	ptr64 x28;
	v6->ptr0000 = x28;
	word64 x27;
	v6->qw0008 = x27;
	struct Eq_65033 * v9 = (struct Eq_65033 *) ((char *) &sp->t0070 + 64);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	word64 x25;
	v9->qw0008 = x25;
	struct Eq_65044 * v12 = (struct Eq_65044 *) ((char *) &sp->t0070 + 80);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_65055 * v15 = (struct Eq_65055 *) ((char *) &sp->t0070 + 96);
	Eq_14 x22;
	v15->t0000.u1 = (size_t) x22;
	word64 x21;
	v15->qw0008 = x21;
	struct Eq_65066 * v18 = (struct Eq_65066 *) ((char *) &sp->t0070 + 112);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v18->t0008.u1 = (size_t) x19;
	struct Eq_65077 * v21 = (struct Eq_65077 *) ((char *) &sp->t0070 + 0x0080);
	struct Eq_65079 * x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (struct Eq_65079 *) ((char *) &sp->t0070 + 0x0080);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x22 + 40);
	x29->tFFFFFFA8.u1 = (size_t) x8;
	Eq_14 v26 = *x1.u1;
	uint32 w8 = (word32) v26;
	Eq_14 x9 = *((word32) x1 + 8);
	ui32 w31 = w8 & 0x01;
	Eq_65114 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	x8 >>= 1;
	bool Z;
	x8.u1 = Test(EQ,Z) ? x8 : x9;
	ui32 w10 = (word32) Test(EQ,Z);
	Eq_65136 x31;
	Eq_65138 NZCV;
	if (x8 == 0x00)
	{
l000000000003A67C:
		x8 = *((word32) x22 + 40);
		x9.u1 = x29->tFFFFFFA8.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			struct Eq_65195 * v42 = (struct Eq_65195 *) ((char *) &sp->t0070 + 0x0080);
			x29 = v42->ptr0000;
			x30 = v42->qw0008;
			struct Eq_65204 * v43 = (struct Eq_65204 *) ((char *) &sp->t0070 + 112);
			x20.u1 = v43->t0000.u1;
			x19.u1 = v43->t0008.u1;
			struct Eq_65213 * v44 = (struct Eq_65213 *) ((char *) &sp->t0070 + 96);
			x22.u1 = v44->t0000.u1;
			x21 = v44->qw0008;
			struct Eq_65222 * v45 = (struct Eq_65222 *) ((char *) &sp->t0070 + 80);
			x24.u1 = v45->t0000.u1;
			x23.u1 = v45->t0008.u1;
			struct Eq_65231 * v46 = (struct Eq_65231 *) ((char *) &sp->t0070 + 64);
			x26.u1 = v46->t0000.u1;
			x25 = v46->qw0008;
			struct Eq_65240 * v47 = (struct Eq_65240 *) ((char *) &sp->t0070 + 48);
			x28 = v47->ptr0000;
			x27 = v47->qw0008;
			sp = (struct Eq_65017 *) ((char *) &sp->t0070 + 144);
			return;
		}
		goto l000000000003A8B8;
	}
	sp->t0000.u1 = (size_t) x22;
	x24.u0 = 0x00070000;
	x24 = *((word32) x24 + 0x0C88);
	ui32 w21 = w2;
	x20 = x1;
	Eq_14 x0;
	x19 = x0;
	x26.u0 = 0x00;
	x22.u0 = 0x00;
	x8.u0 = 0x00;
	Eq_14 x2;
	x2.u0 = 0x00;
	uint32 w9 = 0x00;
	x28 = (ptr64) ((word32) x1 + 1);
	x23.u1 = (word32) x0 + 90;
	ui32 w27 = 0x00 | 0x0200;
	uint32 w3;
	uint32 w11;
	ui32 w1;
	Eq_14 x12;
	struct Eq_65384 * x13;
	ui32 w0;
	do
	{
		Eq_14 x11 = *((word32) x20 + 16);
		w31 = w10 & 0x01;
		NZ.u0 = cond(w31);
		struct Eq_65173 * x10 = Test(NE,Z) ? x28 : x11;
		byte v51 = (byte) *(x10 + x22);
		w3 = (word32) v51;
		w31 = w9 & 0xFF;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		byte v53 = (byte) *((char *) x24.u1 + x3);
		w10 = (word32) v53;
		uint32 w25;
		if (Test(NE,Z))
		{
			w11 = w3;
			w11 = __bfm<word32>(w11, w25, 26, 25);
			w25 = w11;
		}
		else
		{
			w11 = 0x00 | 0xFF;
			w11 >>= w10;
			w25 = w11 & w3;
		}
		x10 |= 0x0100;
		x9.u1 = (char *) x10 + ((uint64) ((byte) w9) << 4);
		byte v56 = (byte) *(x24 + x9);
		w9 = (word32) v56;
		NZCV.u0 = cond(w9 - 0x01);
		word32 ZC;
		if (Test(NE,Z))
		{
			if (w9 == 0x00)
			{
				w8 = w25 - 0x08;
				uint32 v59 = w8;
				NZCV.u0 = cond(w8 - 0x1A);
				if (Test(ULE,ZC))
				{
					x11.u0 = 0x00050000;
					x11.u1 = (word32) x11 + 849;
					x9.u0 = 0x0003A4A4;
					byte v58 = (byte) *(x11 + x8);
					w10 = (word32) v58;
					x9.u1 = x9 + (x10 << 2);
					switch (v59)
					{
					case 0x00:
						x8.u1 = x19 + x26;
						w9 = 0x625C;
						break;
					case 0x01:
						x8.u1 = x19 + x26;
						w9 = 29788;
						break;
					case 0x02:
						x8.u1 = x19 + x26;
						w9 = 28252;
						break;
					case 0x03:
					case 0x06:
					case 0x07:
					case 0x08:
					case 0x09:
					case 0x0A:
					case 11:
					case 0x0C:
					case 0x0D:
					case 0x0E:
					case 0x0F:
					case 0x10:
					case 0x11:
					case 0x12:
					case 0x13:
					case 0x14:
					case 0x15:
					case 22:
					case 0x17:
					case 0x18:
					case 0x19:
						goto l000000000003A59C;
					case 0x04:
						x8.u1 = x19 + x26;
						w9 = 0x665C;
						break;
					case 0x05:
						x8.u1 = x19 + x26;
						w9 = 29276;
						break;
					case 0x1A:
						x8.u1 = x19 + x26;
						w9 = 0x225C;
						break;
					}
					goto l000000000003A5FC;
				}
				NZCV.u0 = cond(w25 - 0x5C);
				if (Test(EQ,Z))
				{
					x8.u1 = x19 + x26;
					w9 = 0x5C5C;
l000000000003A5FC:
					((word32) x8 + 90)->u1 = (word16) w9;
					x2.u1 = (word32) x26 + 2;
					goto l000000000003A604;
				}
l000000000003A59C:
				NZCV.u0 = cond(w25 - 0x7E);
				w8 = (word32) Test(UGT,ZC);
				NZCV.u0 = cond(w25 - 0x20);
				if (Test(UGE,C))
				{
					w8 &= w21;
					if (w8 != 0x00)
						goto l000000000003A3D8;
					x2.u1 = (word32) x26 + 1;
					x8.u1 = x19 + x26;
					((word32) x8 + 90)->u1 = (byte) w3;
				}
				else
				{
l000000000003A3D8:
					x8.u1 = x19 + x26;
					w9 = w25 >> 16;
					x0.u1 = (word32) x8 + 90;
					if (w9 == 0x00)
					{
						x2.u0 = 0x00052000;
						w3 = w25 & 0xFFFF;
						w1 = 0x00 | 0x07;
						x2.u1 = (word32) x2 + 0x061A;
						x0 = SEQ(0x00, snprintf(x0, x1, x2, 0x00));
						x2.u1 = (word32) x26 + 6;
					}
					else
					{
						w8 = 55232;
						w8 += w25 >> 0x0A;
						uint32 w4 = 0xDC00;
						x2.u0 = 0x00052000;
						w3 = w8 & 0xFFFF;
						w4 = __bfm<word32>(w4, w25, 0, 9);
						w1 = 0x0D;
						x2.u1 = (word32) x2 + 1556;
						x0 = SEQ(0x00, snprintf(x0, x1, x2, 0x00));
						x2.u1 = (word32) x26 + 0x0C;
					}
				}
l000000000003A604:
				x8 = x27 - x2;
				NZCV.u0 = cond(x8 - 0x0C);
				if (Test(ULE,ZC))
					goto l000000000003A610;
				goto l000000000003A58C;
			}
			if ((w21 & 0x01) != 0x00)
			{
				x10 = x19 + x26;
				x26.u1 = (word32) x26 + 1;
				x10->b005A = (byte) w3;
			}
			x8.u1 = x8 + 0x01;
			goto l000000000003A634;
		}
		w9 = (uint32) *((word32) x19 + 632);
		w10 = w9 - 0x01;
		NZCV.u0 = cond(w10 - 0x02);
		if (Test(ULT,C))
		{
			NZCV.u0 = cond(x8 - 0x00);
			w8 = (word32) Test(NE,Z);
			NZCV.u0 = cond(w9 - 0x01);
			x22 -= x8;
			if (Test(EQ,Z))
			{
				x9.u1 = x19 + x2;
				x8.u1 = (word32) x2 + 1;
				x9.u1 = x9 + (byte *) 0x5A;
				ui32 w12;
				if ((w21 & 0x01) != 0x00)
				{
					w10 = 0x5C;
					x12.u1 = (word32) x19 + 90;
					word32 w14 = 117;
					x9.u1->u0 = (byte) w10;
					x13 = x12 + x2;
					*(x12 + x8) = (word64) (byte) w14;
					w12 = 0x6666;
					w9 = 100;
					w10 = 0x66;
					w11 = 0x05;
					x8.u1 = (word32) x2 + 4;
					x13->w0002 = (word16) w12;
					w12 = 0x00 | 0x06;
				}
				else
				{
					w10 = 0xEF;
					x9.u1->u0 = (byte) w10;
					w9 = 0xBD;
					w10 = 191;
					w11 = 0x00 | 0x02;
					w12 = 0x00 | 0x03;
				}
				x11.u1 = x2 + x11;
				x13 = (struct Eq_65384 *) ((word32) x19 + 90);
				x2.u1 = x2 + x12;
				*(x13 + x8) = (word64) (byte) w10;
				x8 = x27 - x2;
				NZCV.u0 = cond(x8 - 0x0C);
				*(x13 + x11) = (word64) (byte) w9;
				if (Test(UGT,ZC))
					goto l000000000003A58C;
l000000000003A610:
				x0 = *x19.u1;
				x1 = x23;
				x8 = *x0.u1;
				x8 = *((word32) x8 + 8);
				x8();
				w9 = 0x00;
				x2.u0 = 0x00;
				x8.u0 = 0x00;
				x26.u0 = 0x00;
			}
			else
			{
l000000000003A58C:
				w9 = 0x00;
				x8.u0 = 0x00;
				x26 = x2;
			}
		}
		else
		{
			if (w9 == 0x00)
			{
				x9 = x29 - 0x70;
				x20 = x9 | 0x01;
				x2.u0 = 0x00052000;
				w8 = 0x00 | 0x06;
				x2.u1 = x2 + 0x0621;
				w1 = 0x00 | 0x03;
				x0 = x20;
				struct Eq_65504 * v70 = (struct Eq_65504 *) &x29->bFFFFFF90;
				v70->qw0000 = 0x00;
				v70->qw0008 = 0x00;
				x29->qwFFFFFFA0 = 0x00;
				x29->bFFFFFF90 = (byte) w8;
				x29->dwFFFFFF91 = 0x00;
				x0 = SEQ(0x00, snprintf(x0, x1, x2, 0x00));
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x19 = x0;
				x8.u1 = (char *) &sp->t0000 + 8;
				x0 = x22;
				_ZNSt6__ndk19to_stringEm();
				x2.u0 = 0x00052000;
				x2.u1 = x2 + 0x0626;
				x0.u1 = (char *) &sp->t0000 + 8;
				w3 = 0x00 | 0x1C;
				x1.u0 = 0x00;
				fn000000000001B4E0();
				x8 = *((word32) x0 + 16);
				Eq_65560 q0;
				q0.u3 = *x0.u1;
				sp->t0030.u1 = (size_t) x8;
				sp->t0020.u1 = (word128) q0;
				struct Eq_65569 * v72 = (struct Eq_65569 *) ((word32) x0 + 8);
				v72->ptr0000 = 0x00;
				v72->qw0008 = 0x00;
				x0.u1->u1 = 0x00;
				x1.u0 = 0x00052000;
				x1.u1 = (word32) x1 + 0x0665;
				x0.u1 = &sp->t0020.u0;
				w2 = 0x00 | 0x04;
				fn000000000001B1B0();
				x8 = *((word32) x0 + 16);
				q0.u3 = *x0.u1;
				sp->t0050.u1 = (size_t) x8;
				sp->t0040.u1 = (word128) q0;
				struct Eq_65604 * v73 = (struct Eq_65604 *) ((word32) x0 + 8);
				v73->ptr0000 = 0x00;
				v73->qw0008 = 0x00;
				x0.u1->u1 = 0x00;
				byte v74 = x29->bFFFFFF90;
				w8 = (word32) v74;
				struct Eq_65624 * v75 = (struct Eq_65624 *) ((char *) &x29->dwFFFFFF91 + 7);
				x10 = v75->ptr0000;
				x9.u1 = v75->t0008.u1;
				w31 = w8 & 0x01;
				NZ.u0 = cond(w31);
				C = false;
				V = false;
				x11 = x8 >> 1;
				x1.u1 = Test(EQ,Z) ? x20 : x9;
				x2.u1 = Test(EQ,Z) ? x11 : x10;
				x0.u1 = &sp->t0040.u0;
				fn000000000001B1B0();
				x8 = *((word32) x0 + 16);
				q0.u3 = *x0.u1;
				w21 = 0x00 | 0x01;
				sp->t0070.u1 = (size_t) x8;
				sp->t0060.u1 = (word128) q0;
				struct Eq_65662 * v76 = (struct Eq_65662 *) ((word32) x0 + 8);
				v76->ptr0000 = 0x00;
				v76->qw0008 = 0x00;
				x0.u1->u1 = 0x00;
				w0 = 0x013C;
				x1.u1 = &sp->t0060.u0;
				x8 = x19;
				fn000000000001C480();
				x1.u0 = 0x00070000;
				x2.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0C90);
				x2 = *((word32) x2 + 0x0DD0);
				x0 = x19;
				w21 = 0x00;
				__cxa_throw();
				goto l000000000003A8B8;
			}
			w9 = 0x00 | 0x01;
		}
l000000000003A634:
		Eq_14 v64 = *x20.u1;
		w11 = (word32) v64;
		x12 = *((word32) x20 + 8);
		x22.u1 = (word32) x22 + 1;
		w31 = w11 & 0x01;
		NZ.u0 = cond(w31);
		x13 = x11 >> 1;
		ui64 x14 = Test(EQ,Z) ? x13 : x12;
		w10 = (word32) Test(EQ,Z);
		x31 = x22 - x14;
		NZCV.u0 = cond(x31);
	} while (Test(ULT,C));
	if (w9 == 0x00)
	{
		x22.u1 = sp->t0000.u1;
		if (x26 == 0x00)
			goto l000000000003A67C;
		x0 = *x19.u1;
		x19.u1 = (word32) x19 + 90;
		x2 = x26;
	}
	else
	{
		w8 = (uint32) *((word32) x19 + 632);
		x22.u1 = sp->t0000.u1;
		NZCV.u0 = cond(w8 - 0x01);
		if (Test(EQ,Z))
		{
			x1 = x19;
			x0 = *x1.u1;
			x1.u1 = x1 + (struct <anonymous> *) 90;
			x8 = *x0.u1;
			x8 = *((word32) x8 + 8);
			x8();
			x0 = *x19.u1;
			x8 = *x0.u1;
			x8 = *((word32) x8 + 8);
			if ((w21 & 0x01) != 0x00)
			{
				x1.u0 = 0x00052000;
				x1.u1 = (word32) x1 + 0x066A;
				w2 = 0x00 | 0x06;
			}
			else
			{
				x1.u0 = 0x00052000;
				x1.u1 = (word32) x1 + 0x0671;
				w2 = 0x00 | 0x03;
			}
l000000000003A678:
			x8();
			goto l000000000003A67C;
		}
		NZCV.u0 = cond(w8 - 0x02);
		if (Test(NE,Z))
		{
			if (w8 == 0x00)
			{
				w8 = 0x00 | 0x06;
				struct Eq_65732 * v66 = (struct Eq_65732 *) &x29->bFFFFFF90;
				v66->b0000 = (byte) 0x00;
				v66->qw0008 = 0x00;
				x29->qwFFFFFFA0 = 0x00;
				x29->bFFFFFF90 = (byte) w8;
				x29->dwFFFFFF91 = 0x00;
				x8 = *((word32) x20 + 16);
				w31 = w11 & 0x01;
				NZ.u0 = cond(w31);
				C = false;
				V = false;
				x9.u1 = Test(EQ,Z) ? x13 : x12;
				x2.u0 = 0x00052000;
				x8.u1 = Test(NE,Z) ? x8 : (word32) x20 + 1;
				x8.u1 = x8 + x9;
				byte v67 = (byte) *((word32) x8 - 1);
				w3 = (word32) v67;
				x8 = x29 - 0x70;
				x0 = x8 | 0x01;
				x2.u1 = x2 + 0x0621;
				w1 = 0x00 | 0x03;
				x0 = SEQ(0x00, snprintf(x0, x1, x2, 0x00));
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x19 = x0;
				x0.u0 = 0x00052000;
				x0.u1 = (word32) x0 + 0x0643;
				x8.u1 = &sp->t0060.u0;
				x1 = x29 - 0x70;
				fn000000000001C140();
				w21 = 0x00 | 0x01;
				w0 = 0x013C;
				x1.u1 = &sp->t0060.u0;
				x8 = x19;
				fn000000000001C480();
				x1.u0 = 0x00070000;
				x2.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0C90);
				x2 = *((word32) x2 + 0x0DD0);
				x0 = x19;
				w21 = 0x00;
				__cxa_throw();
l000000000003A8B8:
				__stack_chk_fail();
			}
			goto l000000000003A67C;
		}
		x0 = *x19.u1;
		x19.u1 = (word32) x19 + 90;
	}
	x8 = *x0.u1;
	x1 = x19;
	x8 = *((word32) x8 + 8);
	goto l000000000003A678;
}

<anonymous> g_t3A5E4 = <code>; // 000000000003A5E4
// 000000000003A9B4: define _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_integerIlLi0EEEvT_
define _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_integerIlLi0EEEvT_
{
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x1;
	Eq_14 x0;
	Eq_14 x8;
	<anonymous> * x2;
	if (x1 == 0x00)
	{
		x0 = *x0.u1;
		ui32 w1 = 0x00 | 0x30;
		x8 = *x0.u1;
		x2 = (<anonymous> *) *x8.u1;
		x2();
		return;
	}
	x8 = x1;
	x1.u1 = (word32) x0 + 16;
	ui32 w8;
	Eq_65938 NZCV;
	bool C;
	struct Eq_65973 * x9;
	ui32 w2;
	word64 x11;
	uint32 w10;
	ui32 w9;
	Eq_14 x12;
	word32 ZC;
	Eq_14 x13;
	uint32 w12;
	uint32 w11;
	ptr64 x31;
	Eq_14 x10;
	if ((w8 & 0x00) == 0x00)
	{
		NZCV.u0 = cond(x8 - 0x0A);
		if (Test(ULT,C))
		{
			x9 = (struct Eq_65973 *) ((word32) x0 + 0x0011);
			w2 = 0x00 | 0x01;
			goto l000000000003AB68;
		}
		x11 = 22859;
		x11 = SEQ(SLICE(x11, word32, 32), 0x3886, (word16) x11);
		w10 = 34464;
		x11 = SEQ(SLICE(x11, word16, 48), 50646, (word32) x11);
		w9 = 0x00 | 0x04;
		w10 = SEQ(0x01, (word16) w10);
		x11 = SEQ(13421, (word48) x11);
		x12 = x8;
		do
		{
			NZCV.u0 = cond(x12 - 99);
			if (Test(ULE,ZC))
			{
				w9 -= 0x02;
				goto l000000000003AAD8;
			}
			NZCV.u0 = cond(x12 - 999);
			if (Test(ULE,ZC))
			{
				--w9;
				goto l000000000003AAD8;
			}
			x13 = x12 >> 4;
			NZCV.u0 = cond(x13 - 0x0271);
			if (Test(ULT,C))
				goto l000000000003AAD8;
			x13.u1 = SLICE(w12 * w11, uint64, 64);
			x31 = x12 - x10;
			NZCV.u0 = cond(x31);
			x12 = x13 >> 11;
			w9 += 0x04;
		} while (Test(UGE,C));
		w9 -= 0x03;
	}
	else
	{
		x8 = 0x00 - x8;
		w9 = 0x2D;
		NZCV.u0 = cond(x8 - 0x0A);
		x1.u1->u0 = (byte) w9;
		if (Test(ULT,C))
			w9 = 0x00 | 0x01;
		else
		{
			x11 = 22859;
			x11 = SEQ(SLICE(x11, word32, 32), 0x3886, (word16) x11);
			w10 = 34464;
			x11 = SEQ(SLICE(x11, word16, 48), 50646, (word32) x11);
			w9 = 0x00 | 0x04;
			w10 = SEQ(0x01, (word16) w10);
			x11 = SEQ(13421, (word48) x11);
			x12 = x8;
			do
			{
				NZCV.u0 = cond(x12 - 99);
				if (Test(ULE,ZC))
				{
					w9 -= 0x02;
					goto l000000000003AAD4;
				}
				NZCV.u0 = cond(x12 - 999);
				if (Test(ULE,ZC))
				{
					--w9;
					goto l000000000003AAD4;
				}
				x13 = x12 >> 4;
				NZCV.u0 = cond(x13 - 0x0271);
				if (Test(ULT,C))
					goto l000000000003AAD4;
				x13.u1 = SLICE(w12 * w11, uint64, 64);
				x31 = x12 - x10;
				NZCV.u0 = cond(x31);
				x12 = x13 >> 11;
				w9 += 0x04;
			} while (Test(UGE,C));
			w9 -= 0x03;
		}
l000000000003AAD4:
		++w9;
	}
l000000000003AAD8:
	w2 = w9;
	x9 = x0 + x2;
	NZCV.u0 = cond(x8 - 100);
	x9 = (struct Eq_65973 *) ((char *) &x9->t0000 + 16);
	if (Test(UGE,C))
	{
		x13.u0 = 0x00070000;
		x11 = 0xF5C3;
		x13 = *((word32) x13 + 0x0CA8);
		x11 = SEQ(SLICE(x11, word32, 32), 23592, (word16) x11);
		x11 = SEQ(SLICE(x11, word16, 48), 0xC28F, (word32) x11);
		x11 = SEQ(0x28F5, (word48) x11);
		w12 = 100;
		do
		{
			x10 = x8 >> 2;
			x10.u1 = SLICE(w10 * w11, uint64, 64);
			x10 >>= 2;
			Eq_66105 x14 = x8 - x10 *64 x12;
			word16 v27 = (word16) *((char *) x13.u1 + x14 *64 0x02);
			word32 w14 = (word32) v27;
			x8 >>= 4;
			NZCV.u0 = cond(x8 - 0x0270);
			x8 = x10;
			x9 = (struct Eq_65973 *) ((char *) x9 - 2);
			x9->t0000.u1 = (word16) (word16) w14;
		} while (Test(UGT,ZC));
		NZCV.u0 = cond(x10 - 0x0A);
		if (Test(UGE,C))
		{
l000000000003AB38:
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 0x0CA8);
			x8.u1 = (char *) x8.u1 + ((uint64) w10 << 1);
			byte v28 = (byte) *((word32) x8 + 1);
			w10 = (word32) v28;
			Eq_66143 v29;
			v29.u3 = *x8.u1;
			w8 = (word32) v29;
			x9->bFFFFFFFF = (byte) w10;
			x9 -= 0x02;
l000000000003AB70:
			x9->t0000.u0 = (byte) (byte) w8;
			x0 = *x0.u1;
			x8 = *x0.u1;
			Eq_14 x3 = *((word32) x8 + 8);
			x3();
			return;
		}
	}
	else
	{
		x10 = x8;
		NZCV.u0 = cond(x10 - 0x0A);
		if (Test(UGE,C))
			goto l000000000003AB38;
	}
	x8 = x10;
l000000000003AB68:
	w8 += 0x30;
	--x9;
	goto l000000000003AB70;
}

// 000000000003AB84: define _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_integerImLi0EEEvT_
define _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_integerImLi0EEEvT_
{
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x1;
	Eq_14 x0;
	Eq_14 x8;
	<anonymous> * x2;
	if (x1 == 0x00)
	{
		x0 = *x0.u1;
		ui32 w1 = 0x00 | 0x30;
		x8 = *x0.u1;
		x2 = (<anonymous> *) *x8.u1;
		x2();
		return;
	}
	x8 = x1;
	Eq_66189 NZCV;
	NZCV.u0 = cond(x1 - 0x0A);
	x1.u1 = (word32) x0 + 16;
	bool C;
	struct Eq_66214 * x9;
	ui32 w2;
	if (Test(ULT,C))
	{
		x9 = (struct Eq_66214 *) ((word32) x0 + 0x0011);
		w2 = 0x00 | 0x01;
		goto l000000000003ACAC;
	}
	Eq_14 x10;
	x10.u0 = 22859;
	x10 = SEQ(SLICE(x10, word32, 32), 0x3886, (word16) x10);
	x10 = SEQ(SLICE(x10, word16, 48), 50646, (word32) x10);
	ui32 w9 = 0x00 | 0x04;
	x10 = SEQ(13421, (word48) x10);
	Eq_14 x11 = x8;
	word32 ZC;
	Eq_14 x12;
	uint32 w11;
	uint32 w10;
	do
	{
		NZCV.u0 = cond(x11 - 99);
		if (Test(ULE,ZC))
		{
			w9 -= 0x02;
			goto l000000000003AC1C;
		}
		NZCV.u0 = cond(x11 - 999);
		if (Test(ULE,ZC))
		{
			--w9;
			goto l000000000003AC1C;
		}
		x12 = x11 >> 4;
		NZCV.u0 = cond(x12 - 0x0271);
		if (Test(ULT,C))
			goto l000000000003AC1C;
		x12.u1 = SLICE(w11 * w10, uint64, 64);
		x11 >>= 5;
		x12 >>= 11;
		NZCV.u0 = cond(x11 - 0x0C34);
		w9 += 0x04;
		x11 = x12;
	} while (Test(UGT,ZC));
	w9 -= 0x03;
l000000000003AC1C:
	w2 = w9;
	x9 = x0 + x2;
	NZCV.u0 = cond(x8 - 100);
	x9 = (struct Eq_66214 *) ((char *) &x9->t0000 + 16);
	word32 w8;
	if (Test(UGE,C))
	{
		Eq_14 x13;
		x13.u0 = 0x00070000;
		x11.u0 = 0xF5C3;
		x13 = *((word32) x13 + 0x0DD8);
		x11 = SEQ(SLICE(x11, word32, 32), 23592, (word16) x11);
		x11 = SEQ(SLICE(x11, word16, 48), 0xC28F, (word32) x11);
		x11 = SEQ(0x28F5, (word48) x11);
		word32 w12 = 100;
		do
		{
			x10 = x8 >> 2;
			x10.u1 = SLICE(w10 * w11, uint64, 64);
			x10 >>= 2;
			Eq_66297 x14 = x8 - x10 *64 x12;
			word16 v26 = (word16) *((char *) x13.u1 + x14 *64 0x02);
			word32 w14 = (word32) v26;
			x8 >>= 4;
			NZCV.u0 = cond(x8 - 0x0270);
			x8 = x10;
			x9 = (struct Eq_66214 *) ((char *) x9 - 2);
			x9->t0000.u1 = (word16) (word16) w14;
		} while (Test(UGT,ZC));
		NZCV.u0 = cond(x10 - 0x0A);
		if (Test(UGE,C))
		{
l000000000003AC7C:
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 0x0DD8);
			x8.u1 = (char *) x8.u1 + ((uint64) w10 << 1);
			byte v27 = (byte) *((word32) x8 + 1);
			w10 = (word32) v27;
			Eq_66335 v28;
			v28.u2 = *x8.u1;
			w8 = (word32) v28;
			x9->bFFFFFFFF = (byte) w10;
			x9 -= 0x02;
l000000000003ACB4:
			x9->t0000.u0 = (byte) (byte) w8;
			x0 = *x0.u1;
			x8 = *x0.u1;
			Eq_14 x3 = *((word32) x8 + 8);
			x3();
			return;
		}
	}
	else
	{
		x10 = x8;
		NZCV.u0 = cond(x10 - 0x0A);
		if (Test(UGE,C))
			goto l000000000003AC7C;
	}
	x8 = x10;
l000000000003ACAC:
	w8 += 0x30;
	--x9;
	goto l000000000003ACB4;
}

// 000000000003ACC8: define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc
define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc
{
	word32 w2;
	struct Eq_66358 * fp;
	struct Eq_66358 * sp = fp;
	sp = (struct Eq_66358 *) ((char *) sp - 80);
	Eq_66362 x26;
	sp->t0000.u0 = (uint64) x26;
	Eq_14 x25;
	sp->t0008.u1 = (size_t) x25;
	struct Eq_66371 * v8 = (struct Eq_66371 *) ((char *) &sp->t0008 + 8);
	Eq_14 x24;
	v8->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v8->t0008.u1 = (size_t) x23;
	struct Eq_66382 * v11 = (struct Eq_66382 *) ((char *) &sp->t0008 + 24);
	Eq_14 x22;
	v11->t0000.u1 = (size_t) x22;
	word64 x21;
	v11->qw0008 = x21;
	struct Eq_66393 * v14 = (struct Eq_66393 *) ((char *) &sp->t0008 + 40);
	Eq_14 x20;
	v14->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v14->t0008.u1 = (size_t) x19;
	struct Eq_66404 * v17 = (struct Eq_66404 *) ((char *) &sp->t0008 + 56);
	ptr64 x29;
	v17->ptr0000 = x29;
	word64 x30;
	v17->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 56;
	Eq_14 x0;
	x19 = x0;
	Eq_14 x1;
	if (x1 != 0x00)
	{
		Eq_66467 v21 = *x19.u1;
		ui32 w8 = (word32) v21;
		word32 w21 = w2;
		x20 = x1;
		Eq_14 x8;
		ui32 w9;
		Eq_66467 x9;
		ui64 x10;
		if ((w8 & 0x01) != 0x00)
		{
			x22 = x8 >> 1;
			word32 w26 = 22;
			w9 = w8;
		}
		else
		{
			Eq_14 v38 = x19;
			x9 = *v38.u1;
			x22 = *((word32) v38 + 8);
			x10 = x9 & ~0x01;
			x26 = x10 - 0x01;
		}
		x10 = x26 - x22;
		Eq_66497 x31 = x10 - x20;
		Eq_66499 NZCV;
		NZCV.u0 = cond(x31);
		bool C;
		Eq_14 x2;
		if (Test(ULT,C))
		{
			x9 = x22 + x20;
			x10 = 0x00 | ~0x10;
			Eq_66511 x11 = x9 - x26;
			x10 -= x26;
			x31 = x10 - x11;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
				x0 = x19;
				fn000000000001B2D0();
				_ZN8nlohmann6detail10type_error6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE();
				return;
			}
			if ((w8 & 0x01) != 0x00)
				x23.u1 = (word32) x19 + 1;
			else
				x23 = *((word32) x19 + 16);
			x8.u0 = ~0x19;
			x8 = SEQ(0x7FFF, (word48) x8);
			x31 = x26 - x8;
			NZCV.u0 = cond(x31);
			word32 ZC;
			if (Test(ULE,ZC))
			{
				x8 = x26 << 1;
				x31 = x9 - x8;
				NZCV.u0 = cond(x31);
				x8.u1 = Test(ULT,C) ? x8 : x9;
				NZCV.u0 = cond(x8 - 0x17);
				if (Test(ULT,C))
				{
					word32 w24 = 0x17;
				}
				else
				{
					x8.u1 = (word32) x8 + 16;
					x24 = x8 & ~0x0F;
				}
			}
			else
				x24 = 0x00 | ~0x10;
			x0 = x24;
			_Znwm();
			x25 = x0;
			if (x22 != 0x00)
			{
				x0 = x25;
				x1 = x23;
				x2 = x22;
				x0 = memcpy(x0, x1, x2);
			}
			NZCV.u0 = cond(x26 - 22);
			bool Z;
			if (Test(NE,Z))
			{
				x0 = x23;
				word128 q0;
				((real64) q0, x0, x1);
			}
			x9 = x24 | 0x01;
			*((word32) x19 + 16) = x25;
			x19.u1->u1 = x9;
		}
		if ((w9 & 0x01) != 0x00)
			x23.u1 = (word32) x19 + 1;
		else
			x23 = *((word32) x19 + 16);
		x0.u1 = x23 + x22;
		word32 w1 = w21;
		x2 = x20;
		x0 = memset(x0, (int32) x1, x2);
		Eq_66467 v43 = *x19.u1;
		w9 = (word32) v43;
		x8.u1 = x22 + x20;
		if ((w9 & 0x01) != 0x00)
		{
			w9 = w8 << 1;
			x19.u1->u1 = (byte) w9;
		}
		else
			*((word32) x19 + 8) = x8;
		*(x23 + x8) = (word64) 0x00;
	}
	x0 = x19;
	struct Eq_66421 * v27 = (struct Eq_66421 *) ((char *) &sp->t0008 + 56);
	x29 = v27->ptr0000;
	x30 = v27->qw0008;
	struct Eq_66430 * v28 = (struct Eq_66430 *) ((char *) &sp->t0008 + 40);
	x20.u1 = v28->t0000.u1;
	x19.u1 = v28->t0008.u1;
	struct Eq_66439 * v29 = (struct Eq_66439 *) ((char *) &sp->t0008 + 24);
	x22.u1 = v29->t0000.u1;
	x21 = v29->qw0008;
	struct Eq_66448 * v30 = (struct Eq_66448 *) ((char *) &sp->t0008 + 8);
	x24.u1 = v30->t0000.u1;
	x23.u1 = v30->t0008.u1;
	struct Eq_66358 * v31 = sp;
	x26.u0 = v31->t0000.u0;
	x25.u1 = v31->t0008.u1;
	sp = (struct Eq_66358 *) ((char *) &sp->t0008 + 72);
}

// 000000000003AE24: define _ZN8nlohmann6detail10type_error6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
// Called from:
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc
define _ZN8nlohmann6detail10type_error6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
{
	Eq_14 w0;
	struct Eq_66624 * fp;
	struct Eq_66624 * sp = fp;
	sp -= 0x80;
	struct Eq_66629 * v6 = (struct Eq_66629 *) ((char *) &sp->t0040 + 16);
	struct Eq_66631 * x22;
	v6->ptr0000 = x22;
	byte * x21;
	v6->ptr0008 = x21;
	struct Eq_66640 * v9 = (struct Eq_66640 *) ((char *) &sp->t0040 + 32);
	word64 x20;
	v9->qw0000 = x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_66651 * v12 = (struct Eq_66651 *) ((char *) &sp->t0040 + 48);
	struct Eq_66653 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_66653 *) ((char *) &sp->t0040 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x22->t0028.u1;
	word32 w9 = 0x14;
	byte * x1;
	x21 = x1;
	Eq_14 w20 = w0;
	x29->tFFFFFFD8.u1 = (size_t) x8;
	struct Eq_66624 * v19 = sp;
	v19->t0000.u1 = 0x00;
	v19->qw0008 = 0x00;
	sp->t0000.u0 = (byte) (byte) w9;
	Eq_14 x9;
	x9.u0 = 0x00052000;
	x9.u1 = (word32) x9 + 0x0675;
	x9 = *x9.u1;
	ui32 w8 = 29295;
	sp->t0010.u1 = (size_t) 0x00;
	sp->w0012 = (word16) w8;
	sp->t0001.u1 = (size_t) x9;
	sp->b000B = 0x00;
	x8.u1 = &sp->b0018;
	Eq_14 x0;
	x0.u1 = &sp->t0000.u0;
	Eq_14 w1 = w20;
	fn000000000001B540();
	byte v24 = *x21;
	w8 = (word32) v24;
	struct Eq_66729 * v26 = (struct Eq_66729 *) (x21 + 8);
	byte * x10 = v26->ptr0000;
	x9.u1 = v26->t0008.u1;
	ui32 w31 = w8 & 0x01;
	Eq_66741 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	Eq_14 x11 = x8 >> 1;
	bool Z;
	x1 = Test(NE,Z) ? x9 : x21 + 1;
	word64 x2 = Test(EQ,Z) ? x11 : x10;
	x0.u1 = &sp->b0018;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	Eq_66766 q0 = *x0.u1;
	sp->t0040.u1 = (size_t) x8;
	sp->t0030.u1 = (word128) q0;
	struct Eq_66775 * v35 = (struct Eq_66775 *) ((word32) x0 + 8);
	v35->qw0000 = 0x00;
	v35->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	byte v36 = sp->b0018;
	w8 = (word32) v36;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0028.u1;
		((real64) q0, x0, x1);
	}
	Eq_66680 v37;
	v37.u0 = sp->t0000.u0;
	w8 = (word32) v37;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0010.u1;
		((real64) q0, x0, x1);
	}
	Eq_66766 v38;
	v38.u0 = sp->t0030.u0;
	w8 = (word32) v38;
	x11.u0 = 0x00070000;
	x9.u1 = sp->t0040.u1;
	x11 = *((word32) x11 + 0x0F38);
	x10 = &sp->t0030.u0;
	x10 |= 0x01;
	w31 = w8 & 0x01;
	NZ.u0 = cond(w31);
	C = false;
	V = false;
	x11.u1 = (word32) x11 + 16;
	x1 = Test(EQ,Z) ? x10 : x9;
	x0.u1 = (word32) x19 + 16;
	*((word32) x19 + 8) = w20;
	*x19.u1 = x11;
	_ZNSt13runtime_errorC1EPKc();
	x9.u0 = 0x00070000;
	Eq_66766 v39;
	v39.u0 = sp->t0030.u0;
	w8 = (word32) v39;
	x9 = *((word32) x9 + 0x0D58);
	x9.u1 = (word32) x9 + 16;
	*x19.u1 = x9;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0040.u1;
		((real64) q0, x0, x1);
	}
	x8.u1 = x22->t0028.u1;
	x9.u1 = x29->tFFFFFFD8.u1;
	word64 x31 = x8 - x9;
	Eq_66886 NZCV;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_66903 * v42 = (struct Eq_66903 *) ((char *) &sp->t0040 + 48);
		x29 = v42->ptr0000;
		x30 = v42->qw0008;
		struct Eq_66912 * v43 = (struct Eq_66912 *) ((char *) &sp->t0040 + 32);
		x20 = v43->qw0000;
		x19.u1 = v43->t0008.u1;
		struct Eq_66921 * v44 = (struct Eq_66921 *) ((char *) &sp->t0040 + 16);
		x22 = v44->ptr0000;
		x21 = v44->ptr0008;
		sp = (struct Eq_66624 *) ((char *) &sp->t0040 + 64);
	}
}

// 000000000003AFB8: define _ZN8nlohmann6detail9exception4nameERKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEi
define _ZN8nlohmann6detail9exception4nameERKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEi
{
	Eq_14 x0;
	word32 w1;
	struct Eq_66931 * fp;
	struct Eq_66931 * sp = fp;
	sp -= 0xA0;
	struct Eq_66936 * v6 = (struct Eq_66936 *) ((char *) &sp->t0040 + 48);
	Eq_66938 x22;
	v6->t0000.u0 = (ui64) x22;
	struct Eq_66942 * x21;
	v6->ptr0008 = x21;
	struct Eq_66947 * v9 = (struct Eq_66947 *) ((char *) &sp->t0040 + 64);
	word64 x20;
	v9->qw0000 = x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_66958 * v12 = (struct Eq_66958 *) ((char *) &sp->t0040 + 80);
	struct Eq_66960 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_66960 *) ((char *) &sp->t0040 + 80);
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x21->t0028.u1;
	word32 w20 = w1;
	Eq_14 x1 = x0;
	x0.u0 = 0x00052000;
	x29->tFFFFFFD8.u1 = (size_t) x8;
	x0.u1 = (word32) x0 + 1664;
	x8.u1 = &sp->b0018;
	fn000000000001C140();
	x1.u0 = 0x00052000;
	x1.u1 = (word32) x1 + 0x0F;
	x0.u1 = &sp->b0018;
	ui32 w2 = 0x00 | 0x01;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	Eq_67004 q0 = *x0.u1;
	sp->t0040.u1 = (size_t) x8;
	sp->t0030.u1 = (word128) q0;
	struct Eq_67013 * v21 = (struct Eq_67013 *) ((word32) x0 + 8);
	v21->qw0000 = 0x00;
	v21->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	x8.u1 = &sp->b0000;
	word32 w0 = w20;
	x22 = &sp->b0000;
	_ZNSt6__ndk19to_stringEi();
	byte v24 = sp->b0000;
	ui32 w8 = (word32) v24;
	struct Eq_67041 * v27 = (struct Eq_67041 *) (&sp->b0000 + 8);
	word64 x10 = v27->qw0000;
	Eq_14 x9;
	x9.u1 = v27->t0008.u1;
	ui64 x11 = x22 | 0x01;
	ui32 w31 = w8 & 0x01;
	Eq_67057 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	uint64 x12 = x8 >> 1;
	bool Z;
	x1.u1 = Test(EQ,Z) ? x11 : x9;
	word64 x2 = Test(EQ,Z) ? x12 : x10;
	x0.u1 = &sp->t0030.u0;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	q0 = *x0.u1;
	x29->tFFFFFFD0.u1 = (size_t) x8;
	x29->tFFFFFFC0.u1 = (word128) q0;
	struct Eq_67088 * v36 = (struct Eq_67088 *) ((word32) x0 + 8);
	v36->qw0000 = 0x00;
	v36->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	x1.u0 = 0x00052000;
	x1.u1 = (word32) x1 + 1681;
	x0 = x29 - 0x40;
	w2 = 0x00 | 0x02;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	q0 = *x0.u1;
	*((word32) x19 + 16) = x8;
	x19.u1->u1 = q0;
	struct Eq_67123 * v37 = (struct Eq_67123 *) ((word32) x0 + 8);
	v37->qw0000 = 0x00;
	v37->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	Eq_67004 v38;
	v38.u0 = x29->tFFFFFFC0.u0;
	w8 = (word32) v38;
	if ((w8 & 0x01) != 0x00)
	{
		byte v39 = sp->b0000;
		w8 = (word32) v39;
		if ((w8 & 0x01) != 0x00)
		{
l000000000003B0A8:
			Eq_67004 v40;
			v40.u0 = sp->t0030.u0;
			w8 = (word32) v40;
			if ((w8 & 0x01) != 0x00)
			{
l000000000003B0B0:
				byte v41 = sp->b0018;
				w8 = (word32) v41;
				if ((w8 & 0x01) == 0x00)
					goto l000000000003B0C0;
l000000000003B0B8:
				x0.u1 = sp->t0028.u1;
				((real64) q0, x0, x1);
l000000000003B0C0:
				x8.u1 = x21->t0028.u1;
				x9.u1 = x29->tFFFFFFD8.u1;
				Eq_67236 x31 = x8 - x9;
				Eq_67238 NZCV;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
					__stack_chk_fail();
				else
				{
					struct Eq_67255 * v47 = (struct Eq_67255 *) ((char *) &sp->t0040 + 80);
					x29 = v47->ptr0000;
					x30 = v47->qw0008;
					struct Eq_67264 * v48 = (struct Eq_67264 *) ((char *) &sp->t0040 + 64);
					x20 = v48->qw0000;
					x19.u1 = v48->t0008.u1;
					struct Eq_67273 * v49 = (struct Eq_67273 *) ((char *) &sp->t0040 + 48);
					x22.u0 = v49->t0000.u0;
					x21 = v49->ptr0008;
					sp = (struct Eq_66931 *) ((char *) &sp->t0040 + 96);
					return;
				}
			}
l000000000003B104:
			x0.u1 = sp->t0040.u1;
			((real64) q0, x0, x1);
			byte v44 = sp->b0018;
			w8 = (word32) v44;
			if ((w8 & 0x01) != 0x00)
				goto l000000000003B0C0;
			goto l000000000003B0B8;
		}
	}
	else
	{
		x0.u1 = x29->tFFFFFFD0.u1;
		((real64) q0, x0, x1);
		byte v42 = sp->b0000;
		w8 = (word32) v42;
		if ((w8 & 0x01) == 0x00)
			goto l000000000003B0A8;
	}
	x0.u1 = sp->t0010.u1;
	((real64) q0, x0, x1);
	Eq_67004 v43;
	v43.u0 = sp->t0030.u0;
	w8 = (word32) v43;
	if ((w8 & 0x01) == 0x00)
		goto l000000000003B0B0;
	goto l000000000003B104;
}

// 000000000003B1B8: void type_error::~type_error()
void type_error::~type_error()
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_67292 * v7 = (struct Eq_67292 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	_ZNSt13runtime_errorD1Ev();
	x0 = x19;
	_ZNSt9exceptionD2Ev();
	struct Eq_67321 * v10 = (struct Eq_67321 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003B1F4: void ()
void ()
{
	ptr64 fp;
	ptr64 sp = fp;
	word64 x0 = x0 + 0x10;
	_ZNKSt13runtime_error4whatEv();
}

// 000000000003B1FC: void exception::~exception()
void exception::~exception()
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_67359 * v7 = (struct Eq_67359 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	_ZNSt13runtime_errorD1Ev();
	x0 = x19;
	_ZNSt9exceptionD2Ev();
	struct Eq_67388 * v10 = (struct Eq_67388 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003B238: define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm
define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm
{
	Eq_14 x0;
	struct Eq_67410 * fp;
	struct Eq_67410 * sp = fp;
	sp -= 0x70;
	struct Eq_67415 * v6 = (struct Eq_67415 *) ((char *) &sp->t0008 + 8);
	Eq_67417 x28;
	v6->t0000.u1 = (void *) x28;
	Eq_14 x27;
	v6->t0008.u1 = (size_t) x27;
	struct Eq_67426 * v9 = (struct Eq_67426 *) ((char *) &sp->t0008 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v9->t0008.u1 = (size_t) x25;
	struct Eq_67437 * v12 = (struct Eq_67437 *) ((char *) &sp->t0008 + 40);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_67448 * v15 = (struct Eq_67448 *) ((char *) &sp->t0008 + 56);
	Eq_14 x22;
	v15->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_67459 * v18 = (struct Eq_67459 *) ((char *) &sp->t0008 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v18->t0008.u1 = (size_t) x19;
	struct Eq_67470 * v21 = (struct Eq_67470 *) ((char *) &sp->t0008 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 88;
	Eq_14 v24 = *x0.u1;
	ui32 w8 = (word32) v24;
	Eq_14 x3;
	x20 = x3;
	Eq_14 x2;
	x21 = x2;
	x19 = x0;
	Eq_14 x1;
	x22 = x1;
	Eq_14 x8;
	Eq_67499 x31;
	Eq_67501 NZCV;
	bool C;
	if ((w8 & 0x01) != 0x00)
	{
		x27 = x8 >> 1;
		x31 = x27 - x22;
		NZCV.u0 = cond(x31);
		if (Test(ULT,C))
		{
l000000000003B424:
			x0 = x19;
			fn000000000001C380();
			goto l000000000003B42C;
		}
	}
	else
	{
		x27 = *((word32) x19 + 8);
		x31 = x27 - x22;
		NZCV.u0 = cond(x31);
		if (Test(ULT,C))
			goto l000000000003B424;
	}
	Eq_14 x9;
	if ((w8 & 0x01) != 0x00)
	{
		word32 w28 = 22;
	}
	else
	{
		x9 = *x19.u1;
		x9 &= ~0x01;
		x28 = x9 - 0x01;
	}
	x9 = x28 - x27;
	x31 = x9 - x20;
	NZCV.u0 = cond(x31);
	word32 ZC;
	bool Z;
	if (Test(ULT,C))
	{
		x23.u1 = x27 + x20;
		x9.u0 = ~0x11;
		Eq_67537 x10 = x23 - x28;
		x9 -= x28;
		x31 = x9 - x10;
		NZCV.u0 = cond(x31);
		if (Test(ULT,C))
		{
l000000000003B42C:
			x0 = x19;
			fn000000000001B2D0();
			grisu2<prim(Real,8)>::();
			return;
		}
		if ((w8 & 0x01) != 0x00)
			x8.u1 = (word32) x19 + 1;
		else
			x8 = *((word32) x19 + 16);
		sp->t0008.u1 = (size_t) x8;
		x8.u0 = ~0x19;
		x8 = SEQ(0x7FFF, (word48) x8);
		x31 = x28 - x8;
		NZCV.u0 = cond(x31);
		if (Test(ULE,ZC))
		{
			x8 = x28 << 1;
			x31 = x23 - x8;
			NZCV.u0 = cond(x31);
			x8.u1 = Test(ULT,C) ? x8 : x23;
			NZCV.u0 = cond(x8 - 0x17);
			if (Test(ULT,C))
			{
				word32 w24 = 0x17;
			}
			else
			{
				x8.u1 = (word32) x8 + 16;
				x24 = x8 & ~0x0F;
			}
		}
		else
			x24 = 0x00 | ~0x10;
		x0 = x24;
		_Znwm();
		x25 = x0;
		if (x22 != 0x00)
		{
			x1.u1 = sp->t0008.u1;
			x0 = x25;
			x2 = x22;
			x0 = memcpy(x0, x1, x2);
		}
		x26.u1 = x25 + x22;
		x0 = x26;
		x1 = x21;
		x2 = x20;
		x0 = memcpy(x0, x1, x2);
		x2 = x27 - x22;
		NZCV.u0 = cond(x2);
		if (Test(NE,Z))
		{
			x8.u1 = sp->t0008.u1;
			x0.u1 = x26 + x20;
			x1.u1 = x8 + x22;
			x0 = memcpy(x0, x1, x2);
		}
		NZCV.u0 = cond(x28 - 22);
		if (Test(NE,Z))
		{
			x0.u1 = sp->t0008.u1;
			word128 q0;
			((real64) q0, x0, x1);
		}
		x8 = x24 | 0x01;
		*x19.u1 = x8;
		x8.u1 = x25 + x23;
		struct Eq_67748 * v48 = (struct Eq_67748 *) ((word32) x19 + 8);
		v48->ptr0000 = (union Eq_108433 *) x23;
		v48->t0008.u1 = (size_t) x25;
	}
	else
	{
		if (x20 == 0x00)
			goto l000000000003B400;
		if ((w8 & 0x01) != 0x00)
			x23.u1 = (word32) x19 + 1;
		else
			x23 = *((word32) x19 + 16);
		x2 = x27 - x22;
		NZCV.u0 = cond(x2);
		x22.u1 = x23 + x22;
		if (Test(NE,Z))
		{
			x8.u1 = x23 + x27;
			x31 = x8 - x21;
			NZCV.u0 = cond(x31);
			x9.u1 = x21 + x20;
			bool v44 = Test(ULE,ZC);
			NZCV.u1 = 0x20000000;
			if (!v44)
				NZCV.u0 = cond(x22 - x21);
			x0.u1 = x22 + x20;
			x1 = x22;
			x21.u1 = Test(ULE,ZC) ? x9 : x21;
			x0 = memmove(x0, x1, x2);
		}
		x0 = x22;
		x1 = x21;
		x2 = x20;
		x0 = memmove(x0, x1, x2);
		Eq_14 v46 = *x19.u1;
		ui32 w9 = (word32) v46;
		x8.u1 = x27 + x20;
		if ((w9 & 0x01) != 0x00)
		{
			w9 = w8 << 1;
			*x19.u1 = (byte) w9;
			x8.u1 = x23 + x8;
		}
		else
		{
			*((word32) x19 + 8) = x8;
			x8.u1 = x23 + x8;
		}
	}
	x8.u1->u0 = 0x00;
l000000000003B400:
	x0 = x19;
	struct Eq_67565 * v37 = (struct Eq_67565 *) ((char *) &sp->t0008 + 88);
	x29 = v37->ptr0000;
	x30 = v37->qw0008;
	struct Eq_67574 * v38 = (struct Eq_67574 *) ((char *) &sp->t0008 + 72);
	x20.u1 = v38->t0000.u1;
	x19.u1 = v38->t0008.u1;
	struct Eq_67583 * v39 = (struct Eq_67583 *) ((char *) &sp->t0008 + 56);
	x22.u1 = v39->t0000.u1;
	x21.u1 = v39->t0008.u1;
	struct Eq_67592 * v40 = (struct Eq_67592 *) ((char *) &sp->t0008 + 40);
	x24.u1 = v40->t0000.u1;
	x23.u1 = v40->t0008.u1;
	struct Eq_67601 * v41 = (struct Eq_67601 *) ((char *) &sp->t0008 + 24);
	x26.u1 = v41->t0000.u1;
	x25.u1 = v41->t0008.u1;
	struct Eq_67610 * v42 = (struct Eq_67610 *) ((char *) &sp->t0008 + 8);
	x28.u1 = v42->t0000.u1;
	x27.u1 = v42->t0008.u1;
	sp = (struct Eq_67410 *) ((char *) &sp->t0008 + 0x0068);
}

// 000000000003B434: void grisu2<prim(Real,8)>::()
// Called from:
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm
void grisu2<prim(Real,8)>::()
{
	Eq_14 x16;
	ui32 w9;
	Eq_14 d0;
	struct Eq_67767 * fp;
	struct Eq_67767 * sp = fp;
	Eq_14 x14 = d0;
	Eq_14 x9 = x14 >> 52;
	word32 w13 = ~0x0432;
	Eq_14 x10 = 0x00 | 0x10000000000000;
	int32 w15 = w9 + w13;
	Eq_67785 NZCV;
	NZCV.u0 = cond(x9 - 0x00);
	Eq_14 x11 = x14 & 0xFFFFFFFFFFFFF;
	x10 = __bfm<word64>(x10, x14, 0, 0x0033);
	Eq_14 x13;
	bool Z;
	union Eq_14 * x15;
	x13.u1 = Test(NE,Z) ? x15 : (word32) x13 + 1;
	ui32 w8 = 0x00 | 0x01;
	Eq_14 x12;
	x12.u1 = Test(EQ,Z) ? x11 : x10;
	int32 w16 = w13 - 0x01;
	x15 = x12 << 1;
	Eq_14 x8 = __bfm<word64>(x8, x12, 63, 52);
	ui32 w17 = w13 - 0x02;
	Eq_14 w3;
	w3.u0 = ~0x00;
	Eq_14 x4 = x16;
	uint64 x3;
	do
	{
		x9.u1 = (char *) x4.u1 + x3;
		x10 = x8;
		x8 <<= 1;
		x4 = __bfm<word64>(x4, x9, 0, 31);
	} while ((w8 & 0x00) != 0x00);
	x14 >>= 53;
	NZCV.u0 = cond(x14 - 0x00);
	ui32 w14 = (word32) Test(NE,Z);
	NZCV.u0 = cond(x11 - 0x00);
	ui32 w11 = (word32) Test(EQ,Z);
	Eq_67852 NZ;
	NZ.u0 = cond(w14 & w11);
	bool C = false;
	bool V = false;
	x3 = x12 << 2;
	w11 = Test(NE,Z) ? w17 : w16;
	x15 = Test(NE,Z) ? x3 : x15;
	w16 = w11 - w9;
	w17 = ~0x00;
	uint64 x17;
	ui32 w12;
	do
	{
		x11.u1 = (char *) x13.u1 + x17;
		x14 = x12;
		x12 <<= 1;
		x13 = __bfm<word64>(x13, x11, 0, 31);
	} while ((w12 & 0x00) != 0x00);
	sp -= 0x30;
	struct Eq_67882 * v34 = (struct Eq_67882 *) ((char *) &sp->t0008 + 8);
	uint64 x20;
	v34->qw0000 = x20;
	uint64 x19;
	v34->qw0008 = x19;
	struct Eq_67893 * v37 = (struct Eq_67893 *) ((char *) &sp->t0008 + 24);
	ptr64 x29;
	v37->ptr0000 = x29;
	word64 x30;
	v37->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 24;
	x13 = x15 - 0x01;
	w15 = w16;
	w16 = 0x00 | ~0x3C;
	w17 = 13377;
	w17 = SEQ(0x01, (word16) w17);
	x13 <<= x15;
	w15 = w16 - w9;
	w3 = 0x00 | 0x0003FFFF;
	w16 = w15 * w17;
	w3.u1 = (char *) w3.u1 + w16;
	NZCV.u0 = cond(w16 - 0x00);
	ui32 w4 = 0x0133;
	word32 NV;
	w16 = Test(LT,NV) ? w3 : w16;
	NZCV.u0 = cond(w15 - 0x00);
	Eq_14 x5;
	x5.u0 = 0x00070000;
	word32 NZV;
	if (Test(LE,NZV))
		w15 = w4 + 0x01;
	x5 = *((word32) x5 + 0x0C70);
	w15 += w16 >> 18;
	w16 = w15 + 0x07;
	NZCV.u0 = cond(w15 - 0x00);
	w15 = Test(LT,NV) ? w16 : w15;
	w15 >>= 3;
	x15 = (union Eq_14 *) ((char *) x5.u1 + ((int64) w15 << 4));
	x16.u1 = x15->u1;
	struct Eq_67958 * v42 = x15 + (struct Eq_67957 *) 8;
	w3.u2 = v42->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
	w15 = v42->dw0004;
	x14 = __ubfm<word64>(x14, 31, 31);
	x12 &= 0xFFFFFFFE;
	x5 = x16 & 0xFFFFFFFF;
	x16 >>= 32;
	x8 &= 0xFFFFFFFE;
	x17 = x13 & 0xFFFFFFFF;
	w3.u1 = (word32) w3 + 64;
	x19 = x5 *64 x14;
	x14 = x16 *64 x14;
	x10 = __ubfm<word64>(x10, 31, 31);
	x13 >>= 32;
	uint64 x7 = x5 *64 x12;
	x12 = x16 *64 x12;
	ui32 w6 = (ui32) ((char *) w3.u1 + w11);
	x11 = x5 *64 x17;
	w4 = (ui32) ((char *) w3.u1 + w9);
	x9 = x5 *64 x8;
	x8 = x16 *64 x8;
	x14.u1 = (char *) x14.u1 + (x19 >> 32);
	x17 = x16 *64 x17;
	x20 = x5 *64 x13;
	x13 = x16 *64 x13;
	x3 = x5 *64 x10;
	x10 = x16 *64 x10;
	x16 = x12 & 0xFFFFFFFE;
	x12.u1 = (char *) x14.u1 + (x12 >> 32);
	x14 = x8 & 0xFFFFFFFE;
	x11 >>= 32;
	x16.u1 = (char *) x16.u1 + (x7 >> 32);
	x9.u1 = (char *) x14.u1 + (x9 >> 32);
	x11.u1 = (char *) x11.u1 + (uint64) w17;
	x10.u1 = (char *) x10.u1 + (x3 >> 32);
	x13.u1 = (char *) x13.u1 + (x20 >> 32);
	w14 = 0x00 | 0x80000000;
	x8.u1 = (char *) x10.u1 + (x8 >> 32);
	word32 w19;
	x10.u1 = (char *) x16.u1 + (uint64) w19;
	word32 w20;
	x11.u1 = (char *) x11.u1 + (uint64) w20;
	x9.u1 = (char *) x9.u1 + (uint64) w3;
	x13.u1 = (char *) x13.u1 + (x17 >> 32);
	x10.u1 = x10 + x14;
	x11.u1 = x11 + x14;
	x9.u1 = x9 + x14;
	x5.u1 = (char *) x12.u1 + (x10 >> 32);
	x10.u1 = (char *) x13.u1 + (x11 >> 32);
	x8.u1 = (char *) x8.u1 + (x9 >> 32);
	w15 = 0x00 - w15;
	x3 = (uint64) ((word32) x10 + 1);
	--x8;
	int32 * x2;
	*x2 = w15;
	struct Eq_67767 * v48 = sp;
	v48->t0000.u1 = (size_t) x8;
	v48->t0008.u1 = (size_t) x4;
	fn000000000001B780();
	struct Eq_68077 * v49 = (struct Eq_68077 *) ((char *) &sp->t0008 + 24);
	x29 = v49->ptr0000;
	x30 = v49->qw0008;
	struct Eq_68086 * v50 = (struct Eq_68086 *) ((char *) &sp->t0008 + 8);
	x20 = v50->qw0000;
	x19 = v50->qw0008;
	sp = (struct Eq_67767 *) ((char *) &sp->t0008 + 40);
}

// 000000000003B61C: void (Register (ptr64 char) x0, Register int32 x1, Register int32 x2, Register int32 x3, Register int32 x4)
void (char * x0, int32 x1, int32 x2, int32 x3, int32 x4)
{
	int32 w1;
	word64 * fp;
	word64 * sp = fp;
	sp += -8;
	word64 x23;
	*sp = x23;
	struct Eq_68112 * v7 = (struct Eq_68112 *) (sp + 2);
	int64 x22;
	v7->qw0000 = x22;
	int64 x21;
	v7->qw0008 = x21;
	struct Eq_68123 * v10 = (struct Eq_68123 *) (sp + 4);
	struct Eq_68125 * x20;
	v10->ptr0000 = x20;
	Eq_68129 x19;
	v10->t0008.u0 = (byte *) x19;
	struct Eq_68134 * v13 = (struct Eq_68134 *) (sp + 6);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = sp + 6;
	int32 w20 = w1;
	x22 = (int64) w20;
	x19 = x0;
	int32 w2;
	x21 = x22 + (int64) w2;
	Eq_68160 NZCV;
	int32 w21;
	int32 w4;
	word32 NZV;
	ui32 w22;
	int32 w8;
	if ((w2 & 0x00) != 0x00)
	{
		NZCV.u0 = cond(w21 - w4);
		if (Test(LE,NZV))
		{
			x0.u0 = x19.u0 + x22;
			x2.u1 = (int64) w2;
			w1 = 0x00 | 0x30;
			x20 = (struct Eq_68125 *) (x19.u0 + (int64) w21);
			w22 = 0x00 | 0x30;
			x0 = memset(x0, (int32) x1, x2);
			w8 = 0x2E;
			x19.u0[x21] = (byte) w8;
			x20->b0001 = (byte) w22;
			x0.u0 = &x20->b0001 + 1;
			goto l000000000003B810;
		}
	}
	NZCV.u0 = cond(w21 - 0x01);
	word32 NV;
	Eq_68241 x8;
	Eq_68245 w9;
	if (Test(GE,NV))
	{
		NZCV.u0 = cond(w21 - w4);
		if (Test(LE,NZV))
		{
			x20 = (struct Eq_68125 *) (x19.u0 + x22);
			x8.u0 = x19.u0 + (int64) w21;
			x19.u0 += x21;
			w9 = 0x00 - w2;
			x0.u0 = &x8.u1->b0001;
			x2.u1 = (int64) w9;
			x1 = x19;
			x0 = memmove(x0, x1, x2);
			w8 = 0x2E;
			*x19.u0 = (byte) (byte) w8;
			x0.u0 = &x20->b0001;
			goto l000000000003B810;
		}
	}
	int32 w3;
	NZCV.u0 = cond(w21 - w3);
	if (Test(GT,NZV))
	{
		NZCV.u0 = cond(w21 - 0x00);
		if (Test(LE,NZV))
		{
			w8 = 0x00 | 0x02;
			w8 -= w21;
			int32 w23 = 0x00 - w21;
			x21 = (int64) w8;
			x0.u0 = x19.u0 + x21;
			x2.u1 = (int64) w20;
			x1 = x19;
			x0 = memmove(x0, x1, x2);
			w8 = 0x2E30;
			x0 = x19;
			x0->u0 = (word16) w8;
			x0.u0 = &x0.u1->b0002;
			x2.u1 = (int64) w23;
			w1 = 0x00 | 0x30;
			x0 = memset(x0, (int32) x1, x2);
			x8 = x21 + x22;
			x0.u0 = x19 + x8;
			goto l000000000003B810;
		}
	}
	w8 = w20 - 0x01;
	NZCV.u0 = cond(w8);
	w22 = 0x00 | 0x01;
	bool Z;
	if (Test(EQ,Z))
		w8 = 0x00 | 0x01;
	else
	{
		x0.u0 = &x19.u1->b0002;
		x1.u0 = &x19.u1->b0001;
		x2.u1 = (int64) w8;
		x0 = memmove(x0, x1, x2);
		w8 = 0x2E;
		w9 = w20 + 0x01;
		x19.u1->b0001 = (byte) w8;
		x8.u0 = (int64) w9;
	}
	x8.u0 = x19 + x8;
	w9.u0 = 101;
	uint32 w10 = w22 - w21;
	Eq_68338 w11 = w21 - 0x01;
	NZCV.u0 = cond(w11);
	ui32 w12 = 0x2B;
	word32 w13 = 0x2D;
	*x8.u0 = (byte) w9;
	w9 = Test(LT,NV) ? w10 : w11;
	w12 = Test(LT,NV) ? w13 : w12;
	NZCV.u0 = cond(w9 - 0x09);
	x8.u1->b0001 = (byte) w12;
	word32 ZC;
	if (Test(ULE,ZC))
	{
		w10 = 0x00 | 0x30;
		w9 = (word32) w9 + 48;
		x8.u1->b0002 = (byte) w10;
	}
	else
	{
		NZCV.u0 = cond(w9 - 99);
		uint64 x10;
		if (Test(UGT,ZC))
		{
			w10 = 0x851F;
			w10 = SEQ(0x51EB, (word16) w10);
			x10 = (uint64) (w9 * w10);
			w11.u0 = 100;
			x10 >>= 37;
			w9 -= w10 * w11;
			w11.u0 = 0xCCCD;
			w11 = SEQ(0xCCCC, (word16) w11);
			w10 += 0x30;
			uint64 x11 = (uint64) (w9 * w11);
			x8.u1->b0002 = (byte) w10;
			w10 = 0x0A;
			x11 >>= 35;
			w9 -= w11 * w10;
			w9 |= 0x30;
			w10 = w11 | 0x30;
			x8.u1->b0004 = (byte) w9;
			w9 = 0x00 | 0x02;
			x8.u1->b0003 = (byte) w10;
l000000000003B808:
			Eq_68382 x9;
			x8.u0 = x8 + x9;
			x0.u0 = x8 + 0x03;
l000000000003B810:
			struct Eq_68201 * v29 = (struct Eq_68201 *) (sp + 6);
			x29 = v29->ptr0000;
			x30 = v29->qw0008;
			struct Eq_68210 * v30 = (struct Eq_68210 *) (sp + 4);
			x20 = v30->ptr0000;
			x19.u0 = v30->t0008.u0;
			struct Eq_68219 * v31 = (struct Eq_68219 *) (sp + 2);
			x22 = v31->qw0000;
			x21 = v31->qw0008;
			x23 = *sp;
			sp += 8;
			return;
		}
		w11.u0 = 0xCCCD;
		w10 = w9 & 0xFF;
		w11 = SEQ(0xCCCC, (word16) w11);
		x10 = (uint64) (w10 * w11);
		w12 = 0x0A;
		x10 >>= 35;
		w11 = w10 + 0x30;
		w9 -= w10 * w12;
		x8.u1->b0002 = (byte) w11;
		w9 |= 0x30;
	}
	x8.u1->b0003 = (byte) w9;
	w9 = 0x00 | 0x01;
	goto l000000000003B808;
}

// 000000000003B824: define _ZN8nlohmann6detail9dtoa_impl16grisu2_digit_genEPcRiS3_NS1_5diyfpES4_S4_
define _ZN8nlohmann6detail9dtoa_impl16grisu2_digit_genEPcRiS3_NS1_5diyfpES4_S4_
{
	word32 w20;
	uint64 x5;
	uint64 x3;
	Eq_68493 x12;
	Eq_68492 x10;
	struct Eq_68452 * fp;
	struct Eq_68452 * sp = fp;
	sp = (struct Eq_68452 *) ((char *) sp - 32);
	word64 x22;
	sp->qw0000 = x22;
	word64 x21;
	sp->qw0008 = x21;
	struct Eq_68465 * v8 = (struct Eq_68465 *) (&sp->qw0008 + 1);
	int64 x20;
	v8->qw0000 = x20;
	uint64 x19;
	v8->qw0008 = x19;
	uint32 w9 = sp->dw0028;
	Eq_68481 x11;
	x11.u0 = sp->t0020.u0;
	ui32 w10 = 0x00 | 0x01;
	uint32 w16 = 51711;
	uint32 w12 = 0x00 - w9;
	Eq_68494 x9 = x10 << x12;
	w16 = SEQ(15258, (word16) w16);
	Eq_68499 x15 = x11 >> x12;
	uint64 x13 = x9 - 0x01;
	Eq_68499 x14 = x11 - x3;
	Eq_68481 x8 = x11 - x5;
	Eq_68512 NZCV;
	uint32 w15;
	NZCV.u0 = cond(w15 - w16);
	x10 = x13 & x11;
	word32 ZC;
	int32 w17;
	if (Test(UGT,ZC))
	{
		++w16;
		w17 = 0x0A;
	}
	else
	{
		w16 = 0xE0FF;
		w16 = SEQ(0x05F5, (word16) w16);
		NZCV.u0 = cond(w15 - w16);
		if (Test(UGT,ZC))
		{
			++w16;
			w17 = 0x09;
		}
		else
		{
			w16 = 0x967F;
			w16 = SEQ(0x98, (word16) w16);
			NZCV.u0 = cond(w15 - w16);
			if (Test(UGT,ZC))
			{
				++w16;
				w17 = 0x00 | 0x08;
			}
			else
			{
				w16 = 16959;
				w16 = SEQ(0x0F, (word16) w16);
				NZCV.u0 = cond(w15 - w16);
				if (Test(UGT,ZC))
				{
					++w16;
					w17 = 0x00 | 0x07;
				}
				else
				{
					w16 = w15 >> 5;
					NZCV.u0 = cond(w16 - 0x0C34);
					if (Test(UGT,ZC))
					{
						w16 = 34463;
						w16 = SEQ(0x01, (word16) w16);
						++w16;
						w17 = 0x00 | 0x06;
					}
					else
					{
						w16 = w15 >> 4;
						NZCV.u0 = cond(w16 - 0x0270);
						if (Test(UGT,ZC))
						{
							w16 = 10000;
							w17 = 0x05;
						}
						else
						{
							NZCV.u0 = cond(w15 - 999);
							if (Test(UGT,ZC))
							{
								w16 = 1000;
								w17 = 0x00 | 0x04;
							}
							else
							{
								NZCV.u0 = cond(w15 - 99);
								if (Test(UGT,ZC))
								{
									w16 = 100;
									w17 = 0x00 | 0x03;
								}
								else
								{
									NZCV.u0 = cond(w15 - 0x09);
									w16 = 0x0A;
									w17 = 0x00 | 0x01;
									w16 = Test(UGT,ZC) ? w16 : 0x00 + 0x01;
									if (Test(ULE,ZC))
										++w17;
								}
							}
						}
					}
				}
			}
		}
	}
	uint32 w4 = 0xCCCD;
	w4 = SEQ(0xCCCC, (word16) w4);
	int32 * x1;
	byte (* x0)[];
	bool C;
	uint32 * x2;
	Eq_68547 x31;
	Eq_68561 x16;
	Eq_68618 x17;
	word32 NZV;
	do
	{
		uint32 w6 = w15 /u w16;
		int32 v30 = *x1;
		x20 = (int64) v30;
		w15 -= w6 * w16;
		uint32 w21 = w6 + 0x30;
		Eq_68583 x6 = x15 << x12;
		x19 = x6 + x10;
		int32 w22 = w20 + 0x01;
		uint64 x7 = x14 - x19;
		NZCV.u0 = cond(x7);
		*x1 = w22;
		x0[x20] = (byte) w21;
		if (Test(UGE,C))
		{
			w9 = *x2;
			x31 = x19 - x8;
			NZCV.u0 = cond(x31);
			w9 += w17;
			--w9;
			*x2 = w9;
			if (Test(ULT,C))
			{
				w9 = w16;
				x9 <<= x12;
				x31 = x7 - x9;
				NZCV.u0 = cond(x31);
				if (Test(UGE,C))
				{
					int32 v49 = *x1;
					x14.u0 = (int64) v49;
					x15 = x10 + x9;
					x13 = 0x00 - x3;
					x16 = 0x00 - x5;
					x17 = x10 + x6;
					x10 = x15 + x6;
					x12 = x5 - x11;
					x13 -= x10;
					--x14;
					x15 = x16 - x17;
					do
					{
						x31 = x10 - x8;
						NZCV.u0 = cond(x31);
						if (Test(UGE,C))
						{
							x16 = x15 + x11;
							x17 = x12 + x10;
							x31 = x16 - x17;
							NZCV.u0 = cond(x31);
							if (Test(ULE,ZC))
								break;
						}
						byte v50 = (byte) *(x0 + x14);
						w16 = (word32) v50;
						x31 = x10 - x8;
						NZCV.u0 = cond(x31);
						--w16;
						*(x0 + x14) = (word64) (byte) w16;
						if (Test(UGE,C))
							break;
						x16 = (word32) x11 + x13;
						x11 -= x9;
						x31 = x16 - x9;
						NZCV.u0 = cond(x31);
						x10 += x9;
					} while (Test(UGE,C));
				}
			}
			goto l000000000003BAEC;
		}
		--w17;
		x16.u1 = (uint64) (w16 * w4);
		NZCV.u0 = cond(w17 - 0x00);
		x16 >>= 35;
	} while (Test(GT,NZV));
	w16 = 0x00;
	do
	{
		x11 = x8;
		int32 v40 = *x1;
		x8.u0 = (int64) v40;
		x10 = (word32) x10 + (x10 << 2);
		x10 <<= 1;
		x15 = x14;
		word32 w8;
		w17 = w8 + 0x01;
		*x1 = w17;
		x17 = x10 >> x12;
		x14 = (word32) x14 + (x14 << 2);
		w17 += 0x30;
		*(x0 + x8) = (word64) (byte) w17;
		x8 = (word32) x11 + (x11 << 2);
		x14 <<= 1;
		x10 &= x13;
		x8 <<= 1;
		x17 = x14 - x10;
		NZCV.u0 = cond(x17);
		--w16;
	} while (Test(ULT,C));
	w12 = *x2;
	x31 = x10 - x8;
	NZCV.u0 = cond(x31);
	w12 += w16;
	*x2 = w12;
	if (Test(ULT,C))
	{
		x31 = x17 - x9;
		NZCV.u0 = cond(x31);
		if (Test(UGE,C))
		{
			int32 v45 = *x1;
			x16.u0 = (int64) v45;
			w17 = 0x0A;
			x14 = 0x00 - x9;
			x1 = (int32 *) ~0x09;
			x2 = 0x00 - x10;
			x15 = (word32) x14 + x15 *64 x17;
			x12.u0 = 0x00;
			x13 = x9 + x10;
			x14 = x11 *64 x1;
			x10 = x15 - x10;
			x15 = x16 - 0x01;
			x11 = (char *) x2 + x11 *64 x17;
			do
			{
				x31 = x13 - x8;
				NZCV.u0 = cond(x31);
				if (Test(UGE,C))
				{
					x16 = x11 + x12;
					x17 = (word32) x14 + x13;
					x31 = x16 - x17;
					NZCV.u0 = cond(x31);
					if (Test(ULE,ZC))
						break;
				}
				byte v46 = (byte) *(x0 + x15);
				w16 = (word32) v46;
				x31 = x13 - x8;
				NZCV.u0 = cond(x31);
				--w16;
				*(x0 + x15) = (word64) (byte) w16;
				if (Test(UGE,C))
					break;
				x16 = x10 + x12;
				x12 -= x9;
				x31 = x16 - x9;
				NZCV.u0 = cond(x31);
				x13 = (uint64) ((word32) x9 + x13);
			} while (Test(UGE,C));
		}
	}
l000000000003BAEC:
	struct Eq_68652 * v47 = (struct Eq_68652 *) (&sp->qw0008 + 1);
	x20 = v47->qw0000;
	x19 = v47->qw0008;
	struct Eq_68452 * v48 = sp;
	x22 = v48->qw0000;
	x21 = v48->qw0008;
	sp = (struct Eq_68452 *) &sp->t0020.u0;
}

// 000000000003BAF8: define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE10json_value7destroyENS_6detail7value_tE
define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE10json_value7destroyENS_6detail7value_tE
{
	ui32 w1;
	struct Eq_68837 * fp;
	struct Eq_68837 * sp = fp;
	sp = (struct Eq_68837 *) ((char *) sp - 48);
	Eq_68841 x22;
	sp->t0000.u1 = (struct Eq_108437 *) x22;
	Eq_68841 x21;
	sp->t0008.u1 = (struct Eq_108437 *) x21;
	struct Eq_68850 * v8 = (struct Eq_68850 *) ((char *) &sp->t0008 + 8);
	Eq_68841 x20;
	v8->t0000.u1 = (struct Eq_108437 *) x20;
	Eq_68841 x19;
	v8->t0008.u1 = (struct Eq_108437 *) x19;
	struct Eq_68861 * v11 = (struct Eq_68861 *) ((char *) &sp->t0008 + 24);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 24;
	ui32 w8 = w1 & 0xFF;
	Eq_68879 NZCV;
	NZCV.u0 = cond(w8 - 0x03);
	Eq_68841 x0;
	x19 = x0;
	bool Z;
	word128 q0;
	Eq_68841 x1;
	if (Test(NE,Z))
	{
		NZCV.u0 = cond(w8 - 0x02);
		if (Test(EQ,Z))
		{
			x20.u1 = x19.u1->t0000.u1;
			x21.u1 = x20.u1->t0000.u1;
			if (x21 != 0x00)
			{
				x22.u1 = x20.u1->t0008.u1;
				x0 = x21;
				ui64 x31 = x22 - x21;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					do
					{
						x22.u1 = (word32) x22 - 16;
						Eq_68841 v27;
						v27.u0 = x22.u1->t0000.u0;
						w1 = (word32) v27;
						x0.u1 = &x22.u1->t0008.u0;
						fn000000000001C590();
						x31 = x21 - x22;
						NZCV.u0 = cond(x31);
					} while (Test(NE,Z));
					x0.u1 = x20.u1->t0000.u1;
				}
				x20.u1->t0008.u1 = (struct Eq_108437 *) x21;
				((real64) q0, x0, x1);
				x20.u1 = x19.u1->t0000.u1;
			}
			x0 = x20;
l000000000003BB98:
			struct Eq_68952 * v20 = (struct Eq_68952 *) ((char *) &sp->t0008 + 24);
			x29 = v20->ptr0000;
			x30 = v20->qw0008;
			struct Eq_68961 * v21 = (struct Eq_68961 *) ((char *) &sp->t0008 + 8);
			x20.u1 = v21->t0000.u1;
			x19.u1 = v21->t0008.u1;
			struct Eq_68837 * v22 = sp;
			x22.u1 = v22->t0000.u1;
			x21.u1 = v22->t0008.u1;
			sp = (struct Eq_68837 *) ((char *) &sp->t0008 + 40);
			((real64) q0, x0, x1);
			return;
		}
		NZCV.u0 = cond(w8 - 0x01);
		if (Test(NE,Z))
		{
			struct Eq_68913 * v23 = (struct Eq_68913 *) ((char *) &sp->t0008 + 24);
			x29 = v23->ptr0000;
			x30 = v23->qw0008;
			struct Eq_68922 * v24 = (struct Eq_68922 *) ((char *) &sp->t0008 + 8);
			x20.u1 = v24->t0000.u1;
			x19.u1 = v24->t0008.u1;
			struct Eq_68837 * v25 = sp;
			x22.u1 = v25->t0000.u1;
			x21.u1 = v25->t0008.u1;
			sp = (struct Eq_68837 *) ((char *) &sp->t0008 + 40);
			return;
		}
		x0.u1 = x19.u1->t0000.u1;
		x1.u1 = x0.u1->t0008.u1;
		fn000000000001C130();
	}
	else
	{
		x0.u1 = x19.u1->t0000.u1;
		Eq_68841 v18;
		v18.u0 = x0.u1->t0000.u0;
		w8 = (word32) v18;
		if ((w8 & 0x01) == 0x00)
			goto l000000000003BB98;
		x0.u1 = x0.u1->t0010.u1;
		((real64) q0, x0, x1);
	}
	x0.u1 = x19.u1->t0000.u1;
	goto l000000000003BB98;
}

// 000000000003BBB8: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE
{
	struct Eq_69032 * fp;
	struct Eq_69032 * sp = fp;
	struct Eq_69034 * x1;
	if (x1 == null)
		return;
	sp = (struct Eq_69032 *) ((char *) sp - 32);
	struct Eq_69034 * x20;
	sp->ptr0000 = x20;
	struct Eq_69034 * x19;
	sp->ptr0008 = x19;
	struct Eq_69048 * v9 = (struct Eq_69048 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	x19 = x1;
	x1 = x1->ptr0000;
	struct Eq_69034 * x0;
	x20 = x0;
	fn000000000001C130();
	x1 = x19->ptr0008;
	x0 = x20;
	fn000000000001C130();
	byte v12 = x19->b0038;
	word32 w1 = (word32) v12;
	x0 = &x19->b0038 + 8;
	fn000000000001C590();
	byte v14 = x19->b0020;
	ui32 w8 = (word32) v14;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	struct Eq_69089 * v16 = (struct Eq_69089 *) ((char *) &sp->ptr0008 + 8);
	x29 = v16->ptr0000;
	x30 = v16->qw0008;
	x0 = x19;
	struct Eq_69032 * v17 = sp;
	x20 = v17->ptr0000;
	x19 = v17->ptr0008;
	sp = (struct Eq_69032 *) ((char *) &sp->ptr0008 + 24);
	((real64) q0, x0, x1);
}

// 000000000003BC14: define _ZNSt6__ndk127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_
define _ZNSt6__ndk127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_
{
	bool Z;
	ui64 x0;
	Eq_69126 x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_69128 x31 = x1 - x0;
	Eq_69130 NZCV;
	NZCV.u0 = cond(x31);
	word32 w8 = (word32) Test(EQ,Z);
	x1.u2->b0018 = (byte) w8;
	if (Test(NE,Z))
	{
		ui32 w11 = 0x00 | 0x01;
		do
		{
			Eq_69126 x9;
			x9.u1 = x1.u2->t0010.u1;
			Eq_69126 x10 = x9;
			x10.u1 = &x10.u2->b0018;
			Eq_69126 v13;
			v13.u0 = *x10.u1;
			w8 = (word32) v13;
			if (w8 != 0x00)
				return;
			Eq_69126 x8;
			x8.u1 = x9.u2->t0010.u1;
			Eq_69126 x12 = *x8;
			x31 = x12 - x9;
			NZCV.u0 = cond(x31);
			Eq_69126 x11;
			ui32 w9;
			ui32 w12;
			word32 w13;
			if (Test(NE,Z))
			{
				if (x12 == 0x00)
				{
l000000000003BC88:
					x11 = *x9;
					x31 = x11 - x1;
					NZCV.u0 = cond(x31);
					if (Test(EQ,Z))
					{
						x10.u1 = x1.u2->t0008.u1;
						*x9 = x10;
						if (x10 != 0x00)
						{
							x10.u2->t0010.u1 = (byte *) x9;
							x8.u1 = x9.u2->t0010.u1;
						}
						x1.u2->t0010.u1 = (byte *) x8;
						x8.u1 = x9.u2->t0010.u1;
						w11 = 0x00 | 0x08;
						x10 = *x8;
						x31 = x10 - x9;
						NZCV.u0 = cond(x31);
						x10.u1 = Test(EQ,Z) ? 0x00 : x11;
						*(x8 + x10) = (word64) x1;
						x1.u2->t0008.u1 = (byte *) x9;
						x9.u2->t0010.u1 = (byte *) x1;
						x8.u1 = x1.u2->t0010.u1;
						x10.u1 = &x1.u2->b0018;
					}
					w9 = 0x00 | 0x01;
					*x10.u1 = (byte) (byte) w9;
					x9.u1 = x8.u2->t0008.u1;
					x8.u2->b0018 = 0x00;
					x10 = *x9;
					x8.u2->t0008.u1 = (byte *) x10;
					if (x10 != 0x00)
						x10.u2->t0010.u1 = (byte *) x8;
					x10.u1 = x8.u2->t0010.u1;
					w12 = 0x00 | 0x08;
					x9.u2->t0010.u1 = (byte *) x10;
					x10.u1 = x8.u2->t0010.u1;
					x11 = *x10;
					x31 = x11 - x8;
					NZCV.u0 = cond(x31);
					x11.u1 = Test(EQ,Z) ? 0x00 : x12;
					*(x10 + x11) = (word64) x9;
					*x9 = x8;
					x8.u2->t0010.u1 = (byte *) x9;
					return;
				}
				x12.u1 = &x12.u2->b0018;
				Eq_69126 v17;
				v17.u0 = *x12.u1;
				w13 = (word32) v17;
				if (w13 != 0x00)
					goto l000000000003BC88;
				goto l000000000003BC68;
			}
			x12.u1 = x8.u2->t0008.u1;
			if (x12 == 0x00)
			{
l000000000003BD20:
				x11 = *x9;
				x31 = x11 - x1;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					x10.u1 = x9.u2->t0008.u1;
					x11 = *x10;
					x9.u2->t0008.u1 = (byte *) x11;
					if (x11 != 0x00)
					{
						x11.u2->t0010.u1 = (byte *) x9;
						x8.u1 = x9.u2->t0010.u1;
					}
					x10.u2->t0010.u1 = (byte *) x8;
					x8.u1 = x9.u2->t0010.u1;
					w12 = 0x00 | 0x08;
					x11 = *x8;
					x31 = x11 - x9;
					NZCV.u0 = cond(x31);
					x11.u1 = Test(EQ,Z) ? 0x00 : x12;
					*(x8 + x11) = (word64) x10;
					*x10 = x9;
					x9.u2->t0010.u1 = (byte *) x10;
					x8.u1 = x10.u2->t0010.u1;
					x10.u1 = &x10.u2->b0018;
				}
				w9 = 0x00 | 0x01;
				*x10.u1 = (byte) (byte) w9;
				x9 = *x8;
				x8.u2->b0018 = 0x00;
				x10.u1 = x9.u2->t0008.u1;
				*x8 = x10;
				if (x10 != 0x00)
					x10.u2->t0010.u1 = (byte *) x8;
				x10.u1 = x8.u2->t0010.u1;
				w12 = 0x00 | 0x08;
				x9.u2->t0010.u1 = (byte *) x10;
				x10.u1 = x8.u2->t0010.u1;
				x11 = *x10;
				x31 = x11 - x8;
				NZCV.u0 = cond(x31);
				x11.u1 = Test(EQ,Z) ? 0x00 : x12;
				*(x10 + x11) = (word64) x9;
				x9.u2->t0008.u1 = (byte *) x8;
				x8.u2->t0010.u1 = (byte *) x9;
				return;
			}
			x12.u1 = &x12.u2->b0018;
			Eq_69126 v18;
			v18.u0 = *x12.u1;
			w13 = (word32) v18;
			if (w13 != 0x00)
				goto l000000000003BD20;
l000000000003BC68:
			x31 = x8 - x0;
			NZCV.u0 = cond(x31);
			w9 = (word32) Test(EQ,Z);
			x1 = x8;
			*x10.u1 = (byte) (byte) w11;
			x8.u2->b0018 = (byte) w9;
			*x12.u1 = (byte) (byte) w11;
		} while (Test(NE,Z));
	}
}

<anonymous> g_t3BC48 = <code>; // 000000000003BC48
// 000000000003BDBC: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_
{
	struct Eq_69425 * fp;
	struct Eq_69425 * sp = fp;
	sp -= 0x70;
	Eq_69429 x27;
	sp->t0010.u1 = (struct Eq_108441 *) x27;
	struct Eq_69434 * v7 = (struct Eq_69434 *) ((char *) &sp->t0010 + 16);
	ui64 x26;
	v7->qw0000 = x26;
	ui64 x25;
	v7->qw0008 = x25;
	struct Eq_69445 * v10 = (struct Eq_69445 *) ((char *) &sp->t0010 + 32);
	Eq_69429 x24;
	v10->t0000.u1 = (struct Eq_108441 *) x24;
	struct Eq_69451 * x23;
	v10->ptr0008 = x23;
	struct Eq_69456 * v13 = (struct Eq_69456 *) ((char *) &sp->t0010 + 48);
	Eq_14 x22;
	v13->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v13->t0008.u1 = (size_t) x21;
	struct Eq_69467 * v16 = (struct Eq_69467 *) ((char *) &sp->t0010 + 64);
	Eq_69429 x20;
	v16->t0000.u1 = (struct Eq_108441 *) x20;
	Eq_69429 x19;
	v16->t0008.u1 = (struct Eq_108441 *) x19;
	struct Eq_69478 * v19 = (struct Eq_69478 *) ((char *) &sp->t0010 + 80);
	ptr64 x29;
	v19->ptr0000 = x29;
	word64 x30;
	v19->qw0008 = x30;
	x29 = (char *) &sp->t0010 + 80;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_69429 x8;
	x8.u1 = x23->t0028.u1;
	Eq_14 x1;
	x21 = x1;
	Eq_69429 x0;
	x20 = x0;
	sp->t0008.u1 = (struct Eq_108441 *) x8;
	byte v25 = (byte) *x1.u1;
	ui32 w8 = (word32) v25;
	struct Eq_69510 * v28 = (struct Eq_69510 *) ((word32) x1 + 8);
	Eq_14 x10;
	x10.u1 = v28->t0000.u1;
	Eq_69429 x9;
	x9.u1 = v28->t0008.u1;
	ui32 w31 = w8 & 0x01;
	Eq_69523 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	Eq_69429 x11 = x8 >> 1;
	bool Z;
	x1.u1 = Test(NE,Z) ? x9 : (word32) x1 + 1;
	Eq_14 x2;
	x2.u1 = Test(EQ,Z) ? x11 : x10;
	x0.u1 = sp;
	fn000000000001C420();
	x24.u1 = x20.u1->t0008.u1;
	if (x24 != 0x00)
	{
		x25 = x24 - 0x01;
		x19 = x0;
		x26 = x25 & x24;
		NZ.u0 = cond(x26);
		C = false;
		V = false;
		struct Eq_69558 * x31;
		Eq_69560 NZCV;
		if (Test(NE,Z))
		{
			x31 = x19 - x24;
			NZCV.u0 = cond(x31);
			x27 = x19;
			if (Test(UGE,C))
			{
				x8 = x19 /u x24;
				x27 = x19 - x8 *64 x24;
			}
		}
		else
			x27 = x25 & x19;
		x8.u1 = x20.u1->t0000.u1;
		x8.u1 = *(x8 + x27);
		if (x8 != 0x00)
		{
			x20.u1 = x8.u1->t0000.u1;
			if (x20 != 0x00)
			{
				Eq_14 v43 = *x21.u1;
				w8 = (word32) v43;
				struct Eq_69646 * v44 = (struct Eq_69646 *) ((word32) x21 + 8);
				x10.u1 = v44->t0000.u1;
				x11.u1 = v44->t0008.u1;
				x9.u1 = (word32) x21 + 1;
				uint64 x12 = x8 >> 1;
				w31 = w8 & 0x01;
				NZ.u0 = cond(w31);
				C = false;
				V = false;
				x21.u1 = Test(EQ,Z) ? x12 : x10;
				x22.u1 = Test(EQ,Z) ? x9 : x11;
				do
				{
					x8.u1 = x20.u1->t0008.u1;
					x31 = x8 - x19;
					NZCV.u0 = cond(x31);
					if (Test(EQ,Z))
					{
						x8 = x20;
						x8.u1 = x8 + (struct Eq_69670 *) 16;
						Eq_69429 v47;
						v47.u0 = x8.u1->t0000.u0;
						ui32 w10 = (word32) v47;
						x11.u1 = x8.u1->t0008.u1;
						x9 = x10 >> 1;
						w31 = w10 & 0x01;
						NZ.u0 = cond(w31);
						x11.u1 = Test(EQ,Z) ? x9 : x11;
						x31 = x11 - x21;
						NZCV.u0 = cond(x31);
						if (Test(EQ,Z))
						{
							x11.u1 = x20.u1->t0020.u1;
							w31 = w10 & 0x01;
							NZ.u0 = cond(w31);
							C = false;
							V = false;
							x0.u1 = Test(NE,Z) ? x11 : x8 + (struct Eq_69705 *) 0x01;
							if ((w10 & 0x01) != 0x00)
							{
								if (x21 != 0x00)
								{
									x8.u1 = x8 + (struct Eq_69716 *) 0x01;
									x9 = 0x00 - x9;
									x10 = x22;
									do
									{
										Eq_69429 v49;
										v49.u0 = x8.u1->t0000.u0;
										word32 w11 = (word32) v49;
										byte v51 = (byte) *x10.u1;
										word32 w12 = (word32) v51;
										NZCV.u0 = cond(w11 - w12);
										if (Test(NE,Z))
											goto l000000000003BF10;
										x8.u1 = x8 + (struct Eq_69720 *) 0x01;
										x9.u1 = x9 + (struct Eq_69722 *) 0x01;
										NZCV.u0 = cond(x9);
										x10.u1 = (word32) x10 + 1;
									} while (Test(NE,Z));
								}
								break;
							}
							if (x21 == 0x00)
								break;
							x1 = x22;
							x2 = x21;
							x0 = SEQ(0x00, memcmp(x0, x1, x2));
							word32 w0;
							if (w0 == 0x00)
								break;
						}
						goto l000000000003BF10;
					}
					if (x26 != 0x00)
					{
						x31 = x8 - x24;
						NZCV.u0 = cond(x31);
						if (Test(ULT,C))
							goto l000000000003BF08;
						x9 = x8 /u x24;
						x8 -= x9 *64 x24;
						x31 = x8 - x27;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l000000000003BF34;
					}
					else
					{
						x8 &= x25;
l000000000003BF08:
						x31 = x8 - x27;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l000000000003BF34;
					}
l000000000003BF10:
					x20.u1 = x20.u1->t0000.u1;
				} while (x20 != 0x00);
			}
l000000000003BF38:
			x8.u1 = x23->t0028.u1;
			x9.u1 = sp->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				x0 = x20;
				struct Eq_69577 * v38 = (struct Eq_69577 *) ((char *) &sp->t0010 + 80);
				x29 = v38->ptr0000;
				x30 = v38->qw0008;
				struct Eq_69586 * v39 = (struct Eq_69586 *) ((char *) &sp->t0010 + 64);
				x20.u1 = v39->t0000.u1;
				x19.u1 = v39->t0008.u1;
				struct Eq_69595 * v40 = (struct Eq_69595 *) ((char *) &sp->t0010 + 48);
				x22.u1 = v40->t0000.u1;
				x21.u1 = v40->t0008.u1;
				struct Eq_69604 * v41 = (struct Eq_69604 *) ((char *) &sp->t0010 + 32);
				x24.u1 = v41->t0000.u1;
				x23 = v41->ptr0008;
				struct Eq_69613 * v42 = (struct Eq_69613 *) ((char *) &sp->t0010 + 16);
				x26 = v42->qw0000;
				x25 = v42->qw0008;
				x27.u1 = sp->t0010.u1;
				sp = (struct Eq_69425 *) ((char *) &sp->t0010 + 96);
				return;
			}
		}
	}
l000000000003BF34:
	x20.u0 = 0x00;
	goto l000000000003BF38;
}

// 000000000003BF74: define _ZNSt6__ndk121__murmur2_or_cityhashImLm64EEclEPKvm
define _ZNSt6__ndk121__murmur2_or_cityhashImLm64EEclEPKvm
{
	ptr64 fp;
	ptr64 sp = fp;
	Eq_69778 NZCV;
	Eq_14 x2;
	NZCV.u0 = cond(x2 - 0x20);
	word32 ZC;
	Eq_14 x10;
	Eq_14 x1;
	Eq_14 x12;
	Eq_14 x13;
	Eq_14 x14;
	Eq_14 x17;
	Eq_14 x15;
	Eq_14 x16;
	Eq_14 x8;
	Eq_14 x0;
	Eq_14 x9;
	Eq_14 x11;
	if (Test(UGT,ZC))
	{
		NZCV.u0 = cond(x2 - 0x40);
		if (Test(UGT,ZC))
		{
			x10.u1 = x1 + x2;
			struct Eq_69922 * v22 = (struct Eq_69922 *) ((word32) x10 - 48);
			x12.u1 = v22->t0000.u1;
			x13.u1 = v22->t0008.u1;
			struct Eq_69931 * v23 = (struct Eq_69931 *) ((word32) x10 - 64);
			x14.u1 = v23->t0000.u1;
			x17.u1 = v23->t0008.u1;
			struct Eq_69940 * v24 = (struct Eq_69940 *) ((word32) x10 - 32);
			x15.u1 = v24->t0000.u1;
			x16.u1 = v24->t0008.u1;
			x8.u0 = 11625;
			x8 = SEQ(SLICE(x8, word32, 32), 60216, (word16) x8);
			x8 = SEQ(SLICE(x8, word16, 48), 0xEA08, (word32) x8);
			x0.u1 = x12 + x2;
			Eq_14 x3 = *((word32) x10 - 16);
			x8 = SEQ(~0x6220, (word48) x8);
			x14.u1 = x14 + x2;
			x0 = x16 ^ x0;
			x9.u0 = 62067;
			x11 = x2 - 0x01;
			x2.u1 = x14 + x17;
			x0 *= x8;
			x9 = SEQ(SLICE(x9, word32, 32), ~0x4167, (word16) x9);
			x2.u1 = x2 + x12;
			x12 = x0 ^ x16;
			x9 = SEQ(SLICE(x9, word16, 48), ~0x4990, (word32) x9);
			x0 = x12 ^ x0 >> 47;
			x10 = *((word32) x10 - 8);
			x12.u1 = x17 + x3;
			x9 = SEQ(46226, (word48) x9);
			x15.u1 = x12 + x15;
			x15.u1 = x15 + x9;
			x16.u1 = x15 + x16;
			x17.u1 = x15 + x13;
			x16.u1 = x16 + x3;
			x3.u1 = x17 + x10;
			x17 = *x1.u1;
			x1.u1 = (word32) x1 + 32;
			x10.u1 = x16 + x10;
			x16 = __ror<word64,int32>(x16, 44);
			x15.u1 = x16 + x15;
			Eq_14 x5 = x11 & ~0x3F;
			x11 = __ror<word64,int32>(x3, 21);
			x11.u1 = x15 + x11;
			x15 = __ror<word64,int32>(x2, 44);
			x15.u1 = x15 + x14;
			x3.u1 = x13 + x14;
			x14.u1 = x2 + x13;
			x16.u1 = x17 + x13 *64 x9;
			x13 = x0 *64 x8;
			x13 = x13 ^ x13 >> 47;
			x0 = x13 *64 x8;
			x13.u1 = x3 + x0;
			ui32 w4 = 0x00 | 0x40;
			x13 = __ror<word64,int32>(x13, 21);
			x15.u1 = x15 + x13;
			Eq_14 x4;
			x13 = x4 - x5;
			while (true)
			{
				x16.u1 = x16 + x14;
				x0.u1 = x0 + x10;
				x2.u1 = x12 + x15;
				Eq_14 v30 = x1;
				x3 = *v30.u1;
				x4 = *((word32) v30 + 8);
				x15.u1 = x17 + x15 *64 x9;
				x17.u1 = x16 + x12;
				x12 = __ror<word64,int32>(x0, 33);
				struct Eq_70169 * v32 = (struct Eq_70169 *) ((word32) x1 + 16);
				x0.u1 = v32->t0000.u1;
				Eq_70176 x6;
				x6.u0 = v32->t0008.u0;
				x16 = x12 *64 x9;
				x12.u1 = x16 + x11;
				x3.u1 = x12 + x3;
				x12.u1 = x2 + x0;
				x14.u1 = x4 + x14;
				x12 = __ror<word64,int32>(x12, 42);
				x5 = *((word32) x1 - 8);
				x2.u1 = x3 + x4;
				x12.u1 = x14 + x12 *64 x9;
				struct Eq_70193 * v33 = (struct Eq_70193 *) ((word32) x1 - 24);
				x14.u1 = v33->t0000.u1;
				x4.u1 = v33->t0008.u1;
				x10.u1 = x15 + x10;
				Eq_70202 x7;
				x7.u0 = x10 + x5;
				x2.u1 = x2 + x0;
				x17.u1 = x17 + x14;
				x10.u1 = x15 + x14;
				x14 = __ror<word64,int32>(x17, 37);
				x10.u1 = x10 + x4;
				x17 = x14 *64 x9;
				x14.u1 = x10 + x5;
				x10 = __ror<word64,int32>(x10, 44);
				x0 = x17 ^ x11;
				x11.u1 = x10 + x15;
				x15.u1 = x12 + x4;
				x17 = __ror<word64,int32>(x2, 44);
				x10.u1 = x2 + x6;
				x2.u1 = x7 + x0;
				x15.u1 = x15 + x3;
				x2 = __ror<word64,int32>(x2, 21);
				x4.u1 = x15 + x6;
				x15.u1 = x11 + x2;
				x11 = __ror<word64,int32>(x4, 21);
				x17.u1 = x17 + x3;
				x11.u1 = x17 + x11;
				if (x13 == 0x00)
					break;
				x17 = *((word32) x1 + 32);
				x13.u1 = x13 + 0x40;
				x1.u1 = (word32) x1 + 64;
			}
			x13 = x10 ^ x14;
			x12 = x12 ^ x12 >> 47;
			x14 = x11 ^ x15;
			x13 *= x8;
			x9.u1 = x0 + x12 *64 x9;
			x12 = x14 *64 x8;
			x10 = x13 ^ x10;
			x11 = x12 ^ x11;
			x10 = x10 ^ x13 >> 47;
			x11 = x11 ^ x12 >> 47;
			x10 *= x8;
			x11 *= x8;
			x10 = x10 ^ x10 >> 47;
			x11 = x11 ^ x11 >> 47;
			x9.u1 = x9 + x10 *64 x8;
			x10.u1 = x16 + x11 *64 x8;
			x9 = x10 ^ x9;
			x9 *= x8;
			x10 = x9 ^ x10;
			x9 = x10 ^ x9 >> 47;
			x9 *= x8;
			x9 = x9 ^ x9 >> 47;
			x0 = x9 *64 x8;
		}
		else
		{
			x10.u1 = x1 + x2;
			Eq_70041 v12;
			v12.u0 = x10 + -16;
			x14.u1 = v12.u0->t0000.u2.u1;
			x16.u1 = v12.u0->t0008.u1;
			x11.u0 = 0x3127;
			Eq_14 v16 = x1;
			x12 = *v16.u1;
			x13 = *((word32) v16 + 8);
			x11 = SEQ(SLICE(x11, word32, 32), 38859, (word16) x11);
			struct Eq_70062 * v19 = (struct Eq_70062 *) ((word32) x1 + 16);
			x8.u1 = v19->t0000.u1;
			x9.u1 = v19->t0008.u1;
			x11 = SEQ(SLICE(x11, word16, 48), 0xC85C, (word32) x11);
			x15 = *((word32) x10 - 32);
			x11 = SEQ(50085, (word48) x11);
			x17.u1 = x14 + x2;
			x10 = *((word32) x10 - 24);
			x12.u1 = x12 + x17 *64 x11;
			x13.u1 = x12 + x13;
			x15.u1 = x15 + x8;
			x17 = __ror<word64,int32>(x12, 37);
			x8.u1 = x13 + x8;
			x13 = __ror<word64,int32>(x13, 7);
			x12.u1 = x12 + x9;
			x13.u1 = x13 + x17;
			x16.u1 = x16 + x9;
			x12 = __ror<word64,int32>(x12, 52);
			x12.u1 = x13 + x12;
			x13.u1 = x16 + x15;
			x10.u1 = x10 + x15;
			x15 = __ror<word64,int32>(x15, 37);
			x9.u1 = x8 + x9;
			x17.u0 = 0x404F;
			x14.u1 = x10 + x14;
			x10 = __ror<word64,int32>(x10, 7);
			x8 = __ror<word64,int32>(x8, 31);
			x9.u1 = x9 + x15;
			x17 = SEQ(SLICE(x17, word32, 32), 0x2F90, (word16) x17);
			x13 = __ror<word64,int32>(x13, 52);
			x16.u1 = x14 + x16;
			x8.u1 = x12 + x8;
			x9.u1 = x9 + x10;
			x17 = SEQ(SLICE(x17, word16, 48), 0x6A3B, (word32) x17);
			x14 = __ror<word64,int32>(x14, 31);
			x9.u1 = x9 + x13;
			x10.u1 = x16 + x8;
			x17 = SEQ(39649, (word48) x17);
			x9.u1 = x9 + x14;
			x10 *= x11;
			x9.u1 = x10 + x9 *64 x17;
			x9 = x9 ^ x9 >> 47;
			x8.u1 = x8 + x9 *64 x11;
			x8 = x8 ^ x8 >> 47;
			x0 = x8 *64 x17;
		}
	}
	else
	{
		NZCV.u0 = cond(x2 - 0x10);
		if (Test(UGT,ZC))
		{
			x8.u0 = 62067;
			Eq_14 v29 = x1;
			x9 = *v29.u1;
			x10 = *((word32) v29 + 8);
			x8 = SEQ(SLICE(x8, word32, 32), ~0x4167, (word16) x8);
			x8 = SEQ(SLICE(x8, word16, 48), ~0x4990, (word32) x8);
			x8 = SEQ(46226, (word48) x8);
			x11.u1 = x1 + x2;
			x8 = x9 *64 x8;
			x9.u0 = 0x6557;
			x12.u0 = 0x404F;
			x15 = *((word32) x11 - 16);
			x11 = *((word32) x11 - 8);
			x9 = SEQ(SLICE(x9, word32, 32), 0x509E, (word16) x9);
			x12 = SEQ(SLICE(x12, word32, 32), 0x2F90, (word16) x12);
			x13.u0 = 0x3127;
			x9 = SEQ(SLICE(x9, word16, 48), ~0x2838, (word32) x9);
			x12 = SEQ(SLICE(x12, word16, 48), 0x6A3B, (word32) x12);
			x13 = SEQ(SLICE(x13, word32, 32), 38859, (word16) x13);
			x14.u0 = 0x13C00000000;
			x9 = SEQ(0xC949, (word48) x9);
			x12 = SEQ(39649, (word48) x12);
			x13 = SEQ(SLICE(x13, word16, 48), 0xC85C, (word32) x13);
			x14 = SEQ(0xBE41, (word48) x14);
			x9 = x10 ^ x9;
			x10 = x8 - x10;
			x13 = SEQ(50085, (word48) x13);
			x12 = x11 *64 x12;
			x11 *= x14;
			x8.u1 = x8 + x2;
			x10 = __ror<word64,int32>(x10, 43);
			x9 = __ror<word64,int32>(x9, 20);
			x11 = __bfm<word64>(x11, x12, 30, 63);
			x8 -= x12;
			x10.u1 = (char *) x10.u1 + x15 *64 x13;
			x8.u1 = x8 + x9;
			x9.u1 = x10 + x11;
			x10.u0 = 11625;
			x10 = SEQ(SLICE(x10, word32, 32), 60216, (word16) x10);
			x10 = SEQ(SLICE(x10, word16, 48), 0xEA08, (word32) x10);
			x9 = x9 ^ x8;
			x10 = SEQ(~0x6220, (word48) x10);
			x9 *= x10;
			x8 = x9 ^ x8;
			x8 = x8 ^ x9 >> 47;
			x8 *= x10;
			x8 = x8 ^ x8 >> 47;
			x0 = x8 *64 x10;
		}
		else
		{
			x0 = x1;
			x1 = x2;
			x16.u0 = 0x00070000;
			x17 = *((word32) x16 + 3080);
			x16.u1 = (word32) x16 + 3080;
			x17();
		}
	}
}

// 000000000003C300: define _ZNSt6__ndk121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm
define _ZNSt6__ndk121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm
{
	Eq_14 x0;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_70289 NZCV;
	Eq_70286 x1;
	NZCV.u0 = cond(x1 - 0x09);
	Eq_14 x8 = x0;
	bool C;
	struct Eq_70299 * x9;
	Eq_70311 x11;
	word32 w10;
	Eq_14 x10;
	word32 w1;
	if (Test(ULT,C))
	{
		NZCV.u0 = cond(x1 - 0x04);
		word32 w8;
		Eq_14 w9;
		if (Test(ULT,C))
		{
			x0.u0 = 0x404F;
			x0 = SEQ(SLICE(x0, word32, 32), 0x2F90, (word16) x0);
			x0 = SEQ(SLICE(x0, word16, 48), 0x6A3B, (word32) x0);
			x0 = SEQ(39649, (word48) x0);
			if (x1 != 0x00)
			{
				x9 = x8 + x1;
				x11 = x1 >> 1;
				Eq_14 v17 = *x8.u1;
				w10 = (word32) v17;
				byte v18 = (byte) *(x8 + x11);
				w8 = (word32) v18;
				byte v19 = x9->bFFFFFFFF;
				w9.u1 = (word32) v19;
				x11.u0 = 0x6557;
				x11 = SEQ(SLICE(x11, word32, 32), 0x509E, (word16) x11);
				x11 = SEQ(SLICE(x11, word16, 48), ~0x2838, (word32) x11);
				x11 = SEQ(0xC949, (word48) x11);
				x10 = __bfm<word64>(x10, x8, 56, 7);
				w8 = w1 + (w9 << 2);
				x9 = x10 *64 x0;
				x8 *= x11;
				x8 = x8 ^ x9;
				x8 = x8 ^ x8 >> 47;
				x0 = x8 *64 x0;
			}
		}
		else
		{
			w9 = *x8.u1;
			x8.u1 = x8 + x1;
			w8 = (word32) *((word32) x8 - 4);
			x10.u0 = 11625;
			w9 <<= 3;
			x10 = SEQ(SLICE(x10, word32, 32), 60216, (word16) x10);
			x9 += x1;
			x10 = SEQ(SLICE(x10, word16, 48), 0xEA08, (word32) x10);
			x9 = x9 ^ x8;
			x10 = SEQ(~0x6220, (word48) x10);
			x9 *= x10;
			x8 = x9 ^ x8;
			x8 = x8 ^ x9 >> 47;
			x8 *= x10;
			x8 = x8 ^ x8 >> 47;
			x0 = x8 *64 x10;
		}
	}
	else
	{
		x9 = x8 + x1;
		x9 = x9->ptrFFFFFFF8;
		x8 = *x8.u1;
		w10 = 0x00 - w1;
		x11 = x9 + x1;
		uint64 x12 = x11 >> x1;
		x10 = x11 << x10;
		x11.u0 = 11625;
		x11 = SEQ(SLICE(x11, word32, 32), 60216, (word16) x11);
		x10 |= x12;
		x11 = SEQ(SLICE(x11, word16, 48), 0xEA08, (word32) x11);
		x8 = x10 ^ x8;
		x11 = SEQ(~0x6220, (word48) x11);
		x8 *= x11;
		x10 = x8 ^ x10;
		x8 = x10 ^ x8 >> 47;
		x8 *= x11;
		x8 = x8 ^ x8 >> 47;
		x8 *= x11;
		x0 = x8 ^ x9;
	}
}

// 000000000003C404: void ()
void ()
{
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_70434 * fp;
	struct Eq_70434 * sp = fp;
	sp -= 0xA0;
	struct Eq_70439 * v6 = (struct Eq_70439 *) ((char *) &sp->t0038 + 8);
	struct Eq_70441 * x28;
	v6->ptr0000 = x28;
	ptr64 x27;
	v6->ptr0008 = x27;
	struct Eq_70450 * v9 = (struct Eq_70450 *) ((char *) &sp->t0038 + 24);
	struct Eq_70441 * x26;
	v9->ptr0000 = x26;
	struct Eq_70441 * x25;
	v9->ptr0008 = x25;
	struct Eq_70461 * v12 = (struct Eq_70461 *) ((char *) &sp->t0038 + 40);
	word64 x24;
	v12->qw0000 = x24;
	struct Eq_70441 * x23;
	v12->ptr0008 = x23;
	struct Eq_70472 * v15 = (struct Eq_70472 *) ((char *) &sp->t0038 + 56);
	word64 x22;
	v15->qw0000 = x22;
	struct Eq_70441 * x21;
	v15->ptr0008 = x21;
	struct Eq_70483 * v18 = (struct Eq_70483 *) ((char *) &sp->t0038 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	ptr64 x19;
	v18->ptr0008 = x19;
	struct Eq_70494 * v21 = (struct Eq_70494 *) ((char *) &sp->t0038 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0038 + 88;
	Eq_14 x9 = __mrs(sysreg3_3_13_0_2);
	sp->t0008.u1 = (size_t) x9;
	x9 = *((word32) x9 + 40);
	word64 * x1 = &sp->ptr0030;
	Eq_14 x8;
	x20 = x8;
	sp->t0038.u1 = (size_t) x9;
	sp->ptr0030 = null;
	struct Eq_70441 * x0 = x0->ptr0008;
	rs2_query_sensors();
	x21 = x0;
	word32 w0 = 0x28;
	_Znwm();
	x0->qw0010 = 0x00;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0E80);
	x9.u0 = 0x00070000;
	struct Eq_70441 * x10 = x0;
	x26 = x0;
	x9 = *((word32) x9 + 3696);
	x0 = sp->ptr0030;
	x26 = (struct Eq_70441 *) &x26->ptr0008;
	x26->qw0000 = 0x00;
	x8.u1 = (word32) x8 + 16;
	x10->qw0000 = (word64) x8;
	struct Eq_70564 * v29 = (struct Eq_70564 *) &x10->ptr0018;
	v29->ptr0000 = x21;
	v29->t0008.u1 = (size_t) x9;
	sp->ptr0000 = x10;
	fn000000000001ADF0();
	x1 = &sp->ptr0030;
	x0 = x21;
	rs2_get_sensors_count();
	word32 w22 = w0;
	x0 = sp->ptr0030;
	fn000000000001ADF0();
	Eq_70587 NZCV;
	NZCV.u0 = cond(w22 - 0x01);
	Eq_14 v32 = x20;
	v32.u1->u1 = 0x00;
	((word32) v32 + 8)->u0 = 0x00;
	((word32) x20 + 16)->u0 = 0x00;
	word32 NV;
	if (Test(GE,NV))
	{
		x8.u0 = 0x00070000;
		x9.u0 = 0x00070000;
		x8 = *((word32) x8 + 0x0EF0);
		x9 = *((word32) x9 + 0x0C68);
		word32 w24 = 0x00;
		x19 = (ptr64) ((word32) x8 + 16);
		x27 = (ptr64) ((word32) x9 + 16);
		word64 * x2 = &sp->ptr0030;
		x0 = x21;
		word32 w1 = w24;
		rs2_create_sensor();
		x25 = x0;
		w0 = 0x28;
		_Znwm();
		x28 = x0;
		x23 = x0;
		x0->qw0010 = 0x00;
		x23 = (struct Eq_70441 *) &x23->ptr0008;
		x23->qw0000 = 0x00;
		x28->qw0000 = x19;
		x28->ptr0018 = x25;
		x8.u0 = 0x00070000;
		x0 = sp->ptr0030;
		x8 = *((word32) x8 + 3400);
		x28->t0020.u1 = (size_t) x8;
		fn000000000001ADF0();
		Eq_14 w9;
		do
		{
			union Eq_3183 * v37 = &x23->qw0000;
			x8 = __load_exclusive<word64>(v37);
			x8.u1 = (word32) x8 + 1;
			union Eq_3192 * v38 = &x23->qw0000;
			w9 = __store_exclusive<word64>(v38, x8);
		} while (w9 != 0x00);
		struct Eq_70671 * v40 = (struct Eq_70671 *) ((char *) &sp->t0008 + 8);
		v40->ptr0000 = x27;
		v40->ptr0008 = x25;
		struct Eq_70680 * v41 = (struct Eq_70680 *) ((char *) &sp->t0008 + 24);
		v41->ptr0000 = x25;
		v41->ptr0008 = x28;
		do
		{
			union Eq_3183 * v42 = &x23->qw0000;
			x8 = __load_exclusive<word64>(v42);
			x8.u1 = (word32) x8 + 1;
			union Eq_3192 * v43 = &x23->qw0000;
			w9 = __store_exclusive<word64>(v43, x8);
		} while (w9 != 0x00);
	}
}

// tmpecu37ckl_text_0002.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

// 000000000003C808: define _ZNK3rs26sensor2asINS_12depth_sensorEEET_v
define _ZNK3rs26sensor2asINS_12depth_sensorEEET_v
{
	Eq_14 x0;
	struct Eq_70706 * fp;
	struct Eq_70706 * sp = fp;
	sp -= 0x50;
	struct Eq_70711 * v6 = (struct Eq_70711 *) ((char *) &sp->t0020 + 16);
	struct Eq_70713 * x20;
	v6->ptr0000 = x20;
	Eq_14 x19;
	v6->t0008.u1 = (size_t) x19;
	struct Eq_70722 * v9 = (struct Eq_70722 *) ((char *) &sp->t0020 + 32);
	struct Eq_70724 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_70724 *) ((char *) &sp->t0020 + 32);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	x19.u0 = 0x00070000;
	Eq_14 x9 = x0;
	Eq_14 x8;
	x0 = x8;
	x8.u1 = x20->t0028.u1;
	x19 = *((word32) x19 + 0x0C68);
	x29->tFFFFFFE8.u1 = (size_t) x8;
	Eq_14 x10;
	x10.u1 = (word32) x19 + 16;
	sp->t0008.u1 = (size_t) x10;
	Eq_14 q0 = *((word32) x9 + 8);
	sp->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x8 = *((word32) x9 + 24);
	sp->t0020.u1 = (size_t) x8;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v16 = &*x8.u1;
			x9 = __load_exclusive<word64>(v16);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v17 = &*x8.u1;
			w10 = __store_exclusive<word64>(v17, x9);
		} while (w10 != 0x00);
	}
	word64 * x1 = (word64 *) &sp->t0008.u0;
	fn000000000001B790();
	x8.u1 = (word32) x19 + 16;
	x19.u1 = sp->t0020.u1;
	sp->t0008.u1 = (size_t) x8;
	if (x19 == 0x00)
	{
		x8.u1 = x20->t0028.u1;
		x9.u1 = x29->tFFFFFFE8.u1;
		int64 x31 = x8 - x9;
		Eq_70815 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_70825 * v23 = (struct Eq_70825 *) ((char *) &sp->t0020 + 32);
			x29 = v23->ptr0000;
			x30 = v23->qw0008;
			struct Eq_70834 * v24 = (struct Eq_70834 *) ((char *) &sp->t0020 + 16);
			x20 = v24->ptr0000;
			x19.u1 = v24->t0008.u1;
			sp = (struct Eq_70706 *) ((char *) &sp->t0020 + 48);
		}
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 000000000003C91C: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_sensor_listPFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_sensor_listPFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_70853 * v7 = (struct Eq_70853 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_70869 * v9 = (struct Eq_70869 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003C940: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_sensor_listPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_sensor_listPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_70891 * fp;
	struct Eq_70891 * sp = fp;
	sp = (struct Eq_70891 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_70907 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_70891 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 000000000003C960: define _ZNKSt6__ndk120__shared_ptr_pointerIP15rs2_sensor_listPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP15rs2_sensor_listPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_70929 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 3368);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_70943 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 000000000003C97C: define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_sensor_listPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP15rs2_sensor_listPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003C980: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_sensorPFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_sensorPFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_70970 * v7 = (struct Eq_70970 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_70986 * v9 = (struct Eq_70986 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003C9A4: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_sensorPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_sensorPFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_71008 * fp;
	struct Eq_71008 * sp = fp;
	sp = (struct Eq_71008 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_71024 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_71008 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 000000000003C9C4: define _ZNKSt6__ndk120__shared_ptr_pointerIP10rs2_sensorPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP10rs2_sensorPFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_71046 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 4048);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_71060 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 000000000003C9E0: define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_sensorPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP10rs2_sensorPFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003C9E4: define _ZNSt6__ndk16vectorIN3rs26sensorENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
define _ZNSt6__ndk16vectorIN3rs26sensorENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
{
	Eq_14 x0;
	struct Eq_71078 * fp;
	struct Eq_71078 * sp = fp;
	sp = (struct Eq_71078 *) ((char *) sp - 64);
	uint64 x24;
	sp->qw0000 = x24;
	int64 x23;
	sp->qw0008 = x23;
	struct Eq_71091 * v8 = (struct Eq_71091 *) (&sp->qw0008 + 1);
	struct Eq_71093 * x22;
	v8->ptr0000 = x22;
	Eq_14 x21;
	v8->t0008.u1 = (size_t) x21;
	struct Eq_71102 * v11 = (struct Eq_71102 *) (&sp->qw0008 + 3);
	Eq_14 x20;
	v11->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v11->t0008.u1 = (size_t) x19;
	struct Eq_71113 * v14 = (struct Eq_71113 *) (&sp->qw0008 + 5);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = &sp->qw0008 + 5;
	Eq_14 v16 = x0;
	x19 = *v16.u1;
	x21 = *((word32) v16 + 8);
	x20 = x0;
	Eq_14 x8 = x21 - x19;
	x23 = x8 >> 5;
	x8 = x23 + 0x01;
	Eq_14 x9 = x8 >> 59;
	if (x9 != 0x00)
	{
		x0 = x20;
		fn000000000001B7E0();
		depth_sensor::depth_sensor((rs2::sensor) x0);
		return;
	}
	x9 = *((word32) x20 + 16);
	Eq_14 x10 = 0x00 | 0x3FFFFFFFFFFFFFE;
	struct Eq_71093 * x1;
	x22 = x1;
	x9 -= x19;
	Eq_71156 x31 = x10 - (x9 >> 5);
	Eq_71158 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 4;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x24 = Test(ULT,C) ? x8 : x9;
		if (x24 == 0x00)
		{
			x0.u0 = 0x00;
			goto l000000000003CA5C;
		}
		x8 = x24 >> 59;
		if (x8 == 0x00)
		{
l000000000003CA54:
			x0 = x24 << 5;
			_Znwm();
l000000000003CA5C:
			Eq_14 x11;
			x11.u0 = 0x00070000;
			x11 = *((word32) x11 + 0x0C68);
			x8.u1 = x0 + (x23 << 5);
			x9.u1 = (word32) x11 + 16;
			*x8.u1 = x9;
			Eq_14 q0;
			q0.u2 = x22->t0008.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
			*((word32) x8 + 8) = q0;
			x9.u1 = x22->t0018.u1;
			*((word32) x8 + 24) = x9;
			if (x9 != 0x00)
			{
				x9.u1 = x9 + (union Eq_14 *) 0x08;
				Eq_14 w12;
				do
				{
					union Eq_3183 * v26 = &*x9.u1;
					x10 = __load_exclusive<word64>(v26);
					x10.u1 = (word32) x10 + 1;
					union Eq_3192 * v27 = &*x9.u1;
					w12 = __store_exclusive<word64>(v27, x10);
				} while (w12 != 0x00);
				Eq_14 v29 = x20;
				x19 = *v29.u1;
				x21 = *((word32) v29 + 8);
			}
			x9.u1 = x0 + (x24 << 5);
			x31 = x21 - x19;
			NZCV.u0 = cond(x31);
			x10.u1 = (word32) x8 + 32;
			bool Z;
			if (Test(NE,Z))
			{
				uint64 x12 = x21 - 0x20;
				Eq_14 x13;
				x13.u0 = ~0x00;
				x12 -= x19;
				x12 = x13 ^ x12 >> 5;
				x12 = x23 + x12;
				x11.u1 = (word32) x11 + 16;
				do
				{
					*((word32) x8 - 32) = x11;
					q0 = *((word32) x21 - 24);
					*((word32) x8 - 24) = q0;
					x13 = *((word32) x21 - 8);
					x21 -= 0x20;
					*((word32) x8 - 8) = x13;
					if (x13 != 0x00)
					{
						x13.u1 = (word32) x13 + 8;
						Eq_14 w15;
						do
						{
							union Eq_3183 * v34 = &*x13.u1;
							Eq_14 x14 = __load_exclusive<word64>(v34);
							x14.u1 = (word32) x14 + 1;
							union Eq_3192 * v35 = &*x13.u1;
							w15 = __store_exclusive<word64>(v35, x14);
						} while (w15 != 0x00);
					}
					x31 = x21 - x19;
					NZCV.u0 = cond(x31);
					x8 -= (struct Eq_108449 *) 0x20;
				} while (Test(NE,Z));
				Eq_14 v37 = x20;
				x19 = *v37.u1;
				x21 = *((word32) v37 + 8);
				x8.u1 = x0 + (x12 << 5);
			}
			x31 = x21 - x19;
			NZCV.u0 = cond(x31);
			Eq_14 v38 = x20;
			*v38.u1 = x8;
			*((word32) v38 + 8) = x10;
			*((word32) x20 + 16) = x9;
			while (Test(NE,Z))
			{
				x21.u1 = (word32) x21 - 32;
				x8 = *x21.u1;
				x8 = *x8.u1;
				x0 = x21;
				x8();
				x31 = x19 - x21;
				NZCV.u0 = cond(x31);
			}
			if (x19 == 0x00)
			{
				struct Eq_71349 * v43 = (struct Eq_71349 *) (&sp->qw0008 + 5);
				x29 = v43->ptr0000;
				x30 = v43->qw0008;
				struct Eq_71358 * v44 = (struct Eq_71358 *) (&sp->qw0008 + 3);
				x20.u1 = v44->t0000.u1;
				x19.u1 = v44->t0008.u1;
				struct Eq_71367 * v45 = (struct Eq_71367 *) (&sp->qw0008 + 1);
				x22 = v45->ptr0000;
				x21.u1 = v45->t0008.u1;
				struct Eq_71078 * v46 = sp;
				x24 = v46->qw0000;
				x23 = v46->qw0008;
				sp = &sp->qw0008 + 7;
				return;
			}
			else
			{
				x0 = x19;
				struct Eq_71385 * v39 = (struct Eq_71385 *) (&sp->qw0008 + 5);
				x29 = v39->ptr0000;
				x30 = v39->qw0008;
				struct Eq_71394 * v40 = (struct Eq_71394 *) (&sp->qw0008 + 3);
				x20.u1 = v40->t0000.u1;
				x19.u1 = v40->t0008.u1;
				struct Eq_71403 * v41 = (struct Eq_71403 *) (&sp->qw0008 + 1);
				x22 = v41->ptr0000;
				x21.u1 = v41->t0008.u1;
				struct Eq_71078 * v42 = sp;
				x24 = v42->qw0000;
				x23 = v42->qw0008;
				sp = &sp->qw0008 + 7;
				((real64) q0, x0, x1);
				return;
			}
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x24 = 0x00 | 0x7FFFFFFFFFFFFFF;
	goto l000000000003CA54;
}

// 000000000003CB70: void depth_sensor::depth_sensor(Register Eq_71187 x0)
// Called from:
//      _ZNSt6__ndk16vectorIN3rs26sensorENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
void depth_sensor::depth_sensor(Eq_71187 x0)
{
	word64 x1;
	struct Eq_71428 * fp;
	struct Eq_71428 * sp = fp;
	sp -= 0x40;
	struct Eq_71433 * v6 = (struct Eq_71433 *) ((char *) &sp->t0008 + 8);
	Eq_14 x22;
	v6->t0000.u1 = (size_t) x22;
	struct Eq_71439 * x21;
	v6->ptr0008 = x21;
	struct Eq_71444 * v9 = (struct Eq_71444 *) ((char *) &sp->t0008 + 24);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_71455 * v12 = (struct Eq_71455 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x21->t0028.u1;
	x19 = x0;
	sp->t0008.u1 = (size_t) x8;
	struct Eq_71481 * v17 = x1 + 16;
	x8.u1 = v17->t0000.u1;
	x20.u1 = v17->t0008.u1;
	Eq_14 x9;
	if (x20 != 0x00)
	{
		x9.u1 = (word32) x20 + 8;
		Eq_14 w11;
		do
		{
			union Eq_3183 * v20 = &*x9.u1;
			Eq_14 x10 = __load_exclusive<word64>(v20);
			x10.u1 = (word32) x10 + 1;
			union Eq_3192 * v21 = &*x9.u1;
			w11 = __store_exclusive<word64>(v21, x10);
		} while (w11 != 0x00);
	}
	x22.u0 = 0x00070000;
	x22 = *((word32) x22 + 0x0C68);
	struct Eq_71495 * v23 = (struct Eq_71495 *) ((word32) x19 + 16);
	v23->t0000.u1 = (size_t) x8;
	v23->t0008.u1 = (size_t) x20;
	x9.u1 = (word32) x22 + 16;
	Eq_14 v24 = x19;
	*v24.u1 = x9;
	*((word32) v24 + 8) = x8;
	if (x20 == 0x00)
	{
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 4040);
		x8.u1 = (word32) x8 + 16;
		*x19.u1 = x8;
		sp->t0000.u1 = (size_t) 0x00;
		x0 = *((word32) x19 + 16);
		ui32 w1 = 0x00 | 0x07;
		word64 * x2 = (word64 *) &sp->t0000.u0;
		rs2_is_sensor_extendable_to();
		word32 w0;
		if (w0 == 0x00)
		{
			x8.u1 = sp->t0000.u1;
			if (x8 == 0x00)
			{
				x20 = *((word32) x19 + 24);
				struct Eq_71610 * v31 = (struct Eq_71610 *) ((word32) x19 + 16);
				v31->qw0000 = 0x00;
				v31->qw0008 = 0x00;
				if (x20 != 0x00)
					x8.u1 = (word32) x20 + 8;
			}
		}
		x0.u1 = sp->t0000.u1;
		fn000000000001ADF0();
		x8.u1 = x21->t0028.u1;
		x9.u1 = sp->t0008.u1;
		int64 x31 = x8 - x9;
		Eq_71597 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_71628 * v35 = (struct Eq_71628 *) ((char *) &sp->t0008 + 40);
			x29 = v35->ptr0000;
			x30 = v35->qw0008;
			struct Eq_71637 * v36 = (struct Eq_71637 *) ((char *) &sp->t0008 + 24);
			x20.u1 = v36->t0000.u1;
			x19.u1 = v36->t0008.u1;
			struct Eq_71646 * v37 = (struct Eq_71646 *) ((char *) &sp->t0008 + 8);
			x22.u1 = v37->t0000.u1;
			x21 = v37->ptr0008;
			sp = (struct Eq_71428 *) ((char *) &sp->t0008 + 56);
		}
	}
	else
	{
		x8.u1 = (word32) x20 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v25 = &*x8.u1;
			x9 = __load_exclusive<word64>(v25);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v26 = &*x8.u1;
			w10 = __store_exclusive<word64>(v26, x9);
		} while (w10 != 0x00);
	}
}

// 000000000003CCF0: void depth_sensor::~depth_sensor()
void depth_sensor::~depth_sensor()
{
	struct Eq_71656 * fp;
	struct Eq_71656 * sp = fp;
	sp = (struct Eq_71656 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_71664 * x19;
	sp->ptr0008 = x19;
	struct Eq_71669 * v8 = (struct Eq_71669 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_71664 * x0;
	x20 = x0->qw0018;
	x8 = *((word32) x8 + 0x0C68);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_71697 * v11 = (struct Eq_71697 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_71656 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_71656 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 000000000003CD58: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
{
	int32 * x1;
	struct Eq_71725 * fp;
	struct Eq_71725 * sp = fp;
	sp = (struct Eq_71725 *) ((char *) sp - 64);
	Eq_71729 x24;
	sp->t0000.u1 = (struct Eq_108461 *) x24;
	Eq_71729 x23;
	sp->t0008.u1 = (struct Eq_108461 *) x23;
	struct Eq_71738 * v8 = (struct Eq_71738 *) ((char *) &sp->t0008 + 8);
	Eq_71729 x22;
	v8->t0000.u1 = (struct Eq_108461 *) x22;
	Eq_71729 x21;
	v8->t0008.u1 = (struct Eq_108461 *) x21;
	struct Eq_71749 * v11 = (struct Eq_71749 *) ((char *) &sp->t0008 + 24);
	Eq_71729 x20;
	v11->t0000.u1 = (struct Eq_108461 *) x20;
	Eq_71729 x19;
	v11->t0008.u1 = (struct Eq_108461 *) x19;
	struct Eq_71760 * v14 = (struct Eq_71760 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_71729 x0;
	x22.u1 = x0.u1->t0008.u1;
	int32 v17 = *x1;
	x23.u1 = (int64) v17;
	x19 = x0;
	Eq_71729 x3;
	x21 = x3;
	Eq_71729 x8;
	if (x22 != 0x00)
	{
		x8 = x22 - 0x01;
		ui64 x9 = x8 & x22;
		Eq_71790 NZ;
		NZ.u0 = cond(x9);
		bool C = false;
		bool V = false;
		bool Z;
		Eq_71799 x31;
		Eq_71801 NZCV;
		Eq_71729 x10;
		if (Test(NE,Z))
		{
			x31 = x22 - x23;
			NZCV.u0 = cond(x31);
			x24 = x23;
			word32 ZC;
			if (Test(ULE,ZC))
			{
				x10 = x23 /u x22;
				x24 = x23 - x10 *64 x22;
			}
		}
		else
			x24 = x8 & x23;
		x10 = *x19;
		x20.u1 = *(x10 + x24);
		if (x20 != 0x00)
		{
			do
			{
				x20 = *x20;
				if (x20 == 0x00)
					goto l000000000003CE0C;
				x10.u1 = x20.u1->t0008.u1;
				x31 = x10 - x23;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					if (x9 != 0x00)
					{
						x31 = x10 - x22;
						NZCV.u0 = cond(x31);
						if (Test(ULT,C))
							goto l000000000003CDF0;
						uint64 x11 = x10 /u x22;
						x10 -= x11 *64 x22;
						x31 = x10 - x24;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l000000000003CE0C;
					}
					else
					{
						x10 &= x8;
l000000000003CDF0:
						x31 = x10 - x24;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l000000000003CE0C;
					}
				}
				Eq_71729 w10;
				w10.u0 = x20.u1->t0010.u0;
				word32 w23;
				NZCV.u0 = cond(w10 - w23);
			} while (Test(NE,Z));
			x1 = null;
			x0 = x20;
			struct Eq_71903 * v37 = (struct Eq_71903 *) ((char *) &sp->t0008 + 40);
			x29 = v37->ptr0000;
			x30 = v37->qw0008;
			struct Eq_71912 * v38 = (struct Eq_71912 *) ((char *) &sp->t0008 + 24);
			x20.u1 = v38->t0000.u1;
			x19.u1 = v38->t0008.u1;
			struct Eq_71921 * v39 = (struct Eq_71921 *) ((char *) &sp->t0008 + 8);
			x22.u1 = v39->t0000.u1;
			x21.u1 = v39->t0008.u1;
			struct Eq_71725 * v40 = sp;
			x24.u1 = v40->t0000.u1;
			x23.u1 = v40->t0008.u1;
			sp = (struct Eq_71725 *) ((char *) &sp->t0008 + 56);
			return;
		}
	}
l000000000003CE0C:
	ui32 w0 = 0x00 | 0x30;
	_Znwm();
	x8 = *x21;
	x21 = x0;
	x20 = x0;
	Eq_71729 w8 = *x8;
	struct Eq_71830 * v31 = (struct Eq_71830 *) &x0.u1->dw0020;
	v31->qw0000 = 0x00;
	v31->qw0008 = 0x00;
	x0.u1->t0010.u0 = (word32) w8;
	x21.u1 = &x21.u1->t0018.u0;
	x21->u0 = 0x00;
	Eq_71729 v32 = x0;
	v32->u0 = 0x00;
	v32.u1->t0008.u1 = (struct Eq_108461 *) x23;
	x8.u1 = x19.u1->t0018.u1;
	word32 s0 = x19.u1->dw0020;
	x8.u0 = (word32) x8 + 1;
}

// 000000000003CF78: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE6rehashEm
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE6rehashEm
{
	struct Eq_71949 * x1;
	ui64 * fp;
	ui64 * sp = fp;
	sp += -6;
	ui64 x21;
	*sp = x21;
	struct Eq_71947 * v7 = (struct Eq_71947 *) (sp + 2);
	struct Eq_71949 * x20;
	v7->ptr0000 = x20;
	struct Eq_71949 * x19;
	v7->ptr0008 = x19;
	struct Eq_71958 * v10 = (struct Eq_71958 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	ui64 x8 = x1 - 0x01;
	Eq_71974 NZCV;
	NZCV.u0 = cond(x8);
	struct Eq_71949 * x0;
	x19 = x0;
	bool Z;
	Eq_71980 NZ;
	bool C;
	bool V;
	if (Test(EQ,Z))
	{
		ui32 w20 = 0x00 | 0x02;
	}
	else
	{
		x20 = x1;
		NZ.u0 = cond(x8 & x1);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			x0 = x20;
			_ZNSt6__ndk112__next_primeEm();
			x20 = x0;
		}
	}
	x21 = x19->qw0008;
	word64 x31 = x20 - x21;
	NZCV.u0 = cond(x31);
	word32 ZC;
	if (Test(ULE,ZC))
	{
		if (Test(UGE,C))
		{
			struct Eq_72033 * v29 = (struct Eq_72033 *) (sp + 4);
			x29 = v29->ptr0000;
			x30 = v29->qw0008;
			struct Eq_72042 * v30 = (struct Eq_72042 *) (sp + 2);
			x20 = v30->ptr0000;
			x19 = v30->ptr0008;
			x21 = *sp;
			sp += 6;
		}
		else
		{
			NZCV.u0 = cond(x21 - 0x03);
			word32 w8;
			if (Test(UGE,C))
			{
				x8 = x21 - 0x01;
				NZ.u0 = cond(x8 & x21);
				C = false;
				V = false;
				w8 = (word32) Test(EQ,Z);
			}
			else
				w8 = 0x00;
			word64 x9 = x19->qw0018;
			word32 s0 = x19->dw0020;
		}
	}
	else
	{
		x0 = x19;
		x1 = x20;
		struct Eq_72003 * v22 = (struct Eq_72003 *) (sp + 4);
		x29 = v22->ptr0000;
		x30 = v22->qw0008;
		struct Eq_72012 * v23 = (struct Eq_72012 *) (sp + 2);
		x20 = v23->ptr0000;
		x19 = v23->ptr0008;
		x21 = *sp;
		sp += 6;
		Eq_14 x16;
		x16.u0 = 0x00070000;
		<anonymous> * x17 = (<anonymous> *) *((word32) x16 + 1000);
		x16.u1 = (word32) x16 + 1000;
		x17();
	}
}

// 000000000003D05C: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE8__rehashEm
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE8__rehashEm
{
	struct Eq_72077 * fp;
	struct Eq_72077 * sp = fp;
	sp = (struct Eq_72077 *) ((char *) sp - 32);
	Eq_14 x20;
	sp->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	sp->t0008.u1 = (size_t) x19;
	struct Eq_72090 * v8 = (struct Eq_72090 *) ((char *) &sp->t0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 8;
	Eq_14 x0;
	x19 = x0;
	Eq_14 x1;
	word128 q0;
	if (x1 != 0x00)
	{
		x20 = x1;
		Eq_14 x8 = x1 >> 61;
		if (x8 != 0x00)
		{
			x0.u0 = 0x00052000;
			x0.u1 = (word32) x0 + 0x0569;
			fn00000000000373A8();
			_ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_();
			return;
		}
		x0 = x20 << 3;
		_Znwm();
		x8 = *x19.u1;
		*x19.u1 = x0;
		if (x8 != 0x00)
		{
			x0 = x8;
			((real64) q0, x0, x1);
		}
		x8.u0 = 0x00;
		*((word32) x19 + 8) = x20;
		Eq_14 x9;
		Eq_72185 x31;
		Eq_72187 NZCV;
		bool Z;
		do
		{
			x9 = *x19.u1;
			*(x9 + x8) = 0x00;
			x8.u1 = (word32) x8 + 1;
			x31 = x20 - x8;
			NZCV.u0 = cond(x31);
		} while (Test(NE,Z));
		Eq_14 x12 = x19;
		x12.u1 = (word32) x12 + 16;
		x8 = *x12.u1;
		if (x8 != 0x00)
		{
			Eq_14 x11 = *((word32) x8 + 8);
			x9 = x20 - 0x01;
			ui64 x10 = x9 & x20;
			Eq_72207 NZ;
			NZ.u0 = cond(x10);
			bool C = false;
			bool V = false;
			Eq_14 x13;
			if (Test(NE,Z))
			{
				x31 = x11 - x20;
				NZCV.u0 = cond(x31);
				if (Test(UGE,C))
				{
					x13 = x11 /u x20;
					x11 -= x13 *64 x20;
				}
			}
			else
				x11 &= x9;
			x13 = *x19.u1;
			*(x13 + x11) = (word64) x12;
			x12 = *x8.u1;
			while (x12 != 0x00)
			{
				x13 = *((word32) x12 + 8);
				Eq_14 x14;
				if (x10 != 0x00)
				{
					x31 = x13 - x20;
					NZCV.u0 = cond(x31);
					if (Test(UGE,C))
					{
						x14 = x13 /u x20;
						x13 -= x14 *64 x20;
					}
					x31 = x13 - x11;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
						goto l000000000003D150;
				}
				else
				{
					x13 &= x9;
					x31 = x13 - x11;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
					{
l000000000003D150:
						x14 = *x19.u1;
						Eq_14 x15 = x12;
						word64 x16 = *(x14 + x13);
						if (x16 == 0x00)
						{
							*(x14 + x13) = (word64) x8;
							x8 = x12;
							x11 = x13;
							x12 = *x8.u1;
							if (x12 == 0x00)
								break;
							continue;
						}
						else
						{
							do
							{
								x14 = x15;
								x15 = *x15.u1;
								if (x15 == 0x00)
									break;
								Eq_14 w16 = *((word32) x12 + 16);
								Eq_14 w17 = *((word32) x15 + 16);
								NZCV.u0 = cond(w16 - w17);
							} while (Test(EQ,Z));
							*x8.u1 = x15;
							x15 = *x19.u1;
							x13 <<= 3;
							x15.u1 = *(x15 + x13);
							x15 = *x15.u1;
							*x14.u1 = x15;
							x14 = *x19.u1;
							x13.u1 = *(x14 + x13);
							*x13.u1 = x12;
							x12 = *x8.u1;
							if (x12 == 0x00)
								break;
							continue;
						}
					}
				}
				x8 = x12;
				x12 = *x8.u1;
			}
		}
	}
	else
	{
		x0 = *x19.u1;
		x19.u1->u0 = 0x00;
		if (x0 != 0x00)
			((real64) q0, x0, x1);
		((word32) x19 + 8)->u0 = 0x00;
	}
	struct Eq_72159 * v24 = (struct Eq_72159 *) ((char *) &sp->t0008 + 8);
	x29 = v24->ptr0000;
	x30 = v24->qw0008;
	struct Eq_72077 * v25 = sp;
	x20.u1 = v25->t0000.u1;
	x19.u1 = v25->t0008.u1;
	sp = (struct Eq_72077 *) ((char *) &sp->t0008 + 24);
}

// 000000000003D1D8: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
// Called from:
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE8__rehashEm
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
{
	Eq_14 x1;
	struct Eq_72319 * fp;
	struct Eq_72319 * sp = fp;
	sp -= 0xA0;
	struct Eq_72324 * v6 = (struct Eq_72324 *) ((char *) &sp->t0038 + 8);
	Eq_14 x28;
	v6->t0000.u1 = (size_t) x28;
	ui64 x27;
	v6->qw0008 = x27;
	struct Eq_72335 * v9 = (struct Eq_72335 *) ((char *) &sp->t0038 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v9->t0008.u1 = (size_t) x25;
	struct Eq_72346 * v12 = (struct Eq_72346 *) ((char *) &sp->t0038 + 40);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_72357 * v15 = (struct Eq_72357 *) ((char *) &sp->t0038 + 56);
	Eq_14 x22;
	v15->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_72368 * v18 = (struct Eq_72368 *) ((char *) &sp->t0038 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v18->t0008.u1 = (size_t) x19;
	struct Eq_72379 * v21 = (struct Eq_72379 *) ((char *) &sp->t0038 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0038 + 88;
	Eq_1720 sysreg3_3_13_0_2;
	x26 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x26 + 40);
	Eq_14 x4;
	x24 = x4;
	Eq_14 x3;
	x22 = x3;
	Eq_14 x2;
	x23 = x2;
	sp->t0038.u1 = (size_t) x8;
	Eq_14 v29 = *x1.u1;
	ui32 w8 = (word32) v29;
	struct Eq_72413 * v32 = (struct Eq_72413 *) ((word32) x1 + 8);
	struct Eq_72417 * x10 = v32->ptr0000;
	Eq_14 x9;
	x9.u1 = v32->t0008.u1;
	x25 = x1;
	Eq_14 x0;
	x19 = x0;
	ui32 w31 = w8 & 0x01;
	Eq_72427 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	Eq_14 x11 = x8 >> 1;
	bool Z;
	x1.u1 = Test(NE,Z) ? x9 : (word32) x1 + 1;
	x2.u1 = Test(EQ,Z) ? x11 : x10;
	x0.u1 = (char *) &sp->t0018 + 8;
	fn000000000001C420();
	x28 = *((word32) x19 + 8);
	x20 = x0;
	if (x28 != 0x00)
	{
		x27 = x28 - 0x01;
		Eq_14 x13 = x27 & x28;
		NZ.u0 = cond(x13);
		C = false;
		V = false;
		Eq_72460 x31;
		Eq_72462 NZCV;
		if (Test(NE,Z))
		{
			x31 = x20 - x28;
			NZCV.u0 = cond(x31);
			x21 = x20;
			if (Test(UGE,C))
			{
				x8 = x20 /u x28;
				x21 = x20 - x8 *64 x28;
			}
		}
		else
			x21 = x27 & x20;
		x8 = *x19.u1;
		x8.u1 = *(x8 + x21);
		if (x8 != 0x00)
		{
			sp->t0018.u1 = (size_t) x24;
			x24 = *x8.u1;
			if (x24 != 0x00)
			{
				struct Eq_72500 * v44 = (struct Eq_72500 *) &sp->t0008.u0;
				v44->t0000.u1 = (size_t) x26;
				v44->t0008.u1 = (size_t) x20;
				Eq_14 v45 = *x25.u1;
				w8 = (word32) v45;
				struct Eq_72514 * v46 = (struct Eq_72514 *) ((word32) x25 + 8);
				x10 = v46->ptr0000;
				x11.u1 = v46->t0008.u1;
				x9.u1 = (word32) x25 + 1;
				uint64 x12 = x8 >> 1;
				w31 = w8 & 0x01;
				NZ.u0 = cond(w31);
				C = false;
				V = false;
				x25.u1 = Test(EQ,Z) ? x12 : x10;
				x26.u1 = Test(EQ,Z) ? x9 : x11;
				do
				{
					x8 = *((word32) x24 + 8);
					x31 = x8 - x20;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
					{
						if (x13 != 0x00)
						{
							x31 = x8 - x28;
							NZCV.u0 = cond(x31);
							if (Test(ULT,C))
								goto l000000000003D2D8;
							x9 = x8 /u x28;
							x8 -= x9 *64 x28;
							x31 = x8 - x21;
							NZCV.u0 = cond(x31);
							if (Test(NE,Z))
								break;
						}
						else
						{
							x8 &= x27;
l000000000003D2D8:
							x31 = x8 - x21;
							NZCV.u0 = cond(x31);
							if (Test(NE,Z))
								break;
						}
					}
					x9 = x24;
					x9.u1 = (word32) x9 + 16;
					Eq_14 v49 = *x9.u1;
					ui32 w10 = (word32) v49;
					x11 = *((word32) x9 + 8);
					x8 = x10 >> 1;
					w31 = w10 & 0x01;
					NZ.u0 = cond(w31);
					x11.u1 = Test(EQ,Z) ? x8 : x11;
					x31 = x11 - x25;
					NZCV.u0 = cond(x31);
					if (Test(EQ,Z))
					{
						x11 = *((word32) x24 + 32);
						w31 = w10 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x0.u1 = Test(NE,Z) ? x11 : (word32) x9 + 1;
						if ((w10 & 0x01) != 0x00)
						{
							if (x25 != 0x00)
							{
								x9.u0 = 0x00;
								do
								{
									x10 = x24 + x9;
									byte v50 = x10->b0011;
									w10 = (word32) v50;
									byte v52 = (byte) *(x26 + x9);
									ui32 w11 = (word32) v52;
									NZCV.u0 = cond(w10 - w11);
									if (Test(NE,Z))
										goto l000000000003D374;
									x9.u1 = (word32) x9 + 1;
									x31 = x8 - x9;
									NZCV.u0 = cond(x31);
								} while (Test(NE,Z));
							}
						}
						else
						{
							if (x25 == 0x00)
								goto l000000000003D420;
							x1 = x26;
							x2 = x25;
							x20 = x21;
							x21 = x23;
							x23 = x22;
							x22 = x13;
							x0 = SEQ(0x00, memcmp(x0, x1, x2));
							x13 = x22;
							x22 = x23;
							x23 = x21;
							x21 = x20;
							x20.u1 = sp->t0010.u1;
							word32 w0;
							if (w0 != 0x00)
								goto l000000000003D374;
						}
l000000000003D420:
						x26.u1 = sp->t0008.u1;
						x1.u0 = 0x00;
						x8 = *((word32) x26 + 40);
						x9.u1 = sp->t0038.u1;
						x31 = x8 - x9;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							__stack_chk_fail();
						else
						{
							x0 = x24;
							struct Eq_72657 * v54 = (struct Eq_72657 *) ((char *) &sp->t0038 + 88);
							x29 = v54->ptr0000;
							x30 = v54->qw0008;
							struct Eq_72666 * v55 = (struct Eq_72666 *) ((char *) &sp->t0038 + 72);
							x20.u1 = v55->t0000.u1;
							x19.u1 = v55->t0008.u1;
							struct Eq_72675 * v56 = (struct Eq_72675 *) ((char *) &sp->t0038 + 56);
							x22.u1 = v56->t0000.u1;
							x21.u1 = v56->t0008.u1;
							struct Eq_72684 * v57 = (struct Eq_72684 *) ((char *) &sp->t0038 + 40);
							x24.u1 = v57->t0000.u1;
							x23.u1 = v57->t0008.u1;
							struct Eq_72693 * v58 = (struct Eq_72693 *) ((char *) &sp->t0038 + 24);
							x26.u1 = v58->t0000.u1;
							x25.u1 = v58->t0008.u1;
							struct Eq_72702 * v59 = (struct Eq_72702 *) ((char *) &sp->t0038 + 8);
							x28.u1 = v59->t0000.u1;
							x27 = v59->qw0008;
							sp = (struct Eq_72319 *) ((char *) &sp->t0038 + 0x0068);
							return;
						}
					}
l000000000003D374:
					x24 = *x24.u1;
				} while (x24 != 0x00);
				x26.u1 = sp->t0008.u1;
			}
			x24.u1 = sp->t0018.u1;
		}
	}
	x8.u1 = (char *) &sp->t0018 + 8;
	x0 = x19;
	x1 = x20;
	x2 = x23;
	x3 = x22;
	x4 = x24;
	fn000000000001BA10();
	x8 = *((word32) x19 + 24);
	Eq_14 s0 = *((word32) x19 + 32);
	x8.u1 = x8 + (struct Eq_108499 *) 0x01;
}

// 000000000003D54C: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_
{
	union Eq_14 * fp;
	union Eq_14 * sp = fp;
	sp = (union Eq_14 *) ((char *) sp - 80);
	Eq_14 x25;
	sp->u1 = (size_t) x25;
	struct Eq_72721 * v7 = (struct Eq_72721 *) ((char *) sp + 16);
	Eq_14 x24;
	v7->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_72732 * v10 = (struct Eq_72732 *) ((char *) sp + 32);
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_72743 * v13 = (struct Eq_72743 *) ((char *) sp + 48);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_72754 * v16 = (struct Eq_72754 *) ((char *) sp + 64);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = (char *) sp + 64;
	Eq_14 x0;
	x23.u1 = (word32) x0 + 16;
	ui32 w0 = 0x00 | 0x0100;
	Eq_14 x3;
	x22 = x3;
	Eq_14 x1;
	x19 = x1;
	Eq_14 x8;
	x20 = x8;
	_Znwm();
	Eq_14 v22 = x20;
	*v22.u1 = x0;
	*((word32) v22 + 8) = x23;
	((word32) x20 + 16)->u0 = 0x00;
	x8 = *x22.u1;
	x21 = x0;
	x0.u1 = (word32) x0 + 16;
	x0.u1->u1 = 0x00;
	struct Eq_72799 * v23 = (struct Eq_72799 *) ((word32) x21 + 24);
	v23->qw0000 = 0x00;
	v23->qw0008 = 0x00;
	Eq_72794 v25 = *x8.u1;
	ui32 w9 = (word32) v25;
	Eq_72794 q0;
	if ((w9 & 0x01) != 0x00)
	{
		Eq_14 x9 = *((word32) x8 + 16);
		q0 = *x8.u1;
		*((word32) x0 + 16) = x9;
		x0.u1->u1 = q0;
		goto l000000000003D610;
	}
	x22 = *((word32) x8 + 8);
	sp = (union Eq_14 *) ((word32) x22 + 16);
	Eq_72824 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		fn000000000001B2D0();
		x19 = x0;
		x0 = x21;
		x20.u1->u0 = 0x00;
		((real64) q0, x0, x1);
		x0 = x19;
		_Unwind_Resume();
		_ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE6rehashEm();
		return;
	}
	x23 = *((word32) x8 + 16);
	NZCV.u0 = cond(x22 - 0x17);
	ui32 w8;
	if (Test(ULT,C))
	{
		ui32 w22;
		w8 = w22 << 1;
		x24.u1 = (word32) x21 + 0x0011;
		*((word32) x21 + 16) = (byte) w8;
		if (x22 == 0x00)
			goto l000000000003D60C;
	}
	else
	{
		x8.u1 = (word32) x22 + 16;
		x25 = x8 & ~0x0F;
		x0 = x25;
		_Znwm();
		x8 = x25 | 0x01;
		x24 = x0;
		struct Eq_72990 * v44 = (struct Eq_72990 *) ((word32) x21 + 24);
		v44->t0000.u1 = (size_t) x22;
		v44->t0008.u1 = (size_t) x0;
		*((word32) x21 + 16) = x8;
	}
	x0 = x24;
	x1 = x23;
	Eq_14 x2 = x22;
	x0 = memcpy(x0, x1, x2);
l000000000003D60C:
	*(x24 + x22) = (word64) 0x00;
l000000000003D610:
	w8 = 0x00 | 0x01;
	*((word32) x20 + 16) = (byte) w8;
	x8 = *x20.u1;
	q0.u1 = 0;
	struct Eq_72855 * v32 = (struct Eq_72855 *) ((word32) x21 + 224);
	v32->t0000.u1 = (word128) q0;
	v32->t0010.u1 = (word128) q0;
	struct Eq_72864 * v33 = (struct Eq_72864 *) ((word32) x21 + 0x00C0);
	v33->t0000.u1 = (word128) q0;
	v33->t0010.u1 = (word128) q0;
	struct Eq_72873 * v34 = (struct Eq_72873 *) ((word32) x21 + 0x00A0);
	v34->t0000.u1 = (word128) q0;
	v34->t0010.u1 = (word128) q0;
	struct Eq_72882 * v35 = (struct Eq_72882 *) ((word32) x21 + 0x0080);
	v35->t0000.u1 = (word128) q0;
	v35->t0010.u1 = (word128) q0;
	struct Eq_72891 * v36 = (struct Eq_72891 *) ((word32) x21 + 96);
	v36->t0000.u1 = (word128) q0;
	v36->t0010.u1 = (word128) q0;
	struct Eq_72900 * v37 = (struct Eq_72900 *) ((word32) x21 + 64);
	v37->t0000.u1 = (word128) q0;
	v37->t0010.u1 = (word128) q0;
	((word32) x21 + 48)->u1 = q0;
	Eq_14 v38 = x8;
	v38.u1->u1 = 0x00;
	*((word32) v38 + 8) = x19;
	struct Eq_72920 * v39 = (struct Eq_72920 *) ((char *) sp + 64);
	x29 = v39->ptr0000;
	x30 = v39->qw0008;
	struct Eq_72929 * v40 = (struct Eq_72929 *) ((char *) sp + 48);
	x20.u1 = v40->t0000.u1;
	x19.u1 = v40->t0008.u1;
	struct Eq_72938 * v41 = (struct Eq_72938 *) ((char *) sp + 32);
	x22.u1 = v41->t0000.u1;
	x21.u1 = v41->t0008.u1;
	struct Eq_72947 * v42 = (struct Eq_72947 *) ((char *) sp + 16);
	x24.u1 = v42->t0000.u1;
	x23.u1 = v42->t0008.u1;
	x25.u1 = sp->u1;
	sp = (union Eq_14 *) ((char *) sp + 80);
}

// 000000000003D674: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE6rehashEm
// Called from:
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE6rehashEm
{
	struct Eq_73035 * x1;
	ui64 * fp;
	ui64 * sp = fp;
	sp += -6;
	ui64 x21;
	*sp = x21;
	struct Eq_73033 * v7 = (struct Eq_73033 *) (sp + 2);
	struct Eq_73035 * x20;
	v7->ptr0000 = x20;
	struct Eq_73035 * x19;
	v7->ptr0008 = x19;
	struct Eq_73044 * v10 = (struct Eq_73044 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	ui64 x8 = x1 - 0x01;
	Eq_73060 NZCV;
	NZCV.u0 = cond(x8);
	struct Eq_73035 * x0;
	x19 = x0;
	bool Z;
	Eq_73066 NZ;
	bool C;
	bool V;
	if (Test(EQ,Z))
	{
		ui32 w20 = 0x00 | 0x02;
	}
	else
	{
		x20 = x1;
		NZ.u0 = cond(x8 & x1);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			x0 = x20;
			_ZNSt6__ndk112__next_primeEm();
			x20 = x0;
		}
	}
	x21 = x19->qw0008;
	word64 x31 = x20 - x21;
	NZCV.u0 = cond(x31);
	word32 ZC;
	if (Test(ULE,ZC))
	{
		if (Test(UGE,C))
		{
			struct Eq_73119 * v29 = (struct Eq_73119 *) (sp + 4);
			x29 = v29->ptr0000;
			x30 = v29->qw0008;
			struct Eq_73128 * v30 = (struct Eq_73128 *) (sp + 2);
			x20 = v30->ptr0000;
			x19 = v30->ptr0008;
			x21 = *sp;
			sp += 6;
		}
		else
		{
			NZCV.u0 = cond(x21 - 0x03);
			word32 w8;
			if (Test(UGE,C))
			{
				x8 = x21 - 0x01;
				NZ.u0 = cond(x8 & x21);
				C = false;
				V = false;
				w8 = (word32) Test(EQ,Z);
			}
			else
				w8 = 0x00;
			word64 x9 = x19->qw0018;
			word32 s0 = x19->dw0020;
		}
	}
	else
	{
		x0 = x19;
		x1 = x20;
		struct Eq_73089 * v22 = (struct Eq_73089 *) (sp + 4);
		x29 = v22->ptr0000;
		x30 = v22->qw0008;
		struct Eq_73098 * v23 = (struct Eq_73098 *) (sp + 2);
		x20 = v23->ptr0000;
		x19 = v23->ptr0008;
		x21 = *sp;
		sp += 6;
		Eq_14 x16;
		x16.u0 = 0x00070000;
		<anonymous> * x17 = (<anonymous> *) *((word32) x16 + 0x0BF8);
		x16.u1 = (word32) x16 + 0x0BF8;
		x17();
	}
}

// 000000000003D758: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE8__rehashEm
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE8__rehashEm
{
	Eq_14 x16;
	struct Eq_73163 * fp;
	struct Eq_73163 * sp = fp;
	sp -= 0x80;
	struct Eq_73168 * v6 = (struct Eq_73168 *) ((char *) &sp->t0018 + 8);
	Eq_14 x28;
	v6->t0000.u1 = (size_t) x28;
	Eq_14 x27;
	v6->t0008.u1 = (size_t) x27;
	struct Eq_73179 * v9 = (struct Eq_73179 *) ((char *) &sp->t0018 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	ui64 x25;
	v9->qw0008 = x25;
	struct Eq_73190 * v12 = (struct Eq_73190 *) ((char *) &sp->t0018 + 40);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_73201 * v15 = (struct Eq_73201 *) ((char *) &sp->t0018 + 56);
	Eq_14 x22;
	v15->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_73212 * v18 = (struct Eq_73212 *) ((char *) &sp->t0018 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v18->t0008.u1 = (size_t) x19;
	struct Eq_73223 * v21 = (struct Eq_73223 *) ((char *) &sp->t0018 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 88;
	Eq_14 x0;
	x19 = x0;
	Eq_14 x1;
	word128 q0;
	if (x1 != 0x00)
	{
		x20 = x1;
		Eq_14 x8 = x1 >> 61;
		if (x8 != 0x00)
		{
			x0.u0 = 0x00052000;
			x0.u1 = (word32) x0 + 0x0569;
			fn00000000000373A8();
			_ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_();
			return;
		}
		x0 = x20 << 3;
		_Znwm();
		x8 = *x19.u1;
		*x19.u1 = x0;
		if (x8 != 0x00)
		{
			x0 = x8;
			((real64) q0, x0, x1);
		}
		x8.u0 = 0x00;
		*((word32) x19 + 8) = x20;
		Eq_14 x9;
		ui64 x31;
		Eq_73358 NZCV;
		bool Z;
		do
		{
			x9 = *x19.u1;
			*(x9 + x8) = 0x00;
			x8.u1 = (word32) x8 + 1;
			x31 = x20 - x8;
			NZCV.u0 = cond(x31);
		} while (Test(NE,Z));
		x8 = x19;
		x8.u1 = (word32) x8 + 16;
		x24 = *x8.u1;
		if (x24 != 0x00)
		{
			x28 = *((word32) x24 + 8);
			x25 = x20 - 0x01;
			ui64 x14 = x25 & x20;
			Eq_73376 NZ;
			NZ.u0 = cond(x14);
			bool C = false;
			bool V = false;
			if (Test(NE,Z))
			{
				x31 = x28 - x20;
				NZCV.u0 = cond(x31);
				if (Test(UGE,C))
				{
					x9 = x28 /u x20;
					x28 -= x9 *64 x20;
				}
			}
			else
				x28 &= x25;
			x9 = *x19.u1;
			*(x9 + x28) = (word64) x8;
			x23 = *x24.u1;
			if (x23 != 0x00)
			{
				struct Eq_73403 * v40 = (struct Eq_73403 *) &sp->t0008.u0;
				v40->t0000.u1 = (size_t) x19;
				v40->t0008.u1 = (size_t) x20;
				sp->qw0000 = x14;
				do
				{
					x27 = *((word32) x23 + 8);
					if (x14 != 0x00)
					{
						x31 = x27 - x20;
						NZCV.u0 = cond(x31);
						if (Test(UGE,C))
						{
							x8 = x27 /u x20;
							x27 -= x8 *64 x20;
						}
						x31 = x27 - x28;
						NZCV.u0 = cond(x31);
						if (Test(EQ,Z))
							goto l000000000003D848;
						goto l000000000003D85C;
					}
					x27 &= x25;
					x31 = x27 - x28;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
					{
l000000000003D85C:
						x8 = *x19.u1;
						x9.u1 = *(x8 + x27);
						if (x9 != 0x00)
						{
							x8 = *x23.u1;
							x22 = x23;
							if (x8 != 0x00)
							{
								Eq_14 v42 = *((word32) x23 + 16);
								ui32 w16 = (word32) v42;
								x9 = *((word32) x23 + 24);
								Eq_14 x17;
								x17.u1 = (word32) x23 + 0x0011;
								x26 = x23;
								Eq_14 x10 = x16 >> 1;
								ui32 w31 = w16 & 0x01;
								NZ.u0 = cond(w31);
								C = false;
								V = false;
								x21.u1 = Test(EQ,Z) ? x10 : x9;
								Eq_14 x2 = 0x00 - x10;
								sp->t0018.u1 = (size_t) x2;
								do
								{
									x22 = x26;
									x26 = x8;
									x8.u1 = (word32) x8 + 16;
									Eq_14 v49 = *x8.u1;
									ui32 w9 = (word32) v49;
									x10 = *((word32) x8 + 8);
									Eq_14 x11 = x9 >> 1;
									w31 = w9 & 0x01;
									NZ.u0 = cond(w31);
									x10.u1 = Test(EQ,Z) ? x11 : x10;
									x31 = x21 - x10;
									NZCV.u0 = cond(x31);
									if (Test(NE,Z))
										break;
									x10 = *((word32) x23 + 32);
									x11 = *((word32) x26 + 32);
									w31 = w16 & 0x01;
									NZ.u0 = cond(w31);
									x0.u1 = Test(EQ,Z) ? x17 : x10;
									w31 = w9 & 0x01;
									NZ.u0 = cond(w31);
									C = false;
									V = false;
									x1.u1 = Test(NE,Z) ? x11 : (word32) x8 + 1;
									if ((w16 & 0x01) != 0x00)
									{
										x8 = x2;
										x9 = x17;
										if (x21 != 0x00)
										{
											do
											{
												byte v52 = (byte) *x9.u1;
												word32 w10 = (word32) v52;
												byte v54 = (byte) *x1.u1;
												word32 w11 = (word32) v54;
												NZCV.u0 = cond(w10 - w11);
												if (Test(NE,Z))
													goto l000000000003D93C;
												x9.u1 = (word32) x9 + 1;
												x8.u1 = (word32) x8 + 1;
												NZCV.u0 = cond(x8);
												x1.u1 = (word32) x1 + 1;
											} while (Test(NE,Z));
										}
									}
									else if (x21 != 0x00)
									{
										x2 = x21;
										x20 = x16;
										x19 = x17;
										x0 = SEQ(0x00, memcmp(x0, x1, x2));
										x17 = x19;
										x16 = x20;
										struct Eq_73163 * v55 = sp;
										x14 = v55->qw0000;
										x19.u1 = v55->t0008.u1;
										struct Eq_73602 * v56 = (struct Eq_73602 *) ((char *) &sp->t0008 + 8);
										x20.u1 = v56->t0000.u1;
										x2.u1 = v56->t0008.u1;
										word32 w0;
										if (w0 != 0x00)
											break;
									}
									x8 = *x26.u1;
									x22 = x26;
								} while (x8 != 0x00);
							}
l000000000003D93C:
							x8 = *x22.u1;
							x9 = x27 << 3;
							*x24.u1 = x8;
							x8 = *x19.u1;
							x8.u1 = *(x8 + x9);
							x8 = *x8.u1;
							*x22.u1 = x8;
							x8 = *x19.u1;
							x8.u1 = *(x8 + x9);
							*x8.u1 = x23;
						}
						else
						{
							*(x8 + x27) = (word64) x24;
							x24 = x23;
							x28 = x27;
						}
					}
					else
					{
l000000000003D848:
						x24 = x23;
					}
					x23 = *x24.u1;
				} while (x23 != 0x00);
			}
		}
	}
	else
	{
		x0 = *x19.u1;
		x19.u1->u0 = 0x00;
		if (x0 != 0x00)
			((real64) q0, x0, x1);
		((word32) x19 + 8)->u0 = 0x00;
	}
	struct Eq_73292 * v34 = (struct Eq_73292 *) ((char *) &sp->t0018 + 88);
	x29 = v34->ptr0000;
	x30 = v34->qw0008;
	struct Eq_73301 * v35 = (struct Eq_73301 *) ((char *) &sp->t0018 + 72);
	x20.u1 = v35->t0000.u1;
	x19.u1 = v35->t0008.u1;
	struct Eq_73310 * v36 = (struct Eq_73310 *) ((char *) &sp->t0018 + 56);
	x22.u1 = v36->t0000.u1;
	x21.u1 = v36->t0008.u1;
	struct Eq_73319 * v37 = (struct Eq_73319 *) ((char *) &sp->t0018 + 40);
	x24.u1 = v37->t0000.u1;
	x23.u1 = v37->t0008.u1;
	struct Eq_73328 * v38 = (struct Eq_73328 *) ((char *) &sp->t0018 + 24);
	x26.u1 = v38->t0000.u1;
	x25 = v38->qw0008;
	struct Eq_73337 * v39 = (struct Eq_73337 *) ((char *) &sp->t0018 + 8);
	x28.u1 = v39->t0000.u1;
	x27.u1 = v39->t0008.u1;
	sp = (struct Eq_73163 *) ((char *) &sp->t0018 + 0x0068);
}

// 000000000003D9A8: define _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_
// Called from:
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE8__rehashEm
define _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_
{
	Eq_73628 x0;
	struct Eq_73613 * fp;
	struct Eq_73613 * sp = fp;
	sp = (struct Eq_73613 *) ((char *) sp - 48);
	ui64 x22;
	sp->qw0000 = x22;
	int64 x21;
	sp->qw0008 = x21;
	struct Eq_73626 * v8 = (struct Eq_73626 *) (&sp->qw0008 + 1);
	Eq_73628 x20;
	v8->t0000.u2 = (struct Eq_108553 *) x20;
	Eq_73628 x19;
	v8->t0008.u2 = (struct Eq_108553 *) x19;
	struct Eq_73637 * v11 = (struct Eq_73637 *) (&sp->qw0008 + 3);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = &sp->qw0008 + 3;
	Eq_73628 v15 = x0;
	Eq_73628 x9;
	x9.u2 = v15.u2->t0000.u2;
	Eq_73628 x8;
	x8.u2 = v15.u2->t0008.u2;
	Eq_73628 x10 = 0x00 | 0xAAAAAAAAAAAAAAAA;
	x10 = SEQ(SLICE(x10, word48, 16), ~0x5554);
	x21 = 0x00 | 0xAAAAAAAAAAAAAAAA;
	x8 -= x9;
	x8 >>= 3;
	x22 = x8 *64 x10;
	x21 = SEQ(0x0AAA, (word48) x21);
	x8 = x22 + 0x01;
	x19 = x0;
	int64 x31 = x8 - x21;
	Eq_73680 NZCV;
	NZCV.u0 = cond(x31);
	word32 ZC;
	if (Test(UGT,ZC))
	{
		x0 = x19;
		fn000000000001B7E0();
		_ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S9_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_();
		return;
	}
	Eq_73628 x11;
	x11.u2 = x19.u2->t0010.u2;
	Eq_73628 x1;
	x20 = x1;
	x9 = x11 - x9;
	x9 >>= 3;
	x9 *= x10;
	x10 = 0x00 | 0x5555555555555555;
	x10 = SEQ(SLICE(x10, word48, 16), 0x5554);
	x10 = SEQ(0x0555, (word48) x10);
	x31 = x9 - x10;
	NZCV.u0 = cond(x31);
	if (Test(ULE,ZC))
	{
		x9 <<= 1;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		bool C;
		x21 = Test(ULT,C) ? x8 : x9;
		if (x21 == 0x00)
		{
			x0.u0 = 0x00;
l000000000003DA2C:
			x8.u2 = x20.u2->t0010.u2;
			Eq_73628 q0;
			q0.u1 = x20.u2->t0000.u1;
			ui32 w9 = 0x00 | 0x18;
			x10.u2 = &x0.u2->t0000.u0 + x22 *64 x9;
			x10.u2->t0010.u2 = (struct Eq_108553 *) x8;
			x10.u2->t0000.u1 = (word128) q0;
			struct Eq_73817 * v25 = (struct Eq_73817 *) &x20.u2->t0008.u0;
			v25->qw0000 = 0x00;
			v25->qw0008 = 0x00;
			x20.u2->t0000.u2 = (struct Eq_108553 *) 0x00;
			Eq_73628 v27 = x19;
			x8.u2 = v27.u2->t0000.u2;
			Eq_73628 x12;
			x12.u2 = v27.u2->t0008.u2;
			x9.u2 = &x0.u2->t0000.u0 + x21 *64 x9;
			x11.u2 = (word32) x10 + 24;
			x31 = x12 - x8;
			NZCV.u0 = cond(x31);
			bool Z;
			if (Test(NE,Z))
			{
				do
				{
					Eq_73628 x13;
					x13.u2 = x12.u2->tFFFFFFF8.u2;
					q0.u1 = x12.u2->tFFFFFFE8.u1;
					x10.u2->tFFFFFFF8.u2 = (struct Eq_108553 *) x13;
					x10.u2->tFFFFFFE8.u1 = (word128) q0;
					struct Eq_73739 * v30 = (struct Eq_73739 *) ((word32) x12 - 16);
					v30->qw0000 = 0x00;
					v30->qw0008 = 0x00;
					x12.u2->tFFFFFFE8.u2 = (struct Eq_108553 *) 0x00;
					x12 -= 0x18;
					x31 = x8 - x12;
					NZCV.u0 = cond(x31);
					x10 -= 0x18;
				} while (Test(NE,Z));
				Eq_73628 v31 = x19;
				x20.u2 = v31.u2->t0000.u2;
				x8.u2 = v31.u2->t0008.u2;
			}
			else
				x20 = x8;
			x31 = x8 - x20;
			NZCV.u0 = cond(x31);
			Eq_73628 v32 = x19;
			v32.u2->t0000.u2 = (struct Eq_108553 *) x10;
			v32.u2->t0008.u2 = (struct Eq_108553 *) x11;
			x19.u2->t0010.u2 = (struct Eq_108553 *) x9;
			if (Test(NE,Z))
			{
				x19 = x8;
				do
				{
					x19.u2 = &x19.u2->tFFFFFFE8.u0;
					Eq_73628 v33;
					v33.u0 = x19.u2->t0000.u0;
					w9 = (word32) v33;
					if ((w9 & 0x01) != 0x00)
					{
						x0.u2 = x8.u2->tFFFFFFF8.u2;
						((real64) q0, x0, x1);
					}
					x31 = x20 - x19;
					NZCV.u0 = cond(x31);
					x8 = x19;
				} while (Test(NE,Z));
			}
			if (x20 == 0x00)
			{
				struct Eq_73857 * v37 = (struct Eq_73857 *) (&sp->qw0008 + 3);
				x29 = v37->ptr0000;
				x30 = v37->qw0008;
				struct Eq_73866 * v38 = (struct Eq_73866 *) (&sp->qw0008 + 1);
				x20.u2 = v38->t0000.u2;
				x19.u2 = v38->t0008.u2;
				struct Eq_73613 * v39 = sp;
				x22 = v39->qw0000;
				x21 = v39->qw0008;
				sp = &sp->qw0008 + 5;
				return;
			}
			else
			{
				x0 = x20;
				struct Eq_73884 * v34 = (struct Eq_73884 *) (&sp->qw0008 + 3);
				x29 = v34->ptr0000;
				x30 = v34->qw0008;
				struct Eq_73893 * v35 = (struct Eq_73893 *) (&sp->qw0008 + 1);
				x20.u2 = v35->t0000.u2;
				x19.u2 = v35->t0008.u2;
				struct Eq_73613 * v36 = sp;
				x22 = v36->qw0000;
				x21 = v36->qw0008;
				sp = &sp->qw0008 + 5;
				((real64) q0, x0, x1);
				return;
			}
		}
	}
	x8 = x21 + (x21 << 1);
	x0 = x8 << 3;
	_Znwm();
	goto l000000000003DA2C;
}

// 000000000003DB00: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S9_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
// Called from:
//      _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JNS_4pairIS3_S9_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
{
	int32 * x1;
	struct Eq_73917 * fp;
	struct Eq_73917 * sp = fp;
	sp = (struct Eq_73917 *) ((char *) sp - 64);
	Eq_73921 x24;
	sp->t0000.ptr0000 = (struct Eq_108554 *) x24;
	Eq_73921 x23;
	sp->t0008.ptr0000 = (struct Eq_108554 *) x23;
	struct Eq_73930 * v8 = (struct Eq_73930 *) (&sp->t0008 + 1);
	Eq_73921 x22;
	v8->t0000.ptr0000 = (struct Eq_108554 *) x22;
	struct Eq_73936 * x21;
	v8->ptr0008 = x21;
	struct Eq_73941 * v11 = (struct Eq_73941 *) (&sp->t0008 + 3);
	Eq_73921 x20;
	v11->t0000.ptr0000 = (struct Eq_108554 *) x20;
	Eq_73921 x19;
	v11->t0008.ptr0000 = (struct Eq_108554 *) x19;
	struct Eq_73952 * v14 = (struct Eq_73952 *) (&sp->t0008 + 5);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = &sp->t0008 + 5;
	Eq_73921 x0;
	x22 = (Eq_73921) x0.ptr0000->t0008.ptr0000;
	int32 v17 = *x1;
	x23 = (Eq_73921) (int64) v17;
	x19 = x0;
	struct Eq_73936 * x2;
	x21 = x2;
	ui64 x8;
	if (x22 != 0x00)
	{
		x8 = x22 - 0x01;
		ui64 x9 = x8 & x22;
		Eq_73982 NZ;
		NZ.u0 = cond(x9);
		bool C = false;
		bool V = false;
		bool Z;
		Eq_73991 x31;
		Eq_73993 NZCV;
		Eq_73921 x10;
		if (Test(NE,Z))
		{
			x31 = x22 - x23;
			NZCV.u0 = cond(x31);
			x24 = x23;
			word32 ZC;
			if (Test(ULE,ZC))
			{
				x10 = x23 /u x22;
				x24 = x23 - x10 * x22;
			}
		}
		else
			x24 = x8 & x23;
		x10 = (Eq_73921) x19.ptr0000->a0000[0].ptr0000;
		x20 = (Eq_73921) *(x10 + x24);
		if (x20 != 0x00)
		{
			do
			{
				x20 = (Eq_73921) x20.ptr0000->a0000[0].ptr0000;
				if (x20 == 0x00)
					goto l000000000003DBB4;
				x10 = (Eq_73921) x20.ptr0000->t0008.ptr0000;
				x31 = x10 - x23;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					if (x9 != 0x00)
					{
						x31 = x10 - x22;
						NZCV.u0 = cond(x31);
						if (Test(ULT,C))
							goto l000000000003DB98;
						uint64 x11 = x10 /u x22;
						x10 -= x11 * x22;
						x31 = x10 - x24;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l000000000003DBB4;
					}
					else
					{
						x10 &= x8;
l000000000003DB98:
						x31 = x10 - x24;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l000000000003DBB4;
					}
				}
				word32 w10 = x20.ptr0000->dw0010;
				word32 w23;
				NZCV.u0 = cond(w10 - w23);
			} while (Test(NE,Z));
			x1 = null;
			x0 = x20;
			struct Eq_74103 * v38 = (struct Eq_74103 *) (&sp->t0008 + 5);
			x29 = v38->ptr0000;
			x30 = v38->qw0008;
			struct Eq_74112 * v39 = (struct Eq_74112 *) (&sp->t0008 + 3);
			x20 = (Eq_73921) v39->t0000.ptr0000;
			x19 = (Eq_73921) v39->t0008.ptr0000;
			struct Eq_74121 * v40 = (struct Eq_74121 *) (&sp->t0008 + 1);
			x22 = (Eq_73921) v40->t0000.ptr0000;
			x21 = v40->ptr0008;
			struct Eq_73917 * v41 = sp;
			x24 = (Eq_73921) v41->t0000.ptr0000;
			x23 = (Eq_73921) v41->t0008.ptr0000;
			sp = &sp->t0008 + 7;
			return;
		}
	}
l000000000003DBB4:
	ui32 w0 = 0x00 | 0x30;
	_Znwm();
	word32 w8 = x21->dw0000;
	x20 = x0;
	x0.ptr0000->dw0010 = w8;
	x8 = x21->qw0018;
	Eq_74026 q0;
	q0.u0 = x21->t0008.u0;
	x0.ptr0000->qw0028 = x8;
	x0.ptr0000->t0018.u0 = (word128) q0;
	struct Eq_74035 * v32 = (struct Eq_74035 *) ((char *) &x21->t0008 + 8);
	v32->qw0000 = 0x00;
	v32->qw0008 = 0x00;
	x21->t0008.u1 = 0x00;
	Eq_73921 v33 = x0;
	v33.ptr0000->a0000[0].ptr0000 = (struct Eq_108554 *) 0x00;
	v33.ptr0000->t0008.ptr0000 = (struct Eq_108554 *) x23;
	x8 = x19.ptr0000->t0018.u1;
	word32 s0 = (word32) *((char *) &x19.ptr0000->t0018 + 8);
	++x8;
}

// 000000000003DD2C: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S9_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S9_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
{
	struct Eq_74138 * fp;
	struct Eq_74138 * sp = fp;
	sp -= 0x80;
	struct Eq_74143 * v6 = (struct Eq_74143 *) ((char *) &sp->t0018 + 8);
	ui64 x28;
	v6->qw0000 = x28;
	Eq_14 x27;
	v6->t0008.u1 = (size_t) x27;
	struct Eq_74154 * v9 = (struct Eq_74154 *) ((char *) &sp->t0018 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	struct Eq_74160 * x25;
	v9->ptr0008 = x25;
	struct Eq_74165 * v12 = (struct Eq_74165 *) ((char *) &sp->t0018 + 40);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_74176 * v15 = (struct Eq_74176 *) ((char *) &sp->t0018 + 56);
	Eq_14 x22;
	v15->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_74187 * v18 = (struct Eq_74187 *) ((char *) &sp->t0018 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v18->t0008.u1 = (size_t) x19;
	struct Eq_74198 * v21 = (struct Eq_74198 *) ((char *) &sp->t0018 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 88;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x25->t0028.u1;
	Eq_14 x2;
	x22 = x2;
	Eq_14 x1;
	x23 = x1;
	Eq_14 x0;
	x19 = x0;
	sp->t0018.u1 = (size_t) x8;
	byte v28 = (byte) *x1.u1;
	ui32 w8 = (word32) v28;
	struct Eq_74231 * v31 = (struct Eq_74231 *) ((word32) x1 + 8);
	struct Eq_74235 * x10 = v31->ptr0000;
	Eq_14 x9;
	x9.u1 = v31->t0008.u1;
	ui32 w31 = w8 & 0x01;
	Eq_74244 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	Eq_14 x11 = x8 >> 1;
	bool Z;
	x1.u1 = Test(NE,Z) ? x9 : (word32) x1 + 1;
	x2.u1 = Test(EQ,Z) ? x11 : x10;
	x0.u1 = (char *) &sp->ptr0008 + 8;
	fn000000000001C420();
	x26 = *((word32) x19 + 8);
	x21 = x0;
	ui32 w0;
	if (x26 != 0x00)
	{
		x28 = x26 - 0x01;
		sp->ptr0008 = x25;
		x25 = x28 & x26;
		NZ.u0 = cond(x25);
		C = false;
		V = false;
		struct Eq_74279 * x31;
		Eq_74281 NZCV;
		if (Test(NE,Z))
		{
			x31 = x21 - x26;
			NZCV.u0 = cond(x31);
			x27 = x21;
			if (Test(UGE,C))
			{
				x8 = x21 /u x26;
				x27 = x21 - x8 *64 x26;
			}
		}
		else
			x27 = x28 & x21;
		x8 = *x19.u1;
		x8.u1 = *(x8 + x27);
		if (x8 != 0x00)
		{
			x20 = *x8.u1;
			if (x20 != 0x00)
			{
				Eq_14 v45 = *x23.u1;
				w8 = (word32) v45;
				struct Eq_74366 * v46 = (struct Eq_74366 *) ((word32) x23 + 8);
				x10 = v46->ptr0000;
				x11.u1 = v46->t0008.u1;
				x9.u1 = (word32) x23 + 1;
				uint64 x12 = x8 >> 1;
				w31 = w8 & 0x01;
				NZ.u0 = cond(w31);
				C = false;
				V = false;
				x23.u1 = Test(EQ,Z) ? x12 : x10;
				x24.u1 = Test(EQ,Z) ? x9 : x11;
				do
				{
					x8 = *((word32) x20 + 8);
					x31 = x8 - x21;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
					{
						if (x25 != null)
						{
							x31 = x8 - x26;
							NZCV.u0 = cond(x31);
							if (Test(ULT,C))
								goto l000000000003DE20;
							x9 = x8 /u x26;
							x8 -= x9 *64 x26;
							x31 = x8 - x27;
							NZCV.u0 = cond(x31);
							if (Test(NE,Z))
								break;
						}
						else
						{
							x8 &= x28;
l000000000003DE20:
							x31 = x8 - x27;
							NZCV.u0 = cond(x31);
							if (Test(NE,Z))
								break;
						}
					}
					x9 = x20;
					x9.u1 = (word32) x9 + 16;
					Eq_14 v49 = *x9.u1;
					ui32 w10 = (word32) v49;
					x11 = *((word32) x9 + 8);
					x8 = x10 >> 1;
					w31 = w10 & 0x01;
					NZ.u0 = cond(w31);
					x11.u1 = Test(EQ,Z) ? x8 : x11;
					x31 = x11 - x23;
					NZCV.u0 = cond(x31);
					if (Test(EQ,Z))
					{
						x11 = *((word32) x20 + 32);
						w31 = w10 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x0.u1 = Test(NE,Z) ? x11 : (word32) x9 + 1;
						if ((w10 & 0x01) != 0x00)
						{
							if (x23 != 0x00)
							{
								x9.u0 = 0x00;
								do
								{
									x10 = x20 + x9;
									byte v50 = x10->b0011;
									w10 = (word32) v50;
									byte v52 = (byte) *(x24 + x9);
									ui32 w11 = (word32) v52;
									NZCV.u0 = cond(w10 - w11);
									if (Test(NE,Z))
										goto l000000000003DE98;
									x9.u1 = (word32) x9 + 1;
									x31 = x8 - x9;
									NZCV.u0 = cond(x31);
								} while (Test(NE,Z));
							}
						}
						else
						{
							if (x23 == 0x00)
								goto l000000000003DF60;
							x1 = x24;
							x2 = x23;
							x0 = SEQ(0x00, memcmp(x0, x1, x2));
							if (w0 != 0x00)
								goto l000000000003DE98;
						}
l000000000003DF60:
						x25 = sp->ptr0008;
						x1.u0 = 0x00;
						x8.u1 = x25->t0028.u1;
						x9.u1 = sp->t0018.u1;
						x31 = x8 - x9;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							__stack_chk_fail();
						else
						{
							x0 = x20;
							struct Eq_74502 * v53 = (struct Eq_74502 *) ((char *) &sp->t0018 + 88);
							x29 = v53->ptr0000;
							x30 = v53->qw0008;
							struct Eq_74511 * v54 = (struct Eq_74511 *) ((char *) &sp->t0018 + 72);
							x20.u1 = v54->t0000.u1;
							x19.u1 = v54->t0008.u1;
							struct Eq_74520 * v55 = (struct Eq_74520 *) ((char *) &sp->t0018 + 56);
							x22.u1 = v55->t0000.u1;
							x21.u1 = v55->t0008.u1;
							struct Eq_74529 * v56 = (struct Eq_74529 *) ((char *) &sp->t0018 + 40);
							x24.u1 = v56->t0000.u1;
							x23.u1 = v56->t0008.u1;
							struct Eq_74538 * v57 = (struct Eq_74538 *) ((char *) &sp->t0018 + 24);
							x26.u1 = v57->t0000.u1;
							x25 = v57->ptr0008;
							struct Eq_74547 * v58 = (struct Eq_74547 *) ((char *) &sp->t0018 + 8);
							x28 = v58->qw0000;
							x27.u1 = v58->t0008.u1;
							sp = (struct Eq_74138 *) ((char *) &sp->t0018 + 0x0068);
							return;
						}
					}
l000000000003DE98:
					x20 = *x20.u1;
				} while (x20 != 0x00);
			}
		}
		x25 = sp->ptr0008;
	}
	w0 = 0x00 | 0x0100;
	_Znwm();
	x8 = *((word32) x22 + 16);
	Eq_14 q0 = *x22.u1;
	x20 = x0;
	x24.u1 = (word32) x0 + 16;
	x23.u1 = (word32) x0 + 48;
	x1.u1 = (word32) x22 + 32;
	*((word32) x0 + 32) = x8;
	*((word32) x0 + 16) = q0;
	struct Eq_74320 * v42 = (struct Eq_74320 *) ((word32) x22 + 8);
	v42->qw0000 = 0x00;
	v42->qw0008 = 0x00;
	x22.u1->u0 = 0x00;
	x0 = x23;
	fn000000000001B7B0();
	Eq_14 v43 = x20;
	v43.u1->u0 = 0x00;
	*((word32) v43 + 8) = x21;
	x8 = *((word32) x19 + 24);
	Eq_14 s0 = *((word32) x19 + 32);
	x8.u1 = x8 + (struct Eq_74350 *) 0x01;
}

// 000000000003E06C: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE14__erase_uniqueIS3_EEmRKT_
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE14__erase_uniqueIS3_EEmRKT_
{
	struct Eq_74557 * fp;
	struct Eq_74557 * sp = fp;
	sp -= 0x40;
	struct Eq_74562 * v6 = (struct Eq_74562 *) ((char *) &sp->ptr0018 + 8);
	struct Eq_74564 * x20;
	v6->ptr0000 = x20;
	struct Eq_74568 * x19;
	v6->ptr0008 = x19;
	struct Eq_74573 * v9 = (struct Eq_74573 *) ((char *) &sp->ptr0018 + 24);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->ptr0018 + 24;
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_107421 (* x8)[] = x20->ptr0028;
	sp->ptr0018 = x8;
	struct Eq_74568 * x0;
	x8 = x0->ptr0008;
	Eq_107421 (* x9)[];
	bool Z;
	Eq_107421 (* x31)[];
	Eq_74627 NZCV;
	if (x8 != null)
	{
		Eq_74603 v15;
		Eq_74603 x1;
		v15.u0 = x1.u1->t0000.u0;
		x9 = (int64) v15;
		ui64 x10 = x8 - 0x01;
		ui64 x11 = x10 & x8;
		Eq_74615 NZ;
		NZ.u0 = cond(x11);
		bool C = false;
		bool V = false;
		Eq_107421 (* x12)[];
		if (Test(NE,Z))
		{
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			x12 = x9;
			word32 ZC;
			if (Test(ULE,ZC))
			{
				x12 = x9 /u x8;
				x12 = x9 - x12 * x8;
			}
		}
		else
			x12 = x10 & x9;
		struct Eq_74633 * x13 = x0->ptr0000;
		x13 = *(x13 + x12);
		if (x13 != null)
		{
			x1.u1 = x13->a0000[0].ptr0000;
			while (x1 != 0x00)
			{
				x13 = x1.u1->ptr0008;
				x31 = x13 - x9;
				NZCV.u0 = cond(x31);
				if (Test(EQ,Z))
				{
					word32 w13 = x1.u1->dw0010;
					word32 w9;
					NZCV.u0 = cond(w13 - w9);
					if (Test(EQ,Z))
					{
						x8 = (Eq_107421 (*)[]) &sp->ptr0000;
						fn000000000001B000();
						x19 = sp->ptr0000;
						sp->ptr0000 = null;
						if (x19 != null)
						{
							byte v33 = sp->b0010;
							ui32 w8 = (word32) v33;
							word128 q0;
							if (w8 != 0x00)
							{
								byte v34 = x19->b0018;
								w8 = (word32) v34;
								if ((w8 & 0x01) != 0x00)
								{
									x0 = x19->ptr0028;
									((real64) q0, x0, x1);
								}
							}
							x0 = x19;
							((real64) q0, x0, x1);
						}
						ui32 w0 = 0x00 | 0x01;
						goto l000000000003E124;
					}
					goto l000000000003E108;
				}
				if (x11 != 0x00)
				{
					x31 = x13 - x8;
					NZCV.u0 = cond(x31);
					if (Test(ULT,C))
						goto l000000000003E118;
					uint64 x14 = x13 /u x8;
					x13 -= x14 * x8;
					x31 = x13 - x12;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
						break;
				}
				else
				{
					x13 &= x10;
l000000000003E118:
					x31 = x13 - x12;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
						break;
				}
l000000000003E108:
				x1.u1 = x1.u1->t0000.u1;
			}
		}
	}
	x0 = null;
l000000000003E124:
	x8 = x20->ptr0028;
	x9 = sp->ptr0018;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_74646 * v26 = (struct Eq_74646 *) ((char *) &sp->ptr0018 + 24);
		x29 = v26->ptr0000;
		x30 = v26->qw0008;
		struct Eq_74655 * v27 = (struct Eq_74655 *) ((char *) &sp->ptr0018 + 8);
		x20 = v27->ptr0000;
		x19 = v27->ptr0008;
		sp = (struct Eq_74557 *) ((char *) &sp->ptr0018 + 40);
	}
}

// 000000000003E184: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE
{
	struct Eq_74895 * x8;
	struct Eq_74768 * x0;
	ptr64 fp;
	ptr64 sp = fp;
	struct Eq_74768 * v7 = x0;
	Eq_74772 x15;
	x15.u0 = v7->t0000.u0;
	Eq_74772 x11;
	x11.u0 = v7->t0008.u0;
	Eq_74772 x9;
	struct Eq_74778 * x1;
	x9.u0 = x1->t0008.u0;
	uint64 x13 = x11 - 0x01;
	Eq_74772 x10 = x9 /u x11;
	Eq_74788 x31 = x9 - x11;
	Eq_74790 NZCV;
	NZCV.u0 = cond(x31);
	x10 = x9 - x10 *64 x11;
	int64 x12 = x13 & x9;
	bool C;
	x9.u0 = Test(ULT,C) ? x9 : x10;
	ui64 x14 = x13 & x11;
	Eq_74801 NZ;
	NZ.u0 = cond(x14);
	C = false;
	bool V = false;
	bool Z;
	x12 = Test(NE,Z) ? x9 : x12;
	x9 = *((word32) x15 + x12);
	do
	{
		x10 = x9;
		x9 = *x9;
		x31 = x9 - x1;
		NZCV.u0 = cond(x31);
	} while (Test(NE,Z));
	x9.u0 = (char *) &x0->t0008 + 8;
	x31 = x10 - x9;
	NZCV.u0 = cond(x31);
	Eq_74772 x16;
	uint64 x17;
	if (Test(NE,Z))
	{
		x16.u0 = x10.u0->t0008.u0;
		if (x14 != 0x00)
		{
			x31 = x16 - x11;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
			{
				x17 = x16 /u x11;
				x16 -= x17 *64 x11;
			}
			x31 = x16 - x12;
			NZCV.u0 = cond(x31);
			if (Test(EQ,Z))
			{
l000000000003E238:
				x15.u0 = x1->t0000.u0;
				if (x15 != 0x00)
				{
					x15.u0 = x15.u0->t0008.u0;
					if (x14 == 0x00)
					{
						x15 &= x13;
						x31 = x15 - x12;
						NZCV.u0 = cond(x31);
						if (Test(EQ,Z))
							goto l000000000003E268;
						goto l000000000003E260;
					}
					x31 = x15 - x11;
					NZCV.u0 = cond(x31);
					if (Test(UGE,C))
					{
						x13 = x15 /u x11;
						x15 -= x13 *64 x11;
					}
					x31 = x15 - x12;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
					{
l000000000003E260:
						x11.u0 = x0->t0000.u0;
						*(x11 + x15) = (word64) x10;
						goto l000000000003E268;
					}
				}
l000000000003E268:
				x11.u0 = x1->t0000.u0;
				*x10 = x11;
				x1->t0000.u0 = 0x00;
				x10.u0 = x0->t0018.u0;
				ui32 w11 = 0x00 | 0x01;
				--x10;
				x0->t0018.u0 = (struct Eq_108557 *) x10;
				struct Eq_74895 * v24 = x8;
				v24->ptr0000 = x1;
				v24->t0008.u0 = (struct Eq_108557 *) x9;
				x8->b0010 = (byte) w11;
				return;
			}
		}
		else
		{
			x16 &= x13;
			x31 = x16 - x12;
			NZCV.u0 = cond(x31);
			if (Test(EQ,Z))
				goto l000000000003E238;
		}
	}
	x16.u0 = x1->t0000.u0;
	if (x16 != 0x00)
	{
		x16.u0 = x16.u0->t0008.u0;
		if (x14 != 0x00)
		{
			x31 = x16 - x11;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
			{
				x17 = x16 /u x11;
				x16 -= x17 *64 x11;
			}
			x31 = x16 - x12;
			NZCV.u0 = cond(x31);
			if (Test(EQ,Z))
				goto l000000000003E238;
		}
		else
		{
			x16 &= x13;
			x31 = x16 - x12;
			NZCV.u0 = cond(x31);
			if (Test(EQ,Z))
				goto l000000000003E238;
		}
	}
	((word32) x15 + x12)->u0 = 0x00;
	goto l000000000003E238;
}

// 000000000003E2A0: define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
define _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
{
	int32 * x1;
	struct Eq_74930 * fp;
	struct Eq_74930 * sp = fp;
	sp = (struct Eq_74930 *) ((char *) sp - 64);
	Eq_74934 x24;
	sp->t0000.u1 = (struct Eq_108559 *) x24;
	Eq_74934 x23;
	sp->t0008.u1 = (struct Eq_108559 *) x23;
	struct Eq_74943 * v8 = (struct Eq_74943 *) ((char *) &sp->t0008 + 8);
	Eq_74934 x22;
	v8->t0000.u1 = (struct Eq_108559 *) x22;
	Eq_74934 x21;
	v8->t0008.u1 = (struct Eq_108559 *) x21;
	struct Eq_74954 * v11 = (struct Eq_74954 *) ((char *) &sp->t0008 + 24);
	Eq_74934 x20;
	v11->t0000.u1 = (struct Eq_108559 *) x20;
	Eq_74934 x19;
	v11->t0008.u1 = (struct Eq_108559 *) x19;
	struct Eq_74965 * v14 = (struct Eq_74965 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_74934 x0;
	x22.u1 = x0.u1->t0008.u1;
	int32 v17 = *x1;
	x23.u1 = (int64) v17;
	x19 = x0;
	Eq_74934 x3;
	x21 = x3;
	Eq_74934 x8;
	if (x22 != 0x00)
	{
		x8 = x22 - 0x01;
		ui64 x9 = x8 & x22;
		Eq_74995 NZ;
		NZ.u0 = cond(x9);
		bool C = false;
		bool V = false;
		bool Z;
		Eq_75004 x31;
		Eq_75006 NZCV;
		Eq_74934 x10;
		if (Test(NE,Z))
		{
			x31 = x22 - x23;
			NZCV.u0 = cond(x31);
			x24 = x23;
			word32 ZC;
			if (Test(ULE,ZC))
			{
				x10 = x23 /u x22;
				x24 = x23 - x10 *64 x22;
			}
		}
		else
			x24 = x8 & x23;
		x10 = *x19;
		x20.u1 = *(x10 + x24);
		if (x20 != 0x00)
		{
			do
			{
				x20 = *x20;
				if (x20 == 0x00)
					goto l000000000003E354;
				x10.u1 = x20.u1->t0008.u1;
				x31 = x10 - x23;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					if (x9 != 0x00)
					{
						x31 = x10 - x22;
						NZCV.u0 = cond(x31);
						if (Test(ULT,C))
							goto l000000000003E338;
						uint64 x11 = x10 /u x22;
						x10 -= x11 *64 x22;
						x31 = x10 - x24;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l000000000003E354;
					}
					else
					{
						x10 &= x8;
l000000000003E338:
						x31 = x10 - x24;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l000000000003E354;
					}
				}
				Eq_74934 w10;
				w10.u0 = x20.u1->t0010.u0;
				word32 w23;
				NZCV.u0 = cond(w10 - w23);
			} while (Test(NE,Z));
			x1 = null;
			x0 = x20;
			struct Eq_75108 * v37 = (struct Eq_75108 *) ((char *) &sp->t0008 + 40);
			x29 = v37->ptr0000;
			x30 = v37->qw0008;
			struct Eq_75117 * v38 = (struct Eq_75117 *) ((char *) &sp->t0008 + 24);
			x20.u1 = v38->t0000.u1;
			x19.u1 = v38->t0008.u1;
			struct Eq_75126 * v39 = (struct Eq_75126 *) ((char *) &sp->t0008 + 8);
			x22.u1 = v39->t0000.u1;
			x21.u1 = v39->t0008.u1;
			struct Eq_74930 * v40 = sp;
			x24.u1 = v40->t0000.u1;
			x23.u1 = v40->t0008.u1;
			sp = (struct Eq_74930 *) ((char *) &sp->t0008 + 56);
			return;
		}
	}
l000000000003E354:
	ui32 w0 = 0x00 | 0x30;
	_Znwm();
	x8 = *x21;
	x21 = x0;
	x20 = x0;
	Eq_74934 w8 = *x8;
	struct Eq_75035 * v31 = (struct Eq_75035 *) &x0.u1->dw0020;
	v31->qw0000 = 0x00;
	v31->qw0008 = 0x00;
	x0.u1->t0010.u0 = (word32) w8;
	x21.u1 = &x21.u1->t0018.u0;
	x21->u0 = 0x00;
	Eq_74934 v32 = x0;
	v32->u0 = 0x00;
	v32.u1->t0008.u1 = (struct Eq_108559 *) x23;
	x8.u1 = x19.u1->t0018.u1;
	word32 s0 = x19.u1->dw0020;
	x8.u0 = (word32) x8 + 1;
}

// 000000000003E4C0: void advanced_mode::advanced_mode(Register Eq_6549 x0)
void advanced_mode::advanced_mode(Eq_6549 x0)
{
	struct Eq_75144 * fp;
	struct Eq_75144 * sp = fp;
	sp -= 0x60;
	struct Eq_75149 * v6 = (struct Eq_75149 *) ((char *) &sp->t0028 + 8);
	struct Eq_75151 * x22;
	v6->ptr0000 = x22;
	Eq_14 x21;
	v6->t0008.u1 = (size_t) x21;
	struct Eq_75160 * v9 = (struct Eq_75160 *) ((char *) &sp->t0028 + 24);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_75171 * v12 = (struct Eq_75171 *) ((char *) &sp->t0028 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0028 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x22->t0028.u1;
	x21.u0 = 0x00070000;
	x21 = *((word32) x21 + 0x0DC0);
	x19 = x0;
	sp->t0028.u1 = (size_t) x8;
	struct Eq_75198 * x1;
	x8.u1 = x1->t0008.u1;
	Eq_14 x9;
	x9.u1 = (word32) x21 + 16;
	struct Eq_75206 * v18 = (struct Eq_75206 *) &sp->t0010.u0;
	v18->t0000.u1 = (size_t) x9;
	v18->t0008.u1 = (size_t) x8;
	x8.u1 = x1->t0010.u1;
	sp->t0020.u1 = (size_t) x8;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v19 = &*x8.u1;
			x9 = __load_exclusive<word64>(v19);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v20 = &*x8.u1;
			w10 = __store_exclusive<word64>(v20, x9);
		} while (w10 != 0x00);
	}
	x1 = (struct Eq_75198 *) &sp->t0010.u0;
	x0 = x19;
	fn000000000001B680();
	x20.u1 = sp->t0020.u1;
	x8.u1 = (word32) x21 + 16;
	sp->t0010.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3848);
		x8.u1 = (word32) x8 + 16;
		*x19.u1 = x8;
		sp->t0008.u1 = (size_t) 0x00;
		x0 = *((word32) x19 + 8);
		if (x0 != 0x00)
		{
			word32 w1 = 0x0D;
			struct Eq_75294 ** x2 = (struct Eq_75294 **) &sp->t0008.u0;
			rs2_is_device_extendable_to();
			word32 w0;
			if (w0 == 0x00)
			{
				x8.u1 = sp->t0008.u1;
				if (x8 == 0x00)
				{
					x20 = *((word32) x19 + 16);
					struct Eq_75310 * v25 = (struct Eq_75310 *) ((word32) x19 + 8);
					v25->qw0000 = 0x00;
					v25->qw0008 = 0x00;
					if (x20 != 0x00)
						x8.u1 = (word32) x20 + 8;
				}
			}
		}
		x0.u1 = sp->t0008.u1;
		fn000000000001ADF0();
		x8.u1 = x22->t0028.u1;
		x9.u1 = sp->t0028.u1;
		int64 x31 = x8 - x9;
		Eq_75287 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_75328 * v29 = (struct Eq_75328 *) ((char *) &sp->t0028 + 40);
			x29 = v29->ptr0000;
			x30 = v29->qw0008;
			struct Eq_75337 * v30 = (struct Eq_75337 *) ((char *) &sp->t0028 + 24);
			x20.u1 = v30->t0000.u1;
			x19.u1 = v30->t0008.u1;
			struct Eq_75346 * v31 = (struct Eq_75346 *) ((char *) &sp->t0028 + 8);
			x22 = v31->ptr0000;
			x21.u1 = v31->t0008.u1;
			sp = (struct Eq_75144 *) ((char *) &sp->t0028 + 56);
		}
	}
	else
		x8.u1 = (word32) x20 + 8;
}

// 000000000003E698: void advanced_mode::~advanced_mode()
void advanced_mode::~advanced_mode()
{
	struct Eq_75356 * fp;
	struct Eq_75356 * sp = fp;
	sp = (struct Eq_75356 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_75364 * x19;
	sp->ptr0008 = x19;
	struct Eq_75369 * v8 = (struct Eq_75369 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_75364 * x0;
	x20 = x0->qw0010;
	x8 = *((word32) x8 + 0x0DC0);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_75397 * v11 = (struct Eq_75397 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_75356 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_75356 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 000000000003E700: void serializable_device::~serializable_device()
void serializable_device::~serializable_device()
{
	struct Eq_75425 * fp;
	struct Eq_75425 * sp = fp;
	sp = (struct Eq_75425 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_75433 * x19;
	sp->ptr0008 = x19;
	struct Eq_75438 * v8 = (struct Eq_75438 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_75433 * x0;
	x20 = x0->qw0010;
	x8 = *((word32) x8 + 0x0DC0);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_75466 * v11 = (struct Eq_75466 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_75425 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_75425 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 000000000003E768: void serializable_device::serializable_device(Register Eq_46798 x0)
void serializable_device::serializable_device(Eq_46798 x0)
{
	word64 x1;
	struct Eq_75495 * fp;
	struct Eq_75495 * sp = fp;
	sp -= 0x50;
	Eq_14 x23;
	sp->t0010.u1 = (size_t) x23;
	struct Eq_75504 * v7 = (struct Eq_75504 *) ((char *) &sp->t0010 + 16);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	struct Eq_75510 * x21;
	v7->ptr0008 = x21;
	struct Eq_75515 * v10 = (struct Eq_75515 *) ((char *) &sp->t0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_75526 * v13 = (struct Eq_75526 *) ((char *) &sp->t0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->t0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x21->t0028.u1;
	x19 = x0;
	sp->t0008.u1 = (size_t) x8;
	struct Eq_75552 * v18 = x1 + 8;
	x8.u1 = v18->t0000.u1;
	x20.u1 = v18->t0008.u1;
	Eq_14 x9;
	if (x20 == 0x00)
	{
		x9.u0 = 0x00070000;
		x9 = *((word32) x9 + 0x0DC0);
		x23 = x19;
		x22 = x19;
		x9.u1 = (word32) x9 + 16;
		*x19.u1 = x9;
		x23.u1 = (word32) x23 + 8;
		*x23.u1 = x8;
		x22.u1 = (word32) x22 + 16;
		x22.u1->u0 = 0x00;
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3336);
		x8.u1 = (word32) x8 + 16;
		*x19.u1 = x8;
		sp->t0000.u1 = (size_t) 0x00;
		x0 = *((word32) x19 + 8);
		word32 w1 = 0x2E;
		word64 * x2 = (word64 *) &sp->t0000.u0;
		rs2_is_device_extendable_to();
		word32 w0;
		if (w0 == 0x00)
		{
			x8.u1 = sp->t0000.u1;
			if (x8 == 0x00)
			{
				x23.u1->u1 = 0x00;
				x20 = *((word32) x19 + 16);
				((word32) x19 + 16)->u0 = 0x00;
				if (x20 != 0x00)
					x8.u1 = (word32) x20 + 8;
			}
		}
		x0.u1 = sp->t0000.u1;
		fn000000000001ADF0();
		x8.u1 = x21->t0028.u1;
		x9.u1 = sp->t0008.u1;
		int64 x31 = x8 - x9;
		Eq_75678 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_75706 * v33 = (struct Eq_75706 *) ((char *) &sp->t0010 + 48);
			x29 = v33->ptr0000;
			x30 = v33->qw0008;
			struct Eq_75715 * v34 = (struct Eq_75715 *) ((char *) &sp->t0010 + 32);
			x20.u1 = v34->t0000.u1;
			x19.u1 = v34->t0008.u1;
			struct Eq_75724 * v35 = (struct Eq_75724 *) ((char *) &sp->t0010 + 16);
			x22.u1 = v35->t0000.u1;
			x21 = v35->ptr0008;
			x23.u1 = sp->t0010.u1;
			sp = (struct Eq_75495 *) ((char *) &sp->t0010 + 64);
		}
	}
	else
	{
		x9.u1 = (word32) x20 + 8;
		Eq_14 x10;
		Eq_14 w11;
		do
		{
			union Eq_3183 * v21 = &*x9.u1;
			x10 = __load_exclusive<word64>(v21);
			x10.u1 = (word32) x10 + 1;
			union Eq_3192 * v22 = &*x9.u1;
			w11 = __store_exclusive<word64>(v22, x10);
		} while (w11 != 0x00);
		x10.u0 = 0x00070000;
		x10 = *((word32) x10 + 0x0DC0);
		x23 = x19;
		x22 = x19;
		x10.u1 = (word32) x10 + 16;
		*x19.u1 = x10;
		x23.u1 = (word32) x23 + 8;
		*x23.u1 = x8;
		x22.u1 = (word32) x22 + 16;
		*x22.u1 = x20;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v24 = &*x9.u1;
			x8 = __load_exclusive<word64>(v24);
			x8.u1 = (word32) x8 + 1;
			union Eq_3192 * v25 = &*x9.u1;
			w10 = __store_exclusive<word64>(v25, x8);
		} while (w10 != 0x00);
	}
}

// 000000000003E924: define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRA1_KcEEEPT_DpOT0_
define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRA1_KcEEEPT_DpOT0_
{
	ui32 w21;
	Eq_75737 fp;
	Eq_75737 sp = fp;
	sp = (Eq_75737) ((char *) sp - 64);
	Eq_14 x23;
	sp->b0000 = (char) x23;
	struct Eq_75746 * v7 = (struct Eq_75746 *) (&sp->b0000 + 16);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_75757 * v10 = (struct Eq_75757 *) (&sp->b0000 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_75768 * v13 = (struct Eq_75768 *) (&sp->b0000 + 48);
	Eq_75770 x29;
	v13->t0000.u1 = (ptr64) x29;
	Eq_75774 x30;
	v13->t0008.u1 = (word64) x30;
	x29 = &sp->b0000 + 48;
	Eq_14 x0;
	x20 = x0;
	ui32 w0 = 0x00 | 0x18;
	_Znwm();
	x19 = x0;
	struct Eq_75788 * v16 = (struct Eq_75788 *) ((word32) x0 + 8);
	v16->qw0000 = 0x00;
	v16->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	x0 = x20;
	x0 = strlen(x0);
	sp = (Eq_75737) ((word32) x0 + 16);
	Eq_75808 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	Eq_14 x1;
	if (Test(UGE,C))
	{
		x0 = x19;
		fn000000000001B2D0();
		x20 = x0;
		x0 = x19;
		word128 q0;
		((real64) q0, x0, x1);
		x0 = x20;
		_Unwind_Resume();
		other_error::~other_error();
		return;
	}
	x21 = x0;
	NZCV.u0 = cond(x0 - (struct <anonymous> *) 0x17);
	if (Test(ULT,C))
	{
		ui32 w8 = w21 << 1;
		x22 = x19;
		x22.u1->u1 = (byte) w8;
		x22.u1 = (word32) x22 + 1;
		if (x21 == 0x00)
			goto l000000000003E9B0;
	}
	else
	{
		Eq_75829 x8 = (Eq_75829) ((word32) x21 + 16);
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		struct Eq_75838 * v28 = (struct Eq_75838 *) ((word32) x19 + 8);
		v28->t0000.u1 = (size_t) x21;
		v28->t0008.u1 = (size_t) x0;
		x19.u1->u1 = x8;
	}
	x0 = x22;
	x1 = x20;
	Eq_14 x2 = x21;
	x0 = memcpy(x0, x1, x2);
l000000000003E9B0:
	*(x22 + x21) = (word64) 0x00;
	x0 = x19;
	Eq_75872 v23 = (Eq_75872) (&sp->b0000 + 48);
	x29.u0 = v23->b0000;
	x30.u0 = (&v23->b0000)[8];
	Eq_75881 v24 = (Eq_75881) (&sp->b0000 + 32);
	x20.u1 = v24->b0000;
	x19.u1 = (&v24->b0000)[8];
	Eq_75890 v25 = (Eq_75890) (&sp->b0000 + 16);
	x22.u1 = v25->b0000;
	x21.u1 = (&v25->b0000)[8];
	x23.u1 = sp->b0000;
	sp = (Eq_75737) (&sp->b0000 + 64);
}

// 000000000003E9E8: void other_error::~other_error()
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRA1_KcEEEPT_DpOT0_
void other_error::~other_error()
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_75915 * v7 = (struct Eq_75915 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	_ZNSt13runtime_errorD1Ev();
	x0 = x19;
	_ZNSt9exceptionD2Ev();
	struct Eq_75944 * v10 = (struct Eq_75944 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000003EA24: define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2EONS3_10shared_ptrINS0_22input_adapter_protocolEEENS3_8functionIFbiNSE_13parse_event_tERSD_EEEb
define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2EONS3_10shared_ptrINS0_22input_adapter_protocolEEENS3_8functionIFbiNSE_13parse_event_tERSD_EEEb
{
	ui32 w3;
	union Eq_14 * fp;
	union Eq_14 * sp = fp;
	sp = (union Eq_14 *) ((char *) sp - 48);
	Eq_14 x21;
	sp->u1 = (size_t) x21;
	struct Eq_75975 * v7 = (struct Eq_75975 *) ((char *) sp + 16);
	word64 x20;
	v7->qw0000 = x20;
	Eq_14 x19;
	v7->t0008.u1 = (size_t) x19;
	struct Eq_75986 * v10 = (struct Eq_75986 *) ((char *) sp + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) sp + 32;
	Eq_14 x8;
	struct Eq_75998 * x2;
	x8.u1 = x2->t0020.u1;
	ui32 w20 = w3;
	Eq_14 x1;
	x21 = x1;
	Eq_14 x0;
	x19 = x0;
	Eq_76033 x9;
	if (x8 != 0x00)
	{
		ptr64 x31 = x2 - x8;
		Eq_76015 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
		{
			x9.u0 = *x8.u1;
			x0 = x8;
			x9.u0 = x9.u0->t0010.u0;
			x9();
			*((word32) x19 + 32) = x0;
		}
		else
		{
			*((word32) x19 + 32) = x19;
			x0.u1 = x2->t0020.u1;
			x1 = x19;
			x8 = *x0.u1;
			x8 = *((word32) x8 + 24);
			x8();
		}
	}
	else
		((word32) x19 + 32)->u0 = 0x00;
	((word32) x19 + 48)->u0 = 0x00;
	Eq_14 q0 = *x21.u1;
	Eq_14 w8;
	w8.u0 = ~0x00;
	*((word32) x19 + 56) = q0;
	Eq_14 v23 = x21;
	v23.u1->u0 = 0x00;
	((word32) v23 + 8)->u0 = 0x00;
	*((word32) x19 + 72) = w8;
	x8.u0 = 0x00052000;
	q0.u0 = 0;
	x8.u1 = (word32) x8 + 0x05EE;
	((word32) x19 + 76)->u0 = 0x00;
	struct Eq_76074 * v24 = (struct Eq_76074 *) ((word32) x19 + 112);
	v24->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	v24->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	struct Eq_76083 * v25 = (struct Eq_76083 *) ((word32) x19 + 80);
	v25->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	v25->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	struct Eq_76092 * v26 = (struct Eq_76092 *) ((word32) x19 + 144);
	v26->qw0000 = 0x00;
	v26->t0008.u1 = (size_t) x8;
	struct Eq_76102 * v27 = (struct Eq_76102 *) ((word32) x19 + 0x00A8);
	v27->qw0000 = 0x00;
	v27->qw0008 = 0x00;
	((word32) x19 + 0x00A0)->u1 = 0x00;
	x0 = localeconv();
	x9.u0 = *x0.u1;
	w8 = w20 & 0x01;
	x0.u1 = (word32) x19 + 56;
	word32 w9;
	if (x9 != 0x00)
	{
		byte v29 = x9.u0->b0000;
		w9 = (word32) v29;
	}
	else
		w9 = 0x2E;
	((word32) x19 + 0x00B8)->u0 = (byte) w9;
	((word32) x19 + 0x00C0)->u0 = (byte) w8;
	fn000000000001AE20();
	Eq_14 w0;
	*((word32) x19 + 48) = w0;
	struct Eq_76150 * v31 = (struct Eq_76150 *) ((char *) sp + 32);
	x29 = v31->ptr0000;
	x30 = v31->qw0008;
	struct Eq_76159 * v32 = (struct Eq_76159 *) ((char *) sp + 16);
	x20 = v32->qw0000;
	x19.u1 = v32->t0008.u1;
	x21.u1 = sp->u1;
	sp = (union Eq_14 *) ((char *) sp + 48);
}

// 000000000003EB94: define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
{
	ui32 w1;
	struct Eq_76172 * fp;
	struct Eq_76172 * sp = fp;
	sp = (struct Eq_76172 *) ((char *) sp - 64);
	word64 x28;
	sp->b0000 = (byte) x28;
	Eq_14 x23;
	sp->t0008.u1 = (size_t) x23;
	struct Eq_76185 * v8 = (struct Eq_76185 *) &sp->b0010;
	Eq_14 x22;
	v8->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v8->t0008.u1 = (size_t) x21;
	struct Eq_76196 * v11 = (struct Eq_76196 *) &sp->b0020;
	Eq_14 x20;
	v11->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v11->t0008.u1 = (size_t) x19;
	struct Eq_76207 * v14 = (struct Eq_76207 *) &sp->b0030;
	struct Eq_76209 * x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = (struct Eq_76209 *) &sp->b0030;
	sp -= 448;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x23 + 40);
	Eq_14 x0;
	x20 = x0;
	Eq_14 x2;
	x19 = x2;
	ui32 w21 = w1;
	sp->t0008.u1 = (size_t) x8;
	x0 = *((word32) x0 + 32);
	Eq_76277 x31;
	Eq_76279 NZCV;
	bool Z;
	Eq_14 x1;
	ui32 w8;
	Eq_14 x9;
	word32 w0;
	Eq_14 q0;
	word32 w10;
	word32 w9;
	word32 w11;
	word64 * x3;
	if (x0 != 0x00)
	{
		x31 = x20 - x0;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x8 = *x0.u1;
			x8 = *((word32) x8 + 16);
			x8();
			sp->t00F0.u1 = (size_t) x0;
		}
		else
		{
			x8.u1 = (char *) &sp->t00C8 + 8;
			sp->t00F0.u1 = (size_t) x8;
			x8 = *x0.u1;
			x1.u1 = (char *) &sp->t00C8 + 8;
			x8 = *((word32) x8 + 24);
			x8();
		}
		byte v38 = (byte) *((word32) x20 + 0x00C0);
		word32 w3 = (word32) v38;
		x0 = x29 - 0xF0;
		x2.u1 = (char *) &sp->t00C8 + 8;
		x1 = x19;
		x22.u1 = (char *) &sp->t00C8 + 8;
		fn000000000001BE70();
		x0.u1 = sp->t00F0.u1;
		x31 = x22 - x0;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			if (x0 == 0x00)
				goto l000000000003ED90;
			x8 = *x0.u1;
			x8 = *((word32) x8 + 40);
		}
		else
		{
			x8 = *x0.u1;
			x8 = *((word32) x8 + 32);
		}
		x8();
l000000000003ED90:
		x1 = x29 - 0xF0;
		x0 = x20;
		fn000000000001B930();
		if ((w21 & 0x01) == 0x00)
		{
l000000000003EE7C:
			byte v45 = x29->bFFFFFF68;
			w8 = (word32) v45;
			if (w8 != 0x00)
			{
				byte v46 = (byte) *x19.u1;
				w1 = (word32) v46;
				w8 = 0x00 | 0x08;
				x19.u1->u0 = (byte) w8;
				x9.u1 = &sp->b0030;
				sp->b0030 = (byte) w1;
				x8 = *((word32) x19 + 8);
				x0.u1 = (word32) x9 + 8;
				((word32) x19 + 8)->u0 = 0x00;
				sp->t0038.u1 = (size_t) x8;
			}
			else
			{
				byte v53 = (byte) *x19.u1;
				w8 = (word32) v53;
				NZCV.u0 = cond(w8 - 0x08);
				if (Test(NE,Z))
					goto l000000000003EEDC;
				x19.u1->u0 = 0x00;
				sp->b0020 = (byte) w8;
				x8 = *((word32) x19 + 8);
				x9.u1 = &sp->b0020;
				x0.u1 = (word32) x9 + 8;
				w1 = 0x00 | 0x08;
				((word32) x19 + 8)->u0 = 0x00;
				sp->t0028.u1 = (size_t) x8;
			}
			fn000000000001C590();
l000000000003EEDC:
			x0 = x29 - 0xF0;
			fn000000000001B6A0();
			goto l000000000003EEE4;
		}
		x22.u1 = (word32) x20 + 56;
		x0 = x22;
		fn000000000001AE20();
		NZCV.u0 = cond(w0 - 0x0F);
		((word32) x20 + 48)->u1 = w0;
		if (Test(EQ,Z))
			goto l000000000003EE7C;
		x21 = *((word32) x20 + 80);
		x8.u1 = &sp->b00B8;
		x0 = x22;
		fn000000000001AF90();
		q0 = *((word32) x20 + 80);
		x8 = *((word32) x20 + 96);
		w10 = 0x6176;
		w9 = 0x0A;
		w10 = SEQ(30060, (word16) w10);
		w11 = 101;
		struct Eq_76575 * v41 = (struct Eq_76575 *) &sp->b0040;
		v41->b0000 = (byte) 0x00;
		v41->qw0008 = 0x00;
		sp->t0050.u1 = (size_t) 0x00;
		sp->b0040 = (byte) w9;
		sp->dw0041 = w10;
		sp->t0080.u1 = (size_t) x8;
		sp->t0070.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		sp->w008A = (word16) w11;
		x8.u1 = &sp->b0058;
		w1 = 0x00 | 0x0F;
		x2.u1 = &sp->b0040;
		x0 = x20;
		fn000000000001C2E0();
		x8.u1 = &sp->t0090.u0;
		w0 = 101;
		x1.u1 = &sp->t0070.u0;
		x2.u1 = &sp->b0058;
		fn000000000001BF60();
		x0 = x29 - 0xF0;
		x2.u1 = &sp->b00B8;
		x3 = (word64 *) &sp->t0090.u0;
		x1 = x21;
		x20.u1 = &sp->t0090.u0;
		fn000000000001B5D0();
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 0x0F38);
		x0.u1 = (word32) x20 + 16;
		x8.u1 = x8 + 0x10;
		sp->t0090.u1 = (size_t) x8;
		_ZNSt13runtime_errorD1Ev();
		x0.u1 = &sp->t0090.u0;
		_ZNSt9exceptionD2Ev();
		byte v42 = sp->b0058;
		w8 = (word32) v42;
		if ((w8 & 0x01) != 0x00)
		{
			byte v43 = sp->b0040;
			w8 = (word32) v43;
			if ((w8 & 0x01) != 0x00)
			{
l000000000003EE6C:
				byte v44 = sp->b00B8;
				w8 = (word32) v44;
				if ((w8 & 0x01) == 0x00)
					goto l000000000003EE7C;
l000000000003EE74:
				x0.u1 = sp->t00C8.u1;
				((real64) q0, x0, x1);
				goto l000000000003EE7C;
			}
		}
		else
		{
			x0.u1 = sp->t0068.u1;
			((real64) q0, x0, x1);
			byte v54 = sp->b0040;
			w8 = (word32) v54;
			if ((w8 & 0x01) == 0x00)
				goto l000000000003EE6C;
		}
		x0.u1 = sp->t0050.u1;
		((real64) q0, x0, x1);
		byte v48 = sp->b00B8;
		w8 = (word32) v48;
		if ((w8 & 0x01) != 0x00)
			goto l000000000003EE7C;
		goto l000000000003EE74;
	}
	byte v25 = (byte) *((word32) x20 + 0x00C0);
	w9 = (word32) v25;
	x8 = x29 - 0xF0;
	q0.u0 = 0;
	x29->tFFFFFF10.u1 = (size_t) x19;
	x29->bFFFFFF38 = 0x00;
	*((word32) x8 + 24) = q0;
	*((word32) x8 + 8) = q0;
	x29->bFFFFFF39 = (byte) w9;
	x1 = x29 - 0xF0;
	x0 = x20;
	fn000000000001B320();
	if ((w21 & 0x01) == 0x00)
	{
l000000000003ECF4:
		byte v55 = x29->bFFFFFF38;
		w8 = (word32) v55;
		if (w8 != 0x00)
		{
			byte v56 = (byte) *x19.u1;
			w1 = (word32) v56;
			w8 = 0x00 | 0x08;
			x19.u1->u0 = (byte) w8;
			x9.u1 = &sp->b0010;
			sp->b0010 = (byte) w1;
			x8 = *((word32) x19 + 8);
			x0.u1 = (word32) x9 + 8;
			((word32) x19 + 8)->u0 = 0x00;
			sp->t0018.u1 = (size_t) x8;
			fn000000000001C590();
		}
		x0.u1 = x29->tFFFFFF18.u1;
		if (x0 != 0x00)
		{
			x29->tFFFFFF20.u1 = (size_t) x0;
			((real64) q0, x0, x1);
		}
l000000000003EEE4:
		x8 = *((word32) x23 + 40);
		x9.u1 = sp->t0008.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			sp = (struct Eq_76172 *) ((char *) &sp->t00F0 + 0x00D0);
			struct Eq_76770 * v49 = (struct Eq_76770 *) &sp->b0030;
			x29 = (struct Eq_76209 *) v49->b0000;
			x30 = v49->qw0008;
			struct Eq_76779 * v50 = (struct Eq_76779 *) &sp->b0020;
			x20.u1 = v50->t0000.u1;
			x19.u1 = v50->t0008.u1;
			struct Eq_76788 * v51 = (struct Eq_76788 *) &sp->b0010;
			x22.u1 = v51->t0000.u1;
			x21.u1 = v51->t0008.u1;
			struct Eq_76172 * v52 = sp;
			x28 = (word64) v52->b0000;
			x23.u1 = v52->t0008.u1;
			sp = (struct Eq_76172 *) &sp->b0040;
			return;
		}
	}
	x22.u1 = (word32) x20 + 56;
	x0 = x22;
	fn000000000001AE20();
	NZCV.u0 = cond(w0 - 0x0F);
	((word32) x20 + 48)->u1 = w0;
	if (Test(EQ,Z))
		goto l000000000003ECF4;
	x21 = *((word32) x20 + 80);
	x8.u1 = &sp->b00B8;
	x0 = x22;
	fn000000000001AF90();
	q0 = *((word32) x20 + 80);
	x8 = *((word32) x20 + 96);
	w10 = 0x6176;
	w9 = 0x0A;
	w10 = SEQ(30060, (word16) w10);
	w11 = 101;
	struct Eq_76366 * v31 = (struct Eq_76366 *) &sp->b0040;
	v31->qw0000 = 0x00;
	v31->qw0008 = 0x00;
	sp->t0050.u1 = (size_t) 0x00;
	sp->b0040 = (byte) w9;
	sp->dw0041 = w10;
	sp->t0080.u1 = (size_t) x8;
	sp->t0070.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	sp->w008A = (word16) w11;
	x8.u1 = &sp->b0058;
	w1 = 0x00 | 0x0F;
	x2.u1 = &sp->b0040;
	x0 = x20;
	fn000000000001C2E0();
	x8.u1 = &sp->t0090.u0;
	w0 = 101;
	x1.u1 = &sp->t0070.u0;
	x2.u1 = &sp->b0058;
	fn000000000001BF60();
	x0 = x29 - 0xF0;
	x2.u1 = &sp->b00B8;
	x3 = (word64 *) &sp->t0090.u0;
	x1 = x21;
	x20.u1 = &sp->t0090.u0;
	fn000000000001C4B0();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	x0.u1 = (word32) x20 + 16;
	x8.u1 = x8 + 0x10;
	sp->t0090.u1 = (size_t) x8;
	_ZNSt13runtime_errorD1Ev();
	x0.u1 = &sp->t0090.u0;
	_ZNSt9exceptionD2Ev();
	byte v34 = sp->b0058;
	w8 = (word32) v34;
	if ((w8 & 0x01) != 0x00)
	{
		byte v35 = sp->b0040;
		w8 = (word32) v35;
		if ((w8 & 0x01) != 0x00)
		{
l000000000003ECE4:
			byte v36 = sp->b00B8;
			w8 = (word32) v36;
			if ((w8 & 0x01) == 0x00)
				goto l000000000003ECF4;
l000000000003ECEC:
			x0.u1 = sp->t00C8.u1;
			((real64) q0, x0, x1);
			goto l000000000003ECF4;
		}
	}
	else
	{
		x0.u1 = sp->t0068.u1;
		((real64) q0, x0, x1);
		byte v39 = sp->b0040;
		w8 = (word32) v39;
		if ((w8 & 0x01) == 0x00)
			goto l000000000003ECE4;
	}
	x0.u1 = sp->t0050.u1;
	((real64) q0, x0, x1);
	byte v40 = sp->b00B8;
	w8 = (word32) v40;
	if ((w8 & 0x01) != 0x00)
		goto l000000000003ECF4;
	goto l000000000003ECEC;
}

<anonymous> g_t3EBBC = <code>; // 000000000003EBBC
<anonymous> g_t3F07C = <code>; // 000000000003F07C
// 000000000003F0E8: define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4scanEv
define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4scanEv
{
	Eq_14 x0;
	struct Eq_76889 * fp;
	struct Eq_76889 * sp = fp;
	sp = (struct Eq_76889 *) ((char *) sp - 32);
	Eq_14 x20;
	sp->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	sp->t0008.u1 = (size_t) x19;
	struct Eq_76902 * v8 = (struct Eq_76902 *) ((char *) &sp->t0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 8;
	Eq_14 x8 = *((word32) x0 + 24);
	x19 = x0;
	ui32 w8;
	Eq_76933 NZCV;
	<anonymous> * x9;
	ui64 x10;
	ui32 w0;
	if (x8 != 0x00)
	{
l000000000003F188:
		x20.u0 = 0x00050000;
		x20.u1 = (word32) x20 + 876;
		x0 = x19;
		fn000000000001BB00();
		w8 = (ui32) *((word32) x19 + 16);
		++w8;
		NZCV.u0 = cond(w8 - 0x7E);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x9 = &g_t3F190;
			byte v18 = (byte) *(x20 + x8);
			word32 w10 = (word32) v18;
			x9 = (<anonymous> *) ((char *) x9 + (x10 << 2));
			x9();
			return;
		}
		x8.u0 = 0x00052000;
		x8.u1 = (word32) x8 + 1767;
l000000000003F2D0:
		*((word32) x19 + 96) = x8;
		w0 = 0x00 | 0x0E;
		struct Eq_76988 * v20 = (struct Eq_76988 *) ((char *) &sp->t0008 + 8);
		x29 = v20->ptr0000;
		x30 = v20->qw0008;
		struct Eq_76889 * v21 = sp;
		x20.u1 = v21->t0000.u1;
		x19.u1 = v21->t0008.u1;
		sp = (struct Eq_76889 *) ((char *) &sp->t0008 + 24);
		return;
	}
	x0 = x19;
	fn000000000001BB00();
	NZCV.u0 = cond(w0 - 0xEF);
	bool Z;
	if (Test(EQ,Z))
	{
		x0 = x19;
		fn000000000001BB00();
		NZCV.u0 = cond(w0 - 0xBB);
		if (Test(NE,Z))
		{
l000000000003F130:
			x8.u0 = 0x00052000;
			x8.u1 = (word32) x8 + 1722;
			goto l000000000003F2D0;
		}
		x0 = x19;
		fn000000000001BB00();
		NZCV.u0 = cond(w0 - 191);
		if (Test(NE,Z))
			goto l000000000003F130;
		goto l000000000003F188;
	}
	x8 = x19;
	x8.u1 = (word32) x8 + 32;
	x9 = (<anonymous> *) *x8.u1;
	ui32 w11 = 0x00 | 0x01;
	x10 = (ui64) *((word32) x8 - 8);
	((word32) x8 - 0x0C)->u0 = (byte) w11;
	--x10;
	((word32) x8 - 8)->u1 = x10;
	if (x9 == null)
	{
		x8 = x19;
		x8.u1 = (word32) x8 + 40;
		x9 = (<anonymous> *) *x8.u1;
		if (x9 == null)
		{
l000000000003F170:
			w8 = (ui32) *((word32) x19 + 16);
			word32 wsp = w8 + 0x01;
			NZCV.u0 = cond(wsp);
			if (Test(NE,Z))
			{
				x8 = *((word32) x19 + 56);
				--x8;
				*((word32) x19 + 56) = x8;
			}
			goto l000000000003F188;
		}
	}
	--x9;
	x8.u1->u1 = x9;
	goto l000000000003F170;
}

<anonymous> g_t3F190 = <code>; // 000000000003F190
<anonymous> g_t3F204 = <code>; // 000000000003F204
// 000000000003F2E4: define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3getEv
define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3getEv
{
	Eq_14 x9;
	Eq_77052 x0;
	struct Eq_77044 * fp;
	struct Eq_77044 * sp = fp;
	sp = (struct Eq_77044 *) ((char *) sp - 80);
	byte * x26;
	sp->ptr0000 = x26;
	Eq_77052 x25;
	sp->t0008.u1 = (struct Eq_108619 *) x25;
	struct Eq_77057 * v8 = (struct Eq_77057 *) ((char *) &sp->t0008 + 8);
	Eq_77052 x24;
	v8->t0000.u1 = (struct Eq_108619 *) x24;
	Eq_77052 x23;
	v8->t0008.u1 = (struct Eq_108619 *) x23;
	struct Eq_77068 * v11 = (struct Eq_77068 *) ((char *) &sp->t0008 + 24);
	Eq_14 x22;
	v11->t0000.u1 = (size_t) x22;
	Eq_77052 x21;
	v11->t0008.u1 = (struct Eq_108619 *) x21;
	struct Eq_77079 * v14 = (struct Eq_77079 *) ((char *) &sp->t0008 + 40);
	word64 x20;
	v14->qw0000 = x20;
	Eq_77052 x19;
	v14->t0008.u1 = (struct Eq_108619 *) x19;
	struct Eq_77090 * v17 = (struct Eq_77090 *) ((char *) &sp->t0008 + 56);
	ptr64 x29;
	v17->ptr0000 = x29;
	word64 x30;
	v17->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 56;
	word64 q0[2] = (word64[2]) x0.u1->a0018[0];
	byte v21 = x0.u1->b0014;
	word32 w8 = (word32) v21;
	ui32 w9 = 0x00 | 0x01;
	Eq_14 q1 = __dup<word64,union <anonymous>[2]>(x9);
	x19 = x0;
	word64 v25[2] = q0;
	Eq_14 v26 = q1;
	q0 = __simd_add<word64[2]>(v25, v26);
	x25 = x0;
	x0.u1->a0018[0] = (word64) q0;
	Eq_77052 w20;
	Eq_77151 wsp;
	Eq_77153 NZCV;
	bool Z;
	Eq_77052 x8;
	Eq_77052 w0;
	if (w8 != 0x00)
	{
		x25.u0 = (word32) x25 + 16;
		w20 = x25.u1->t0000;
		x25.u1->b0004 = 0x00;
		wsp.u0 = (word32) w20 + 1;
		NZCV.u0 = cond(wsp);
		if (Test(NE,Z))
		{
l000000000003F330:
			struct Eq_77172 * v32 = (struct Eq_77172 *) &x19.u1->t0038.u0;
			x9.u1 = v32->t0000.u1;
			x8.u1 = v32->t0008.u1;
			Eq_77180 x31 = x9 - x8;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				x9.u1->u0 = (byte) w20;
				x8.u1 = x19.u1->t0038.u1;
				x8.u0 = (word32) x8 + 1;
				x19.u1->t0038.u1 = (struct Eq_108619 *) x8;
				goto l000000000003F3FC;
			}
			x0.u0 = (word32) x19 + 48;
			x21 = x0.u1->t0000;
			x22 = x9 - x21;
			x9.u1 = (word32) x22 + 1;
			NZCV.u0 = cond(x9);
			bool N;
			if (Test(LT,N))
			{
				fn000000000001B7E0();
				_ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_stringEv();
				return;
			}
			x8 -= x21;
			ui64 x10 = 0x00 | 0x3FFFFFFFFFFFFFFE;
			x31 = x8 - x10;
			NZCV.u0 = cond(x31);
			word32 ZC;
			if (Test(ULE,ZC))
			{
				x8 <<= 1;
				x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				x24.u1 = Test(ULT,C) ? x9 : x8;
				if (x24 == 0x00)
				{
					x23.u0 = 0x00;
l000000000003F3C4:
					x26 = x23 + x22;
					x24.u1 = x23 + x24;
					NZCV.u0 = cond(x22 - 0x01);
					*x26 = (byte) w20;
					++x26;
					word32 NV;
					Eq_77052 x1;
					if (Test(GE,NV))
					{
						x0 = x23;
						x1 = x21;
						Eq_14 x2 = x22;
						x0 = memcpy(x0, x1, x2);
					}
					struct Eq_77313 * v48 = (struct Eq_77313 *) ((word32) x19 + 48);
					v48->t0000.u1 = (struct Eq_108619 *) x23;
					v48->ptr0008 = x26;
					x19.u1->t0040.u1 = (struct Eq_108619 *) x24;
					if (x21 != 0x00)
					{
						x0 = x21;
						((real64) q0, x0, x1);
					}
l000000000003F3FC:
					w0 = x25.u1->t0000;
					NZCV.u0 = cond(w0 - 0x0A);
					if (Test(EQ,Z))
					{
						x8.u1 = x19.u1->t0028.u1;
						x8.u0 = (word32) x8 + 1;
						struct Eq_77266 * v36 = (struct Eq_77266 *) ((word32) x19 + 32);
						v36->qw0000 = 0x00;
						v36->t0008.u1 = (struct Eq_108619 *) x8;
					}
l000000000003F414:
					struct Eq_77216 * v37 = (struct Eq_77216 *) ((char *) &sp->t0008 + 56);
					x29 = v37->ptr0000;
					x30 = v37->qw0008;
					struct Eq_77225 * v38 = (struct Eq_77225 *) ((char *) &sp->t0008 + 40);
					x20 = v38->qw0000;
					x19.u1 = v38->t0008.u1;
					struct Eq_77234 * v39 = (struct Eq_77234 *) ((char *) &sp->t0008 + 24);
					x22.u1 = v39->t0000.u1;
					x21.u1 = v39->t0008.u1;
					struct Eq_77243 * v40 = (struct Eq_77243 *) ((char *) &sp->t0008 + 8);
					x24.u1 = v40->t0000.u1;
					x23.u1 = v40->t0008.u1;
					struct Eq_77044 * v41 = sp;
					x26 = v41->ptr0000;
					x25.u1 = v41->t0008.u1;
					sp = (struct Eq_77044 *) ((char *) &sp->t0008 + 72);
					return;
				}
			}
			else
				x24 = 0x00 | 0x7FFFFFFFFFFFFFFF;
			x0 = x24;
			_Znwm();
			x23 = x0;
			goto l000000000003F3C4;
		}
	}
	else
	{
		x0 = x25.u1->t0000;
		x25.u0 = (word32) x25 + 16;
		x8 = x0.u1->t0000;
		x8 = x8.u1->t0000;
		x8();
		w20 = w0;
		x25.u1->t0000 = (<anonymous>) w0;
		wsp.u0 = (word32) w20 + 1;
		NZCV.u0 = cond(wsp);
		if (Test(NE,Z))
			goto l000000000003F330;
	}
	w0.u0 = ~0x00;
	goto l000000000003F414;
}

// 000000000003F430: define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_stringEv
// Called from:
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3getEv
define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_stringEv
{
	ui32 w0;
	struct Eq_77343 * fp;
	struct Eq_77343 * sp = fp;
	sp = (struct Eq_77343 *) ((char *) sp - 64);
	Eq_14 x24;
	sp->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	sp->t0008.u1 = (size_t) x23;
	struct Eq_77356 * v8 = (struct Eq_77356 *) ((char *) &sp->t0008 + 8);
	word64 x22;
	v8->qw0000 = x22;
	word64 x21;
	v8->qw0008 = x21;
	struct Eq_77367 * v11 = (struct Eq_77367 *) ((char *) &sp->t0008 + 24);
	word64 x20;
	v11->qw0000 = x20;
	struct Eq_77373 * x19;
	v11->ptr0008 = x19;
	struct Eq_77378 * v14 = (struct Eq_77378 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	struct Eq_77373 * x0;
	x19 = x0;
	fn000000000001C450();
	x23.u0 = 0x00052000;
	x24.u0 = 0x00050000;
	x20 = (char *) x19 + 72;
	x23.u1 = (word32) x23 + 0x06F7;
	x24.u1 = (word32) x24 + 1004;
	x0 = x19;
	fn000000000001BB00();
	word32 w8 = w0 + 0x01;
	Eq_77406 NZCV;
	NZCV.u0 = cond(w8 - 0xF5);
	word32 ZC;
	Eq_14 x8;
	if (Test(UGT,ZC))
	{
		x8.u0 = 0x00053000;
		x8.u1 = (word32) x8 + 328;
		x19->t0060.u1 = (size_t) x8;
		w0 = 0x00 | 0x0E;
		struct Eq_77432 * v25 = (struct Eq_77432 *) ((char *) &sp->t0008 + 40);
		x29 = v25->ptr0000;
		x30 = v25->qw0008;
		struct Eq_77441 * v26 = (struct Eq_77441 *) ((char *) &sp->t0008 + 24);
		x20 = v26->qw0000;
		x19 = v26->ptr0008;
		struct Eq_77450 * v27 = (struct Eq_77450 *) ((char *) &sp->t0008 + 8);
		x22 = v27->qw0000;
		x21 = v27->qw0008;
		struct Eq_77343 * v28 = sp;
		x24.u1 = v28->t0000.u1;
		x23.u1 = v28->t0008.u1;
		sp = (struct Eq_77343 *) ((char *) &sp->t0008 + 56);
	}
	else
	{
		<anonymous> * x9 = &g_t3F494;
		word16 v23 = (word16) *((char *) x24.u1 + x8 *64 0x02);
		word32 w10 = (word32) v23;
		ui64 x10;
		x9 = (<anonymous> *) ((char *) x9 + (x10 << 2));
		x8 = x23;
		x9();
	}
}

<anonymous> g_t3F494 = <code>; // 000000000003F494
// 000000000003F920: define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_numberEv
define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_numberEv
{
	struct Eq_77467 * fp;
	struct Eq_77467 * sp = fp;
	sp -= 0x40;
	struct Eq_77472 * v6 = (struct Eq_77472 *) ((char *) &sp->t0008 + 8);
	Eq_14 x22;
	v6->t0000.u1 = (size_t) x22;
	struct Eq_77478 * x21;
	v6->ptr0008 = x21;
	struct Eq_77483 * v9 = (struct Eq_77483 *) ((char *) &sp->t0008 + 24);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_77494 * v12 = (struct Eq_77494 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x21->t0028.u1;
	Eq_14 x0;
	x19 = x0;
	sp->t0008.u1 = (size_t) x8;
	fn000000000001C450();
	ui32 w1 = (ui32) *((word32) x19 + 16);
	ui32 w8 = w1 - 0x31;
	Eq_77528 NZCV;
	NZCV.u0 = cond(w8 - 0x09);
	bool C;
	ui32 w22;
	if (Test(UGE,C))
	{
		NZCV.u0 = cond(w1 - 0x30);
		bool Z;
		ui32 w0;
		word32 ZC;
		if (Test(NE,Z))
		{
			NZCV.u0 = cond(w1 - 0x2D);
			if (Test(EQ,Z))
			{
				x0.u1 = (word32) x19 + 72;
				fn000000000001C0E0();
			}
			x0 = x19;
			fn000000000001BB00();
			w8 = w0 - 0x31;
			NZCV.u0 = cond(w8 - 0x09);
			if (Test(ULT,C))
			{
				w1 = (ui32) *((word32) x19 + 16);
				x20.u1 = (word32) x19 + 72;
				x0 = x20;
				fn000000000001C0E0();
				w22 = 0x00 | 0x06;
l000000000003F9BC:
				while (true)
				{
					x0 = x19;
					fn000000000001BB00();
					w8 = w0 - 0x30;
					NZCV.u0 = cond(w8 - 0x0A);
					if (Test(UGE,C))
						break;
					w1 = (ui32) *((word32) x19 + 16);
					x0 = x20;
					fn000000000001C0E0();
				}
				NZCV.u0 = cond(w0 - 0x2E);
				if (Test(NE,Z))
				{
					NZCV.u0 = cond(w0 - 0x45);
					if (Test(NE,Z))
					{
						NZCV.u0 = cond(w0 - 101);
						if (Test(NE,Z))
							goto l000000000003FA50;
					}
					goto l000000000003F9E8;
				}
				byte v43 = (byte) *((word32) x19 + 0x0080);
				w1 = (word32) v43;
				x0 = x20;
l000000000003FAFC:
				fn000000000001C0E0();
				x0 = x19;
				fn000000000001BB00();
				w8 = w0 - 0x30;
				NZCV.u0 = cond(w8 - 0x09);
				if (Test(UGT,ZC))
				{
					x8.u0 = 0x00053000;
					x8.u1 = (word32) x8 + 407;
					goto l000000000003FC90;
				}
				w1 = (ui32) *((word32) x19 + 16);
				x20.u1 = (word32) x19 + 72;
				while (true)
				{
					x0 = x20;
					fn000000000001C0E0();
					x0 = x19;
					fn000000000001BB00();
					w8 = w0 - 0x30;
					NZCV.u0 = cond(w8 - 0x0A);
					if (Test(UGE,C))
						break;
					w1 = (ui32) *((word32) x19 + 16);
				}
				NZCV.u0 = cond(w0 - 0x45);
				if (Test(NE,Z))
				{
					NZCV.u0 = cond(w0 - 101);
					if (Test(NE,Z))
					{
l000000000003FA4C:
						w22 = 0x00 | 0x07;
						goto l000000000003FA50;
					}
				}
l000000000003F9E8:
				w1 = (ui32) *((word32) x19 + 16);
				x0 = x20;
				goto l000000000003F9F0;
			}
			NZCV.u0 = cond(w0 - 0x30);
			if (Test(NE,Z))
			{
				x8.u0 = 0x00053000;
				x8.u1 = (word32) x8 + 366;
				goto l000000000003FC90;
			}
			w1 = (ui32) *((word32) x19 + 16);
			x0.u1 = (word32) x19 + 72;
			fn000000000001C0E0();
			w22 = 0x00 | 0x06;
		}
		else
		{
			x0.u1 = (word32) x19 + 72;
			fn000000000001C0E0();
			w22 = 0x05;
		}
		x0 = x19;
		fn000000000001BB00();
		NZCV.u0 = cond(w0 - 101);
		if (Test(NE,Z))
		{
			NZCV.u0 = cond(w0 - 0x45);
			if (Test(NE,Z))
			{
				NZCV.u0 = cond(w0 - 0x2E);
				if (Test(NE,Z))
				{
l000000000003FA50:
					x8 = x19;
					x8.u1 = (word32) x8 + 32;
					Eq_14 x9 = *x8.u1;
					ui32 w11 = 0x00 | 0x01;
					ui64 x10 = (ui64) *((word32) x8 - 8);
					((word32) x8 - 0x0C)->u0 = (byte) w11;
					--x10;
					((word32) x8 - 8)->u1 = x10;
					if (x9 == 0x00)
					{
						x8 = x19;
						x8.u1 = (word32) x8 + 40;
						x9 = *x8.u1;
						if (x9 == 0x00)
						{
l000000000003FA84:
							w8 = (ui32) *((word32) x19 + 16);
							word32 wsp = w8 + 0x01;
							NZCV.u0 = cond(wsp);
							if (Test(NE,Z))
							{
								x8 = *((word32) x19 + 56);
								--x8;
								*((word32) x19 + 56) = x8;
							}
							sp->qw0000 = 0x00;
							__errno();
							x20 = x0;
							NZCV.u0 = cond(w22 - 0x05);
							x0.u1->u1 = 0x00;
							char ** x1;
							word32 w2;
							if (Test(NE,Z))
							{
								NZCV.u0 = cond(w22 - 0x06);
								if (Test(NE,Z))
								{
									x22.u1 = (word32) x19 + 72;
									byte v42 = (byte) *((word32) x19 + 72);
									w8 = (word32) v42;
									if ((w8 & 0x01) == 0x00)
										goto l000000000003FBD8;
									goto l000000000003FBE0;
								}
								x22 = x19;
								x22.u1 = (word32) x22 + 72;
								byte v29 = (byte) *x22.u1;
								w8 = (word32) v29;
								if ((w8 & 0x01) != 0x00)
									x0.u1 = (word32) x22 + 1;
								else
									x0 = *((word32) x19 + 88);
								x1 = &sp->qw0000;
								w2 = 0x0A;
								strtoll();
								w8 = (ui32) *x20.u1;
								if (w8 == 0x00)
								{
									*((word32) x19 + 0x0068) = x0;
									w0 = 0x00 | 0x06;
									goto l000000000003FC98;
								}
							}
							else
							{
								x22 = x19;
								x22.u1 = (word32) x22 + 72;
								byte v30 = (byte) *x22.u1;
								w8 = (word32) v30;
								if ((w8 & 0x01) != 0x00)
									x0.u1 = (word32) x22 + 1;
								else
									x0 = *((word32) x19 + 88);
								x1 = &sp->qw0000;
								w2 = 0x0A;
								strtoull();
								w8 = (ui32) *x20.u1;
								if (w8 == 0x00)
								{
									*((word32) x19 + 112) = x0;
									w0 = 0x05;
									goto l000000000003FC98;
								}
							}
							byte v33 = (byte) *((word32) x19 + 72);
							w8 = (word32) v33;
							if ((w8 & 0x01) != 0x00)
							{
l000000000003FBD8:
								x0.u1 = (word32) x22 + 1;
l000000000003FBE4:
								x1 = &sp->qw0000;
								word256 q1_q0 = SEQ(0, strtod(x0, x1));
								w0 = 0x00 | 0x07;
								word64 d0;
								((word32) x19 + 0x0078)->u1 = d0;
l000000000003FC98:
								x8.u1 = x21->t0028.u1;
								x9.u1 = sp->t0008.u1;
								ptr64 x31 = x8 - x9;
								NZCV.u0 = cond(x31);
								if (Test(NE,Z))
									__stack_chk_fail();
								else
								{
									struct Eq_77938 * v35 = (struct Eq_77938 *) ((char *) &sp->t0008 + 40);
									x29 = v35->ptr0000;
									x30 = v35->qw0008;
									struct Eq_77947 * v36 = (struct Eq_77947 *) ((char *) &sp->t0008 + 24);
									x20.u1 = v36->t0000.u1;
									x19.u1 = v36->t0008.u1;
									struct Eq_77956 * v37 = (struct Eq_77956 *) ((char *) &sp->t0008 + 8);
									x22.u1 = v37->t0000.u1;
									x21 = v37->ptr0008;
									sp = (struct Eq_77467 *) ((char *) &sp->t0008 + 56);
									return;
								}
							}
l000000000003FBE0:
							x0 = *((word32) x19 + 88);
							goto l000000000003FBE4;
						}
					}
					--x9;
					*x8.u1 = x9;
					goto l000000000003FA84;
				}
				byte v27 = (byte) *((word32) x19 + 0x0080);
				w1 = (word32) v27;
				x0.u1 = (word32) x19 + 72;
				goto l000000000003FAFC;
			}
		}
		w1 = (ui32) *((word32) x19 + 16);
		x0.u1 = (word32) x19 + 72;
l000000000003F9F0:
		fn000000000001C0E0();
		x0 = x19;
		fn000000000001BB00();
		w8 = w0 - 0x30;
		NZCV.u0 = cond(w8 - 0x0A);
		if (Test(ULT,C))
		{
			w1 = (ui32) *((word32) x19 + 16);
			x0.u1 = (word32) x19 + 72;
			goto l000000000003FA10;
		}
		NZCV.u0 = cond(w0 - 0x2D);
		if (Test(NE,Z))
		{
			NZCV.u0 = cond(w0 - 0x2B);
			if (Test(NE,Z))
			{
				x8.u0 = 0x00053000;
				x8.u1 = (word32) x8 + 448;
				goto l000000000003FC90;
			}
		}
		w1 = (ui32) *((word32) x19 + 16);
		x20.u1 = (word32) x19 + 72;
		x0 = x20;
		fn000000000001C0E0();
		x0 = x19;
		fn000000000001BB00();
		w8 = w0 - 0x30;
		NZCV.u0 = cond(w8 - 0x0A);
		if (Test(ULT,C))
		{
			w1 = (ui32) *((word32) x19 + 16);
			x0 = x20;
l000000000003FA10:
			fn000000000001C0E0();
			x0 = x19;
			fn000000000001BB00();
			w8 = w0 - 0x30;
			NZCV.u0 = cond(w8 - 0x09);
			if (Test(ULE,ZC))
			{
				x20.u1 = (word32) x19 + 72;
				do
				{
					w1 = (ui32) *((word32) x19 + 16);
					x0 = x20;
					fn000000000001C0E0();
					x0 = x19;
					fn000000000001BB00();
					w8 = w0 - 0x30;
					NZCV.u0 = cond(w8 - 0x0A);
				} while (Test(ULT,C));
			}
			goto l000000000003FA4C;
		}
		x8.u0 = 0x00053000;
		x8.u1 = (word32) x8 + 507;
l000000000003FC90:
		*((word32) x19 + 96) = x8;
		w0 = 0x00 | 0x0E;
		goto l000000000003FC98;
	}
	else
	{
		x20.u1 = (word32) x19 + 72;
		x0 = x20;
		fn000000000001C0E0();
		w22 = 0x05;
		goto l000000000003F9BC;
	}
}

// 000000000003FCC0: define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5resetEv
define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5resetEv
{
	struct Eq_77966 * fp;
	struct Eq_77966 * sp = fp;
	sp = (struct Eq_77966 *) ((char *) sp - 48);
	word64 x22;
	sp->qw0000 = x22;
	struct Eq_77974 * x21;
	sp->ptr0008 = x21;
	struct Eq_77979 * v8 = (struct Eq_77979 *) ((char *) &sp->ptr0008 + 8);
	struct Eq_77974 * x20;
	v8->ptr0000 = x20;
	struct Eq_77974 * x19;
	v8->ptr0008 = x19;
	struct Eq_77990 * v11 = (struct Eq_77990 *) ((char *) &sp->ptr0008 + 24);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 24;
	Eq_78005 v14;
	struct Eq_77974 * x0;
	v14.u0 = x0->t0048.u0;
	ui32 w8 = (word32) v14;
	x19 = x0;
	struct Eq_77974 * x8;
	if ((w8 & 0x01) != 0x00)
		x19->t0048.u1 = 0x00;
	else
	{
		x8 = x19->ptr0058;
		x8->b0000 = 0x00;
		x19->qw0050 = 0x00;
	}
	x20 = x19->ptr0030;
	x8 = x19->ptr0040;
	word32 w22 = x19->dw0010;
	x19->ptr0038 = x20;
	x8 -= x20;
	Eq_78043 NZCV;
	NZCV.u0 = cond(x8);
	word32 ZC;
	if (Test(UGT,ZC))
	{
		x20->b0000 = (byte) w22;
		x8 = x19->ptr0038;
		x8 = &x8->b0000 + 1;
		x19->ptr0038 = x8;
	}
	else
	{
		struct Eq_77974 * x9 = 0x00 | 0x3FFFFFFFFFFFFFFE;
		ptr64 x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(ULE,ZC))
		{
			x8 <<= 1;
			NZCV.u0 = cond(x8 - 0x00);
			bool Z;
			x21 = Test(NE,Z) ? x8 : 0x00 + 0x01;
		}
		else
			x21 = 0x00 | 0x7FFFFFFFFFFFFFFF;
		x0 = x21;
		_Znwm();
		x9 = x0;
		x8 = x0 + x21;
		x9->b0000 = (byte) w22;
		x9 = &x9->b0000 + 1;
		struct Eq_78118 * v25 = (struct Eq_78118 *) &x19->ptr0030;
		v25->qw0000 = x0;
		v25->ptr0008 = x9;
		x19->ptr0040 = x8;
		if (x20 != null)
		{
			x0 = x20;
			struct Eq_78132 * v26 = (struct Eq_78132 *) ((char *) &sp->ptr0008 + 24);
			x29 = v26->ptr0000;
			x30 = v26->qw0008;
			struct Eq_78141 * v27 = (struct Eq_78141 *) ((char *) &sp->ptr0008 + 8);
			x20 = v27->ptr0000;
			x19 = v27->ptr0008;
			struct Eq_77966 * v28 = sp;
			x22 = v28->qw0000;
			x21 = v28->ptr0008;
			sp = (struct Eq_77966 *) ((char *) &sp->ptr0008 + 40);
			word128 q0;
			void * x1;
			((real64) q0, x0, x1);
			return;
		}
	}
	struct Eq_78068 * v22 = (struct Eq_78068 *) ((char *) &sp->ptr0008 + 24);
	x29 = v22->ptr0000;
	x30 = v22->qw0008;
	struct Eq_78077 * v23 = (struct Eq_78077 *) ((char *) &sp->ptr0008 + 8);
	x20 = v23->ptr0000;
	x19 = v23->ptr0008;
	struct Eq_77966 * v24 = sp;
	x22 = v24->qw0000;
	x21 = v24->ptr0008;
	sp = (struct Eq_77966 *) ((char *) &sp->ptr0008 + 40);
}

// 000000000003FD84: define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE13get_codepointEv
define _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE13get_codepointEv
{
	struct Eq_78167 * fp;
	struct Eq_78167 * sp = fp;
	sp = (struct Eq_78167 *) ((char *) sp - 48);
	word64 x22;
	sp->qw0000 = x22;
	word64 x21;
	sp->qw0008 = x21;
	struct Eq_78180 * v8 = (struct Eq_78180 *) (&sp->qw0008 + 1);
	word64 x20;
	v8->qw0000 = x20;
	struct Eq_78186 * x19;
	v8->ptr0008 = x19;
	struct Eq_78191 * v11 = (struct Eq_78191 *) (&sp->qw0008 + 3);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = &sp->qw0008 + 3;
	struct Eq_78186 * x0;
	x19 = x0;
	fn000000000001BB00();
	ui32 w8 = x19->dw0010;
	ui32 w20 = w8 - 0x30;
	Eq_78214 NZCV;
	NZCV.u0 = cond(w20 - 0x0A);
	bool C;
	ui32 w9;
	word32 ZC;
	if (Test(UGE,C))
	{
		w9 = w8 - 0x41;
		NZCV.u0 = cond(w9 - 0x05);
		if (Test(ULE,ZC))
			w20 = w8 - 55;
		else
		{
			w9 = w8 - 0x61;
			NZCV.u0 = cond(w9 - 0x05);
			if (Test(UGT,ZC))
				goto l000000000003FE98;
			w20 = w8 - 0x57;
		}
	}
	x0 = x19;
	fn000000000001BB00();
	w8 = x19->dw0010;
	ui32 w21 = w8 - 0x30;
	NZCV.u0 = cond(w21 - 0x0A);
	if (Test(UGE,C))
	{
		w9 = w8 - 0x41;
		NZCV.u0 = cond(w9 - 0x06);
		if (Test(ULT,C))
			w21 = w8 - 55;
		else
		{
			w9 = w8 - 0x61;
			NZCV.u0 = cond(w9 - 0x05);
			if (Test(UGT,ZC))
				goto l000000000003FE98;
			w21 = w8 - 0x57;
		}
	}
	x0 = x19;
	fn000000000001BB00();
	w8 = x19->dw0010;
	ui32 w22 = w8 - 0x30;
	NZCV.u0 = cond(w22 - 0x0A);
	if (Test(UGE,C))
	{
		w9 = w8 - 0x41;
		NZCV.u0 = cond(w9 - 0x06);
		if (Test(ULT,C))
			w22 = w8 - 55;
		else
		{
			w9 = w8 - 0x61;
			NZCV.u0 = cond(w9 - 0x05);
			if (Test(UGT,ZC))
				goto l000000000003FE98;
			w22 = w8 - 0x57;
		}
	}
	x0 = x19;
	fn000000000001BB00();
	w8 = x19->dw0010;
	w9 = w8 - 0x30;
	NZCV.u0 = cond(w9 - 0x0A);
	word32 w0;
	if (Test(ULT,C))
	{
l000000000003FE84:
		w8 = w20 << 0x0C;
		w8 += w21 << 8;
		w8 += w22 << 4;
		w0 = w9 + w8;
l000000000003FE9C:
		struct Eq_78326 * v22 = (struct Eq_78326 *) (&sp->qw0008 + 3);
		x29 = v22->ptr0000;
		x30 = v22->qw0008;
		struct Eq_78335 * v23 = (struct Eq_78335 *) (&sp->qw0008 + 1);
		x20 = v23->qw0000;
		x19 = v23->ptr0008;
		struct Eq_78167 * v24 = sp;
		x22 = v24->qw0000;
		x21 = v24->qw0008;
		sp = &sp->qw0008 + 5;
		return;
	}
	w9 = w8 - 0x41;
	NZCV.u0 = cond(w9 - 0x06);
	if (Test(ULT,C))
	{
		w9 = w8 - 55;
		goto l000000000003FE84;
	}
	w9 = w8 - 0x61;
	NZCV.u0 = cond(w9 - 0x05);
	if (Test(ULE,ZC))
	{
		w9 = w8 - 0x57;
		goto l000000000003FE84;
	}
l000000000003FE98:
	w0 = ~0x00;
	goto l000000000003FE9C;
}

// 000000000003FEAC: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2ERSD_NS3_8functionIFbiNS0_6parserISD_E13parse_event_tESF_EEEb
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2ERSD_NS3_8functionIFbiNS0_6parserISD_E13parse_event_tESF_EEEb
{
	ui32 w3;
	struct Eq_78354 * fp;
	struct Eq_78354 * sp = fp;
	sp = (struct Eq_78354 *) ((char *) sp - 64);
	struct Eq_78358 * x24;
	sp->ptr0000 = x24;
	struct Eq_78358 * x23;
	sp->ptr0008 = x23;
	struct Eq_78367 * v8 = (struct Eq_78367 *) ((char *) &sp->ptr0008 + 8);
	struct Eq_78358 * x22;
	v8->ptr0000 = x22;
	struct Eq_78358 * x21;
	v8->ptr0008 = x21;
	struct Eq_78378 * v11 = (struct Eq_78378 *) ((char *) &sp->ptr0008 + 24);
	struct Eq_78358 * x20;
	v11->ptr0000 = x20;
	struct Eq_78358 * x19;
	v11->ptr0008 = x19;
	struct Eq_78389 * v14 = (struct Eq_78389 *) ((char *) &sp->ptr0008 + 40);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 40;
	struct Eq_78358 * q0 = null;
	struct Eq_78358 * x0;
	x24 = x0;
	struct Eq_78358 * x1;
	x0->t0000 = (<anonymous>) x1;
	x0->b0058 = 0x00;
	x24 = (struct Eq_78358 *) ((char *) &x24->t0000 + 8);
	x24->t0000 = (<anonymous>) q0;
	x0->ptr0048 = q0;
	x0->ptr0038 = q0;
	x0->ptr0028 = q0;
	x0->ptr0018 = q0;
	x19 = x0;
	struct Eq_78429 * x2;
	x0 = x2->ptr0020;
	ui32 w22 = w3;
	x20 = (struct Eq_78358 *) &x19->ptr0020;
	x21 = &x19->b0058 + 8;
	Eq_78445 x31;
	Eq_78447 NZCV;
	bool Z;
	struct Eq_78358 * x8;
	if (x0 != null)
	{
		x31 = x2 - x0;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x8 = (struct Eq_78358 *) x0->t0000;
			x8 = x8->ptr0010;
			x8();
			x19->ptr0080 = x0;
		}
		else
		{
			x19->ptr0080 = x21;
			x0 = x2->ptr0020;
			x8 = (struct Eq_78358 *) x0->t0000;
			x8 = x8->ptr0018;
			x1 = x21;
			x8();
		}
	}
	else
		x19->ptr0080 = null;
	x23 = x19;
	x23 = &x23->b0098 + 8;
	x23->t0000 = (<anonymous>) null;
	struct Eq_78480 * v26 = (struct Eq_78480 *) ((char *) x23 - 0x0078);
	x8 = v26->ptr0000;
	struct Eq_78358 * x9 = v26->ptr0008;
	ui32 w10 = w22 & 0x01;
	x23->bFFFFFFF0 = (byte) w10;
	w10 = 0x00 | 0x08;
	x31 = x8 - (x9 << 6);
	NZCV.u0 = cond(x31);
	x23->bFFFFFFF8 = (byte) w10;
	struct Eq_78358 * x10;
	if (Test(NE,Z))
	{
l000000000003FF98:
		x10 = x19->ptr0020;
		x9 = (struct Eq_78358 *) ((char *) &x8->t0000 + 1);
		x19->ptr0028 = x9;
		x9 = x8 >> 3;
		x9 &= 0x1FFFFFFFFFFFFFF8;
		ui64 x11 = *(x10 + x9);
		ui32 w12 = 0x00 | 0x01;
		ui64 x12;
		x8 = x12 << x8;
		x8 = x11 | x8;
		*(x10 + x9) = (word64) x8;
		struct Eq_78534 * v35 = (struct Eq_78534 *) ((char *) &sp->ptr0008 + 40);
		x29 = v35->ptr0000;
		x30 = v35->qw0008;
		struct Eq_78543 * v36 = (struct Eq_78543 *) ((char *) &sp->ptr0008 + 24);
		x20 = v36->ptr0000;
		x19 = v36->ptr0008;
		struct Eq_78552 * v37 = (struct Eq_78552 *) ((char *) &sp->ptr0008 + 8);
		x22 = v37->ptr0000;
		x21 = v37->ptr0008;
		struct Eq_78354 * v38 = sp;
		x24 = v38->ptr0000;
		x23 = v38->ptr0008;
		sp = (struct Eq_78354 *) ((char *) &sp->ptr0008 + 56);
		return;
	}
	sp = (struct Eq_78354 *) ((char *) &x8->t0000 + 1);
	NZCV.u0 = cond(sp);
	bool N;
	if (Test(GE,N))
	{
		x10 = 0x00 | 0x3FFFFFFFFFFFFFFE;
		x31 = x8 - x10;
		NZCV.u0 = cond(x31);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x8 = (struct Eq_78358 *) ((char *) &x8->ptr0038 + 8);
			x9 <<= 7;
			x8 &= ~0x3F;
			x31 = x9 - x8;
			NZCV.u0 = cond(x31);
			bool C;
			x1 = (struct Eq_78358 *) (Test(ULT,C) ? x8 : x9);
		}
		else
			x1 = 0x00 | 0x7FFFFFFFFFFFFFFF;
		x0 = x20;
		fn000000000001AE70();
		x8 = x19->ptr0028;
		goto l000000000003FF98;
	}
	x0 = x20;
	fn000000000001B7E0();
	byte v40 = x19->b0098;
	word32 w1 = (word32) v40;
	x22 = x0;
	x0 = x23;
	fn000000000001C590();
	x0 = x19->ptr0080;
	x31 = x21 - x0;
	NZCV.u0 = cond(x31);
	if (Test(EQ,Z))
	{
		x8 = (struct Eq_78358 *) x0->t0000;
		x8 = x8->ptr0020;
l0000000000040030:
		x8();
		x0 = x19->ptr0038;
		if (x0 != null)
			goto l000000000004004C;
	}
	else
	{
		if (x0 != null)
			goto l0000000000040028;
		x0 = x19->ptr0038;
		if (x0 != null)
		{
l000000000004004C:
			((real64) q0, x0, x1);
			x0 = (struct Eq_78358 *) x20->t0000;
			if (x0 != null)
			{
l0000000000040058:
				((real64) q0, x0, x1);
				x0 = (struct Eq_78358 *) x24->t0000;
				if (x0 != null)
					goto l0000000000040064;
				goto l0000000000040020;
			}
l0000000000040018:
			x0 = (struct Eq_78358 *) x24->t0000;
			if (x0 != null)
			{
l0000000000040064:
				x19->ptr0010 = x0;
				((real64) q0, x0, x1);
				x0 = x22;
				_Unwind_Resume();
				_ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_28json_sax_dom_callback_parserISD_EEEEbPT_();
				return;
			}
l0000000000040020:
			x0 = x22;
			_Unwind_Resume();
l0000000000040028:
			x8 = (struct Eq_78358 *) x0->t0000;
			x8 = x8->ptr0028;
			goto l0000000000040030;
		}
	}
	x0 = (struct Eq_78358 *) x20->t0000;
	if (x0 != null)
		goto l0000000000040058;
	goto l0000000000040018;
}

<anonymous> g_t3FFD8 = <code>; // 000000000003FFD8
// 0000000000040074: define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_28json_sax_dom_callback_parserISD_EEEEbPT_
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2ERSD_NS3_8functionIFbiNS0_6parserISD_E13parse_event_tESF_EEEb
define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_28json_sax_dom_callback_parserISD_EEEEbPT_
{
	struct Eq_78688 * fp;
	struct Eq_78688 * sp = fp;
	sp -= 288;
	word64 d8;
	sp->qw00C0 = d8;
	word64 x28;
	sp->qw00C8 = x28;
	struct Eq_78701 * v8 = (struct Eq_78701 *) (&sp->qw00C8 + 1);
	ui64 x26;
	v8->qw0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_78712 * v11 = (struct Eq_78712 *) (&sp->qw00C8 + 3);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	struct Eq_78718 * x23;
	v11->ptr0008 = x23;
	struct Eq_78723 * v14 = (struct Eq_78723 *) (&sp->qw00C8 + 5);
	Eq_78725 x22;
	v14->t0000.u1 = (word128 *) x22;
	Eq_78725 x21;
	v14->t0008.u1 = (word128 *) x21;
	struct Eq_78734 * v17 = (struct Eq_78734 *) (&sp->qw00C8 + 7);
	Eq_78725 x20;
	v17->t0000.u1 = (word128 *) x20;
	Eq_78725 x19;
	v17->t0008.u1 = (word128 *) x19;
	struct Eq_78745 * v20 = (struct Eq_78745 *) (&sp->qw00C8 + 9);
	struct Eq_78747 * x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (struct Eq_78747 *) (&sp->qw00C8 + 9);
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u0 = 0x00050000;
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	d8 = (word64) *((word32) x9 + 832);
	x24.u0 = 0x00050000;
	Eq_78725 x1;
	x19 = x1;
	Eq_78725 x0;
	x20 = x0;
	x22.u1 = (word32) x0 + 0x0080;
	x21.u1 = (word32) x0 + 56;
	x24.u1 = (word32) x24 + 0x062C;
	ui32 w25 = 0x00 | 0x01;
	x26 = 0x00 | 0x3FFFFFFFFFFFFFFE;
	x29->tFFFFFFA8.u1 = (size_t) x8;
	struct Eq_78788 * v27 = (struct Eq_78788 *) &x29->tFFFFFF90.u0;
	v27->qw0000 = 0x00;
	v27->qw0008 = 0x00;
	x29->qwFFFFFFA0 = 0x00;
	ui32 w8 = x20.u3->dw0030;
	--w8;
	Eq_78810 NZCV;
	NZCV.u0 = cond(w8 - 0x0D);
	word32 ZC;
	word32 w10;
	if (Test(ULE,ZC))
	{
		x9.u0 = 0x0004010C;
		byte v32 = (byte) *(x24 + x8);
		w10 = (word32) v32;
		ui64 x10;
		x9.u1 = (char *) x9.u1 + (x10 << 2);
		x9();
		return;
	}
	x22.u1 = x20.u3->t0050.u1;
	x8.u1 = &sp->b0088;
	x0 = x21;
	fn000000000001AF90();
	Eq_78725 q0;
	q0.u0 = x20.u3->t0050.u0;
	x8.u1 = x20.u3->t0060.u1;
	w10 = 0x6176;
	word32 w9 = 0x0A;
	w10 = SEQ(30060, (word16) w10);
	word32 w11 = 101;
	struct Eq_78837 * v37 = (struct Eq_78837 *) &sp->b0008;
	v37->qw0000 = 0x00;
	v37->qw0008 = 0x00;
	sp->t0018.u1 = (word128 *) 0x00;
	sp->b0008 = (byte) w9;
	sp->dw0009 = w10;
	sp->t0050.u1 = (size_t) x8;
	sp->t0040.u0 = (word128) q0;
	sp->w001A = (word16) w11;
	x8.u1 = &sp->b0020;
	ui32 w1 = 0x00 | 0x10;
	byte * x2 = &sp->b0008;
	x0 = x20;
	fn000000000001C2E0();
	x8.u1 = &sp->t0060.u0;
	ui32 w0 = 101;
	x1.u1 = &sp->t0040.u0;
	x2 = &sp->b0020;
	fn000000000001BF60();
	x2 = &sp->b0088;
	ptr64 x3 = &sp->t0060.u0;
	x0 = x19;
	x1 = x22;
	x20.u1 = &sp->t0060.u0;
	fn000000000001B5D0();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	ui32 w19 = w0;
	x0.u1 = (word32) x20 + 16;
	x8.u1 = x8 + (struct Eq_78910 *) 0x10;
	sp->t0060.u1 = (size_t) x8;
	_ZNSt13runtime_errorD1Ev();
	x0.u1 = &sp->t0060.u0;
	_ZNSt9exceptionD2Ev();
	byte v43 = sp->b0020;
	w8 = (word32) v43;
	if ((w8 & 0x01) != 0x00)
	{
		byte v44 = sp->b0008;
		w8 = (word32) v44;
		if ((w8 & 0x01) != 0x00)
		{
l0000000000040564:
			byte v45 = sp->b0088;
			w8 = (word32) v45;
			if ((w8 & 0x01) != 0x00)
			{
l000000000004056C:
				x0.u1 = x29->tFFFFFF90.u1;
				if (x0 == 0x00)
					goto l0000000000040578;
l0000000000040574:
				((real64) q0, x0, x1);
l0000000000040578:
				x8.u1 = x23->t0028.u1;
				x9.u1 = x29->tFFFFFFA8.u1;
				word64 x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				bool Z;
				if (Test(NE,Z))
					__stack_chk_fail();
				else
				{
					w0 = w19 & 0x01;
					struct Eq_79030 * v50 = (struct Eq_79030 *) (&sp->qw00C8 + 9);
					x29 = v50->ptr0000;
					x30 = v50->qw0008;
					struct Eq_79039 * v51 = (struct Eq_79039 *) (&sp->qw00C8 + 7);
					x20.u1 = v51->t0000.u1;
					x19.u1 = v51->t0008.u1;
					struct Eq_79048 * v52 = (struct Eq_79048 *) (&sp->qw00C8 + 5);
					x22.u1 = v52->t0000.u1;
					x21.u1 = v52->t0008.u1;
					struct Eq_79057 * v53 = (struct Eq_79057 *) (&sp->qw00C8 + 3);
					x24.u1 = v53->t0000.u1;
					x23 = v53->ptr0008;
					struct Eq_79066 * v54 = (struct Eq_79066 *) (&sp->qw00C8 + 1);
					x26 = v54->qw0000;
					x25 = v54->qw0008;
					x28 = sp->qw00C8;
					d8 = sp->qw00C0;
					sp = &sp->qw00C8 + 11;
					return;
				}
			}
l00000000000408E4:
			x0.u1 = sp->t0098.u1;
			((real64) q0, x0, x1);
			x0.u1 = x29->tFFFFFF90.u1;
			if (x0 == 0x00)
				goto l0000000000040578;
			goto l0000000000040574;
		}
	}
	else
	{
		x0.u1 = sp->t0030.u1;
		((real64) q0, x0, x1);
		byte v46 = sp->b0008;
		w8 = (word32) v46;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000040564;
	}
	x0.u1 = sp->t0018.u1;
	((real64) q0, x0, x1);
	byte v47 = sp->b0088;
	w8 = (word32) v47;
	if ((w8 & 0x01) == 0x00)
		goto l000000000004056C;
	goto l00000000000408E4;
}

// 0000000000040BDC: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
{
	Eq_14 x3;
	struct Eq_79086 * x0;
	struct Eq_79082 * fp;
	struct Eq_79082 * sp = fp;
	sp = (struct Eq_79082 *) ((char *) sp - 32);
	struct Eq_79086 * x19;
	sp->ptr0000 = x19;
	struct Eq_79091 * v7 = (struct Eq_79091 *) ((char *) &sp->t0008 + 8);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 8;
	byte v10 = x0->b0090;
	int32 w8 = (word32) v10;
	int32 w9 = 0x00 | 0x01;
	x0->b0058 = (byte) w9;
	ui32 w0;
	if (w8 != 0x00)
	{
		int32 v14 = (int32) *((word32) x3 + 4);
		byte * x8 = (int64) v14;
		w9 = 0x851F;
		w9 = SEQ(0x51EB, (word16) w9);
		Eq_14 x9;
		x8 *= x9;
		Eq_79150 x10 = x8 >> 63;
		x8 >>= 37;
		ui32 w10;
		w8 += w10;
		x9.u1 = (int64) (w8 *s w9);
		x10 = x9 >> 63;
		x9 >>= 37;
		w9 += w10;
		w10 = 100;
		w8 -= w9 * w10;
		--w8;
		int32 v25 = w8;
		Eq_79171 NZCV;
		NZCV.u0 = cond(w8 - 0x04);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x9.u0 = 0x00050000;
			x9.u1 = x9 + &g_b063A;
			sp->t0008.u1 = (size_t) x3;
			x10.u1 = 0x00040C64;
			byte v23 = (byte) *(x9 + x8);
			word32 w11 = (word32) v23;
			ui64 x11;
			x10 += x11 << 2;
			switch (v25)
			{
			case 0:
				w0 = 0x28;
				__cxa_allocate_exception();
				Eq_14 x1;
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001AF10();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3440);
				break;
			case 1:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001B4D0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3312);
				break;
			case 2:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001B4A0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0C90);
				break;
			case 3:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001C090();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0E88);
				break;
			case 4:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001C2A0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3360);
				break;
			}
			Eq_14 x2;
			x2.u0 = 0x00070000;
			x2 = *((word32) x2 + 0x0DD0);
			x0 = x19;
			__cxa_throw();
			_ZNK8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE16get_token_stringEv();
			return;
		}
	}
	struct Eq_79121 * v20 = (struct Eq_79121 *) ((char *) &sp->t0008 + 8);
	x29 = v20->ptr0000;
	x30 = v20->qw0008;
	w0 = 0x00;
	x19 = sp->ptr0000;
	sp = (struct Eq_79082 *) ((char *) &sp->t0008 + 24);
}

// 0000000000040D10: define _ZNK8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE16get_token_stringEv
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define _ZNK8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE16get_token_stringEv
{
	Eq_14 x0;
	struct Eq_79262 * fp;
	struct Eq_79262 * sp = fp;
	sp -= 0x60;
	word64 x23;
	sp->qw0020 = x23;
	struct Eq_79271 * v7 = (struct Eq_79271 *) (&sp->qw0020 + 2);
	byte * x22;
	v7->ptr0000 = x22;
	struct Eq_79277 * x21;
	v7->ptr0008 = x21;
	struct Eq_79282 * v10 = (struct Eq_79282 *) (&sp->qw0020 + 4);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_79293 * v13 = (struct Eq_79293 *) (&sp->qw0020 + 6);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = &sp->qw0020 + 6;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x21->t0028.u1;
	sp->t0018.u1 = (size_t) x8;
	struct Eq_79317 * v16 = (struct Eq_79317 *) ((word32) x19 + 8);
	v16->qw0000 = 0x00;
	v16->qw0008 = 0x00;
	x19.u1->u1 = 0x00;
	struct Eq_79333 * v18 = (struct Eq_79333 *) ((word32) x0 + 48);
	x22 = v18->ptr0000;
	x23 = v18->qw0008;
	word64 x31 = x22 - x23;
	Eq_79343 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
	{
		x20.u0 = 0x00053000;
		x20.u1 = (word32) x20 + 876;
		do
		{
			byte v23 = *x22;
			word32 w3 = (word32) v23;
			NZCV.u0 = cond(w3 - 0x1F);
			word32 ZC;
			word32 w1;
			if (Test(ULE,ZC))
			{
				x0.u1 = &sp->qw0008;
				w1 = 0x09;
				Eq_14 x2 = x20;
				sp->b0010 = 0x00;
				sp->qw0008 = 0x00;
				Eq_14 x1;
				x0 = SEQ(0x00, snprintf(x0, x1, x2, 0x00));
				x0.u1 = &sp->qw0008;
				x0 = strlen(x0);
				x2 = x0;
				x1.u1 = &sp->qw0008;
				x0 = x19;
				fn000000000001B1B0();
			}
			else
			{
				x0 = x19;
				w1 = w3;
				fn000000000001C0E0();
			}
			++x22;
			x31 = x23 - x22;
			NZCV.u0 = cond(x31);
		} while (Test(NE,Z));
	}
	x8.u1 = x21->t0028.u1;
	Eq_14 x9;
	x9.u1 = sp->t0018.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_79402 * v29 = (struct Eq_79402 *) (&sp->qw0020 + 6);
		x29 = v29->ptr0000;
		x30 = v29->qw0008;
		struct Eq_79411 * v30 = (struct Eq_79411 *) (&sp->qw0020 + 4);
		x20.u1 = v30->t0000.u1;
		x19.u1 = v30->t0008.u1;
		struct Eq_79420 * v31 = (struct Eq_79420 *) (&sp->qw0020 + 2);
		x22 = v31->ptr0000;
		x21 = v31->ptr0008;
		x23 = sp->qw0020;
		sp = &sp->qw0020 + 8;
	}
}

// 0000000000040DF8: define _ZN8nlohmann6detail11parse_error6createEiRKNS0_10position_tERKNSt6__ndk112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
define _ZN8nlohmann6detail11parse_error6createEiRKNS0_10position_tERKNSt6__ndk112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
{
	word32 w0;
	struct Eq_79443 * fp;
	struct Eq_79443 * sp = fp;
	sp -= 288;
	word64 x28;
	sp->qw00D0 = x28;
	struct Eq_79452 * v7 = (struct Eq_79452 *) (&sp->qw00D0 + 2);
	struct Eq_79454 * x24;
	v7->ptr0000 = x24;
	struct Eq_79458 * x23;
	v7->ptr0008 = x23;
	struct Eq_79463 * v10 = (struct Eq_79463 *) (&sp->qw00D0 + 4);
	byte * x22;
	v10->ptr0000 = x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_79474 * v13 = (struct Eq_79474 *) (&sp->qw00D0 + 6);
	word64 x20;
	v13->qw0000 = x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_79485 * v16 = (struct Eq_79485 *) (&sp->qw00D0 + 8);
	struct Eq_79487 * x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = (struct Eq_79487 *) (&sp->qw00D0 + 8);
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x23->t0028.u1;
	word32 w9 = 22;
	byte * x2;
	x22 = x2;
	Eq_14 x1;
	x21 = x1;
	sp->t0000.u1 = (size_t) x8;
	struct Eq_79513 * v22 = (struct Eq_79513 *) &sp->b0020;
	v22->qw0000 = 0x00;
	v22->qw0008 = 0x00;
	sp->b0020 = (byte) w9;
	Eq_14 x9;
	x9.u0 = 0x00053000;
	x9.u1 = (word32) x9 + 885;
	x9 = *x9.u1;
	ui32 w8 = 0x6F72;
	word32 w20 = w0;
	w8 = SEQ(114, (word16) w8);
	sp->t0030.u1 = (size_t) 0x00;
	sp->dw0029 = w8;
	sp->t0021.u1 = (size_t) x9;
	x8.u1 = &sp->b0038;
	Eq_14 x0;
	x0.u1 = &sp->b0020;
	word32 w1 = w20;
	fn000000000001B540();
	x1.u0 = 0x00053000;
	x1.u1 = (word32) x1 + 897;
	x0.u1 = &sp->b0038;
	ui32 w2 = 11;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	Eq_79569 q0 = *x0.u1;
	sp->t0060.u1 = (size_t) x8;
	sp->t0050.u1 = (word128) q0;
	struct Eq_79578 * v31 = (struct Eq_79578 *) ((word32) x0 + 8);
	v31->qw0000 = 0x00;
	v31->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	x8.u1 = &sp->b0008;
	x0 = x21;
	x24 = (struct Eq_79454 *) &sp->b0008;
	fn000000000001AE10();
	byte v32 = sp->b0008;
	w8 = (word32) v32;
	struct Eq_79604 * v34 = (struct Eq_79604 *) (&sp->b0008 + 8);
	Eq_79608 x10;
	x10.u0 = v34->t0000.u0;
	x9.u1 = v34->t0008.u1;
	Eq_14 x11 = x24 | 0x01;
	ui32 w31 = w8 & 0x01;
	Eq_79619 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	uint64 x12 = x8 >> 1;
	bool Z;
	x1.u1 = Test(EQ,Z) ? x11 : x9;
	x2 = Test(EQ,Z) ? x12 : x10;
	x0.u1 = &sp->t0050.u0;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	q0 = *x0.u1;
	sp->t0080.u1 = (size_t) x8;
	sp->t0070.u1 = (word128) q0;
	struct Eq_79649 * v42 = (struct Eq_79649 *) ((word32) x0 + 8);
	v42->qw0000 = 0x00;
	v42->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	x1.u0 = 0x00052000;
	x1.u1 = (word32) x1 + 1513;
	x0.u1 = &sp->t0070.u0;
	w2 = 0x00 | 0x02;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	q0 = *x0.u1;
	x24 = x29 - 0x80;
	x29->tFFFFFF90.u1 = (size_t) x8;
	x24->t0000.u1 = (word128) q0;
	struct Eq_79686 * v43 = (struct Eq_79686 *) ((word32) x0 + 8);
	v43->qw0000 = 0x00;
	v43->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	byte v44 = *x22;
	w8 = (word32) v44;
	struct Eq_79706 * v45 = (struct Eq_79706 *) (x22 + 8);
	x10.u0 = v45->t0000.u0;
	x9.u1 = v45->t0008.u1;
	w31 = w8 & 0x01;
	NZ.u0 = cond(w31);
	C = false;
	V = false;
	x11 = x8 >> 1;
	x1.u1 = Test(NE,Z) ? x9 : x22 + 1;
	x2 = Test(EQ,Z) ? x11 : x10;
	x0 = x29 - 0x80;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	q0 = *x0.u1;
	x29->tFFFFFFB0.u1 = (size_t) x8;
	x24->t0020.u1 = (word128) q0;
	struct Eq_79743 * v46 = (struct Eq_79743 *) ((word32) x0 + 8);
	v46->qw0000 = 0x00;
	v46->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	byte v47 = x29->bFFFFFF80;
	w8 = (word32) v47;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_79569 v48;
		v48.u0 = sp->t0070.u0;
		w8 = (word32) v48;
		if ((w8 & 0x01) != 0x00)
		{
l0000000000040F5C:
			byte v49 = sp->b0008;
			w8 = (word32) v49;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000040F64:
				Eq_79569 v50;
				v50.u0 = sp->t0050.u0;
				w8 = (word32) v50;
				if ((w8 & 0x01) != 0x00)
				{
l0000000000040F6C:
					byte v51 = sp->b0038;
					w8 = (word32) v51;
					if ((w8 & 0x01) != 0x00)
					{
l0000000000040F74:
						byte v52 = sp->b0020;
						w8 = (word32) v52;
						if ((w8 & 0x01) == 0x00)
							goto l0000000000040F84;
l0000000000040F7C:
						x0.u1 = sp->t0030.u1;
						((real64) q0, x0, x1);
l0000000000040F84:
						byte v58 = x29->bFFFFFFA0;
						w8 = (word32) v58;
						x11.u0 = 0x00070000;
						x21 = *x21.u1;
						x9.u1 = x29->tFFFFFFB0.u1;
						x11 = *((word32) x11 + 0x0F38);
						x10 = x29 - 0x60;
						x10 |= 0x01;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x11.u1 = (word32) x11 + 16;
						x1.u1 = Test(EQ,Z) ? x10 : x9;
						x0.u1 = (word32) x19 + 16;
						((word32) x19 + 8)->u1 = w20;
						*x19.u1 = x11;
						_ZNSt13runtime_errorC1EPKc();
						x9.u0 = 0x00070000;
						byte v59 = x29->bFFFFFFA0;
						w8 = (word32) v59;
						x9 = *((word32) x9 + 0x0D98);
						*((word32) x19 + 32) = x21;
						x9.u1 = (word32) x9 + 16;
						*x19.u1 = x9;
						if ((w8 & 0x01) != 0x00)
						{
							x0.u1 = x29->tFFFFFFB0.u1;
							((real64) q0, x0, x1);
						}
						x8.u1 = x23->t0028.u1;
						x9.u1 = sp->t0000.u1;
						word64 x31 = x8 - x9;
						Eq_79981 NZCV;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							__stack_chk_fail();
						else
						{
							struct Eq_79998 * v62 = (struct Eq_79998 *) (&sp->qw00D0 + 8);
							x29 = v62->ptr0000;
							x30 = v62->qw0008;
							struct Eq_80007 * v63 = (struct Eq_80007 *) (&sp->qw00D0 + 6);
							x20 = v63->qw0000;
							x19.u1 = v63->t0008.u1;
							struct Eq_80016 * v64 = (struct Eq_80016 *) (&sp->qw00D0 + 4);
							x22 = v64->ptr0000;
							x21.u1 = v64->t0008.u1;
							struct Eq_80025 * v65 = (struct Eq_80025 *) (&sp->qw00D0 + 2);
							x24 = v65->ptr0000;
							x23 = v65->ptr0008;
							x28 = sp->qw00D0;
							sp = &sp->qw00D0 + 0x0A;
							return;
						}
					}
l000000000004104C:
					x0.u1 = sp->t0048.u1;
					((real64) q0, x0, x1);
					byte v57 = sp->b0020;
					w8 = (word32) v57;
					if ((w8 & 0x01) != 0x00)
						goto l0000000000040F84;
					goto l0000000000040F7C;
				}
l000000000004103C:
				x0.u1 = sp->t0060.u1;
				((real64) q0, x0, x1);
				byte v56 = sp->b0038;
				w8 = (word32) v56;
				if ((w8 & 0x01) == 0x00)
					goto l0000000000040F74;
				goto l000000000004104C;
			}
l000000000004102C:
			x0.u1 = sp->t0018.u1;
			((real64) q0, x0, x1);
			Eq_79569 v55;
			v55.u0 = sp->t0050.u0;
			w8 = (word32) v55;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000040F6C;
			goto l000000000004103C;
		}
	}
	else
	{
		x0.u1 = x29->tFFFFFF90.u1;
		((real64) q0, x0, x1);
		Eq_79569 v53;
		v53.u0 = sp->t0070.u0;
		w8 = (word32) v53;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000040F5C;
	}
	x0.u1 = sp->t0080.u1;
	((real64) q0, x0, x1);
	byte v54 = sp->b0008;
	w8 = (word32) v54;
	if ((w8 & 0x01) == 0x00)
		goto l0000000000040F64;
	goto l000000000004102C;
}

// 0000000000041168: define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE17exception_messageENS0_5lexerISD_E10token_typeERKSB_
define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE17exception_messageENS0_5lexerISD_E10token_typeERKSB_
{
	word32 w1;
	Eq_14 x2;
	Eq_80038 fp;
	Eq_80038 sp = fp;
	sp -= 0xE0;
	struct Eq_80043 * v6 = (struct Eq_80043 *) ((word32) sp + 144);
	struct Eq_80045 * x26;
	v6->ptr0000 = x26;
	Eq_14 x25;
	v6->t0008.u1 = (size_t) x25;
	struct Eq_80054 * v9 = (struct Eq_80054 *) ((word32) sp + 0x00A0);
	Eq_14 x24;
	v9->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v9->t0008.u1 = (size_t) x23;
	struct Eq_80065 * v12 = (struct Eq_80065 *) ((word32) sp + 0x00B0);
	Eq_14 x22;
	v12->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v12->t0008.u1 = (size_t) x21;
	struct Eq_80076 * v15 = (struct Eq_80076 *) ((word32) sp + 0x00C0);
	Eq_14 x20;
	v15->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v15->t0008.u1 = (size_t) x19;
	struct Eq_80087 * v18 = (struct Eq_80087 *) ((word32) sp + 0x00D0);
	struct Eq_80089 * x29;
	v18->ptr0000 = x29;
	Eq_14 x30;
	v18->t0008.u1 = (size_t) x30;
	x29 = (struct Eq_80089 *) ((word32) sp + 0x00D0);
	Eq_1720 sysreg3_3_13_0_2;
	x26 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x26->t0028.u1;
	Eq_14 x10;
	x10.u0 = 0x00053000;
	x10.u1 = (word32) x10 + 929;
	word32 w9 = 0x1A;
	x29->tFFFFFFB8.u1 = (size_t) x8;
	x8 = *x10.u1;
	x10 = *((word32) x10 + 5);
	Eq_14 v23 = x19;
	v23.u1->u0 = 0x00;
	((word32) v23 + 8)->u0 = 0x00;
	((word32) x19 + 16)->u0 = 0x00;
	x19.u1->u1 = (byte) w9;
	*((word32) x19 + 6) = x10;
	*((word32) x19 + 1) = x8;
	((word32) x19 + 0x0E)->u0 = 0x00;
	byte v26 = (byte) *x2.u1;
	int32 w8 = (word32) v26;
	Eq_14 x9 = *((word32) x2 + 8);
	word32 w20 = w1;
	Eq_14 x0;
	x21 = x0;
	x10 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_80167 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x8.u1 = Test(EQ,Z) ? x10 : x9;
	Eq_14 x1;
	ui32 w2;
	Eq_80134 q0;
	ui64 x11;
	uint64 x12;
	if (x8 != 0x00)
	{
		x0.u0 = 0x00053000;
		x0.u1 = (word32) x0 + 943;
		x8.u1 = &sp.u1->t0050.u0;
		x1 = x2;
		fn000000000001C140();
		x1.u0 = 0x00052000;
		x1.u1 = (word32) x1 + 1161;
		x0.u1 = &sp.u1->t0050.u0;
		w2 = 0x00 | 0x01;
		fn000000000001B1B0();
		x8 = *((word32) x0 + 16);
		q0 = *x0.u1;
		x9 = x29 - 0x60;
		x9 |= 0x01;
		x29->tFFFFFFB0.u1 = (size_t) x8;
		x29->tFFFFFFA0.u1 = (word128) q0;
		struct Eq_80227 * v39 = (struct Eq_80227 *) ((word32) x0 + 8);
		v39->qw0000 = 0x00;
		v39->qw0008 = 0x00;
		x0.u1->u1 = 0x00;
		Eq_80134 v40;
		v40.u0 = x29->tFFFFFFA0.u0;
		w8 = (word32) v40;
		struct Eq_80247 * v42 = (struct Eq_80247 *) ((char *) &x29->tFFFFFFA0 + 8);
		x11 = v42->qw0000;
		x10.u1 = v42->t0008.u1;
		w31 = w8 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x12 = x8 >> 1;
		x1.u1 = Test(EQ,Z) ? x9 : x10;
		x2.u1 = Test(EQ,Z) ? x12 : x11;
		x0 = x19;
		fn000000000001B1B0();
		Eq_80134 v44;
		v44.u0 = x29->tFFFFFFA0.u0;
		w8 = (word32) v44;
		if ((w8 & 0x01) != 0x00)
		{
			x0.u1 = x29->tFFFFFFB0.u1;
			((real64) q0, x0, x1);
		}
		Eq_80134 v91;
		v91.u0 = sp.u1->t0050.u0;
		w8 = (word32) v91;
		if ((w8 & 0x01) != 0x00)
		{
			x0.u1 = sp.u1->t0060.u1;
			((real64) q0, x0, x1);
		}
	}
	x1.u0 = 0x00053000;
	x1.u1 = (word32) x1 + 958;
	w2 = 0x00 | 0x02;
	x0 = x19;
	fn000000000001B1B0();
	Eq_14 v45 = *((word32) x21 + 24);
	x8.u1 = (int64) v45;
	Eq_80193 NZCV;
	NZCV.u0 = cond(w8 - 0x0E);
	if (Test(EQ,Z))
	{
		x22 = *((word32) x21 + 0x0098);
		struct Eq_80306 * v47 = (struct Eq_80306 *) &sp.u1->t0018.u0;
		v47->qw0000 = 0x00;
		v47->qw0008 = 0x00;
		((word32) sp + 40)->u0 = 0x00;
		x0 = x22;
		x0 = strlen(x0);
		sp.u0 = (word32) x0 + 16;
		NZCV.u0 = cond(sp);
		if (Test(UGE,C))
			goto l0000000000041690;
		x23 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = &sp.u1->t0018.u0;
			ui32 w23;
			w8 = w23 << 1;
			x24 = x9 | 0x01;
			sp.u1->t0018.u0 = (byte) (byte) w8;
			if (x23 == 0x00)
				goto l0000000000041354;
		}
		else
		{
			x8.u1 = (word32) x23 + 16;
			x25 = x8 & ~0x0F;
			x0 = x25;
			_Znwm();
			x8 = x25 | 0x01;
			x24 = x0;
			struct Eq_80344 * v50 = (struct Eq_80344 *) ((word32) sp + 32);
			v50->t0000.u1 = (size_t) x23;
			v50->t0008.u1 = (size_t) x0;
			sp.u1->t0018.u1 = (size_t) x8;
		}
		x0 = x24;
		x1 = x22;
		x2 = x23;
		x0 = memcpy(x0, x1, x2);
l0000000000041354:
		*(x24 + x23) = (word64) 0x00;
		x1.u0 = 0x00053000;
		x1.u1 = (word32) x1 + 961;
		x0.u1 = &sp.u1->t0018.u0;
		w2 = 0x00 | 0x0E;
		fn000000000001B1B0();
		x8 = *((word32) x0 + 16);
		q0 = *x0.u1;
		x9.u1 = (word32) x21 + 56;
		((word32) sp + 64)->u0 = x8;
		((word32) sp + 48)->u0 = q0;
		Eq_80400 v51;
		v51.u0 = x0 + 8;
		v51.u0->u0 = 0x00;
		v51.u2->qw0008 = 0x00;
		x0.u1->u1 = 0x00;
		x8.u1 = sp.u0;
		x0 = x9;
		x21.u1 = sp.u0;
		fn000000000001AF90();
		Eq_80421 v52;
		v52.u1 = sp.u1->t0000.u0;
		w8 = (word32) v52;
		struct Eq_80425 * v53 = (struct Eq_80425 *) &sp.u1->t0008.u0;
		x10.u1 = v53->t0000.u1;
		x9.u1 = v53->t0008.u1;
		x11 = x21 | 0x01;
		w31 = w8 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x12 = x8 >> 1;
		x1.u1 = Test(EQ,Z) ? x11 : x9;
		x2.u1 = Test(EQ,Z) ? x12 : x10;
		x0.u1 = (word32) sp + 48;
		fn000000000001B1B0();
		x8 = *((word32) x0 + 16);
		q0 = *x0.u1;
		sp.u1->t0060.u1 = (size_t) x8;
		sp.u1->t0050.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		Eq_80462 v54;
		v54.u0 = x0 + 8;
		v54.u1->t0000.u2 = 0x00;
		v54.u1->t0008.u1 = 0x00;
		x0.u1->u1 = 0x00;
		x1.u0 = 0x00053000;
		x1.u1 = (word32) x1 + 974;
		x0.u1 = &sp.u1->t0050.u0;
		w2 = 0x00 | 0x01;
		fn000000000001B1B0();
		x8 = *((word32) x0 + 16);
		q0 = *x0.u1;
		x9 = x29 - 0x60;
		x9 |= 0x01;
		x29->tFFFFFFB0.u1 = (size_t) x8;
		x29->tFFFFFFA0.u1 = (word128) q0;
		Eq_80501 v55;
		v55.u0 = x0 + 8;
		v55.u1->t0000.u2 = 0x00;
		v55.u1->t0008.u1 = 0x00;
		x0.u1->u1 = 0x00;
		Eq_80134 v56;
		v56.u0 = x29->tFFFFFFA0.u0;
		w8 = (word32) v56;
		struct Eq_80521 * v57 = (struct Eq_80521 *) ((char *) &x29->tFFFFFFA0 + 8);
		x11 = v57->qw0000;
		x10.u1 = v57->t0008.u1;
		w31 = w8 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x12 = x8 >> 1;
		x1.u1 = Test(EQ,Z) ? x9 : x10;
		x2.u1 = Test(EQ,Z) ? x12 : x11;
		x0 = x19;
		fn000000000001B1B0();
		Eq_80134 v58;
		v58.u0 = x29->tFFFFFFA0.u0;
		w8 = (word32) v58;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_80134 v59;
			v59.u0 = sp.u1->t0050.u0;
			w8 = (word32) v59;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000041438:
				byte v60 = sp.u1->t0000.u0;
				w8 = (word32) v60;
				if ((w8 & 0x01) != 0x00)
				{
l0000000000041440:
					Eq_80134 v61 = *((word32) sp + 48);
					w8 = (word32) v61;
					if ((w8 & 0x01) != 0x00)
					{
l0000000000041448:
						Eq_14 v62;
						v62.u0 = sp.u1->t0018.u0;
						w8 = (word32) v62;
						if ((w8 & 0x01) != 0x00)
							goto l0000000000041548;
l0000000000041540:
						x0.u1 = *((word32) sp + 40);
						goto l0000000000041544;
					}
l0000000000041530:
					x0.u1 = *((word32) sp + 64);
					((real64) q0, x0, x1);
					Eq_14 v86;
					v86.u0 = sp.u1->t0018.u0;
					w8 = (word32) v86;
					if ((w8 & 0x01) == 0x00)
						goto l0000000000041548;
					goto l0000000000041540;
				}
l0000000000041520:
				x0.u1 = sp.u1->t0010.u1;
				((real64) q0, x0, x1);
				Eq_80134 v88 = *((word32) sp + 48);
				w8 = (word32) v88;
				if ((w8 & 0x01) == 0x00)
					goto l0000000000041448;
				goto l0000000000041530;
			}
		}
		else
		{
			x0.u1 = x29->tFFFFFFB0.u1;
			((real64) q0, x0, x1);
			Eq_80134 v90;
			v90.u0 = sp.u1->t0050.u0;
			w8 = (word32) v90;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000041438;
		}
		x0.u1 = sp.u1->t0060.u1;
		((real64) q0, x0, x1);
		byte v89 = sp.u1->t0000.u0;
		w8 = (word32) v89;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000041440;
		goto l0000000000041520;
	}
	NZCV.u0 = cond(w8 - 0x10);
	word32 ZC;
	if (Test(ULE,ZC))
	{
		x9.u0 = 0x0006F000;
		x9.u1 = x9 + 0x0B08;
		x21.u1 = *(x9 + x8);
	}
	else
	{
		x21.u0 = 0x00053000;
		x21.u1 = (word32) x21 + 0x0488;
	}
	x0 = x21;
	struct Eq_80557 * v63 = (struct Eq_80557 *) &sp.u1->t0050.u0;
	v63->b0000 = (byte) 0x00;
	v63->qw0008 = 0x00;
	sp.u1->t0060.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
l0000000000041698:
		x0.u1 = sp + 0x50;
		fn000000000001B2D0();
		x20 = x0;
		Eq_80134 v87 = *x19.u1;
		w8 = (word32) v87;
		if ((w8 & 0x01) != 0x00)
		{
			x0 = *((word32) x19 + 16);
			((real64) q0, x0, x1);
		}
		x0 = x20;
		_Unwind_Resume();
		_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEED2Ev();
		return;
	}
	x22 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x50;
		ui32 w22;
		w8 = w22 << 1;
		x23 = x9 | 0x01;
		sp.u1->t0050.u0 = (byte) (byte) w8;
		if (x22 == 0x00)
			goto l0000000000041484;
	}
	else
	{
		x8.u1 = x22 + 0x10;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		Eq_80712 v85;
		v85.u0 = sp + 88;
		v85.u1->t0000.u2 = (union Eq_109899 ******************************************************************************************************) x22;
		v85.u1->t0008.u1 = (size_t) x0;
		sp.u1->t0050.u1 = (size_t) x8;
	}
	x0 = x23;
	x1 = x21;
	x2 = x22;
	x0 = memcpy(x0, x1, x2);
l0000000000041484:
	*(x23 + x22) = (word64) 0x00;
	x2.u0 = 0x00053000;
	x2.u1 = x2 + 0x03D0;
	x0.u1 = sp + 0x50;
	word32 w3 = 11;
	x1.u0 = 0x00;
	fn000000000001B4E0();
	x8 = *((word32) x0 + 16);
	q0 = *x0.u1;
	x9 = x29 - 0x60;
	x9 |= 0x01;
	x29->tFFFFFFB0.u1 = (size_t) x8;
	x29->tFFFFFFA0.u1 = (word128) q0;
	Eq_80770 v66;
	v66.u0 = x0 + 8;
	v66.u1->t0000.u2 = 0x00;
	v66.u1->t0008.u1 = (size_t) 0x00;
	x0.u1->u1 = 0x00;
	Eq_80134 v67;
	v67.u0 = x29->tFFFFFFA0.u0;
	w8 = (word32) v67;
	struct Eq_80790 * v68 = (struct Eq_80790 *) ((char *) &x29->tFFFFFFA0 + 8);
	x11 = v68->qw0000;
	x10.u1 = v68->t0008.u1;
	w31 = w8 & 0x01;
	NZ.u0 = cond(w31);
	C = false;
	V = false;
	x12 = x8 >> 1;
	x1.u1 = Test(EQ,Z) ? x9 : x10;
	x2.u1 = Test(EQ,Z) ? x12 : x11;
	x0 = x19;
	fn000000000001B1B0();
	Eq_80134 v69;
	v69.u0 = x29->tFFFFFFA0.u0;
	w8 = (word32) v69;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = x29->tFFFFFFB0.u1;
		((real64) q0, x0, x1);
	}
	Eq_14 v72;
	v72.u0 = sp.u1->t0050.u0;
	w8 = (word32) v72;
	if ((w8 & 0x01) == 0x00)
	{
l0000000000041548:
		if (w20 == 0x00)
		{
l0000000000041658:
			x8.u1 = x26->t0028.u1;
			x9.u1 = x29->tFFFFFFB8.u1;
			Eq_80825 x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				Eq_81049 v80;
				v80.u0 = sp + 0x00D0;
				x29 = (struct Eq_80089 *) v80.u1->t0000.u2;
				x30.u1 = v80.u1->t0008.u1;
				Eq_81058 v81;
				v81.u0 = sp + 0x00C0;
				x20.u1 = v81.u1->t0000.u2;
				x19.u1 = v81.u1->t0008.u1;
				Eq_81067 v82;
				v82.u0 = sp + 0x00B0;
				x22.u1 = v82.u1->t0000.u2;
				x21.u1 = v82.u1->t0008.u1;
				Eq_81076 v83;
				v83.u0 = sp + 0x00A0;
				x24.u1 = v83.u1->t0000.u2;
				x23.u1 = v83.u1->t0008.u1;
				Eq_81085 v84;
				v84.u0 = sp + 144;
				x26 = (struct Eq_80045 *) v84.u1->t0000.u2;
				x25.u1 = v84.u1->t0008.u1;
				sp.u0 = sp + 0xE0;
				return;
			}
		}
		w8 = w20 - 0x01;
		NZCV.u0 = cond(w8 - 0x0F);
		if (Test(ULE,ZC))
		{
			x9.u0 = 0x0006F000;
			x9.u1 = x9 + 0x0B90;
			x20 = *((char *) x9.u1 + (int64) w8);
		}
		else
		{
			x20.u0 = 0x00053000;
			x20.u1 = (word32) x20 + 0x0488;
		}
		x0 = x20;
		Eq_80843 v70;
		v70.u0 = sp + 80;
		v70.u1->t0000.u2 = 0x00;
		v70.u1->t0008.u1 = (size_t) 0x00;
		sp.u1->t0060.u1 = (size_t) 0x00;
		x0 = strlen(x0);
		sp.u0 = x0 + 0x10;
		NZCV.u0 = cond(sp);
		if (Test(ULT,C))
		{
			x21 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			if (Test(ULT,C))
			{
				x9.u1 = sp + 0x50;
				ui32 w21;
				w8 = w21 << 1;
				x22 = x9 | 0x01;
				sp.u1->t0050.u0 = (byte) (byte) w8;
				if (x21 == 0x00)
					goto l00000000000415DC;
			}
			else
			{
				x8.u1 = x21 + 0x10;
				x23 = x8 & ~0x0F;
				x0 = x23;
				_Znwm();
				x8 = x23 | 0x01;
				x22 = x0;
				Eq_80900 v78;
				v78.u0 = sp + 88;
				v78.u1->t0000.u2 = (union Eq_109899 ******************************************************************************************************) x21;
				v78.u1->t0008.u1 = (size_t) x0;
				sp.u1->t0050.u1 = (size_t) x8;
			}
			x0 = x22;
			x1 = x20;
			x2 = x21;
			x0 = memcpy(x0, x1, x2);
l00000000000415DC:
			*(x22 + x21) = (word64) 0x00;
			x2.u0 = 0x00053000;
			x2.u1 = x2 + 988;
			x0.u1 = sp + 0x50;
			w3 = 11;
			x1.u0 = 0x00;
			fn000000000001B4E0();
			x8 = *((word32) x0 + 16);
			q0 = *x0.u1;
			x9 = x29 - 0x60;
			x9 |= 0x01;
			x29->tFFFFFFB0.u1 = (size_t) x8;
			x29->tFFFFFFA0.u1 = (word128) q0;
			Eq_80957 v73;
			v73.u0 = x0 + 8;
			v73.u1->t0000.u2 = 0x00;
			v73.u1->t0008.u1 = (size_t) 0x00;
			x0.u1->u1 = 0x00;
			Eq_80134 v74;
			v74.u0 = x29->tFFFFFFA0.u0;
			w8 = (word32) v74;
			struct Eq_80977 * v75 = (struct Eq_80977 *) ((char *) &x29->tFFFFFFA0 + 8);
			x11 = v75->qw0000;
			x10.u1 = v75->t0008.u1;
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x12 = x8 >> 1;
			x1.u1 = Test(EQ,Z) ? x9 : x10;
			x2.u1 = Test(EQ,Z) ? x12 : x11;
			x0 = x19;
			fn000000000001B1B0();
			Eq_80134 v76;
			v76.u0 = x29->tFFFFFFA0.u0;
			w8 = (word32) v76;
			if ((w8 & 0x01) != 0x00)
			{
				x0.u1 = x29->tFFFFFFB0.u1;
				((real64) q0, x0, x1);
			}
			Eq_14 v77;
			v77.u0 = sp.u1->t0050.u0;
			w8 = (word32) v77;
			if ((w8 & 0x01) != 0x00)
			{
				x0.u1 = sp.u1->t0060.u1;
				((real64) q0, x0, x1);
			}
			goto l0000000000041658;
		}
		x0.u1 = sp + 0x50;
		fn000000000001B2D0();
l0000000000041690:
		x0.u1 = &sp.u1->t0018.u0;
		fn000000000001B2D0();
		goto l0000000000041698;
	}
	x0.u1 = sp.u1->t0060.u1;
l0000000000041544:
	((real64) q0, x0, x1);
	goto l0000000000041548;
}

// 00000000000417E0: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEED2Ev
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE17exception_messageENS0_5lexerISD_E10token_typeERKSB_
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEED2Ev
{
	Eq_81132 x0;
	union Eq_81132 * fp;
	union Eq_81132 * sp = fp;
	sp = (union Eq_81132 *) ((char *) sp - 32);
	Eq_81132 x19;
	sp->u0 = (struct Eq_108672 *) x19;
	struct Eq_81137 * v7 = (struct Eq_81137 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	byte v10 = x0.u0->b0098;
	word32 w1 = (word32) v10;
	x19 = x0;
	x0.u0 = (word32) x0 + 0x00A0;
	fn000000000001C590();
	x0.u0 = x19.u0->t0080.u0;
	Eq_81132 x8;
	x8.u0 = (word32) x19 + 96;
	int64 x31 = x8 - x0;
	Eq_81167 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
	{
		if (x0 == 0x00)
			goto l0000000000041828;
		x8.u0 = x0.u0->t0000.u0;
		x8.u0 = x8.u0->t0028.u0;
	}
	else
	{
		x8.u0 = x0.u0->t0000.u0;
		x8.u0 = x8.u0->t0020.u0;
	}
	x8();
l0000000000041828:
	x0.u0 = x19.u0->t0038.u0;
	word128 q0;
	void * x1;
	if (x0 != 0x00)
		((real64) q0, x0, x1);
	x0.u0 = x19.u0->t0020.u0;
	if (x0 != 0x00)
		((real64) q0, x0, x1);
	x0.u0 = x19.u0->t0008.u0;
	if (x0 == 0x00)
	{
		struct Eq_81217 * v18 = (struct Eq_81217 *) ((char *) sp + 16);
		x29 = v18->ptr0000;
		x30 = v18->qw0008;
		x19.u0 = sp->u0;
		sp = (union Eq_81132 *) ((char *) sp + 32);
	}
	else
	{
		x19.u0->t0010.u0 = (struct Eq_108672 *) x0;
		struct Eq_81234 * v17 = (struct Eq_81234 *) ((char *) sp + 16);
		x29 = v17->ptr0000;
		x30 = v17->qw0008;
		x19.u0 = sp->u0;
		sp = (union Eq_81132 *) ((char *) sp + 32);
		((real64) q0, x0, x1);
	}
}

// 0000000000041864: define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_19json_sax_dom_parserISD_EEEEbPT_
define _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_19json_sax_dom_parserISD_EEEEbPT_
{
	struct Eq_81254 * fp;
	struct Eq_81254 * sp = fp;
	sp -= 0x0130;
	word64 d8;
	sp->qw00C0 = d8;
	struct Eq_81263 * v7 = (struct Eq_81263 *) (&sp->qw00C0 + 2);
	ui64 x28;
	v7->qw0000 = x28;
	word64 x27;
	v7->qw0008 = x27;
	struct Eq_81274 * v10 = (struct Eq_81274 *) (&sp->qw00C0 + 4);
	word64 x26;
	v10->qw0000 = x26;
	Eq_14 x25;
	v10->t0008.u1 = (size_t) x25;
	struct Eq_81285 * v13 = (struct Eq_81285 *) (&sp->qw00C0 + 6);
	struct Eq_81287 * x24;
	v13->ptr0000 = x24;
	word64 x23;
	v13->qw0008 = x23;
	struct Eq_81296 * v16 = (struct Eq_81296 *) (&sp->qw00C0 + 8);
	Eq_81298 x22;
	v16->t0000.u1 = (word128 *) x22;
	Eq_81298 x21;
	v16->t0008.u1 = (word128 *) x21;
	struct Eq_81307 * v19 = (struct Eq_81307 *) (&sp->qw00C0 + 0x0A);
	Eq_81298 x20;
	v19->t0000.u1 = (word128 *) x20;
	Eq_81298 x19;
	v19->t0008.u1 = (word128 *) x19;
	struct Eq_81318 * v22 = (struct Eq_81318 *) (&sp->qw00C0 + 0x0C);
	struct Eq_81320 * x29;
	v22->ptr0000 = x29;
	word64 x30;
	v22->qw0008 = x30;
	x29 = (struct Eq_81320 *) (&sp->qw00C0 + 0x0C);
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u0 = 0x00050000;
	Eq_14 x8;
	x8.u1 = x24->t0028.u1;
	d8 = (word64) *((word32) x9 + 832);
	x25.u0 = 0x00050000;
	Eq_81298 x1;
	x19 = x1;
	Eq_81298 x0;
	x20 = x0;
	x22.u1 = (word32) x0 + 0x0080;
	x21.u1 = (word32) x0 + 56;
	x23 = (word64) ((word32) x1 + 8);
	x25.u1 = (word32) x25 + 1599;
	ui32 w26 = 0x00 | 0x01;
	ui32 w27 = 0x00 | 0x02;
	x28 = 0x00 | 0x3FFFFFFFFFFFFFFE;
	x29->tFFFFFF90.u1 = (size_t) x8;
	struct Eq_81367 * v30 = (struct Eq_81367 *) &x29->tFFFFFF78.u0;
	v30->qw0000 = 0x00;
	v30->qw0008 = 0x00;
	x29->qwFFFFFF88 = 0x00;
	ui32 w8 = x20.u3->dw0030;
	--w8;
	Eq_81389 NZCV;
	NZCV.u0 = cond(w8 - 0x0D);
	word32 ZC;
	word32 w10;
	if (Test(ULE,ZC))
	{
		x9.u0 = 0x00041904;
		byte v35 = (byte) *(x25 + x8);
		w10 = (word32) v35;
		ui64 x10;
		x9.u1 = (char *) x9.u1 + (x10 << 2);
		x9();
		return;
	}
	x22.u1 = x20.u3->t0050.u1;
	x8.u1 = &sp->b0080;
	x0 = x21;
	fn000000000001AF90();
	Eq_81298 q0;
	q0.u0 = x20.u3->t0050.u0;
	x8.u1 = x20.u3->t0060.u1;
	w10 = 0x6176;
	word32 w9 = 0x0A;
	w10 = SEQ(30060, (word16) w10);
	word32 w11 = 101;
	struct Eq_81416 * v40 = (struct Eq_81416 *) &sp->b0008;
	v40->qw0000 = 0x00;
	v40->qw0008 = 0x00;
	sp->t0018.u1 = (word128 *) 0x00;
	sp->b0008 = (byte) w9;
	sp->dw0009 = w10;
	sp->t0050.u1 = (size_t) x8;
	sp->t0040.u0 = (word128) q0;
	sp->w001A = (word16) w11;
	x8.u1 = &sp->b0020;
	ui32 w1 = 0x00 | 0x10;
	byte * x2 = &sp->b0008;
	x0 = x20;
	fn000000000001C2E0();
	x8.u1 = &sp->t0058.u0;
	ui32 w0 = 101;
	x1.u1 = &sp->t0040.u0;
	x2 = &sp->b0020;
	fn000000000001BF60();
	x2 = &sp->b0080;
	ptr64 x3 = &sp->t0058.u0;
	x0 = x19;
	x1 = x22;
	x20.u1 = &sp->t0058.u0;
	fn000000000001C4B0();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	ui32 w19 = w0;
	x0.u1 = (word32) x20 + 16;
	x8.u1 = x8 + (struct Eq_81489 *) 0x10;
	sp->t0058.u1 = (size_t) x8;
	_ZNSt13runtime_errorD1Ev();
	x0.u1 = &sp->t0058.u0;
	_ZNSt9exceptionD2Ev();
	byte v46 = sp->b0020;
	w8 = (word32) v46;
	if ((w8 & 0x01) != 0x00)
	{
		byte v47 = sp->b0008;
		w8 = (word32) v47;
		if ((w8 & 0x01) != 0x00)
		{
l0000000000041D94:
			byte v48 = sp->b0080;
			w8 = (word32) v48;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000041D9C:
				x0.u1 = x29->tFFFFFF78.u1;
				if (x0 == 0x00)
					goto l0000000000041DA8;
l0000000000041DA4:
				((real64) q0, x0, x1);
l0000000000041DA8:
				x8.u1 = x24->t0028.u1;
				x9.u1 = x29->tFFFFFF90.u1;
				word64 x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				bool Z;
				if (Test(NE,Z))
					__stack_chk_fail();
				else
				{
					w0 = w19 & 0x01;
					struct Eq_81609 * v53 = (struct Eq_81609 *) (&sp->qw00C0 + 0x0C);
					x29 = v53->ptr0000;
					x30 = v53->qw0008;
					struct Eq_81618 * v54 = (struct Eq_81618 *) (&sp->qw00C0 + 0x0A);
					x20.u1 = v54->t0000.u1;
					x19.u1 = v54->t0008.u1;
					struct Eq_81627 * v55 = (struct Eq_81627 *) (&sp->qw00C0 + 8);
					x22.u1 = v55->t0000.u1;
					x21.u1 = v55->t0008.u1;
					struct Eq_81636 * v56 = (struct Eq_81636 *) (&sp->qw00C0 + 6);
					x24 = v56->ptr0000;
					x23 = v56->qw0008;
					struct Eq_81645 * v57 = (struct Eq_81645 *) (&sp->qw00C0 + 4);
					x26 = v57->qw0000;
					x25.u1 = v57->t0008.u1;
					struct Eq_81654 * v58 = (struct Eq_81654 *) (&sp->qw00C0 + 2);
					x28 = v58->qw0000;
					x27 = v58->qw0008;
					d8 = sp->qw00C0;
					sp = &sp->qw00C0 + 0x0E;
					return;
				}
			}
l0000000000042114:
			x0.u1 = sp->t0090.u1;
			((real64) q0, x0, x1);
			x0.u1 = x29->tFFFFFF78.u1;
			if (x0 == 0x00)
				goto l0000000000041DA8;
			goto l0000000000041DA4;
		}
	}
	else
	{
		x0.u1 = sp->t0030.u1;
		((real64) q0, x0, x1);
		byte v49 = sp->b0008;
		w8 = (word32) v49;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000041D94;
	}
	x0.u1 = sp->t0018.u1;
	((real64) q0, x0, x1);
	byte v50 = sp->b0080;
	w8 = (word32) v50;
	if ((w8 & 0x01) == 0x00)
		goto l0000000000041D9C;
	goto l0000000000042114;
}

<anonymous> g_t41A5C = <code>; // 0000000000041A5C
<anonymous> g_t41C28 = <code>; // 0000000000041C28
<anonymous> g_t42080 = <code>; // 0000000000042080
// 000000000004240C: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
{
	Eq_14 x3;
	struct Eq_81671 * x0;
	struct Eq_81667 * fp;
	struct Eq_81667 * sp = fp;
	sp = (struct Eq_81667 *) ((char *) sp - 32);
	struct Eq_81671 * x19;
	sp->ptr0000 = x19;
	struct Eq_81676 * v7 = (struct Eq_81676 *) ((char *) &sp->t0008 + 8);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 8;
	byte v10 = x0->b0029;
	int32 w8 = (word32) v10;
	int32 w9 = 0x00 | 0x01;
	x0->b0028 = (byte) w9;
	ui32 w0;
	if (w8 != 0x00)
	{
		int32 v14 = (int32) *((word32) x3 + 4);
		byte * x8 = (int64) v14;
		w9 = 0x851F;
		w9 = SEQ(0x51EB, (word16) w9);
		Eq_14 x9;
		x8 *= x9;
		Eq_81735 x10 = x8 >> 63;
		x8 >>= 37;
		ui32 w10;
		w8 += w10;
		x9.u1 = (int64) (w8 *s w9);
		x10 = x9 >> 63;
		x9 >>= 37;
		w9 += w10;
		w10 = 100;
		w8 -= w9 * w10;
		--w8;
		int32 v25 = w8;
		Eq_81756 NZCV;
		NZCV.u0 = cond(w8 - 0x04);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x9.u0 = 0x00050000;
			x9.u1 = x9 + &g_b064D;
			sp->t0008.u1 = (size_t) x3;
			x10.u1 = 0x00042494;
			byte v23 = (byte) *(x9 + x8);
			word32 w11 = (word32) v23;
			ui64 x11;
			x10 += x11 << 2;
			switch (v25)
			{
			case 0:
				w0 = 0x28;
				__cxa_allocate_exception();
				Eq_14 x1;
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001AF10();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3440);
				break;
			case 1:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001B4D0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3312);
				break;
			case 2:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001B4A0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0C90);
				break;
			case 3:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001C090();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0E88);
				break;
			case 4:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x1.u1 = sp->t0008.u1;
				x19 = x0;
				fn000000000001C2A0();
				x1.u0 = 0x00070000;
				x1 = *((word32) x1 + 3360);
				break;
			}
			Eq_14 x2;
			x2.u0 = 0x00070000;
			x2 = *((word32) x2 + 0x0DD0);
			x0 = x19;
			__cxa_throw();
			_ZNSt6__ndk16vectorIbNS_9allocatorIbEEE7reserveEm();
			return;
		}
	}
	struct Eq_81706 * v20 = (struct Eq_81706 *) ((char *) &sp->t0008 + 8);
	x29 = v20->ptr0000;
	x30 = v20->qw0008;
	w0 = 0x00;
	x19 = sp->ptr0000;
	sp = (struct Eq_81667 *) ((char *) &sp->t0008 + 24);
}

// 0000000000042540: define _ZNSt6__ndk16vectorIbNS_9allocatorIbEEE7reserveEm
// Called from:
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define _ZNSt6__ndk16vectorIbNS_9allocatorIbEEE7reserveEm
{
	word64 * x1;
	struct Eq_81842 * fp;
	struct Eq_81842 * sp = fp;
	sp -= 0x70;
	uint64 x21;
	sp->qw0040 = x21;
	struct Eq_81851 * v7 = (struct Eq_81851 *) (&sp->qw0040 + 2);
	struct Eq_81853 * x20;
	v7->ptr0000 = x20;
	Eq_81857 x19;
	v7->t0008.u1 = (struct Eq_108691 *) x19;
	struct Eq_81862 * v10 = (struct Eq_81862 *) (&sp->qw0040 + 4);
	struct Eq_81864 * x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (struct Eq_81864 *) (&sp->qw0040 + 4);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_81857 x8;
	x8.u1 = x20->t0028.u1;
	x29->tFFFFFFD8.u1 = (struct Eq_108691 *) x8;
	Eq_81857 x0;
	x8.u1 = x0.u1->t0010.u1;
	ui64 x31 = x1 - (x8 << 6);
	Eq_81894 NZCV;
	NZCV.u0 = cond(x31);
	word32 ZC;
	Eq_81857 x9;
	if (Test(UGT,ZC))
	{
		struct Eq_81842 * v18 = sp;
		v18->t0000.u1 = (struct Eq_108691 *) 0x00;
		v18->qw0008 = 0x00;
		sp->t0010.u1 = (struct Eq_108691 *) 0x00;
		ui32 w1;
		Eq_81857 q0;
		if ((w1 & 0x00) != 0x00)
		{
			x0.u1 = &sp->t0000.u0;
			fn000000000001B7E0();
			x8.u1 = sp->t0000.u1;
			x19 = x0;
			if (x8 != 0x00)
			{
				x0 = x8;
				((real64) q0, x0, x1);
			}
			x0 = x19;
			_Unwind_Resume();
			_ZNSt6__ndk16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_();
			return;
		}
		x8 = x1 - 0x01;
		x8 >>= 6;
		x21 = (uint64) ((word32) x8 + 1);
		x19 = x0;
		x0 = x21 << 3;
		_Znwm();
		struct Eq_81842 * v20 = sp;
		v20->t0000.u1 = (struct Eq_108691 *) x0;
		v20->qw0008 = 0x00;
		Eq_81857 v22 = x19;
		x8.u1 = v22.u1->qw0000;
		x9.u1 = v22.u1->t0008.u1;
		sp->dw0030 = 0x00;
		uint64 x10 = x9 >> 3;
		x10 &= 0x1FFFFFFFFFFFFFF8;
		sp->t0028.u1 = (struct Eq_108691 *) x8;
		ui32 w9 = w9 & 0x3F;
		x8.u1 = (char *) &x8.u1->qw0000 + x10;
		struct Eq_81977 * v25 = (struct Eq_81977 *) &sp->t0010.u0;
		v25->qw0000 = x21;
		v25->t0008.u1 = (struct Eq_108691 *) x8;
		sp->dw0020 = w9;
		x0.u1 = &sp->t0000.u0;
		x1 = (word64 *) &sp->t0028.u0;
		ptr64 x2 = (char *) &sp->t0010 + 8;
		fn000000000001BCA0();
		q0.u0 = sp->t0000.u0;
		Eq_81857 q1 = *x19;
		*x19 = q0;
		sp->t0000.u0 = (word128) q1;
		x8.u1 = sp->t0010.u1;
		x9.u1 = x19.u1->t0010.u1;
		Eq_81857 d1;
		x0 = d1;
		x19.u1->t0010.u1 = (struct Eq_108691 *) x8;
		sp->t0010.u1 = (struct Eq_108691 *) x9;
		if (x0 != 0x00)
			((real64) q0, x0, x1);
	}
	x8.u1 = x20->t0028.u1;
	x9.u1 = x29->tFFFFFFD8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_82037 * v31 = (struct Eq_82037 *) (&sp->qw0040 + 4);
		x29 = v31->ptr0000;
		x30 = v31->qw0008;
		struct Eq_82046 * v32 = (struct Eq_82046 *) (&sp->qw0040 + 2);
		x20 = v32->ptr0000;
		x19.u1 = v32->t0008.u1;
		x21 = sp->qw0040;
		sp = &sp->qw0040 + 6;
	}
}

<anonymous> g_t425CC = <code>; // 00000000000425CC
// 0000000000042640: define _ZNSt6__ndk16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_
// Called from:
//      _ZNSt6__ndk16vectorIbNS_9allocatorIbEEE7reserveEm
define _ZNSt6__ndk16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_
{
	word64 (* x9)[];
	struct Eq_82110 * x0;
	struct Eq_82070 * fp;
	struct Eq_82070 * sp = fp;
	sp -= 0xA0;
	struct Eq_82075 * v6 = (struct Eq_82075 *) ((char *) &sp->ptr0048 + 8);
	int64 x26;
	v6->qw0000 = x26;
	int64 x25;
	v6->qw0008 = x25;
	struct Eq_82086 * v9 = (struct Eq_82086 *) ((char *) &sp->ptr0048 + 24);
	word64 x24;
	v9->qw0000 = x24;
	word64 (* x23)[];
	v9->ptr0008 = x23;
	struct Eq_82097 * v12 = (struct Eq_82097 *) ((char *) &sp->ptr0048 + 40);
	struct Eq_82099 * x22;
	v12->ptr0000 = x22;
	Eq_14 x21;
	v12->t0008.u1 = (size_t) x21;
	struct Eq_82108 * v15 = (struct Eq_82108 *) ((char *) &sp->ptr0048 + 56);
	struct Eq_82110 * x20;
	v15->ptr0000 = x20;
	struct Eq_82114 * x19;
	v15->ptr0008 = x19;
	struct Eq_82119 * v18 = (struct Eq_82119 *) ((char *) &sp->ptr0048 + 72);
	ptr64 x29;
	v18->ptr0000 = x29;
	word64 x30;
	v18->qw0008 = x30;
	x29 = (char *) &sp->ptr0048 + 72;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	word64 (* x8)[] = x22->ptr0028;
	sp->ptr0048 = x8;
	struct Eq_82114 * x1;
	x19 = x1->a0000[0];
	ui32 w23 = x1->dw0008;
	Eq_14 x2;
	x8 = (word64 (*)[]) *x2.u1;
	Eq_14 w9 = *((word32) x2 + 8);
	word64 (* x10)[] = x0->ptr0008;
	word64 (* x11)[] = x8 - x19;
	word64 (* x12)[] = x9 - x23;
	x24 = (word64) (x12 + x11);
	x12 = (word64 (*)[]) ((char *) x10 + x24);
	x0->ptr0008 = x12;
	Eq_82182 NZCV;
	word32 ZC;
	if (x10 != null)
	{
		x11 = x10 - 0x01;
		word64 x13 = x12 - 0x01;
		x11 = x13 ^ x11;
		NZCV.u0 = cond(x11 - 0x3F);
		if (Test(ULE,ZC))
		{
			x11 = x0->ptr0000;
			goto l00000000000426D4;
		}
	}
	x11 = x0->ptr0000;
	NZCV.u0 = cond(x12 - 0x40);
	if (Test(ULE,ZC))
		x11[0] = 0x00;
	else
	{
		--x12;
		x12 >>= 3;
		x12 &= 0x1FFFFFFFFFFFFFF8;
		*(x11 + x12) = 0x00;
	}
l00000000000426D4:
	x12 = x10 >> 3;
	ui32 w10 = w10 & 0x3F;
	x12 &= 0x1FFFFFFFFFFFFFF8;
	NZCV.u0 = cond(w23 - w10);
	x20 = x11 + x12;
	bool Z;
	word64 (* x31)[];
	if (Test(EQ,Z))
	{
		NZCV.u0 = cond(x24 - 0x01);
		word32 NV;
		if (Test(GE,NV))
		{
			ui32 w8;
			if (w23 != 0x00)
			{
				w8 = 0x00 | 0x40;
				w8 -= w23;
				x31 = x24 - x8;
				NZCV.u0 = cond(x31);
				x11 = Test(LT,NV) ? x24 : x8;
				x9 = (word64 (*)[]) ~0x00;
				x8 -= x11;
				x10 = x19->a0000[0];
				x19 = (struct Eq_82114 *) &x19->dw0008;
				x12 = x9 << x23;
				x8 = x9 >> x8;
				x9 = x20->ptr0000;
				x24 -= x11;
				x11 += x23;
				x8 &= x12;
				x12 = x11 + (word64 (*)[]) 0x3F;
				NZCV.u0 = cond(x11 - null);
				x12 = Test(LT,NV) ? x12 : x11;
				x10 &= x8;
				x8 = x9 & ~x8;
				x9 = x12 >> 6;
				x8 |= x10;
				x20->ptr0000 = x8;
				x20 = (struct Eq_82110 *) ((char *) &x20->ptr0000 + (x9 << 3));
				word32 w11;
				w23 = w11 - (w9 << 6);
			}
			x8 = x24 + 0x3F;
			NZCV.u0 = cond(x24 - 0x00);
			x26 = Test(LT,NV) ? x8 : x24;
			x25 = x26 >> 6;
			x21 = x25 << 3;
			x0 = x20;
			x1 = x19;
			x2 = x21;
			x0 = memmove(x0, x1, x2);
			x8 = x26 & ~0x3F;
			x8 = x24 - x8;
			NZCV.u0 = cond(x8 - (word64 (*)[]) 0x01);
			x20 += x21;
			if (Test(GE,NV))
			{
				x10 = (word64 (*)[]) *((char *) &x19->a0000[0] + x25);
				x11 = x20->ptr0000;
				x9 = 0x00 - x8;
				x12 = (word64 (*)[]) ~0x00;
				x9 = x12 >> x9;
				x10 &= x9;
				x9 = x11 & ~x9;
				x9 |= x10;
				w23 = w8;
				x20->ptr0000 = x9;
			}
		}
		sp->ptr0008 = x20;
		sp->dw0010 = w23;
	}
	else
	{
		sp->ptr0028 = x8;
		x8 = &sp->ptr0008;
		x0 = (struct Eq_82110 *) &sp->ptr0038;
		x1 = (struct Eq_82114 *) &sp->ptr0028;
		x2.u1 = &sp->ptr0018;
		sp->ptr0038 = x19;
		sp->dw0040 = w23;
		sp->t0030.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w9;
		sp->ptr0018 = x20;
		sp->dw0020 = w10;
		fn000000000001B200();
	}
	x8 = x22->ptr0028;
	x9 = sp->ptr0048;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_82367 * v39 = (struct Eq_82367 *) ((char *) &sp->ptr0048 + 72);
		x29 = v39->ptr0000;
		x30 = v39->qw0008;
		struct Eq_82376 * v40 = (struct Eq_82376 *) ((char *) &sp->ptr0048 + 56);
		x20 = v40->ptr0000;
		x19 = v40->ptr0008;
		struct Eq_82385 * v41 = (struct Eq_82385 *) ((char *) &sp->ptr0048 + 40);
		x22 = v41->ptr0000;
		x21.u1 = v41->t0008.u1;
		struct Eq_82394 * v42 = (struct Eq_82394 *) ((char *) &sp->ptr0048 + 24);
		x24 = v42->qw0000;
		x23 = v42->ptr0008;
		struct Eq_82403 * v43 = (struct Eq_82403 *) ((char *) &sp->ptr0048 + 8);
		x26 = v43->qw0000;
		x25 = v43->qw0008;
		sp = (struct Eq_82070 *) ((char *) &sp->ptr0048 + 88);
	}
}

<anonymous> g_t426DC = <code>; // 00000000000426DC
<anonymous> g_t427EC = <code>; // 00000000000427EC
// 000000000004281C: define _ZNSt6__ndk116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_
define _ZNSt6__ndk116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_
{
	Eq_82415 x0;
	Eq_82415 x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_82415 x9 = *x1;
	Eq_82415 x12 = *x0;
	ui32 w10 = x1.u2->dw0008;
	ui32 w11 = x0.u2->dw0008;
	x9 -= x12;
	struct Eq_82434 * x10;
	x9.u1 = &x10->dw0000 + x9 *64 2;
	Eq_82415 x11;
	x9 -= x11;
	Eq_82442 NZCV;
	NZCV.u0 = cond(x9 - 0x00);
	word32 NZV;
	struct Eq_82434 * x2;
	if (Test(GT,NZV))
	{
		ui32 w14;
		ui32 w15;
		ui32 w17;
		int64 x31;
		uint64 x15;
		Eq_82415 x3;
		word32 NV;
		Eq_82415 x13;
		Eq_82415 x16;
		Eq_82491 x14;
		Eq_82415 x4;
		ui64 x5;
		Eq_82415 x17;
		if (w11 != 0x00)
		{
			w14 = 0x00 | 0x40;
			x10 = x2;
			x12 = *x12;
			w15 = w14 - w11;
			x10 = (struct Eq_82434 *) &x10->dw0008;
			w17 = x10->dw0000;
			x31 = x9 - x15;
			NZCV.u0 = cond(x31);
			x3.u1 = Test(LT,NV) ? x9 : x15;
			x13.u0 = ~0x00;
			x15 -= x3;
			x16 = x13 << x11;
			x1.u0 = x2->dw0000;
			x15 = x13 >> x15;
			ui32 w4 = w14 - w17;
			x14 = x15 & x16;
			x31 = x3 - x4;
			NZCV.u0 = cond(x31);
			w15 = w11 - w17;
			x12 = x14 & x12;
			word32 ZC;
			x14 = Test(UGT,ZC) ? x4 : x3;
			w11 = w17 - w11;
			NZCV.u0 = cond(w11);
			x15 = x12 >> x15;
			x11 = x12 << x11;
			ui64 x6 = Test(UGT,ZC) ? x11 : x15;
			x11 = *x1;
			x15 = x4 - x14;
			x5 = x13 << x17;
			x15 = x13 >> x15;
			x15 &= x5;
			x4 = x11 & ~x15;
			x11.u1 = x14 + x17;
			ui32 w16 = w17 + w14;
			x17 = x11 >> 3;
			x15 = x3 - x14;
			w11 = w16 & 0x3F;
			x16 = x17 & 0x1FFFFFFFFFFFFFF8;
			x9 -= x3;
			NZCV.u0 = cond(x15 - 0x01);
			x16.u1 = x1 + x16;
			x17 = x4 | x6;
			*x1 = x17;
			x2->dw0000 = (word32) x16;
			x10->dw0000 = w11;
			if (Test(GE,NV))
			{
				x11 = *x16;
				w17 = x0.u2->dw0008;
				x1 = 0x00 - x15;
				x13 >>= x1;
				x11 &= ~x13;
				x13.u1 = x14 + x17;
				x12 >>= x13;
				x11 = x12 | x11;
				*x16 = x11;
				w11 = w15;
				x10->dw0000 = w15;
			}
			x12 = *x0;
			x12.u1 = &x12.u2->dw0008;
			*x0 = x12;
		}
		else
		{
			x10 = x2;
			x10 = (struct Eq_82434 *) &x10->dw0008;
			w11 = x10->dw0000;
		}
		w14 = 0x00 | 0x40;
		ui32 w13 = w11;
		x16.u0 = ~0x00;
		NZCV.u0 = cond(x9 - 0x40);
		w15 = w14 - w11;
		x14 = x16 << x13;
		if (Test(GE,NV))
		{
			x16 = ~x14;
			w17 = w15;
			x1 = x9;
			do
			{
				x3.u0 = x2->dw0000;
				x12 = *x12;
				x1 -= 0x40;
				NZCV.u0 = cond(x1 - 0x3F);
				x4 = *x3;
				x5 = x12 << x13;
				x12 >>= x17;
				x4 &= x16;
				x4 |= x5;
				*x3 = x4;
				x3.u1 = &x3.u2->dw0008;
				x2->dw0000 = (word32) x3;
				x4 = *x3;
				x4 &= x14;
				x12 = x4 | x12;
				*x3 = x12;
				x12 = *x0;
				x12.u1 = &x12.u2->dw0008;
				*x0 = x12;
			} while (Test(GT,NZV));
			x9 &= 0x3F;
		}
		NZCV.u0 = cond(x9 - 0x01);
		if (Test(GE,NV))
		{
			x3.u0 = x2->dw0000;
			x0 = *x12;
			ui32 w1 = w15;
			x17 = 0x00 - x9;
			x16.u0 = ~0x00;
			x31 = x9 - x1;
			NZCV.u0 = cond(x31);
			x15 = x16 >> x17;
			x12.u1 = Test(GT,NZV) ? x1 : x9;
			x17 = *x3;
			x15 = x0 & x15;
			x0 = x1 - x12;
			x0 = x16 >> x0;
			x14 = x0 & x14;
			x14 = x17 & ~x14;
			x17.u1 = x12 + x13;
			x17 >>= 3;
			word32 w12;
			w11 += w12;
			x9 -= x12;
			x0 = x15 << x13;
			x13 = x17 & 0x1FFFFFFFFFFFFFF8;
			w11 &= 0x3F;
			NZCV.u0 = cond(x9 - 0x01);
			x13.u1 = x3 + x13;
			x14 |= x0;
			x3->u1 = x14;
			x2->dw0000 = (word32) x13;
			x2->dw0008 = w11;
			if (Test(GE,NV))
			{
				x11 = *x13;
				x14 = 0x00 - x9;
				x14 = x16 >> x14;
				x12 = x15 >> x12;
				x11 &= ~x14;
				x11 |= x12;
				*x13 = x11;
				ui32 w9;
				w11 = w9;
				x10->dw0000 = w9;
			}
		}
	}
	else
		w11 = x2->dw0008;
	x9.u0 = x2->dw0000;
	struct Eq_82576 * x8;
	x8->dw0008 = w11;
	x8->t0000.u1 = (word32 *) x9;
}

// 0000000000042A5C: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
{
	ui32 w0;
	struct Eq_82711 * fp;
	struct Eq_82711 * sp = fp;
	sp -= 0x90;
	struct Eq_82715 * x23;
	sp->ptr0050 = x23;
	struct Eq_82720 * v7 = (struct Eq_82720 *) ((char *) &sp->ptr0050 + 16);
	word64 x22;
	v7->qw0000 = x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_82731 * v10 = (struct Eq_82731 *) ((char *) &sp->ptr0050 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_82742 * v13 = (struct Eq_82742 *) ((char *) &sp->ptr0050 + 48);
	struct Eq_82744 * x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (struct Eq_82744 *) ((char *) &sp->ptr0050 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	Eq_14 x0;
	x21 = x0;
	x20 = x0;
	x29->tFFFFFFC8.u1 = (size_t) x8;
	x21.u1 = (word32) x21 + 8;
	x8 = *x21.u1;
	Eq_14 x9 = *((word32) x21 + 8);
	sp->b0008 = 0x00;
	x8 = x9 - x8;
	x8 >>= 3;
	Eq_82782 w8;
	sp->t0020.u0 = (ui32) w8;
	x0 = *((word32) x21 + 0x0078);
	if (x0 == 0x00)
	{
		fn0000000000043A24();
		goto l0000000000042C0C;
	}
	x8 = *x0.u1;
	Eq_14 x1;
	x19 = x1;
	word64 x3 = (word64) ((word32) x20 + 0x0098);
	x1.u1 = &sp->t0020.u0;
	x8 = *((word32) x8 + 48);
	Eq_14 x2;
	x2.u1 = &sp->b0008;
	x8();
	struct Eq_82809 * v22 = (struct Eq_82809 *) ((word32) x20 + 40);
	x8.u1 = v22->t0000.u1;
	x9.u1 = v22->t0008.u1;
	ui32 w22 = w0;
	Eq_82821 x31 = x8 - (x9 << 6);
	Eq_82823 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	Eq_14 x10;
	word32 ZC;
	bool C;
	if (Test(EQ,Z))
	{
		sp = (struct Eq_82711 *) ((word32) x8 + 1);
		NZCV.u0 = cond(sp);
		x0.u1 = (word32) x20 + 32;
		bool N;
		if (Test(LT,N))
		{
			fn000000000001B7E0();
			goto l0000000000042C14;
		}
		x10 = 0x00 | 0x3FFFFFFFFFFFFFFE;
		x31 = x8 - x10;
		NZCV.u0 = cond(x31);
		if (Test(ULE,ZC))
		{
			x8.u1 = (word32) x8 + 64;
			x9 <<= 7;
			x8 &= ~0x3F;
			x31 = x9 - x8;
			NZCV.u0 = cond(x31);
			x1.u1 = Test(ULT,C) ? x8 : x9;
		}
		else
			x1 = 0x00 | 0x7FFFFFFFFFFFFFFF;
		fn000000000001AE70();
		x8 = *((word32) x20 + 40);
	}
	x9 = *((word32) x20 + 32);
	x10.u1 = (word32) x8 + 1;
	ui32 w11 = 0x00 | 0x01;
	*((word32) x20 + 40) = x10;
	x10 = x8 >> 6;
	ui64 x11;
	x8 = x11 << x8;
	if ((w22 & 0x01) != 0x00)
	{
		x11 = *(x9 + x10);
		x8 = x11 | x8;
	}
	else
	{
		x11 = *(x9 + x10);
		x8 = x11 & ~x8;
	}
	*(x9 + x10) = (word64) x8;
	w8 = 0x00 | 0x01;
	x1.u1 = &sp->t0020.u0;
	ui32 w2 = 0x00 | 0x01;
	x0 = x20;
	sp->t0020.u1 = (byte) (byte) w8;
	fn000000000001BCD0();
	struct Eq_82924 * v40 = (struct Eq_82924 *) ((char *) &sp->t0030 + 8);
	v40->t0000.u1 = (size_t) x0;
	v40->t0008.u1 = (size_t) x1;
	struct Eq_82933 * v41 = (struct Eq_82933 *) ((word32) x20 + 16);
	x8.u1 = v41->t0000.u1;
	x9.u1 = v41->t0008.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
	{
		*x8.u1 = x1;
		x8 = *((word32) x20 + 16);
		x8.u1 = (word32) x8 + 8;
		*((word32) x20 + 16) = x8;
		sp = (struct Eq_82711 *) ((word32) x19 + 1);
		NZCV.u0 = cond(sp);
		if (Test(EQ,Z))
			goto l0000000000042BDC;
	}
	else
	{
		x8.u1 = (char *) &sp->t0030 + 8;
		x1.u1 = (word32) x8 + 8;
		x0 = x21;
		fn000000000001C010();
		x8 = *((word32) x20 + 16);
		sp = (struct Eq_82711 *) ((word32) x19 + 1);
		NZCV.u0 = cond(sp);
		if (Test(EQ,Z))
			goto l0000000000042BDC;
	}
	x8 = *((word32) x8 - 8);
	if (x8 != 0x00)
	{
		Eq_82992 v42 = *x8.u1;
		x8.u1 = (word64) v42;
		NZCV.u0 = cond(x8 - 0x02);
		if (Test(ULE,ZC))
		{
			x9.u0 = 0x00054000;
			x9.u1 = x9 + 0x0B70;
			x8.u1 = *(x9 + x8);
			x31 = x8 - x19;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
l0000000000042C14:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x20 = x0;
				x8.u1 = &sp->b0008;
				x0 = x19;
				_ZNSt6__ndk19to_stringEm();
				x2.u0 = 0x00053000;
				x2.u1 = (word32) x2 + 625;
				x0.u1 = &sp->b0008;
				word32 w3 = 0x17;
				x1.u0 = 0x00;
				fn000000000001B4E0();
				x8 = *((word32) x0 + 16);
				Eq_82782 q0 = *x0.u1;
				ui32 w21 = 0x00 | 0x01;
				sp->t0030.u1 = (size_t) x8;
				sp->t0020.u2 = (word128) q0;
				Eq_83046 v35;
				v35.u0 = x0 + 8;
				v35.u1->t0000.u0 = 0x00;
				v35.u1->t0008.u1 = (size_t) 0x00;
				x0.u1->u1 = 0x00;
				w0 = 0x0198;
				x1.u1 = &sp->t0020.u0;
				x8 = x20;
				fn000000000001BC50();
				x1.u0 = 0x00070000;
				x2.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0E88);
				x2 = *((word32) x2 + 0x0DD0);
				x0 = x20;
				w21 = 0x00;
				__cxa_throw();
				x19 = x0;
				w21 = 0x00 | 0x01;
				byte v36 = sp->b0008;
				w8 = (word32) v36;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = sp->t0018.u1;
					((real64) q0, x0, x1);
					if ((w21 & 0x01) == 0x00)
						goto l0000000000042CE0;
				}
				else if (w21 == 0x00)
					goto l0000000000042CE0;
				x0 = x20;
				__cxa_free_exception();
l0000000000042CE0:
				x0 = x19;
				_Unwind_Resume();
				_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv();
				return;
			}
		}
		else
		{
			w8 = 0x00 | 0x01;
			x31 = x8 - x19;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
				goto l0000000000042C14;
		}
	}
l0000000000042BDC:
	x8.u1 = x23->t0028.u1;
	x9.u1 = x29->tFFFFFFC8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(EQ,Z))
	{
		struct Eq_83092 * v43 = (struct Eq_83092 *) ((char *) &sp->ptr0050 + 48);
		x29 = v43->ptr0000;
		x30 = v43->qw0008;
		struct Eq_83101 * v44 = (struct Eq_83101 *) ((char *) &sp->ptr0050 + 32);
		x20.u1 = v44->t0000.u1;
		x19.u1 = v44->t0008.u1;
		struct Eq_83110 * v45 = (struct Eq_83110 *) ((char *) &sp->ptr0050 + 16);
		x22 = v45->qw0000;
		x21.u1 = v45->t0008.u1;
		x23 = sp->ptr0050;
		w0 = 0x00 | 0x01;
		sp = (struct Eq_82711 *) ((char *) &sp->ptr0050 + 64);
		return;
	}
l0000000000042C0C:
	__stack_chk_fail();
}

<anonymous> g_t42AD4 = <code>; // 0000000000042AD4
<anonymous> g_t42C74 = <code>; // 0000000000042C74
// 0000000000042CE8: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
{
	struct Eq_83126 * fp;
	struct Eq_83126 * sp = fp;
	sp -= 0xC0;
	struct Eq_83131 * v6 = (struct Eq_83131 *) ((char *) &sp->t0060 + 32);
	ui64 x24;
	v6->qw0000 = x24;
	struct Eq_83137 * x23;
	v6->ptr0008 = x23;
	struct Eq_83142 * v9 = (struct Eq_83142 *) ((char *) &sp->t0060 + 48);
	ui64 x22;
	v9->qw0000 = x22;
	struct Eq_83148 * x21;
	v9->ptr0008 = x21;
	struct Eq_83153 * v12 = (struct Eq_83153 *) ((char *) &sp->t0060 + 64);
	struct Eq_83155 * x20;
	v12->ptr0000 = x20;
	Eq_14 x19;
	v12->t0008.u1 = (size_t) x19;
	struct Eq_83164 * v15 = (struct Eq_83164 *) ((char *) &sp->t0060 + 80);
	struct Eq_83166 * x29;
	v15->ptr0000 = x29;
	word64 x30;
	v15->qw0008 = x30;
	x29 = (struct Eq_83166 *) ((char *) &sp->t0060 + 80);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x20->t0028.u1;
	Eq_14 x0;
	x19 = x0;
	x29->tFFFFFFC8.u1 = (size_t) x8;
	x8 = *((word32) x0 + 16);
	Eq_14 x3 = *((word32) x8 - 8);
	Eq_14 x9;
	ui32 w10;
	Eq_14 w8;
	union Eq_83258 * x1;
	ui32 w0;
	word32 w9;
	Eq_14 x10;
	if (x3 != 0x00)
	{
		x9 = *((word32) x19 + 8);
		w10 = 0x00 | 0x01;
		sp->t0028.u0 = (byte) (byte) w10;
		x8 -= x9;
		x8 >>= 3;
		--w8;
		sp->t0048.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w8;
		x0 = *((word32) x19 + 0x0080);
		if (x0 == 0x00)
		{
			fn0000000000043A24();
			_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_();
			return;
		}
		x8 = *x0.u1;
		x1 = (union Eq_83258 *) &sp->t0048.u0;
		byte * x2 = &sp->t0028.u0;
		x8 = *((word32) x8 + 48);
		x8();
		if ((w0 & 0x01) != 0x00)
		{
			x1 = (union Eq_83258 *) ((word32) x19 + 0x0098);
			x0 = x29 - 0x48;
			x21 = x29 - 0x48;
			fn000000000001B230();
			x8 = *((word32) x19 + 16);
			byte v27 = x29->bFFFFFFB8;
			w9 = (word32) v27;
			x0.u1 = (char *) &x21->t0000 + 8;
			x8 = *((word32) x8 - 8);
			Eq_83295 v29 = *x8.u1;
			word32 w1 = (word32) v29;
			x8.u1->u1 = (byte) w9;
			x9.u1 = x29->tFFFFFFC0.u1;
			x29->bFFFFFFB8 = (byte) w1;
			x10 = *((word32) x8 + 8);
			*((word32) x8 + 8) = x9;
			x29->tFFFFFFC0.u1 = (size_t) x10;
			fn000000000001C590();
		}
	}
	struct Eq_83198 * v32 = (struct Eq_83198 *) ((word32) x19 + 8);
	byte * x11 = v32->ptr0000;
	x9.u1 = v32->t0008.u1;
	x10 = *((word32) x19 + 40);
	x8 = x9 - 0x08;
	--x10;
	Eq_83216 x31 = x11 - x8;
	Eq_83218 NZCV;
	NZCV.u0 = cond(x31);
	*((word32) x19 + 16) = x8;
	*((word32) x19 + 40) = x10;
	bool Z;
	if (Test(NE,Z))
	{
		x9 = *((word32) x9 - 16);
		if (x9 != 0x00)
		{
			Eq_14 v36 = *x9.u1;
			w10 = (word32) v36;
			NZCV.u0 = cond(w10 - 0x01);
			if (Test(EQ,Z))
			{
				x10.u0 = 0x00050000;
				Eq_14 q0 = *((word32) x10 + 704);
				sp->t0048.u1 = (size_t) x9;
				x10.u1 = &sp->t0048.u0;
				x11 = &sp->t0028.u0;
				sp->t0058.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
				x9 = *((word32) x9 + 8);
				x22 = 0x00 | 0x8000000000000000;
				x21 = (struct Eq_83148 *) ((word32) x10 + 8);
				x23 = (struct Eq_83137 *) (x11 + 8);
				x9 = *x9.u1;
				ui32 w24 = 0x00 | 0x01;
				sp->t0050.u1 = (size_t) x9;
				while (true)
				{
					x8 = *((word32) x8 - 8);
					sp->t0028.u1 = (size_t) x8;
					struct Eq_83137 * v39 = x23;
					v39->qw0000 = 0x00;
					v39->qw0008 = 0x00;
					sp->qw0040 = x22;
					Eq_83397 v40;
					v40.u4 = *x8.u1;
					w9 = (word32) v40;
					NZCV.u0 = cond(w9 - 0x02);
					if (Test(NE,Z))
					{
						NZCV.u0 = cond(w9 - 0x01);
						if (Test(EQ,Z))
						{
							x8 = *((word32) x8 + 8);
							x8.u1 = (word32) x8 + 8;
							sp->t0030.u1 = (size_t) x8;
						}
						else
							sp->qw0040 = x24;
					}
					else
					{
						x8 = *((word32) x8 + 8);
						x8 = *((word32) x8 + 8);
						sp->t0038.u1 = (size_t) x8;
					}
					x0.u1 = &sp->t0048.u0;
					x1 = (union Eq_83258 *) &sp->t0028.u0;
					fn000000000001B310();
					if ((w0 & 0x01) == 0x00)
						break;
					x0.u1 = &sp->t0048.u0;
					fn000000000001B0D0();
					Eq_83488 v45;
					v45.u1 = *x0.u1;
					w8.u1 = (word32) v45;
					NZCV.u0 = cond(w8 - 0x08);
					if (Test(EQ,Z))
					{
						x8 = *((word32) x19 + 16);
						x9.u1 = sp->t0048.u1;
						x10.u1 = x21->t0010.u1;
						q0.u2 = x21->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
						x0 = *((word32) x8 - 8);
						x8.u1 = &sp->t0028.u0;
						x1 = (union Eq_83258 *) &sp->t0008.u0;
						sp->t0008.u1 = (size_t) x9;
						sp->t0020.u1 = (size_t) x10;
						sp->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
						fn000000000001BAD0();
						break;
					}
					x8.u1 = sp->t0048.u1;
					Eq_83530 v46;
					v46.u4 = *x8.u1;
					w8.u1 = (word32) v46;
					NZCV.u0 = cond(w8 - 0x02);
					if (Test(NE,Z))
					{
						NZCV.u0 = cond(w8 - 0x01);
						if (Test(EQ,Z))
						{
							x10.u1 = sp->t0050.u1;
							x9 = *((word32) x10 + 8);
							while (x9 != 0x00)
							{
								x8 = x9;
								x9 = *x9.u1;
							}
							sp->t0050.u1 = (size_t) x8;
							x8 = *((word32) x19 + 16);
						}
						else
						{
							x8.u1 = sp->t0060.u1;
							x8.u1 = x8 + 0x01;
							sp->t0060.u1 = (size_t) x8;
							x8 = *((word32) x19 + 16);
						}
					}
					else
					{
						x8.u1 = sp->t0058.u1;
						x8.u1 = x8 + 0x10;
						sp->t0058.u1 = (size_t) x8;
						x8 = *((word32) x19 + 16);
					}
				}
			}
		}
	}
	x8.u1 = x20->t0028.u1;
	x9.u1 = x29->tFFFFFFC8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_83442 * v41 = (struct Eq_83442 *) ((char *) &sp->t0060 + 80);
		x29 = v41->ptr0000;
		x30 = v41->qw0008;
		struct Eq_83451 * v42 = (struct Eq_83451 *) ((char *) &sp->t0060 + 64);
		x20 = v42->ptr0000;
		x19.u1 = v42->t0008.u1;
		struct Eq_83460 * v43 = (struct Eq_83460 *) ((char *) &sp->t0060 + 48);
		x22 = v43->qw0000;
		x21 = v43->ptr0008;
		struct Eq_83469 * v44 = (struct Eq_83469 *) ((char *) &sp->t0060 + 32);
		x24 = v44->qw0000;
		x23 = v44->ptr0008;
		w0 = 0x00 | 0x01;
		sp = (struct Eq_83126 *) ((char *) &sp->t0060 + 96);
	}
}

// 0000000000042F50: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
{
	ui32 w0;
	Eq_83598 fp;
	Eq_83598 sp = fp;
	sp -= 0xA0;
	struct Eq_83602 * x23;
	sp.u2->ptr0060 = (struct Eq_83602 **************************************************) x23;
	struct Eq_83607 * v7 = (struct Eq_83607 *) ((word32) sp + 112);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_83618 * v10 = (struct Eq_83618 *) &sp.u2->t0080.u0;
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_83629 * v13 = (struct Eq_83629 *) ((word32) sp + 144);
	struct Eq_83631 * x29;
	v13->ptr0000 = x29;
	Eq_14 x30;
	v13->t0008.u1 = (size_t) x30;
	x29 = (struct Eq_83631 *) ((word32) sp + 144);
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	Eq_14 x0;
	x20 = x0;
	Eq_14 x9;
	x9.u1 = &sp.u2->b0018;
	ui32 w10 = 0x00 | 0x03;
	Eq_14 x1;
	x0 = x1;
	x21 = x1;
	x19.u1 = (word32) x9 + 8;
	x29->tFFFFFFC8.u1 = (size_t) x8;
	sp.u2->b0018 = (byte) w10;
	fn000000000001C190();
	sp.u2->t0020.u1 = (size_t) x0;
	struct Eq_83673 * v20 = (struct Eq_83673 *) ((word32) x20 + 8);
	x8.u1 = v20->t0000.u1;
	x9.u1 = v20->t0008.u1;
	w10 = 0x00 | 0x04;
	sp.u2->t0038.u0 = (byte) (byte) w10;
	x8 = x9 - x8;
	x8 >>= 3;
	Eq_14 w8;
	sp.u2->t0040.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w8;
	x0 = *((word32) x20 + 0x0080);
	if (x0 != 0x00)
	{
		x8 = *x0.u1;
		x8 = *((word32) x8 + 48);
		x1.u1 = &sp.u2->t0040.u0;
		Eq_14 x2;
		x2.u1 = &sp.u2->t0038.u0;
		Eq_83713 x3;
		x3.u0 = &sp.u2->b0018;
		x8();
		struct Eq_83716 * v24 = (struct Eq_83716 *) ((word32) x20 + 64);
		x8.u1 = v24->t0000.u1;
		x9.u1 = v24->t0008.u1;
		ui32 w22 = w0;
		Eq_83728 x31 = x8 - (x9 << 6);
		Eq_83730 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		word32 w1;
		Eq_14 x10;
		if (Test(EQ,Z))
		{
			sp.u0 = x8 + 0x01;
			NZCV.u0 = cond(sp);
			x0.u1 = (word32) x20 + 56;
			bool N;
			if (Test(LT,N))
			{
				fn000000000001B7E0();
				Eq_14 v35;
				v35.u0 = sp.u2->t0008.u0;
				w1 = (word32) v35;
				x8.u1 = sp + 0x08;
				x20 = x0;
				x0.u1 = x8 + 0x08;
				fn000000000001C590();
				byte v40 = sp.u2->b0018;
				w1 = (word32) v40;
				x0 = x19;
				fn000000000001C590();
				x0 = x20;
				_Unwind_Resume();
				_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm();
				return;
			}
			x10 = 0x00 | 0x3FFFFFFFFFFFFFFE;
			x31 = x8 - x10;
			NZCV.u0 = cond(x31);
			word32 ZC;
			if (Test(ULE,ZC))
			{
				x8.u1 = x8 + 0x40;
				x9 <<= 7;
				x8 &= ~0x3F;
				x31 = x9 - x8;
				NZCV.u0 = cond(x31);
				bool C;
				x1.u1 = Test(ULT,C) ? x8 : x9;
			}
			else
				x1 = 0x00 | 0x7FFFFFFFFFFFFFFF;
			fn000000000001AE70();
			x8 = *((word32) x20 + 64);
		}
		x9 = *((word32) x20 + 56);
		x10.u1 = x8 + 0x01;
		*((word32) x20 + 64) = x10;
		x10 = x8 >> 6;
		ui32 w11 = 0x00 | 0x01;
		Eq_14 x11;
		x8 = x11 << x8;
		x10 <<= 3;
		if ((w22 & 0x01) != 0x00)
		{
			x11.u1 = *(x9 + x10);
			x8 = x11 | x8;
			*(x9 + x10) = (word64) x8;
			x8 = *((word32) x20 + 16);
			x8 = *((word32) x8 - 8);
			if (x8 != 0x00)
			{
				x1.u1 = (word32) x20 + 0x0098;
				x0.u1 = sp + 0x08;
				fn000000000001B230();
				x8 = *((word32) x20 + 16);
				x1.u1 = sp + 0x38;
				x2 = x21;
				x8 = *((word32) x8 - 8);
				x22 = *((word32) x8 + 8);
				sp.u2->t0030.u1 = (size_t) x21;
				x0 = x22;
				fn000000000001AE80();
				x8 = *x0.u1;
				if (x8 == 0x00)
				{
					x21 = x0;
					x1.u0 = 0x00053000;
					x1.u1 = x1 + 3181;
					x8.u1 = sp + 0x40;
					x2.u1 = sp + 0x30;
					x3.u0 = sp + 0x28;
					x0 = x22;
					fn000000000001BA60();
					Eq_83921 v38;
					v38.u0 = sp + 56;
					x8.u1 = v38.u2->t0000.u0;
					x1.u1 = v38.u2->t0008.u1;
					Eq_14 v39 = x1;
					v39.u1->u1 = 0x00;
					((word32) v39 + 8)->u0 = 0x00;
					*((word32) x1 + 16) = x8;
					*x21.u1 = x1;
					x8 = *x22.u1;
					x8 = *x8.u1;
					if (x8 != 0x00)
					{
						*x22.u1 = x8;
						x1 = *x21.u1;
					}
					x0 = *((word32) x22 + 8);
					fn000000000001BD70();
					x8 = *((word32) x22 + 16);
					x8.u1 = x8 + 0x01;
					*((word32) x22 + 16) = x8;
					x8.u1 = sp.u2->t0040.u1;
				}
				Eq_14 v46;
				v46.u0 = sp.u2->t0008.u0;
				word32 w9 = (word32) v46;
				x8.u1 = x8 + 56;
				byte v47 = (byte) *x8.u1;
				w1 = (word32) v47;
				x11.u1 = sp + 0x08;
				x0.u1 = x11 + 0x08;
				x8.u1->u0 = (byte) w9;
				sp.u2->t0008.u0 = (byte) (byte) w1;
				x9.u1 = sp.u2->t0010.u1;
				x10 = *((word32) x8 + 8);
				*((word32) x8 + 8) = x9;
				sp.u2->t0010.u1 = (size_t) x10;
				*((word32) x20 + 80) = x8;
				fn000000000001C590();
			}
		}
		else
		{
			x11.u1 = *(x9 + x10);
			x8 = x11 & ~x8;
			*(x9 + x10) = (word64) x8;
		}
		byte v41 = sp.u2->b0018;
		w1 = (word32) v41;
		x0 = x19;
		fn000000000001C590();
		x8.u1 = x23->t0028.u1;
		x9.u1 = x29->tFFFFFFC8.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			Eq_83979 v42;
			v42.u0 = sp + 144;
			x29 = v42.u2->t0000.u0;
			x30.u1 = v42.u2->t0008.u1;
			Eq_83988 v43;
			v43.u0 = sp + 0x0080;
			x20.u1 = v43.u2->t0000.u0;
			x19.u1 = v43.u2->t0008.u1;
			Eq_83997 v44;
			v44.u0 = sp + 112;
			x22.u1 = v44.u2->t0000.u0;
			x21.u1 = v44.u2->t0008.u1;
			x23 = (struct Eq_83602 *) sp.u2->ptr0060;
			w0 = 0x00 | 0x01;
			sp.u0 = sp + 0xA0;
			return;
		}
	}
	else
		fn0000000000043A24();
	__stack_chk_fail();
}

// 0000000000043198: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
{
	ui32 w0;
	struct Eq_84013 * fp;
	struct Eq_84013 * sp = fp;
	sp -= 0x90;
	struct Eq_84017 * x23;
	sp->ptr0050 = x23;
	struct Eq_84022 * v7 = (struct Eq_84022 *) ((char *) &sp->ptr0050 + 16);
	word64 x22;
	v7->qw0000 = x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_84033 * v10 = (struct Eq_84033 *) ((char *) &sp->ptr0050 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_84044 * v13 = (struct Eq_84044 *) ((char *) &sp->ptr0050 + 48);
	struct Eq_84046 * x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (struct Eq_84046 *) ((char *) &sp->ptr0050 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	Eq_14 x0;
	x21 = x0;
	ui32 w10 = 0x00 | 0x02;
	x20 = x0;
	x29->tFFFFFFC8.u1 = (size_t) x8;
	x21.u1 = (word32) x21 + 8;
	x8 = *x21.u1;
	Eq_14 x9 = *((word32) x21 + 8);
	sp->b0008 = (byte) w10;
	x8 = x9 - x8;
	x8 >>= 3;
	Eq_84088 w8;
	sp->t0020.u0 = (ui32) w8;
	x0 = *((word32) x21 + 0x0078);
	if (x0 == 0x00)
	{
		fn0000000000043A24();
		goto l000000000004334C;
	}
	x8 = *x0.u1;
	Eq_14 x1;
	x19 = x1;
	word64 x3 = (word64) ((word32) x20 + 0x0098);
	x1.u1 = &sp->t0020.u0;
	x8 = *((word32) x8 + 48);
	Eq_14 x2;
	x2.u1 = &sp->b0008;
	x8();
	struct Eq_84114 * v23 = (struct Eq_84114 *) ((word32) x20 + 40);
	x8.u1 = v23->t0000.u1;
	x9.u1 = v23->t0008.u1;
	ui32 w22 = w0;
	Eq_84126 x31 = x8 - (x9 << 6);
	Eq_84128 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	Eq_14 x10;
	word32 ZC;
	bool C;
	if (Test(EQ,Z))
	{
		sp = (struct Eq_84013 *) ((word32) x8 + 1);
		NZCV.u0 = cond(sp);
		x0.u1 = (word32) x20 + 32;
		bool N;
		if (Test(LT,N))
		{
			fn000000000001B7E0();
			goto l0000000000043354;
		}
		x10 = 0x00 | 0x3FFFFFFFFFFFFFFE;
		x31 = x8 - x10;
		NZCV.u0 = cond(x31);
		if (Test(ULE,ZC))
		{
			x8.u1 = (word32) x8 + 64;
			x9 <<= 7;
			x8 &= ~0x3F;
			x31 = x9 - x8;
			NZCV.u0 = cond(x31);
			x1.u1 = Test(ULT,C) ? x8 : x9;
		}
		else
			x1 = 0x00 | 0x7FFFFFFFFFFFFFFF;
		fn000000000001AE70();
		x8 = *((word32) x20 + 40);
	}
	x9 = *((word32) x20 + 32);
	x10.u1 = (word32) x8 + 1;
	ui32 w11 = 0x00 | 0x01;
	*((word32) x20 + 40) = x10;
	x10 = x8 >> 6;
	ui64 x11;
	x8 = x11 << x8;
	if ((w22 & 0x01) != 0x00)
	{
		x11 = *(x9 + x10);
		x8 = x11 | x8;
	}
	else
	{
		x11 = *(x9 + x10);
		x8 = x11 & ~x8;
	}
	*(x9 + x10) = (word64) x8;
	w8 = 0x00 | 0x02;
	x1.u1 = &sp->t0020.u0;
	ui32 w2 = 0x00 | 0x01;
	x0 = x20;
	sp->t0020.u1 = (byte) (byte) w8;
	fn000000000001BCD0();
	struct Eq_84228 * v41 = (struct Eq_84228 *) ((char *) &sp->t0030 + 8);
	v41->t0000.u1 = (size_t) x0;
	v41->t0008.u1 = (size_t) x1;
	struct Eq_84237 * v42 = (struct Eq_84237 *) ((word32) x20 + 16);
	x8.u1 = v42->t0000.u1;
	x9.u1 = v42->t0008.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
	{
		*x8.u1 = x1;
		x8 = *((word32) x20 + 16);
		x8.u1 = (word32) x8 + 8;
		*((word32) x20 + 16) = x8;
		sp = (struct Eq_84013 *) ((word32) x19 + 1);
		NZCV.u0 = cond(sp);
		if (Test(EQ,Z))
			goto l000000000004331C;
	}
	else
	{
		x8.u1 = (char *) &sp->t0030 + 8;
		x1.u1 = (word32) x8 + 8;
		x0 = x21;
		fn000000000001C010();
		x8 = *((word32) x20 + 16);
		sp = (struct Eq_84013 *) ((word32) x19 + 1);
		NZCV.u0 = cond(sp);
		if (Test(EQ,Z))
			goto l000000000004331C;
	}
	x8 = *((word32) x8 - 8);
	if (x8 != 0x00)
	{
		Eq_84295 v43 = *x8.u1;
		x8.u1 = (word64) v43;
		NZCV.u0 = cond(x8 - 0x02);
		if (Test(ULE,ZC))
		{
			x9.u0 = 0x00054000;
			x9.u1 = x9 + 0x0B70;
			x8.u1 = *(x9 + x8);
			x31 = x8 - x19;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
l0000000000043354:
				w0 = 0x00 | 0x20;
				__cxa_allocate_exception();
				x20 = x0;
				x8.u1 = &sp->b0008;
				x0 = x19;
				_ZNSt6__ndk19to_stringEm();
				x2.u0 = 0x00053000;
				x2.u1 = (word32) x2 + 840;
				x0.u1 = &sp->b0008;
				word32 w3 = 22;
				x1.u0 = 0x00;
				fn000000000001B4E0();
				x8 = *((word32) x0 + 16);
				Eq_84088 q0 = *x0.u1;
				ui32 w21 = 0x00 | 0x01;
				sp->t0030.u1 = (size_t) x8;
				sp->t0020.u2 = (word128) q0;
				Eq_84348 v36;
				v36.u0 = x0 + 8;
				v36.u1->t0000.u0 = 0x00;
				v36.u1->t0008.u1 = (size_t) 0x00;
				x0.u1->u1 = 0x00;
				w0 = 0x0198;
				x1.u1 = &sp->t0020.u0;
				x8 = x20;
				fn000000000001BC50();
				x1.u0 = 0x00070000;
				x2.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0E88);
				x2 = *((word32) x2 + 0x0DD0);
				x0 = x20;
				w21 = 0x00;
				__cxa_throw();
				x19 = x0;
				w21 = 0x00 | 0x01;
				byte v37 = sp->b0008;
				w8 = (word32) v37;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = sp->t0018.u1;
					((real64) q0, x0, x1);
					if ((w21 & 0x01) == 0x00)
						goto l0000000000043420;
				}
				else if (w21 == 0x00)
					goto l0000000000043420;
				x0 = x20;
				__cxa_free_exception();
l0000000000043420:
				x0 = x19;
				_Unwind_Resume();
				_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE9end_arrayEv();
				return;
			}
		}
		else
		{
			w8 = 0x00 | 0x01;
			x31 = x8 - x19;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
				goto l0000000000043354;
		}
	}
l000000000004331C:
	x8.u1 = x23->t0028.u1;
	x9.u1 = x29->tFFFFFFC8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(EQ,Z))
	{
		struct Eq_84393 * v44 = (struct Eq_84393 *) ((char *) &sp->ptr0050 + 48);
		x29 = v44->ptr0000;
		x30 = v44->qw0008;
		struct Eq_84402 * v45 = (struct Eq_84402 *) ((char *) &sp->ptr0050 + 32);
		x20.u1 = v45->t0000.u1;
		x19.u1 = v45->t0008.u1;
		struct Eq_84411 * v46 = (struct Eq_84411 *) ((char *) &sp->ptr0050 + 16);
		x22 = v46->qw0000;
		x21.u1 = v46->t0008.u1;
		x23 = sp->ptr0050;
		w0 = 0x00 | 0x01;
		sp = (struct Eq_84013 *) ((char *) &sp->ptr0050 + 64);
		return;
	}
l000000000004334C:
	__stack_chk_fail();
}

// 0000000000043428: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE9end_arrayEv
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE9end_arrayEv
{
	struct Eq_84427 * fp;
	struct Eq_84427 * sp = fp;
	sp -= 0x50;
	struct Eq_84431 * x21;
	sp->ptr0020 = x21;
	struct Eq_84436 * v7 = (struct Eq_84436 *) ((char *) &sp->ptr0020 + 16);
	struct Eq_84438 * x20;
	v7->ptr0000 = x20;
	struct Eq_84431 * x19;
	v7->ptr0008 = x19;
	struct Eq_84447 * v10 = (struct Eq_84447 *) ((char *) &sp->ptr0020 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0020 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	struct Eq_84431 * x8 = x20->ptr0028;
	struct Eq_84431 * x0;
	x19 = x0;
	sp->ptr0018 = x8;
	x8 = x0->ptr0010;
	struct Eq_84431 * x9 = x8;
	x9 = (struct Eq_84431 *) &x9->ptrFFFFFFF8;
	word64 x3 = x9->t0000;
	ui32 w0;
	int64 x31;
	Eq_84605 NZCV;
	bool Z;
	if (x3 != 0x00)
	{
		x9 = x19->ptr0008;
		ui32 w10 = 0x00 | 0x03;
		sp->b0010 = (byte) w10;
		x8 -= x9;
		x8 >>= 3;
		word32 w8 = w8 - 0x01;
		sp->dw0014 = w8;
		x0 = x19->ptr0080;
		if (x0 == null)
		{
			fn0000000000043A24();
			_ZN8nlohmann6detail12out_of_range6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE();
			return;
		}
		x8 = (struct Eq_84431 *) x0->t0000;
		word32 * x1 = &sp->dw0014;
		byte * x2 = &sp->b0010;
		x8 = x8->ptr0030;
		x8();
		if ((w0 & 0x01) != 0x00)
		{
			x8 = x19->ptr0010;
			x9 = x19->ptr0028;
			x8 -= 0x08;
			--x9;
			x19->ptr0010 = x8;
			x19->ptr0028 = x9;
		}
		else
		{
			x1 = (word32 *) ((char *) &x19->ptr0080 + 24);
			x0 = (struct Eq_84431 *) &sp->b0000;
			x21 = (struct Eq_84431 *) &sp->b0000;
			fn000000000001B230();
			x8 = x19->ptr0010;
			byte v27 = sp->b0000;
			word32 w9 = (word32) v27;
			x0 = (struct Eq_84431 *) &x21->ptr0008;
			x8 = x8->ptrFFFFFFF8;
			Eq_84560 v29 = x8->t0000;
			word32 w1 = (word32) v29;
			x8->t0000 = (<anonymous>) (byte) w9;
			x9 = sp->ptr0008;
			sp->b0000 = (byte) w1;
			struct Eq_84431 * x10 = x8->ptr0008;
			x8->ptr0008 = x9;
			sp->ptr0008 = x10;
			fn000000000001C590();
			struct Eq_84587 * v31 = (struct Eq_84587 *) &x19->ptr0008;
			x10 = v31->qw0000;
			x8 = v31->ptr0008;
			x9 = x19->ptr0028;
			struct Eq_84431 * x11 = x8 - 0x08;
			--x9;
			x31 = x10 - x11;
			NZCV.u0 = cond(x31);
			x19->ptr0010 = x11;
			x19->ptr0028 = x9;
			if (Test(NE,Z))
			{
				x8 = x8->ptrFFFFFFF0;
				Eq_84674 v33 = x8->t0000;
				w9 = (word32) v33;
				NZCV.u0 = cond(w9 - 0x02);
				if (Test(EQ,Z))
				{
					x19 = x8->ptr0008;
					x21 = x19->ptr0008;
					x21 = (struct Eq_84431 *) &x21->ptrFFFFFFF0;
					byte v34 = x21->t0000;
					w1 = (word32) v34;
					x0 = (struct Eq_84431 *) &x21->ptr0008;
					fn000000000001C590();
					x19->ptr0008 = x21;
				}
			}
		}
	}
	else
	{
		x8 = x19->ptr0028;
		x19->ptr0010 = x9;
		--x8;
		x19->ptr0028 = x8;
	}
	x8 = x20->ptr0028;
	x9 = sp->ptr0018;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_84644 * v24 = (struct Eq_84644 *) ((char *) &sp->ptr0020 + 32);
		x29 = v24->ptr0000;
		x30 = v24->qw0008;
		struct Eq_84653 * v25 = (struct Eq_84653 *) ((char *) &sp->ptr0020 + 16);
		x20 = v25->ptr0000;
		x19 = v25->ptr0008;
		x21 = sp->ptr0020;
		w0 = 0x00 | 0x01;
		sp = (struct Eq_84427 *) ((char *) &sp->ptr0020 + 48);
	}
}

// 0000000000043580: define _ZN8nlohmann6detail12out_of_range6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE9end_arrayEv
define _ZN8nlohmann6detail12out_of_range6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
{
	Eq_14 w0;
	struct Eq_84702 * fp;
	struct Eq_84702 * sp = fp;
	sp -= 0x80;
	struct Eq_84707 * v6 = (struct Eq_84707 *) ((char *) &sp->t0040 + 16);
	struct Eq_84709 * x22;
	v6->ptr0000 = x22;
	byte * x21;
	v6->ptr0008 = x21;
	struct Eq_84718 * v9 = (struct Eq_84718 *) ((char *) &sp->t0040 + 32);
	word64 x20;
	v9->qw0000 = x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_84729 * v12 = (struct Eq_84729 *) ((char *) &sp->t0040 + 48);
	struct Eq_84731 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_84731 *) ((char *) &sp->t0040 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x22->t0028.u1;
	ui32 w9 = 0x00 | 0x18;
	byte * x1;
	x21 = x1;
	Eq_14 w20 = w0;
	x29->tFFFFFFD8.u1 = (size_t) x8;
	struct Eq_84702 * v19 = sp;
	v19->t0000.u1 = 0x00;
	v19->qw0008 = 0x00;
	sp->t0000.u0 = (byte) (byte) w9;
	Eq_14 x9;
	x9.u0 = 0x00053000;
	x9.u1 = (word32) x9 + 863;
	x9 = *x9.u1;
	ui32 w8 = 0x6E61;
	w8 = SEQ(25959, (word16) w8);
	sp->t0010.u1 = (size_t) 0x00;
	sp->dw0009 = w8;
	sp->t0001.u1 = (size_t) x9;
	sp->b000D = 0x00;
	x8.u1 = &sp->b0018;
	Eq_14 x0;
	x0.u1 = &sp->t0000.u0;
	Eq_14 w1 = w20;
	fn000000000001B540();
	byte v24 = *x21;
	w8 = (word32) v24;
	struct Eq_84810 * v26 = (struct Eq_84810 *) (x21 + 8);
	byte * x10 = v26->ptr0000;
	x9.u1 = v26->t0008.u1;
	ui32 w31 = w8 & 0x01;
	Eq_84822 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	Eq_14 x11 = x8 >> 1;
	bool Z;
	x1 = Test(NE,Z) ? x9 : x21 + 1;
	word64 x2 = Test(EQ,Z) ? x11 : x10;
	x0.u1 = &sp->b0018;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	Eq_84847 q0 = *x0.u1;
	sp->t0040.u1 = (size_t) x8;
	sp->t0030.u1 = (word128) q0;
	struct Eq_84856 * v35 = (struct Eq_84856 *) ((word32) x0 + 8);
	v35->qw0000 = 0x00;
	v35->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	byte v36 = sp->b0018;
	w8 = (word32) v36;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0028.u1;
		((real64) q0, x0, x1);
	}
	Eq_84760 v37;
	v37.u0 = sp->t0000.u0;
	w8 = (word32) v37;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0010.u1;
		((real64) q0, x0, x1);
	}
	Eq_84847 v38;
	v38.u0 = sp->t0030.u0;
	w8 = (word32) v38;
	x11.u0 = 0x00070000;
	x9.u1 = sp->t0040.u1;
	x11 = *((word32) x11 + 0x0F38);
	x10 = &sp->t0030.u0;
	x10 |= 0x01;
	w31 = w8 & 0x01;
	NZ.u0 = cond(w31);
	C = false;
	V = false;
	x11.u1 = (word32) x11 + 16;
	x1 = Test(EQ,Z) ? x10 : x9;
	x0.u1 = (word32) x19 + 16;
	*((word32) x19 + 8) = w20;
	*x19.u1 = x11;
	_ZNSt13runtime_errorC1EPKc();
	x9.u0 = 0x00070000;
	Eq_84847 v39;
	v39.u0 = sp->t0030.u0;
	w8 = (word32) v39;
	x9 = *((word32) x9 + 0x0CB8);
	x9.u1 = (word32) x9 + 16;
	*x19.u1 = x9;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0040.u1;
		((real64) q0, x0, x1);
	}
	x8.u1 = x22->t0028.u1;
	x9.u1 = x29->tFFFFFFD8.u1;
	word64 x31 = x8 - x9;
	Eq_84967 NZCV;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_84984 * v42 = (struct Eq_84984 *) ((char *) &sp->t0040 + 48);
		x29 = v42->ptr0000;
		x30 = v42->qw0008;
		struct Eq_84993 * v43 = (struct Eq_84993 *) ((char *) &sp->t0040 + 32);
		x20 = v43->qw0000;
		x19.u1 = v43->t0008.u1;
		struct Eq_85002 * v44 = (struct Eq_85002 *) ((char *) &sp->t0040 + 16);
		x22 = v44->ptr0000;
		x21 = v44->ptr0008;
		sp = (struct Eq_84702 *) ((char *) &sp->t0040 + 64);
	}
}

// 0000000000043718: void exception::~exception()
void exception::~exception()
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_85021 * v7 = (struct Eq_85021 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	_ZNSt13runtime_errorD1Ev();
	struct Eq_85048 * v10 = (struct Eq_85048 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	_ZNSt9exceptionD2Ev();
}

// 000000000004374C: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEENS3_4pairIbPSD_EEOT_b
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEENS3_4pairIbPSD_EEOT_b
{
	ui32 w2;
	Eq_14 x1;
	Eq_14 x0;
	struct Eq_85063 * fp;
	struct Eq_85063 * sp = fp;
	sp -= 0x70;
	struct Eq_85068 * v6 = (struct Eq_85068 *) (&sp->b0030 + 16);
	struct Eq_85070 * x22;
	v6->ptr0000 = x22;
	Eq_14 x21;
	v6->t0008.u1 = (size_t) x21;
	struct Eq_85079 * v9 = (struct Eq_85079 *) (&sp->b0030 + 32);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_85090 * v12 = (struct Eq_85090 *) (&sp->b0030 + 48);
	struct Eq_85092 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_85092 *) (&sp->b0030 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x22->t0028.u1;
	x29->tFFFFFFD8.u1 = (size_t) x8;
	struct Eq_85115 * v17 = (struct Eq_85115 *) ((word32) x0 + 32);
	Eq_14 x9;
	x9.u1 = v17->t0000.u1;
	x8.u1 = v17->t0008.u1;
	--x8;
	Eq_14 x10 = x8 >> 3;
	x10 &= 0x1FFFFFFFFFFFFFF8;
	x9.u1 = *(x9 + x10);
	ui32 w10 = 0x00 | 0x01;
	x8 = x10 << x8;
	Eq_85139 NZ;
	NZ.u0 = cond(x8 & x9);
	bool C = false;
	bool V = false;
	bool Z;
	if (Test(EQ,Z))
	{
		x20.u0 = 0x00;
		x21.u0 = 0x00;
		goto l00000000000439D8;
	}
	Eq_14 v26 = *x1.u1;
	word32 w8 = (word32) v26;
	x9.u1 = &sp->b0020;
	ui32 w21 = w2;
	x20 = x0;
	word32 v34 = w8;
	Eq_85163 NZCV;
	NZCV.u0 = cond(w8 - 0x07);
	x19.u1 = (word32) x9 + 8;
	sp->b0020 = (byte) w8;
	word32 ZC;
	byte * x11;
	ui32 w0;
	if (Test(ULE,ZC))
	{
		x9.u0 = 0x00050000;
		x9.u1 = (word32) x9 + 1618;
		x10.u0 = 276424;
		byte v32 = (byte) *(x9 + x8);
		word32 w11 = (word32) v32;
		x10.u1 = x10 + (x11 << 2);
		switch (v34)
		{
		case 0x00:
		case 0x05:
		case 0x06:
		case 0x07:
			goto l00000000000437C8;
		case 0x01:
			w0 = 0x00 | 0x18;
			_Znwm();
			x8 = x0;
			x8.u1 = x8 + 8;
			x8.u1->u1 = 0x00;
			((word32) x0 + 16)->u0 = 0x00;
			*x0.u1 = x8;
			sp->t0028.u1 = (size_t) x0;
			if ((w21 & 0x01) == 0x00)
				goto l00000000000437D0;
			break;
		case 0x02:
			w0 = 0x00 | 0x18;
			_Znwm();
			struct Eq_85225 * v40 = (struct Eq_85225 *) ((word32) x0 + 8);
			v40->qw0000 = 0x00;
			v40->qw0008 = 0x00;
			x0.u1->u0 = 0x00;
			sp->t0028.u1 = (size_t) x0;
			if ((w21 & 0x01) == 0x00)
				goto l00000000000437D0;
			break;
		case 0x03:
			x0.u0 = 0x00052000;
			x0.u1 = (word32) x0 + 0x05EE;
			fn000000000001BA20();
			sp->t0028.u1 = (size_t) x0;
			if ((w21 & 0x01) == 0x00)
				goto l00000000000437D0;
			break;
		case 0x04:
			sp->t0028.u0 = 0x00;
			if ((w21 & 0x01) == 0x00)
				goto l00000000000437D0;
			break;
		}
	}
	else
	{
l00000000000437C8:
		sp->t0028.u1 = (size_t) 0x00;
		if ((w21 & 0x01) != 0x00)
		{
l00000000000437D0:
			x21.u1 = (word32) x20 + 16;
			goto l0000000000043848;
		}
	}
	x21 = x20;
	x21.u1 = (word32) x21 + 16;
	x8 = *x21.u1;
	w10 = 0x05;
	x9 = *((word32) x21 - 8);
	sp->b0030 = (byte) w10;
	x8 -= x9;
	x8 >>= 3;
	x29->dwFFFFFFD4 = w8;
	x0 = *((word32) x21 + 112);
	word32 w1;
	if (x0 == 0x00)
	{
		fn0000000000043A24();
		byte v56 = sp->b0020;
		w1 = (word32) v56;
		x20 = x0;
		x0 = x19;
		fn000000000001C590();
		x0 = x20;
		_Unwind_Resume();
		fn0000000000043A24();
		return;
	}
	x8 = *x0.u1;
	x8 = *((word32) x8 + 48);
	x1 = x29 - 44;
	byte * x2 = &sp->b0030;
	byte * x3 = &sp->b0020;
	x8();
	if ((w0 & 0x01) == 0x00)
		goto l0000000000043960;
l0000000000043848:
	struct Eq_85364 * v43 = (struct Eq_85364 *) ((word32) x20 + 8);
	x9.u1 = v43->t0000.u1;
	x8.u1 = v43->t0008.u1;
	Eq_85271 x31 = x9 - x8;
	NZCV.u0 = cond(x31);
	if (Test(EQ,Z))
	{
		byte v54 = sp->b0020;
		w8 = (word32) v54;
		x9.u1 = sp->t0028.u1;
		sp->b0020 = 0x00;
		sp->t0028.u1 = (size_t) 0x00;
		sp->b0010 = (byte) w8;
		sp->t0018.u1 = (size_t) x9;
		x9 = *x20.u1;
		x11 = &sp->b0010;
		x0.u1 = x11 + 8;
		byte v55 = (byte) *x9.u1;
		w1 = (word32) v55;
		x9.u1->u0 = (byte) w8;
		x8.u1 = sp->t0018.u1;
		sp->b0010 = (byte) w1;
		x10 = *((word32) x9 + 8);
		*((word32) x9 + 8) = x8;
		sp->t0018.u1 = (size_t) x10;
		fn000000000001C590();
		x21 = *x20.u1;
		goto l00000000000439C8;
	}
	x8 = *((word32) x8 - 8);
	if (x8 != 0x00)
	{
		byte v45 = (byte) *x8.u1;
		word32 w9 = (word32) v45;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0 = *((word32) x8 + 8);
			struct Eq_85482 * v46 = (struct Eq_85482 *) ((word32) x0 + 8);
			x8.u1 = v46->t0000.u1;
			x9.u1 = v46->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
				byte v47 = sp->b0020;
				w9 = (word32) v47;
				x8.u1->u0 = (byte) w9;
				x9.u1 = sp->t0028.u1;
				*((word32) x8 + 8) = x9;
				sp->b0020 = 0x00;
				sp->t0028.u1 = (size_t) 0x00;
				x8 = *((word32) x0 + 8);
				x8.u1 = x8 + 0x10;
				*((word32) x0 + 8) = x8;
			}
			else
			{
				x1.u1 = &sp->b0020;
				fn000000000001C490();
			}
			x8 = *x21.u1;
			x8 = *((word32) x8 - 8);
			x8 = *((word32) x8 + 8);
			x8 = *((word32) x8 + 8);
			x21 = x8 - 0x10;
l00000000000439C8:
			ui32 w20 = 0x00 | 0x01;
l00000000000439CC:
			byte v53 = sp->b0020;
			w1 = (word32) v53;
			x0 = x19;
			fn000000000001C590();
l00000000000439D8:
			x8.u1 = x22->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				x0 = x20;
				x1 = x21;
				struct Eq_85305 * v36 = (struct Eq_85305 *) (&sp->b0030 + 48);
				x29 = v36->ptr0000;
				x30 = v36->qw0008;
				struct Eq_85314 * v37 = (struct Eq_85314 *) (&sp->b0030 + 32);
				x20.u1 = v37->t0000.u1;
				x19.u1 = v37->t0008.u1;
				struct Eq_85323 * v38 = (struct Eq_85323 *) (&sp->b0030 + 16);
				x22 = v38->ptr0000;
				x21.u1 = v38->t0008.u1;
				sp = &sp->b0030 + 64;
				return;
			}
		}
		struct Eq_85450 * v48 = (struct Eq_85450 *) ((word32) x20 + 56);
		x9.u1 = v48->t0000.u1;
		x8.u1 = v48->t0008.u1;
		--x8;
		x10 = x8 >> 3;
		x10 &= 0x1FFFFFFFFFFFFFF8;
		x9.u1 = *(x9 + x10);
		w10 = 0x00 | 0x01;
		x10 <<= x8;
		*((word32) x20 + 64) = x8;
		NZ.u0 = cond(x10 & x9);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			byte v49 = sp->b0020;
			w8 = (word32) v49;
			x9.u1 = sp->t0028.u1;
			sp->b0020 = 0x00;
			sp->t0028.u1 = (size_t) 0x00;
			sp->b0000 = (byte) w8;
			sp->t0008.u1 = (size_t) x9;
			x9 = *((word32) x20 + 80);
			x11 = &sp->b0000;
			x0.u1 = x11 + 8;
			byte v51 = (byte) *x9.u1;
			w1 = (word32) v51;
			x9.u1->u0 = (byte) w8;
			x8.u1 = sp->t0008.u1;
			sp->b0000 = (byte) w1;
			x10 = *((word32) x9 + 8);
			*((word32) x9 + 8) = x8;
			sp->t0008.u1 = (size_t) x10;
			fn000000000001C590();
			x21 = *((word32) x20 + 80);
			goto l00000000000439C8;
		}
	}
l0000000000043960:
	x20.u0 = 0x00;
	x21.u0 = 0x00;
	goto l00000000000439CC;
}

// 0000000000043A24: define fn0000000000043A24
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE9end_arrayEv
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEENS3_4pairIbPSD_EEOT_b
define fn0000000000043A24
{
	struct Eq_85612 * fp;
	struct Eq_85612 * sp = fp;
	sp = (struct Eq_85612 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	ui32 w0 = 0x00 | 0x08;
	__cxa_allocate_exception();
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0CC8);
	Eq_14 x1;
	x1.u0 = 0x00070000;
	Eq_14 x2;
	x2.u0 = 0x00070000;
	x8.u1 = (word32) x8 + 16;
	union Eq_14 * x0;
	x0->u1 = (size_t) x8;
	x1 = *((word32) x1 + 0x0F78);
	x2 = *((word32) x2 + 0x0FB0);
	__cxa_throw();
	_ZNSt6__ndk117bad_function_callD0Ev();
}

// 0000000000043A58: define _ZNSt6__ndk117bad_function_callD0Ev
// Called from:
//      fn0000000000043A24
define _ZNSt6__ndk117bad_function_callD0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_85663 * v7 = (struct Eq_85663 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt9exceptionD2Ev();
	struct Eq_85679 * v9 = (struct Eq_85679 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000043A7C: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE21__push_back_slow_pathISB_EEvOT_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE21__push_back_slow_pathISB_EEvOT_
{
	Eq_14 x0;
	struct Eq_85701 * fp;
	struct Eq_85701 * sp = fp;
	sp = (struct Eq_85701 *) ((char *) sp - 48);
	uint64 x22;
	sp->qw0000 = x22;
	Eq_14 x21;
	sp->t0008.u1 = (size_t) x21;
	struct Eq_85714 * v8 = (struct Eq_85714 *) ((char *) &sp->t0008 + 8);
	Eq_14 x20;
	v8->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v8->t0008.u1 = (size_t) x19;
	struct Eq_85725 * v11 = (struct Eq_85725 *) ((char *) &sp->t0008 + 24);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 24;
	Eq_14 v15 = x0;
	Eq_14 x9 = *v15.u1;
	Eq_14 x8 = *((word32) v15 + 8);
	x19 = x0;
	x8 -= x9;
	x21 = x8 >> 4;
	x8.u1 = (word32) x21 + 1;
	Eq_14 x10 = x8 >> 60;
	if (x10 != 0x00)
	{
		x0 = x19;
		fn000000000001B7E0();
		_ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathIRKSC_EEvOT_();
		return;
	}
	x10 = *((word32) x19 + 16);
	Eq_14 x1;
	x20 = x1;
	x9 = x10 - x9;
	x10 = 0x00 | 0x7FFFFFFFFFFFFFE;
	struct Eq_85768 * x31 = x10 - (x9 >> 4);
	Eq_85770 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 3;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x22 = Test(ULT,C) ? x8 : x9;
		if (x22 == 0x00)
		{
			x0.u0 = 0x00;
			goto l0000000000043AF0;
		}
		x8 = x22 >> 60;
		if (x8 == 0x00)
		{
l0000000000043AE8:
			x0 = x22 << 4;
			_Znwm();
l0000000000043AF0:
			byte v22 = (byte) *x20.u1;
			word32 w8 = (word32) v22;
			struct Eq_85800 * x12 = (struct Eq_85800 *) ((char *) x0.u1 + (x21 << 4));
			x9.u1 = (char *) &x12->t0008 + 8;
			x12->t0000.u0 = (byte) (byte) w8;
			x8 = *((word32) x20 + 8);
			x12->t0008.u1 = (size_t) x8;
			x20.u1->u0 = 0x00;
			((word32) x20 + 8)->u0 = 0x00;
			Eq_14 v24 = x19;
			x20 = *v24.u1;
			x10 = *((word32) v24 + 8);
			x8.u1 = (char *) x0.u1 + (x22 << 4);
			x31 = x10 - x20;
			NZCV.u0 = cond(x31);
			bool Z;
			if (Test(NE,Z))
			{
				uint64 x11 = x10 - 0x10;
				Eq_14 x13;
				x13.u0 = ~0x00;
				x11 -= x20;
				x11 = x13 ^ x11 >> 4;
				x11 = (char *) x21.u1 + x11;
				x12 -= 0x08;
				do
				{
					x10.u1 = (word32) x10 - 16;
					byte v29 = (byte) *x10.u1;
					word32 w13 = (word32) v29;
					x12->bFFFFFFF8 = (byte) w13;
					x13 = *((word32) x10 + 8);
					x31 = x20 - x10;
					NZCV.u0 = cond(x31);
					x12->t0000.u1 = (size_t) x13;
					x12 = (struct Eq_85800 *) ((char *) x12 - 16);
					x10.u1->u0 = 0x00;
					((word32) x10 + 8)->u0 = 0x00;
				} while (Test(NE,Z));
				Eq_14 v30 = x19;
				x20 = *v30.u1;
				x21 = *((word32) v30 + 8);
				x10.u1 = x0 + (x11 << 4);
				Eq_14 v31 = x19;
				*v31.u1 = x10;
				*((word32) v31 + 8) = x9;
				*((word32) x19 + 16) = x8;
				x31 = x21 - x20;
				NZCV.u0 = cond(x31);
				while (Test(NE,Z))
				{
					x21.u1 = (word32) x21 - 16;
					byte v33 = (byte) *x21.u1;
					word32 w1 = (word32) v33;
					x0.u1 = (word32) x21 + 8;
					fn000000000001C590();
					x31 = x20 - x21;
					NZCV.u0 = cond(x31);
				}
				if (x20 != 0x00)
				{
l0000000000043B88:
					x0 = x20;
					struct Eq_85923 * v34 = (struct Eq_85923 *) ((char *) &sp->t0008 + 24);
					x29 = v34->ptr0000;
					x30 = v34->qw0008;
					struct Eq_85932 * v35 = (struct Eq_85932 *) ((char *) &sp->t0008 + 8);
					x20.u1 = v35->t0000.u1;
					x19.u1 = v35->t0008.u1;
					struct Eq_85701 * v36 = sp;
					x22 = v36->qw0000;
					x21.u1 = v36->t0008.u1;
					sp = (struct Eq_85701 *) ((char *) &sp->t0008 + 40);
					word128 q0;
					((real64) q0, x0, x1);
					return;
				}
			}
			else
			{
				Eq_14 v38 = x19;
				v38.u1->u1 = x12;
				*((word32) v38 + 8) = x9;
				*((word32) x19 + 16) = x8;
				if (x20 != 0x00)
					goto l0000000000043B88;
			}
			struct Eq_85896 * v39 = (struct Eq_85896 *) ((char *) &sp->t0008 + 24);
			x29 = v39->ptr0000;
			x30 = v39->qw0008;
			struct Eq_85905 * v40 = (struct Eq_85905 *) ((char *) &sp->t0008 + 8);
			x20.u1 = v40->t0000.u1;
			x19.u1 = v40->t0008.u1;
			struct Eq_85701 * v41 = sp;
			x22 = v41->qw0000;
			x21.u1 = v41->t0008.u1;
			sp = (struct Eq_85701 *) ((char *) &sp->t0008 + 40);
			return;
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x22 = 0x00 | 0xFFFFFFFFFFFFFFF;
	goto l0000000000043AE8;
}

// 0000000000043BC8: define _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathIRKSC_EEvOT_
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE21__push_back_slow_pathISB_EEvOT_
define _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathIRKSC_EEvOT_
{
	Eq_14 x0;
	uint64 * fp;
	uint64 * sp = fp;
	sp += -0x0A;
	uint64 x25;
	*sp = x25;
	struct Eq_86008 * v7 = (struct Eq_86008 *) (sp + 2);
	Eq_14 x24;
	v7->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_86019 * v10 = (struct Eq_86019 *) (sp + 4);
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_86030 * v13 = (struct Eq_86030 *) (sp + 6);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_86041 * v16 = (struct Eq_86041 *) (sp + 8);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = sp + 8;
	Eq_14 v19 = x0;
	x20 = *v19.u1;
	Eq_14 x8 = *((word32) v19 + 8);
	x19 = x0;
	x21 = x8 - x20;
	x24 = x21 >> 3;
	x8.u1 = (word32) x24 + 1;
	Eq_14 x9 = x8 >> 61;
	if (x9 != 0x00)
	{
		x0 = x19;
		fn000000000001B7E0();
		_ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEEC2ERKSB_();
		return;
	}
	x9 = *((word32) x19 + 16);
	ui64 x10 = 0x00 | 0xFFFFFFFFFFFFFFE;
	Eq_14 x1;
	x22 = x1;
	x9 -= x20;
	Eq_86084 x31 = x10 - (x9 >> 3);
	Eq_86086 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 2;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x25 = Test(ULT,C) ? x8 : x9;
		if (x25 == 0x00)
		{
			x23.u0 = 0x00;
			goto l0000000000043C48;
		}
		x8 = x25 >> 61;
		if (x8 == 0x00)
		{
l0000000000043C3C:
			x0 = x25 << 3;
			_Znwm();
			x23 = x0;
l0000000000043C48:
			x8 = *x22.u1;
			x24.u1 = (char *) x23.u1 + (x24 << 3);
			x22.u1 = (char *) x23.u1 + (x25 << 3);
			NZCV.u0 = cond(x21 - 0x01);
			*x24.u1 = x8;
			x24.u1 = (word32) x24 + 8;
			word32 NV;
			if (Test(GE,NV))
			{
				x0 = x23;
				x1 = x20;
				Eq_14 x2 = x21;
				x0 = memcpy(x0, x1, x2);
			}
			Eq_14 v28 = x19;
			*v28.u1 = x23;
			*((word32) v28 + 8) = x24;
			*((word32) x19 + 16) = x22;
			if (x20 == 0x00)
			{
				struct Eq_86154 * v34 = (struct Eq_86154 *) (sp + 8);
				x29 = v34->ptr0000;
				x30 = v34->qw0008;
				struct Eq_86163 * v35 = (struct Eq_86163 *) (sp + 6);
				x20.u1 = v35->t0000.u1;
				x19.u1 = v35->t0008.u1;
				struct Eq_86172 * v36 = (struct Eq_86172 *) (sp + 4);
				x22.u1 = v36->t0000.u1;
				x21.u1 = v36->t0008.u1;
				struct Eq_86181 * v37 = (struct Eq_86181 *) (sp + 2);
				x24.u1 = v37->t0000.u1;
				x23.u1 = v37->t0008.u1;
				x25 = *sp;
				sp += 0x0A;
				return;
			}
			else
			{
				x0 = x20;
				struct Eq_86195 * v29 = (struct Eq_86195 *) (sp + 8);
				x29 = v29->ptr0000;
				x30 = v29->qw0008;
				struct Eq_86204 * v30 = (struct Eq_86204 *) (sp + 6);
				x20.u1 = v30->t0000.u1;
				x19.u1 = v30->t0008.u1;
				struct Eq_86213 * v31 = (struct Eq_86213 *) (sp + 4);
				x22.u1 = v31->t0000.u1;
				x21.u1 = v31->t0008.u1;
				struct Eq_86222 * v32 = (struct Eq_86222 *) (sp + 2);
				x24.u1 = v32->t0000.u1;
				x23.u1 = v32->t0008.u1;
				x25 = *sp;
				sp += 0x0A;
				word128 q0;
				((real64) q0, x0, x1);
				return;
			}
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x25 = 0x00 | 0x1FFFFFFFFFFFFFFF;
	goto l0000000000043C3C;
}

// 0000000000043CC0: define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEEC2ERKSB_
// Called from:
//      _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathIRKSC_EEvOT_
define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEEC2ERKSB_
{
	int64 x8;
	Eq_86247 x1;
	union Eq_86247 * fp;
	union Eq_86247 * sp = fp;
	sp = (union Eq_86247 *) ((char *) sp - 48);
	Eq_86247 x21;
	sp->u1 = (struct Eq_108788 *) x21;
	struct Eq_86252 * v7 = (struct Eq_86252 *) ((char *) sp + 16);
	Eq_86247 x20;
	v7->t0000.u1 = (struct Eq_108788 *) x20;
	Eq_86247 x19;
	v7->t0008.u1 = (struct Eq_108788 *) x19;
	struct Eq_86263 * v10 = (struct Eq_86263 *) ((char *) sp + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) sp + 32;
	byte v13 = x1.u1->b0000;
	word32 w9 = (word32) v13;
	Eq_86247 x0;
	x0.u1->t0008.u1 = (struct Eq_108788 *) 0x00;
	word32 w8 = w9 - 0x01;
	word32 v24 = w8;
	Eq_86293 NZCV;
	NZCV.u0 = cond(w8 - 0x06);
	x0.u1->b0000 = (byte) w9;
	word32 ZC;
	if (Test(ULE,ZC))
	{
		Eq_14 x9;
		x9.u0 = 0x00050000;
		x9.u1 = (word32) x9 + 1626;
		ptr64 x10 = &g_t43D04;
		byte v22 = (byte) *((char *) x9.u1 + x8);
		word32 w11 = (word32) v22;
		ui64 x11;
		x10 += x11 << 2;
		x19 = x0;
		switch (v24)
		{
		case 0x00:
			x0.u1 = x1.u1->t0008.u1;
			fn000000000001ADE0();
			x20 = x0;
			break;
		case 0x01:
			x21.u1 = x1.u1->t0008.u1;
			ui32 w0 = 0x00 | 0x18;
			_Znwm();
			x20 = x0;
			x1 = x21;
			fn000000000001B8E0();
			break;
		case 0x02:
			x0.u1 = x1.u1->t0008.u1;
			fn000000000001C190();
			x20 = x0;
			break;
		case 0x03:
			Eq_86247 v29;
			v29.u0 = x1.u1->t0008.u0;
			word32 w20 = (word32) v29;
			break;
		case 0x04:
		case 0x05:
		case 0x06:
			x20.u1 = x1.u1->t0008.u1;
			break;
		}
		x19.u1->t0008.u1 = (struct Eq_108788 *) x20;
	}
	struct Eq_86302 * v25 = (struct Eq_86302 *) ((char *) sp + 32);
	x29 = v25->ptr0000;
	x30 = v25->qw0008;
	struct Eq_86311 * v26 = (struct Eq_86311 *) ((char *) sp + 16);
	x20.u1 = v26->t0000.u1;
	x19.u1 = v26->t0008.u1;
	x21.u1 = sp->u1;
	sp = (union Eq_86247 *) ((char *) sp + 48);
}

<unknown> g_t43D04 = // 0000000000043D04;
// 0000000000043D74: define _ZNK8nlohmann6detail9iter_implINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEptEv
define _ZNK8nlohmann6detail9iter_implINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEptEv
{
	Eq_14 x0;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_86371 * fp;
	struct Eq_86371 * sp = fp;
	sp -= 0x50;
	word64 x21;
	sp->qw0020 = x21;
	struct Eq_86380 * v7 = (struct Eq_86380 *) (&sp->qw0020 + 2);
	Eq_14 x20;
	v7->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v7->t0008.u1 = (size_t) x19;
	struct Eq_86391 * v10 = (struct Eq_86391 *) (&sp->qw0020 + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = &sp->qw0020 + 4;
	Eq_14 x9 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x10 = *((word32) x9 + 40);
	Eq_14 x8 = x0;
	sp->t0018.u1 = (size_t) x10;
	x0 = *x0.u1;
	Eq_14 v17 = *x0.u1;
	word32 w10 = (word32) v17;
	Eq_86428 NZCV;
	NZCV.u0 = cond(w10 - 0x02);
	bool Z;
	if (Test(EQ,Z))
	{
		x0 = *((word32) x8 + 16);
		goto l0000000000043DCC;
	}
	NZCV.u0 = cond(w10 - 0x01);
	if (Test(EQ,Z))
	{
		x8 = *((word32) x8 + 8);
		x0.u1 = (word32) x8 + 56;
l0000000000043DCC:
		x8 = *((word32) x9 + 40);
		x9.u1 = sp->t0018.u1;
		int64 x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_86463 * v21 = (struct Eq_86463 *) (&sp->qw0020 + 4);
			x29 = v21->ptr0000;
			x30 = v21->qw0008;
			struct Eq_86472 * v22 = (struct Eq_86472 *) (&sp->qw0020 + 2);
			x20.u1 = v22->t0000.u1;
			x19.u1 = v22->t0008.u1;
			x21 = sp->qw0020;
			sp = &sp->qw0020 + 6;
			return;
		}
	}
	x8 = *((word32) x8 + 24);
	if (x8 == 0x00)
		goto l0000000000043DCC;
	ui32 w0 = 0x00 | 0x20;
	ui32 w20 = 0x00 | 0x20;
	__cxa_allocate_exception();
	x8.u0 = 0x00053000;
	x8.u1 = (word32) x8 + 715;
	Eq_14 q0 = *x8.u1;
	x19 = x0;
	ui32 w21 = 0x00 | 0x01;
	struct Eq_86371 * v27 = sp;
	v27->t0000.u1 = 0x00;
	v27->qw0008 = 0x00;
	sp->t0010.u1 = (size_t) 0x00;
	sp->t0000.u0 = (byte) (byte) w20;
	sp->t0001.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	sp->b0011 = 0x00;
	w0 = 0xD6;
	Eq_14 x1;
	x1.u1 = &sp->t0000.u0;
	x8 = x19;
	fn000000000001BE30();
	x1.u0 = 0x00070000;
	Eq_14 x2;
	x2.u0 = 0x00070000;
	x1 = *((word32) x1 + 3312);
	x2 = *((word32) x2 + 0x0DD0);
	x0 = x19;
	w21 = 0x00;
	__cxa_throw();
	Eq_86506 v31;
	v31.u0 = sp->t0000.u0;
	ui32 w8 = (word32) v31;
	x20 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		if (w21 != 0x00)
		{
l0000000000043E78:
			x0 = x19;
			__cxa_free_exception();
			x0 = x20;
			_Unwind_Resume();
			_ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_();
			return;
		}
l0000000000043E64:
		x0 = x20;
		_Unwind_Resume();
	}
	x0.u1 = sp->t0010.u1;
	((real64) q0, x0, x1);
	if ((w21 & 0x01) != 0x00)
		goto l0000000000043E78;
	goto l0000000000043E64;
}

// 0000000000043E88: define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
// Called from:
//      _ZNK8nlohmann6detail9iter_implINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEptEv
define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
{
	Eq_14 x0;
	struct Eq_86579 * fp;
	struct Eq_86579 * sp = fp;
	sp -= 0x90;
	Eq_86583 x25;
	sp->t0040.u0 = (word128 *) x25;
	struct Eq_86588 * v7 = (struct Eq_86588 *) ((char *) &sp->t0040 + 16);
	Eq_14 x24;
	v7->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_86599 * v10 = (struct Eq_86599 *) ((char *) &sp->t0040 + 32);
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_86610 * v13 = (struct Eq_86610 *) ((char *) &sp->t0040 + 48);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_86621 * v16 = (struct Eq_86621 *) ((char *) &sp->t0040 + 64);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = (char *) &sp->t0040 + 64;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9 = *((word32) x21 + 40);
	sp->t0038.u1 = (size_t) x9;
	Eq_14 x1;
	x9 = *x1.u1;
	Eq_86649 x31 = x9 - x0;
	Eq_86651 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	ui32 w0;
	Eq_14 x8;
	Eq_14 q0;
	ui32 w21;
	ui32 w8;
	Eq_14 x2;
	if (Test(NE,Z))
	{
		w0 = 0x00 | 0x20;
		__cxa_allocate_exception();
		x19 = x0;
		struct Eq_86662 * v30 = (struct Eq_86662 *) &sp->t0020.u0;
		v30->qw0000 = 0x00;
		v30->qw0008 = 0x00;
		sp->t0030.u1 = (size_t) 0x00;
		w0 = 0x00 | 0x30;
		_Znwm();
		x8.u0 = 0x00050000;
		q0 = *((word32) x8 + 720);
		x8.u0 = 0x00053000;
		x8.u1 = (word32) x8 + 732;
		w21 = 0x00 | 0x01;
		sp->t0020.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		Eq_14 v34 = x8;
		q0 = *v34.u1;
		Eq_14 q1 = *((word32) v34 + 16);
		w8 = 101;
		((word32) x0 + 0x0022)->u0 = (byte) w8;
		w8 = 30060;
		sp->t0030.u1 = (size_t) x0;
		((word32) x0 + 35)->u0 = 0x00;
		((word32) x0 + 32)->u1 = (word16) w8;
		Eq_14 v35 = x0;
		*v35.u1 = q0;
		*((word32) v35 + 16) = q1;
		w0 = 202;
		x1.u1 = &sp->t0020.u0;
		x8 = x19;
		fn000000000001BE30();
		x1.u0 = 0x00070000;
		x2.u0 = 0x00070000;
		x1 = *((word32) x1 + 3312);
		x2 = *((word32) x2 + 0x0DD0);
		x0 = x19;
		w21 = 0x00;
		__cxa_throw();
		goto l000000000004420C;
	}
	x19 = x8;
	Eq_14 v25 = x8;
	*v25.u1 = x0;
	((word32) v25 + 8)->u0 = 0x00;
	x8 = 0x00 | 0x8000000000000000;
	struct Eq_86754 * v26 = (struct Eq_86754 *) ((word32) x19 + 16);
	v26->qw0000 = 0x00;
	v26->t0008.u1 = (size_t) x8;
	Eq_14 v28 = *x0.u1;
	w8 = (word32) v28;
	x20 = x0;
	NZCV.u0 = cond(w8 - 0x02);
	ui32 w9;
	if (Test(NE,Z))
	{
		NZCV.u0 = cond(w8 - 0x01);
		if (Test(EQ,Z))
		{
			x0 = *((word32) x20 + 8);
			x8.u1 = (word32) x0 + 8;
			*((word32) x19 + 8) = x8;
			x1 = *((word32) x1 + 8);
			fn000000000001B120();
			*((word32) x19 + 8) = x0;
			goto l0000000000043FE4;
		}
		word32 w10 = w8 - 0x03;
		w9 = 0x00 | 0x01;
		NZCV.u0 = cond(w10 - 0x04);
		*((word32) x19 + 24) = x9;
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x9 = *((word32) x1 + 24);
			if (x9 == 0x00)
			{
				NZCV.u0 = cond(w8 - 0x03);
				if (Test(EQ,Z))
				{
					x0 = *((word32) x20 + 8);
					Eq_86996 v45;
					v45.u4 = *x0.u1;
					w8 = (word32) v45;
					if ((w8 & 0x01) != 0x00)
					{
						x0 = *((word32) x0 + 16);
						((real64) q0, x0, x1);
						x0 = *((word32) x20 + 8);
					}
					((real64) q0, x0, x1);
					((word32) x20 + 8)->u0 = 0x00;
				}
				x20.u1->u0 = 0x00;
l0000000000043FE4:
				x8 = *((word32) x21 + 40);
				x9.u1 = sp->t0038.u1;
				x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
					__stack_chk_fail();
				else
				{
					struct Eq_86849 * v37 = (struct Eq_86849 *) ((char *) &sp->t0040 + 64);
					x29 = v37->ptr0000;
					x30 = v37->qw0008;
					struct Eq_86858 * v38 = (struct Eq_86858 *) ((char *) &sp->t0040 + 48);
					x20.u1 = v38->t0000.u1;
					x19.u1 = v38->t0008.u1;
					struct Eq_86867 * v39 = (struct Eq_86867 *) ((char *) &sp->t0040 + 32);
					x22.u1 = v39->t0000.u1;
					x21.u1 = v39->t0008.u1;
					struct Eq_86876 * v40 = (struct Eq_86876 *) ((char *) &sp->t0040 + 16);
					x24.u1 = v40->t0000.u1;
					x23.u1 = v40->t0008.u1;
					x25.u0 = sp->t0040.u0;
					sp = (struct Eq_86579 *) ((char *) &sp->t0040 + 80);
					return;
				}
			}
			w0 = 0x00 | 0x20;
			__cxa_allocate_exception();
			x8.u0 = 0x00053000;
			x8.u1 = (word32) x8 + 0x0300;
			x9 = *((word32) x8 + 0x0D);
			q0 = *x8.u1;
			x19 = x0;
			w8 = 0x2A;
			w21 = 0x00 | 0x01;
			struct Eq_86942 * v46 = (struct Eq_86942 *) &sp->t0020.u0;
			v46->ow0000 = (word128) 0x00;
			v46->qw0008 = 0x00;
			sp->t0030.u1 = (size_t) 0x00;
			sp->t0020.u0 = (byte) (byte) w8;
			sp->t002E.u1 = (size_t) x9;
			sp->t0021.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
			sp->b0036 = 0x00;
			w0 = 0xCD;
			x1.u1 = &sp->t0020.u0;
			x8 = x19;
			fn000000000001BE30();
			x1.u0 = 0x00070000;
			x2.u0 = 0x00070000;
			x1 = *((word32) x1 + 3312);
			x2 = *((word32) x2 + 0x0DD0);
			x0 = x19;
			w21 = 0x00;
			__cxa_throw();
l000000000004420C:
			x20 = x0;
			w21 = 0x00 | 0x01;
			Eq_14 v41;
			v41.u0 = sp->t0008.u0;
			w8 = (word32) v41;
			if ((w8 & 0x01) != 0x00)
			{
				x0.u1 = sp->t0018.u1;
				((real64) q0, x0, x1);
				if ((w21 & 0x01) == 0x00)
					goto l0000000000044288;
			}
			else if (w21 == 0x00)
				goto l0000000000044288;
			do
			{
				x0 = x19;
				__cxa_free_exception();
				x0 = x20;
				_Unwind_Resume();
				x0.u1 = sp->t0030.u1;
				((real64) q0, x0, x1);
			} while ((w21 & 0x01) == 0x00);
l0000000000044288:
			x0 = x20;
			_Unwind_Resume();
			_ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createINS2_IS9_SB_NS1_4lessIvEENS7_INS1_4pairIKS9_SB_EEEEEEJRKSJ_EEEPT_DpOT0_();
			return;
		}
		w0 = 0x00 | 0x20;
		__cxa_allocate_exception();
		Eq_14 v47 = *x20.u1;
		x8.u1 = (word64) v47;
		x19 = x0;
		NZCV.u0 = cond(x8 - 0x08);
		if (Test(ULE,ZC))
		{
			x9.u0 = 0x0006F000;
			x9.u1 = x9 + 0x0C10;
			x20.u1 = *(x9 + x8);
		}
		else
		{
			x20.u0 = 0x00053000;
			x20.u1 = (word32) x20 + 833;
		}
		x0 = x20;
		struct Eq_87056 * v48 = (struct Eq_87056 *) &sp->t0008.u0;
		v48->b0000 = (byte) 0x00;
		v48->qw0008 = 0x00;
		sp->t0018.u1 = (size_t) 0x00;
		x0 = strlen(x0);
		sp = (struct Eq_86579 *) ((word32) x0 + 16);
		NZCV.u0 = cond(sp);
		bool C;
		if (Test(UGE,C))
		{
			x0.u1 = &sp->t0008.u0;
			fn000000000001B2D0();
		}
		x21 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = &sp->t0008.u0;
			w8 = w21 << 1;
			x22 = x9 | 0x01;
			sp->t0008.u0 = (byte) (byte) w8;
			if (x21 == 0x00)
				goto l00000000000441A8;
		}
		else
		{
			x8.u1 = (word32) x21 + 16;
			x23 = x8 & ~0x0F;
			x0 = x23;
			_Znwm();
			x8 = x23 | 0x01;
			x22 = x0;
			struct Eq_87172 * v54 = (struct Eq_87172 *) ((char *) &sp->t0008 + 8);
			v54->t0000.u1 = (size_t) x21;
			v54->t0008.u1 = (size_t) x0;
			sp->t0008.u1 = (size_t) x8;
		}
		x0 = x22;
		x1 = x20;
		x2 = x21;
		x0 = memcpy(x0, x1, x2);
l00000000000441A8:
		*(x22 + x21) = (word64) 0x00;
		x2.u0 = 0x00053000;
		x2.u1 = x2 + ((char *) (&g_t02F0.t0008) + 30);
		x0.u1 = &sp->t0008.u0;
		ui32 w3 = 0x00 | 0x18;
		x1.u0 = 0x00;
		fn000000000001B4E0();
		x8 = *((word32) x0 + 16);
		q0 = *x0.u1;
		w21 = 0x00 | 0x01;
		sp->t0030.u1 = (size_t) x8;
		sp->t0020.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
		Eq_87230 v56;
		v56.u0 = x0 + 8;
		v56.u2->u0 = 0x00;
		v56.u4->t0008.u1 = (size_t) 0x00;
		x0.u1->u1 = 0x00;
		w0 = 0x0133;
		x1.u1 = &sp->t0020.u0;
		x8 = x19;
		fn000000000001C480();
		x1.u0 = 0x00070000;
		x2.u0 = 0x00070000;
		x1 = *((word32) x1 + 0x0C90);
		x2 = *((word32) x2 + 0x0DD0);
		x0 = x19;
		w21 = 0x00;
		__cxa_throw();
		goto l000000000004420C;
	}
	x22 = *((word32) x20 + 8);
	x8 = *((word32) x22 + 8);
	*((word32) x19 + 16) = x8;
	x23 = *((word32) x1 + 16);
	x20.u1 = (word32) x23 + 16;
	x31 = x20 - x8;
	NZCV.u0 = cond(x31);
	word32 w1;
	if (Test(NE,Z))
	{
		x9.u1 = &sp->t0020.u0;
		x20.u1 = x9 + 0x08;
		x25 = x8 - 0x10;
		x24 = x23;
		do
		{
			x8 = x24;
			x24.u1 = (word32) x24 + 16;
			byte v50 = (byte) *x24.u1;
			w9 = (word32) v50;
			Eq_14 x10 = *((word32) x8 + 24);
			x0 = x20;
			x24.u1->u0 = 0x00;
			byte v53 = (byte) *x8.u1;
			w1 = (word32) v53;
			((word32) x8 + 24)->u0 = 0x00;
			x8.u1->u0 = (byte) w9;
			sp->t0020.u0 = (byte) (byte) w1;
			x9 = *((word32) x8 + 8);
			*((word32) x8 + 8) = x10;
			sp->t0028.u1 = (size_t) x9;
			fn000000000001C590();
			x31 = x25 - x24;
			NZCV.u0 = cond(x31);
		} while (Test(NE,Z));
		x20 = *((word32) x22 + 8);
		x31 = x20 - x24;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
l0000000000043FDC:
			*((word32) x22 + 8) = x24;
			*((word32) x19 + 16) = x23;
			goto l0000000000043FE4;
		}
	}
	else
		x24 = x23;
	do
	{
		x20.u1 = x20 + -16;
		byte v57 = (byte) *x20.u1;
		w1 = (word32) v57;
		x0.u1 = x20 + 0x08;
		fn000000000001C590();
		x31 = x24 - x20;
		NZCV.u0 = cond(x31);
	} while (Test(NE,Z));
	goto l0000000000043FDC;
}

// 0000000000044290: define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createINS2_IS9_SB_NS1_4lessIvEENS7_INS1_4pairIKS9_SB_EEEEEEJRKSJ_EEEPT_DpOT0_
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createINS2_IS9_SB_NS1_4lessIvEENS7_INS1_4pairIKS9_SB_EEEEEEJRKSJ_EEEPT_DpOT0_
{
	struct Eq_87257 * fp;
	struct Eq_87257 * sp = fp;
	sp = (struct Eq_87257 *) ((char *) sp - 48);
	struct Eq_87261 * x22;
	sp->ptr0000 = x22;
	struct Eq_87261 * x21;
	sp->ptr0008 = x21;
	struct Eq_87270 * v8 = (struct Eq_87270 *) ((char *) &sp->ptr0008 + 8);
	struct Eq_87261 * x20;
	v8->ptr0000 = x20;
	struct Eq_87261 * x19;
	v8->ptr0008 = x19;
	struct Eq_87281 * v11 = (struct Eq_87281 *) ((char *) &sp->ptr0008 + 24);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 24;
	struct Eq_87261 * x0;
	x20 = x0;
	ui32 w0 = 0x00 | 0x18;
	_Znwm();
	x21 = x0;
	x21 = (struct Eq_87261 *) &x21->ptr0008;
	x21->ptr0000 = null;
	x0->qw0010 = 0x00;
	x0->ptr0000 = x21;
	x22 = x20->ptr0000;
	x20 = (struct Eq_87261 *) &x20->ptr0008;
	x19 = x0;
	while (true)
	{
		int64 x31 = x22 - x20;
		Eq_87320 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(EQ,Z))
			break;
		ui64 x2 = &x22->qw0010 + 2;
		x0 = x19;
		struct Eq_87261 * x1 = x21;
		ui64 x3 = x2;
		fn000000000001B810();
		struct Eq_87261 * x8;
		for (x8 = x22->ptr0008; x8 != null; x8 = x8->ptr0000)
			x22 = x8;
	}
	x0 = x19;
	struct Eq_87325 * v21 = (struct Eq_87325 *) ((char *) &sp->ptr0008 + 24);
	x29 = v21->ptr0000;
	x30 = v21->qw0008;
	struct Eq_87334 * v22 = (struct Eq_87334 *) ((char *) &sp->ptr0008 + 8);
	x20 = v22->ptr0000;
	x19 = v22->ptr0008;
	struct Eq_87257 * v23 = sp;
	x22 = v23->ptr0000;
	x21 = v23->ptr0008;
	sp = (struct Eq_87257 *) ((char *) &sp->ptr0008 + 40);
}

// 0000000000044364: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEENS_21__tree_const_iteratorISE_SV_lEERKT_DpOT0_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEENS_21__tree_const_iteratorISE_SV_lEERKT_DpOT0_
{
	Eq_14 x2;
	struct Eq_87396 * fp;
	struct Eq_87396 * sp = fp;
	sp -= 0x80;
	struct Eq_87401 * v6 = (struct Eq_87401 *) ((char *) &sp->t0018 + 8);
	struct Eq_87403 * x28;
	v6->ptr0000 = x28;
	Eq_87407 x27;
	v6->t0008.u2 = (struct Eq_108825 *) x27;
	struct Eq_87412 * v9 = (struct Eq_87412 *) ((char *) &sp->t0018 + 24);
	Eq_87407 x26;
	v9->t0000.u2 = (struct Eq_108825 *) x26;
	Eq_87407 x25;
	v9->t0008.u2 = (struct Eq_108825 *) x25;
	struct Eq_87423 * v12 = (struct Eq_87423 *) ((char *) &sp->t0018 + 40);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_87407 x23;
	v12->t0008.u2 = (struct Eq_108825 *) x23;
	struct Eq_87434 * v15 = (struct Eq_87434 *) ((char *) &sp->t0018 + 56);
	struct Eq_87436 * x22;
	v15->ptr0000 = x22;
	Eq_87407 x21;
	v15->t0008.u2 = (struct Eq_108825 *) x21;
	struct Eq_87445 * v18 = (struct Eq_87445 *) ((char *) &sp->t0018 + 72);
	Eq_87407 x20;
	v18->t0000.u2 = (struct Eq_108825 *) x20;
	Eq_87407 x19;
	v18->t0008.u2 = (struct Eq_108825 *) x19;
	struct Eq_87456 * v21 = (struct Eq_87456 *) ((char *) &sp->t0018 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 88;
	Eq_1720 sysreg3_3_13_0_2;
	x28 = __mrs(sysreg3_3_13_0_2);
	Eq_87407 x8;
	x8.u2 = x28->t0028.u2;
	struct Eq_87436 * x3;
	x22 = x3;
	Eq_14 x4 = x2;
	x2.u1 = &sp->t0010.u0;
	x3 = (struct Eq_87436 *) ((char *) sp + 8);
	Eq_87407 x0;
	x20 = x0;
	sp->t0018.u2 = (struct Eq_108825 *) x8;
	fn000000000001BFC0();
	x19.u2 = x0.u2->t0000.u2;
	Eq_87503 NZCV;
	if (x19 != 0x00)
	{
l0000000000044494:
		x8.u2 = x28->t0028.u2;
		Eq_87407 x9;
		x9.u2 = sp->t0018.u2;
		word64 x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			x0 = x19;
			struct Eq_87595 * v37 = (struct Eq_87595 *) ((char *) &sp->t0018 + 88);
			x29 = v37->ptr0000;
			x30 = v37->qw0008;
			struct Eq_87604 * v38 = (struct Eq_87604 *) ((char *) &sp->t0018 + 72);
			x20.u2 = v38->t0000.u2;
			x19.u2 = v38->t0008.u2;
			struct Eq_87613 * v39 = (struct Eq_87613 *) ((char *) &sp->t0018 + 56);
			x22 = v39->ptr0000;
			x21.u2 = v39->t0008.u2;
			struct Eq_87622 * v40 = (struct Eq_87622 *) ((char *) &sp->t0018 + 40);
			x24.u1 = v40->t0000.u1;
			x23.u2 = v40->t0008.u2;
			struct Eq_87631 * v41 = (struct Eq_87631 *) ((char *) &sp->t0018 + 24);
			x26.u2 = v41->t0000.u2;
			x25.u2 = v41->t0008.u2;
			struct Eq_87640 * v42 = (struct Eq_87640 *) ((char *) &sp->t0018 + 8);
			x28 = v42->ptr0000;
			x27.u2 = v42->t0008.u2;
			sp = (struct Eq_87396 *) ((char *) &sp->t0018 + 0x0068);
			return;
		}
	}
	x21 = x0;
	word32 w0 = 0x48;
	_Znwm();
	x23 = x0;
	x23.u2 = &x23.u2->t0020.u0;
	x23.u2->t0000.u2 = (struct Eq_108825 *) 0x00;
	struct Eq_87518 * v29 = (struct Eq_87518 *) ((word32) x0 + 40);
	v29->qw0000 = 0x00;
	v29->qw0008 = 0x00;
	Eq_87407 v31;
	v31.u0 = x22->t0000.u0;
	ui32 w8 = (word32) v31;
	x19 = x0;
	Eq_87407 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x8.u2 = x22->t0010.u2;
		q0.u1 = x22->t0000.u1;
		x23.u2->t0010.u2 = (struct Eq_108825 *) x8;
		x23.u2->t0000.u1 = (word128) q0;
		goto l0000000000044448;
	}
	x24.u1 = x22->t0008.u1;
	sp = (struct Eq_87396 *) ((word32) x24 + 16);
	NZCV.u0 = cond(sp);
	bool C;
	Eq_87407 x1;
	if (Test(UGE,C))
	{
		x0 = x23;
		fn000000000001B2D0();
		x20 = x0;
		x0 = x19;
		((real64) q0, x0, x1);
		x0 = x20;
		_Unwind_Resume();
		_ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_SN_EElEERPNS_15__tree_end_nodeISP_EESQ_RKT_();
		return;
	}
	x25.u2 = x22->t0010.u2;
	NZCV.u0 = cond(x24 - 0x17);
	if (Test(ULT,C))
	{
		ui32 w24;
		w8 = w24 << 1;
		x26.u2 = (word32) x19 + 33;
		x19.u2->t0020.u0 = (byte) (byte) w8;
		if (x24 == 0x00)
			goto l0000000000044444;
	}
	else
	{
		x8.u2 = (word32) x24 + 16;
		x27 = x8 & ~0x0F;
		x0 = x27;
		_Znwm();
		x8 = x27 | 0x01;
		x26 = x0;
		struct Eq_87685 * v47 = (struct Eq_87685 *) ((word32) x19 + 40);
		v47->t0000.u1 = (size_t) x24;
		v47->t0008.u2 = (struct Eq_108825 *) x0;
		x19.u2->t0020.u2 = (struct Eq_108825 *) x8;
	}
	x0 = x26;
	x1 = x25;
	x2 = x24;
	x0 = memcpy(x0, x1, x2);
l0000000000044444:
	*(x26 + x24) = (word64) 0x00;
l0000000000044448:
	x0.u2 = (word32) x19 + 56;
	x1.u2 = (char *) &x22->t0010 + 8;
	fn000000000001B230();
	x8.u2 = sp->t0010.u2;
	Eq_87407 v44 = x19;
	v44.u2->t0000.u2 = (struct Eq_108825 *) 0x00;
	v44.u2->t0008.u2 = (struct Eq_108825 *) 0x00;
	x19.u2->t0010.u2 = (struct Eq_108825 *) x8;
	x21.u2->t0000.u2 = (struct Eq_108825 *) x19;
	x8.u2 = x20.u2->t0000.u2;
	x8.u2 = x8.u2->t0000.u2;
	if (x8 != 0x00)
	{
		x20.u2->t0000.u2 = (struct Eq_108825 *) x8;
		x1.u2 = x21.u2->t0000.u2;
	}
	else
		x1 = x19;
	x0.u2 = x20.u2->t0008.u2;
	fn000000000001BD70();
	x8.u2 = x20.u2->t0010.u2;
	x8.u2 = (word32) x8 + 1;
	x20.u2->t0010.u2 = (struct Eq_108825 *) x8;
	goto l0000000000044494;
}

// 0000000000044500: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_SN_EElEERPNS_15__tree_end_nodeISP_EESQ_RKT_
// Called from:
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEENS_21__tree_const_iteratorISE_SV_lEERKT_DpOT0_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_SN_EElEERPNS_15__tree_end_nodeISP_EESQ_RKT_
{
	struct Eq_87727 * fp;
	struct Eq_87727 * sp = fp;
	sp -= 0x80;
	struct Eq_87732 * v6 = (struct Eq_87732 *) ((char *) &sp->t0018 + 8);
	Eq_14 x28;
	v6->t0000.u1 = (size_t) x28;
	uint64 x27;
	v6->qw0008 = x27;
	struct Eq_87743 * v9 = (struct Eq_87743 *) ((char *) &sp->t0018 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v9->t0008.u1 = (size_t) x25;
	struct Eq_87754 * v12 = (struct Eq_87754 *) ((char *) &sp->t0018 + 40);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_87765 * v15 = (struct Eq_87765 *) ((char *) &sp->t0018 + 56);
	ui64 x22;
	v15->qw0000 = x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_87776 * v18 = (struct Eq_87776 *) ((char *) &sp->t0018 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v18->t0008.u1 = (size_t) x19;
	struct Eq_87787 * v21 = (struct Eq_87787 *) ((char *) &sp->t0018 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 88;
	Eq_14 x8;
	Eq_14 x0;
	x8.u1 = (word32) x0 + 8;
	Eq_14 x4;
	x21 = x4;
	Eq_14 x1;
	x28 = x1;
	Eq_87805 x31 = x8 - x1;
	Eq_87807 NZCV;
	NZCV.u0 = cond(x31);
	struct Eq_87810 * v29 = (struct Eq_87810 *) &sp->t0008.u0;
	word64 x3;
	v29->qw0000 = x3;
	v29->t0008.u1 = (size_t) x0;
	sp->t0000.u1 = (size_t) x8;
	Eq_14 x2;
	sp->t0018.u1 = (size_t) x2;
	bool Z;
	Eq_14 x9;
	ui32 w9;
	Eq_14 x11;
	Eq_14 x10;
	ui32 w31;
	Eq_87867 NZ;
	bool C;
	bool V;
	ui32 w0;
	if (Test(EQ,Z))
	{
l00000000000445B4:
		x24.u1 = sp->t0010.u1;
		x19 = *x28.u1;
		x23 = x28;
		x8 = *x24.u1;
		x31 = x8 - x28;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
l00000000000446D4:
			if (x19 != 0x00)
			{
				x8.u1 = sp->t0018.u1;
				x20.u1 = (word32) x23 + 8;
				*x8.u1 = x23;
				goto l00000000000447C0;
			}
			x8.u1 = sp->t0018.u1;
			x20 = x28;
			goto l00000000000446F0;
		}
		else
		{
			if (x19 != 0x00)
			{
				x8 = x19;
				do
				{
					x23 = x8;
					x8 = *((word32) x8 + 8);
				} while (x8 != 0x00);
			}
			else
			{
				x23 = x28;
				do
				{
					x8 = x23;
					x23 = *((word32) x23 + 16);
					x9 = *x23.u1;
					x31 = x9 - x8;
					NZCV.u0 = cond(x31);
				} while (Test(EQ,Z));
			}
			x8 = x23;
			x8.u1 = (word32) x8 + 32;
			Eq_14 v45 = *x8.u1;
			w9 = (word32) v45;
			Eq_14 v47 = *x21.u1;
			ui32 w10 = (word32) v47;
			x11 = *((word32) x21 + 8);
			Eq_14 x13 = *((word32) x8 + 8);
			Eq_14 x12 = x10 >> 1;
			w31 = w10 & 0x01;
			NZ.u0 = cond(w31);
			x20.u1 = Test(EQ,Z) ? x12 : x11;
			x11 = x9 >> 1;
			w31 = w9 & 0x01;
			NZ.u0 = cond(w31);
			x22 = Test(EQ,Z) ? x11 : x13;
			x31 = x20 - x22;
			NZCV.u0 = cond(x31);
			x2.u1 = Test(ULT,C) ? x20 : x22;
			if (x2 != 0x00)
			{
				x11 = *((word32) x23 + 48);
				x12 = *((word32) x21 + 16);
				w31 = w9 & 0x01;
				NZ.u0 = cond(w31);
				x0.u1 = Test(NE,Z) ? x11 : (word32) x8 + 1;
				w31 = w10 & 0x01;
				NZ.u0 = cond(w31);
				C = false;
				V = false;
				x1.u1 = Test(NE,Z) ? x12 : (word32) x21 + 1;
				x0 = SEQ(0x00, memcmp(x0, x1, x2));
				if (w0 != 0x00)
				{
					if ((w0 & 0x00) != 0x00)
					{
l00000000000446A0:
						x0 = x24;
						goto l00000000000446A4;
					}
					goto l00000000000446D4;
				}
			}
			x31 = x22 - x20;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
				goto l00000000000446A0;
			goto l00000000000446D4;
		}
	}
	else
	{
		x20 = x28;
		x20.u1 = (word32) x20 + 32;
		Eq_14 v33 = *x20.u1;
		ui32 w19 = (word32) v33;
		Eq_14 v35 = *x21.u1;
		ui32 w23 = (word32) v35;
		x8 = *((word32) x21 + 8);
		x9 = *((word32) x20 + 8);
		x10 = x19 >> 1;
		w31 = w19 & 0x01;
		NZ.u0 = cond(w31);
		x11 = x23 >> 1;
		x22 = Test(EQ,Z) ? x10 : x9;
		w31 = w23 & 0x01;
		NZ.u0 = cond(w31);
		x27 = Test(EQ,Z) ? x11 : x8;
		x31 = x22 - x27;
		NZCV.u0 = cond(x31);
		x24.u1 = Test(ULT,C) ? x22 : x27;
		if (x24 != 0x00)
		{
			x8 = *((word32) x21 + 16);
			x9 = *((word32) x28 + 48);
			w31 = w23 & 0x01;
			NZ.u0 = cond(w31);
			x2 = x24;
			x26.u1 = Test(NE,Z) ? x8 : (word32) x21 + 1;
			w31 = w19 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x25.u1 = Test(NE,Z) ? x9 : (word32) x20 + 1;
			x0 = x26;
			x1 = x25;
			x0 = SEQ(0x00, memcmp(x0, x1, x2));
			if (w0 != 0x00)
			{
				if ((w0 & 0x00) != 0x00)
					goto l0000000000044600;
				goto l00000000000445B4;
			}
		}
		x31 = x27 - x22;
		NZCV.u0 = cond(x31);
		if (Test(UGE,C))
		{
			if (x24 == 0x00)
			{
l00000000000446F8:
				x31 = x22 - x27;
				NZCV.u0 = cond(x31);
				if (Test(UGE,C))
					goto l0000000000044618;
				goto l0000000000044700;
			}
			x8 = *((word32) x28 + 48);
			x9 = *((word32) x21 + 16);
			w31 = w19 & 0x01;
			NZ.u0 = cond(w31);
			x25.u1 = Test(NE,Z) ? x8 : (word32) x20 + 1;
			w31 = w23 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x26.u1 = Test(NE,Z) ? x9 : (word32) x21 + 1;
l0000000000044600:
			x0 = x25;
			x1 = x26;
			x2 = x24;
			x0 = SEQ(0x00, memcmp(x0, x1, x2));
			if (w0 != 0x00)
			{
				if ((w0 & 0x00) != 0x00)
				{
l0000000000044618:
					x8.u1 = sp->t0018.u1;
					x20.u1 = sp->t0008.u1;
					*x8.u1 = x28;
					*x20.u1 = x28;
					goto l00000000000447C0;
				}
l0000000000044700:
				x20 = x28;
				x20.u1 = (word32) x20 + 8;
				x8 = *x20.u1;
				while (x8 != 0x00)
				{
					x24 = x8;
					x8 = *x8.u1;
				}
				x8.u1 = sp->t0000.u1;
				x31 = x24 - x8;
				NZCV.u0 = cond(x31);
				if (Test(EQ,Z))
				{
l00000000000447AC:
					x8 = *((word32) x28 + 8);
					if (x8 != 0x00)
					{
						x8.u1 = sp->t0018.u1;
						x20 = x24;
						*x8.u1 = x24;
						goto l00000000000447C0;
					}
					x8.u1 = sp->t0018.u1;
l00000000000446F0:
					*x8.u1 = x28;
l00000000000447C0:
					x0 = x20;
					struct Eq_88015 * v56 = (struct Eq_88015 *) ((char *) &sp->t0018 + 88);
					x29 = v56->ptr0000;
					x30 = v56->qw0008;
					struct Eq_88024 * v57 = (struct Eq_88024 *) ((char *) &sp->t0018 + 72);
					x20.u1 = v57->t0000.u1;
					x19.u1 = v57->t0008.u1;
					struct Eq_88033 * v58 = (struct Eq_88033 *) ((char *) &sp->t0018 + 56);
					x22 = v58->qw0000;
					x21.u1 = v58->t0008.u1;
					struct Eq_88042 * v59 = (struct Eq_88042 *) ((char *) &sp->t0018 + 40);
					x24.u1 = v59->t0000.u1;
					x23.u1 = v59->t0008.u1;
					struct Eq_88051 * v60 = (struct Eq_88051 *) ((char *) &sp->t0018 + 24);
					x26.u1 = v60->t0000.u1;
					x25.u1 = v60->t0008.u1;
					struct Eq_88060 * v61 = (struct Eq_88060 *) ((char *) &sp->t0018 + 8);
					x28.u1 = v61->t0000.u1;
					x27 = v61->qw0008;
					sp = (struct Eq_87727 *) ((char *) &sp->t0018 + 0x0068);
					return;
				}
				else
				{
					x8 = x24;
					x8.u1 = (word32) x8 + 32;
					byte v62 = (byte) *x8.u1;
					w9 = (word32) v62;
					x10 = *((word32) x8 + 8);
					x11 = x9 >> 1;
					w31 = w9 & 0x01;
					NZ.u0 = cond(w31);
					x19.u1 = Test(EQ,Z) ? x11 : x10;
					x31 = x19 - x27;
					NZCV.u0 = cond(x31);
					x2.u1 = Test(ULT,C) ? x19 : x27;
					if (x2 != 0x00)
					{
						x10 = *((word32) x21 + 16);
						x11 = *((word32) x24 + 48);
						w31 = w23 & 0x01;
						NZ.u0 = cond(w31);
						x0.u1 = Test(NE,Z) ? x10 : (word32) x21 + 1;
						w31 = w9 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x1.u1 = Test(NE,Z) ? x11 : (word32) x8 + 1;
						x0 = SEQ(0x00, memcmp(x0, x1, x2));
						if (w0 != 0x00)
						{
							if ((w0 & 0x00) != 0x00)
							{
l000000000004479C:
								x0.u1 = sp->t0010.u1;
l00000000000446A4:
								x1.u1 = sp->t0018.u1;
								x2 = x21;
								struct Eq_88217 * v50 = (struct Eq_88217 *) ((char *) &sp->t0018 + 88);
								x29 = v50->ptr0000;
								x30 = v50->qw0008;
								struct Eq_88226 * v51 = (struct Eq_88226 *) ((char *) &sp->t0018 + 72);
								x20.u1 = v51->t0000.u1;
								x19.u1 = v51->t0008.u1;
								struct Eq_88235 * v52 = (struct Eq_88235 *) ((char *) &sp->t0018 + 56);
								x22 = v52->qw0000;
								x21.u1 = v52->t0008.u1;
								struct Eq_88244 * v53 = (struct Eq_88244 *) ((char *) &sp->t0018 + 40);
								x24.u1 = v53->t0000.u1;
								x23.u1 = v53->t0008.u1;
								struct Eq_88253 * v54 = (struct Eq_88253 *) ((char *) &sp->t0018 + 24);
								x26.u1 = v54->t0000.u1;
								x25.u1 = v54->t0008.u1;
								struct Eq_88262 * v55 = (struct Eq_88262 *) ((char *) &sp->t0018 + 8);
								x28.u1 = v55->t0000.u1;
								x27 = v55->qw0008;
								sp = (struct Eq_87727 *) ((char *) &sp->t0018 + 0x0068);
								fn000000000001AE80();
								return;
							}
							goto l00000000000447AC;
						}
					}
					x31 = x27 - x19;
					NZCV.u0 = cond(x31);
					if (Test(UGE,C))
						goto l000000000004479C;
					goto l00000000000447AC;
				}
			}
			goto l00000000000446F8;
		}
		goto l00000000000445B4;
	}
}

// 00000000000447EC: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_
{
	Eq_88339 x8;
	Eq_14 x2;
	struct Eq_88331 * fp;
	struct Eq_88331 * sp = fp;
	sp = (struct Eq_88331 *) ((char *) sp - 96);
	uint64 x28;
	sp->qw0000 = x28;
	Eq_88339 x27;
	sp->t0008.u1 = (struct Eq_108880 *) x27;
	struct Eq_88344 * v8 = (struct Eq_88344 *) ((char *) &sp->t0008 + 8);
	word64 x26;
	v8->qw0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_88355 * v11 = (struct Eq_88355 *) ((char *) &sp->t0008 + 24);
	Eq_88339 x24;
	v11->t0000.u1 = (struct Eq_108880 *) x24;
	Eq_88339 x23;
	v11->t0008.u1 = (struct Eq_108880 *) x23;
	struct Eq_88366 * v14 = (struct Eq_88366 *) ((char *) &sp->t0008 + 40);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_88339 x21;
	v14->t0008.u1 = (struct Eq_108880 *) x21;
	struct Eq_88377 * v17 = (struct Eq_88377 *) ((char *) &sp->t0008 + 56);
	Eq_88339 x20;
	v17->t0000.u1 = (struct Eq_108880 *) x20;
	Eq_88339 x19;
	v17->t0008.u1 = (struct Eq_108880 *) x19;
	struct Eq_88388 * v20 = (struct Eq_88388 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	Eq_88339 x0;
	x20 = x0;
	x20.u1 = &x20.u1->t0008.u0;
	x24.u1 = x20.u1->t0000.u1;
	Eq_88339 x1;
	x19 = x1;
	if (x24 == 0x00)
	{
		x19.u1->t0000.u1 = (struct Eq_108880 *) x20;
		goto l00000000000448F8;
	}
	byte v25 = (byte) *x2.u1;
	ui32 w8 = (word32) v25;
	struct Eq_88420 * v28 = (struct Eq_88420 *) ((word32) x2 + 8);
	uint64 x9 = v28->qw0000;
	word64 x10 = v28->qw0008;
	x20.u1 = &x0.u1->t0008.u0;
	uint64 x11 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_88439 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x25 = Test(EQ,Z) ? x11 : x9;
	x21.u1 = Test(NE,Z) ? x10 : (word32) x2 + 1;
l000000000004483C:
	x27 = x24;
	x27.u1 = (word32) x27 + 32;
	Eq_88339 v37;
	v37.u0 = x27.u1->t0000.u0;
	ui32 w28 = (word32) v37;
	x8.u1 = x27.u1->t0008.u1;
	x9 = x28 >> 1;
	w31 = w28 & 0x01;
	NZ.u0 = cond(w31);
	x26 = Test(EQ,Z) ? x9 : x8;
	word64 x31 = x26 - x25;
	Eq_88472 NZCV;
	NZCV.u0 = cond(x31);
	x22.u1 = Test(ULT,C) ? x26 : x25;
	ui32 w0;
	if (x22 != 0x00)
	{
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x0 = x21;
		x2 = x22;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
		x1 = x23;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l00000000000448B0;
l0000000000044890:
			x8.u1 = x24.u1->t0000.u1;
			if (x8 == 0x00)
			{
				x19.u1->t0000.u1 = (struct Eq_108880 *) x24;
				x20 = x24;
				goto l00000000000448F8;
			}
			x20 = x24;
l0000000000044838:
			x24 = x8;
			goto l000000000004483C;
		}
	}
	x31 = x25 - x26;
	NZCV.u0 = cond(x31);
	if (Test(UGE,C))
	{
		if (x22 == 0x00)
		{
l00000000000448CC:
			x31 = x26 - x25;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
				goto l00000000000448E0;
			goto l00000000000448D4;
		}
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
l00000000000448B0:
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l00000000000448E0;
l00000000000448D4:
			x20 = x24;
			x20.u1 = &x20.u1->t0008.u0;
			x8.u1 = x20.u1->t0000.u1;
			if (x8 == 0x00)
			{
l00000000000448E0:
				x19.u1->t0000.u1 = (struct Eq_108880 *) x24;
l00000000000448F8:
				x0 = x20;
				struct Eq_88479 * v41 = (struct Eq_88479 *) ((char *) &sp->t0008 + 72);
				x29 = v41->ptr0000;
				x30 = v41->qw0008;
				struct Eq_88488 * v42 = (struct Eq_88488 *) ((char *) &sp->t0008 + 56);
				x20.u1 = v42->t0000.u1;
				x19.u1 = v42->t0008.u1;
				struct Eq_88497 * v43 = (struct Eq_88497 *) ((char *) &sp->t0008 + 40);
				x22.u1 = v43->t0000.u1;
				x21.u1 = v43->t0008.u1;
				struct Eq_88506 * v44 = (struct Eq_88506 *) ((char *) &sp->t0008 + 24);
				x24.u1 = v44->t0000.u1;
				x23.u1 = v44->t0008.u1;
				struct Eq_88515 * v45 = (struct Eq_88515 *) ((char *) &sp->t0008 + 8);
				x26 = v45->qw0000;
				x25 = v45->qw0008;
				struct Eq_88331 * v46 = sp;
				x28 = v46->qw0000;
				x27.u1 = v46->t0008.u1;
				sp = (struct Eq_88331 *) ((char *) &sp->t0008 + 88);
				return;
			}
			goto l0000000000044838;
		}
		goto l00000000000448CC;
	}
	goto l0000000000044890;
}

// 0000000000044918: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEEC2ERKSD_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEEC2ERKSD_
{
	Eq_88615 x1;
	Eq_88615 x0;
	struct Eq_88611 * fp;
	struct Eq_88611 * sp = fp;
	sp = (struct Eq_88611 *) ((char *) sp - 48);
	Eq_88615 x22;
	sp->t0000.u1 = (struct Eq_108881 *) x22;
	Eq_88615 x21;
	sp->t0008.u1 = (struct Eq_108881 *) x21;
	struct Eq_88624 * v8 = (struct Eq_88624 *) ((char *) &sp->t0008 + 8);
	Eq_88615 x20;
	v8->t0000.u1 = (struct Eq_108881 *) x20;
	Eq_88615 x19;
	v8->t0008.u1 = (struct Eq_108881 *) x19;
	struct Eq_88635 * v11 = (struct Eq_88635 *) ((char *) &sp->t0008 + 24);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 24;
	struct Eq_88649 * v13 = (struct Eq_88649 *) &x0.u1->t0008.u0;
	v13->qw0000 = 0x00;
	v13->qw0008 = 0x00;
	x0.u1->t0000.u1 = (struct Eq_108881 *) 0x00;
	Eq_88615 v17 = x1;
	Eq_88615 x8;
	x8.u1 = v17.u1->t0000.u1;
	Eq_88615 x9;
	x9.u1 = v17.u1->t0008.u1;
	x19 = x0;
	x0 = x9 - x8;
	Eq_88674 NZCV;
	NZCV.u0 = cond(x0);
	bool Z;
	if (Test(NE,Z))
	{
		x21 = x0 >> 4;
		x8 = x21 >> 60;
		Eq_88734 x31;
		if (x8 != 0x00)
		{
			x0 = x19;
			fn000000000001B7E0();
			x21.u1 = x19.u1->t0000.u1;
			x20 = x0;
			if (x21 != 0x00)
			{
				x22.u1 = x19.u1->t0008.u1;
				x0 = x21;
				x31 = x22 - x21;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					do
					{
						x22.u1 = x22 + -16;
						Eq_88615 v27;
						v27.u0 = x22.u1->t0000.u0;
						word32 w1 = (word32) v27;
						x0.u1 = x22 + 0x08;
						fn000000000001C590();
						x31 = x21 - x22;
						NZCV.u0 = cond(x31);
					} while (Test(NE,Z));
					x0.u1 = x19.u1->t0000.u1;
				}
				x19.u1->t0008.u1 = (struct Eq_108881 *) x21;
				word128 q0;
				((real64) q0, x0, x1);
			}
			x0 = x20;
			_Unwind_Resume();
			_ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRKS9_EEEPT_DpOT0_();
			return;
		}
		x20 = x1;
		_Znwm();
		x8.u1 = &x0.u1->t0000.u0 + (x21 << 4);
		Eq_88615 v20 = x19;
		v20.u1->t0000.u1 = (struct Eq_108881 *) x0;
		v20.u1->t0008.u1 = (struct Eq_108881 *) x0;
		x19.u1->t0010.u1 = (struct Eq_108881 *) x8;
		Eq_88615 v21 = x20;
		x21.u1 = v21.u1->t0000.u1;
		x20.u1 = v21.u1->t0008.u1;
		x31 = x21 - x20;
		NZCV.u0 = cond(x31);
		while (Test(NE,Z))
		{
			x1 = x21;
			fn000000000001B230();
			x8.u1 = x19.u1->t0008.u1;
			x21.u1 = x21 + 0x10;
			x31 = x20 - x21;
			NZCV.u0 = cond(x31);
			x0.u1 = x8 + (union Eq_88615 *) 0x10;
			x19.u1->t0008.u1 = (struct Eq_108881 *) x0;
		}
	}
	struct Eq_88679 * v23 = (struct Eq_88679 *) ((char *) &sp->t0008 + 24);
	x29 = v23->ptr0000;
	x30 = v23->qw0008;
	struct Eq_88688 * v24 = (struct Eq_88688 *) ((char *) &sp->t0008 + 8);
	x20.u1 = v24->t0000.u1;
	x19.u1 = v24->t0008.u1;
	struct Eq_88611 * v25 = sp;
	x22.u1 = v25->t0000.u1;
	x21.u1 = v25->t0008.u1;
	sp = (struct Eq_88611 *) ((char *) &sp->t0008 + 40);
}

// 00000000000449EC: define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRKS9_EEEPT_DpOT0_
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEEC2ERKSD_
define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRKS9_EEEPT_DpOT0_
{
	union Eq_14 * fp;
	union Eq_14 * sp = fp;
	sp = (union Eq_14 *) ((char *) sp - 64);
	Eq_14 x23;
	sp->u1 = (size_t) x23;
	struct Eq_88804 * v7 = (struct Eq_88804 *) ((char *) sp + 16);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_88815 * v10 = (struct Eq_88815 *) ((char *) sp + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_88826 * v13 = (struct Eq_88826 *) ((char *) sp + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) sp + 48;
	Eq_14 x0;
	x21 = x0;
	ui32 w0 = 0x00 | 0x18;
	_Znwm();
	struct Eq_88846 * v16 = (struct Eq_88846 *) ((word32) x0 + 8);
	v16->qw0000 = 0x00;
	v16->qw0008 = 0x00;
	x0.u1->u0 = 0x00;
	Eq_14 v18 = *x21.u1;
	ui32 w8 = (word32) v18;
	x19 = x0;
	Eq_14 x8;
	Eq_14 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x8 = *((word32) x21 + 16);
		q0 = *x21.u1;
		*((word32) x19 + 16) = x8;
		*x19.u1 = q0;
		goto l0000000000044A94;
	}
	x20 = *((word32) x21 + 8);
	sp = (union Eq_14 *) ((word32) x20 + 16);
	Eq_88875 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	Eq_14 x1;
	if (Test(UGE,C))
	{
		x0 = x19;
		fn000000000001B2D0();
		x20 = x0;
		x0 = x19;
		((real64) q0, x0, x1);
		x0 = x20;
		_Unwind_Resume();
		_ZNK8nlohmann6detail9iter_implINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEeqERKSE_();
		return;
	}
	x21 = *((word32) x21 + 16);
	NZCV.u0 = cond(x20 - 0x17);
	if (Test(ULT,C))
	{
		ui32 w20;
		w8 = w20 << 1;
		x22 = x19;
		*x22.u1 = (byte) w8;
		x22.u1 = (word32) x22 + 1;
		if (x20 == 0x00)
			goto l0000000000044A90;
	}
	else
	{
		x8.u1 = (word32) x20 + 16;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		struct Eq_88952 * v29 = (struct Eq_88952 *) ((word32) x19 + 8);
		v29->t0000.u1 = (size_t) x20;
		v29->t0008.u1 = (size_t) x0;
		*x19.u1 = x8;
	}
	x0 = x22;
	x1 = x21;
	Eq_14 x2 = x20;
	x0 = memcpy(x0, x1, x2);
l0000000000044A90:
	*(x22 + x20) = (word64) 0x00;
l0000000000044A94:
	x0 = x19;
	struct Eq_88894 * v24 = (struct Eq_88894 *) ((char *) sp + 48);
	x29 = v24->ptr0000;
	x30 = v24->qw0008;
	struct Eq_88903 * v25 = (struct Eq_88903 *) ((char *) sp + 32);
	x20.u1 = v25->t0000.u1;
	x19.u1 = v25->t0008.u1;
	struct Eq_88912 * v26 = (struct Eq_88912 *) ((char *) sp + 16);
	x22.u1 = v26->t0000.u1;
	x21.u1 = v26->t0008.u1;
	x23.u1 = sp->u1;
	sp = (union Eq_14 *) ((char *) sp + 64);
}

// 0000000000044AC8: define _ZNK8nlohmann6detail9iter_implINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEeqERKSE_
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRKS9_EEEPT_DpOT0_
define _ZNK8nlohmann6detail9iter_implINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEeqERKSE_
{
	Eq_14 x1;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_88986 * fp;
	struct Eq_88986 * sp = fp;
	sp -= 0x50;
	word64 x21;
	sp->qw0020 = x21;
	struct Eq_88995 * v7 = (struct Eq_88995 *) (&sp->qw0020 + 2);
	word64 x20;
	v7->qw0000 = x20;
	Eq_14 x19;
	v7->t0008.u1 = (size_t) x19;
	struct Eq_89006 * v10 = (struct Eq_89006 *) (&sp->qw0020 + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = &sp->qw0020 + 4;
	Eq_14 x8 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9 = *((word32) x8 + 40);
	sp->t0018.u1 = (size_t) x9;
	Eq_14 x0;
	x9 = *x0.u1;
	Eq_14 x10 = *x1.u1;
	Eq_89039 x31 = x9 - x10;
	Eq_89041 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	ui32 w0;
	if (Test(EQ,Z))
	{
		Eq_14 v21 = *x9.u1;
		word32 w9 = (word32) v21;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(NE,Z))
		{
			NZCV.u0 = cond(w9 - 0x01);
			if (Test(EQ,Z))
			{
				x9 = *((word32) x0 + 8);
				x10 = *((word32) x1 + 8);
			}
			else
			{
				x9 = *((word32) x0 + 24);
				x10 = *((word32) x1 + 24);
			}
		}
		else
		{
			x9 = *((word32) x0 + 16);
			x10 = *((word32) x1 + 16);
		}
		x31 = x9 - x10;
		NZCV.u0 = cond(x31);
		x8 = *((word32) x8 + 40);
		x9.u1 = sp->t0018.u1;
		w0 = (word32) Test(EQ,Z);
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			struct Eq_89177 * v32 = (struct Eq_89177 *) (&sp->qw0020 + 4);
			x29 = v32->ptr0000;
			x30 = v32->qw0008;
			struct Eq_89186 * v33 = (struct Eq_89186 *) (&sp->qw0020 + 2);
			x20 = v33->qw0000;
			x19.u1 = v33->t0008.u1;
			x21 = sp->qw0020;
			sp = &sp->qw0020 + 6;
			return;
		}
	}
	else
	{
		w0 = 0x00 | 0x20;
		__cxa_allocate_exception();
		x19 = x0;
		struct Eq_88986 * v23 = sp;
		v23->t0000.u1 = 0x00;
		v23->qw0008 = 0x00;
		sp->t0010.u1 = (size_t) 0x00;
		w0 = 0x00 | 0x40;
		_Znwm();
		x9.u0 = 0x00053000;
		x8.u0 = 0x00050000;
		x9.u1 = (word32) x9 + 649;
		Eq_89052 q0 = *((word32) x8 + 736);
		Eq_14 v27 = x9;
		Eq_14 q1 = *v27.u1;
		Eq_14 q2 = *((word32) v27 + 16);
		word128 q3 = (word128) *((word32) x9 + 32);
		ui32 w21 = 0x00 | 0x01;
		sp->t0010.u1 = (size_t) x0;
		((word32) x0 + 48)->u0 = 0x00;
		sp->t0000.u0 = (word128) q0;
		struct Eq_89103 * v30 = (struct Eq_89103 *) ((word32) x0 + 16);
		v30->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q2;
		v30->ow0010 = q3;
		*x0.u1 = q1;
		w0 = 212;
		x1.u1 = &sp->t0000.u0;
		x8 = x19;
		fn000000000001BE30();
		x1.u0 = 0x00070000;
		Eq_14 x2;
		x2.u0 = 0x00070000;
		x1 = *((word32) x1 + 3312);
		x2 = *((word32) x2 + 0x0DD0);
		x0 = x19;
		w21 = 0x00;
		__cxa_throw();
	}
	__stack_chk_fail();
}

// 0000000000044C10: define _ZN8nlohmann6detail16invalid_iterator6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
define _ZN8nlohmann6detail16invalid_iterator6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
{
	Eq_14 w0;
	struct Eq_89199 * fp;
	struct Eq_89199 * sp = fp;
	sp -= 0x80;
	struct Eq_89204 * v6 = (struct Eq_89204 *) ((char *) &sp->t0040 + 16);
	struct Eq_89206 * x22;
	v6->ptr0000 = x22;
	byte * x21;
	v6->ptr0008 = x21;
	struct Eq_89215 * v9 = (struct Eq_89215 *) ((char *) &sp->t0040 + 32);
	word64 x20;
	v9->qw0000 = x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_89226 * v12 = (struct Eq_89226 *) ((char *) &sp->t0040 + 48);
	struct Eq_89228 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_89228 *) ((char *) &sp->t0040 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u0 = 0x00053000;
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x22->t0028.u1;
	x9.u1 = (word32) x9 + 698;
	Eq_89251 q0 = *x9.u1;
	byte * x1;
	x21 = x1;
	Eq_14 w20 = w0;
	x29->tFFFFFFD8.u1 = (size_t) x8;
	ui32 w8 = 0x00 | 0x20;
	struct Eq_89199 * v21 = sp;
	v21->t0000.u1 = 0x00;
	v21->qw0008 = 0x00;
	sp->t0010.u1 = (size_t) 0x00;
	sp->t0000.u0 = (byte) (byte) w8;
	sp->t0001.u1 = (word128) q0;
	sp->b0011 = 0x00;
	x8.u1 = &sp->b0018;
	Eq_14 x0;
	x0.u1 = &sp->t0000.u0;
	Eq_14 w1 = w20;
	fn000000000001B540();
	byte v24 = *x21;
	w8 = (word32) v24;
	struct Eq_89300 * v26 = (struct Eq_89300 *) (x21 + 8);
	word128 * x10 = v26->ptr0000;
	x9.u1 = v26->t0008.u1;
	ui32 w31 = w8 & 0x01;
	Eq_89312 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	Eq_14 x11 = x8 >> 1;
	bool Z;
	x1 = Test(NE,Z) ? x9 : x21 + 1;
	word64 x2 = Test(EQ,Z) ? x11 : x10;
	x0.u1 = &sp->b0018;
	fn000000000001B1B0();
	x8 = *((word32) x0 + 16);
	q0 = *x0.u1;
	sp->t0040.u1 = (size_t) x8;
	sp->t0030.u1 = (word128) q0;
	struct Eq_89345 * v34 = (struct Eq_89345 *) ((word32) x0 + 8);
	v34->qw0000 = 0x00;
	v34->qw0008 = 0x00;
	x0.u1->u1 = 0x00;
	byte v35 = sp->b0018;
	w8 = (word32) v35;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0028.u1;
		((real64) q0, x0, x1);
	}
	Eq_89264 v36;
	v36.u0 = sp->t0000.u0;
	w8 = (word32) v36;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0010.u1;
		((real64) q0, x0, x1);
	}
	Eq_89251 v37;
	v37.u0 = sp->t0030.u0;
	w8 = (word32) v37;
	x11.u0 = 0x00070000;
	x9.u1 = sp->t0040.u1;
	x11 = *((word32) x11 + 0x0F38);
	x10 = (word128 *) &sp->t0030.u0;
	x10 |= 0x01;
	w31 = w8 & 0x01;
	NZ.u0 = cond(w31);
	C = false;
	V = false;
	x11.u1 = (word32) x11 + 16;
	x1 = Test(EQ,Z) ? x10 : x9;
	x0.u1 = (word32) x19 + 16;
	*((word32) x19 + 8) = w20;
	*x19.u1 = x11;
	_ZNSt13runtime_errorC1EPKc();
	x9.u0 = 0x00070000;
	Eq_89251 v38;
	v38.u0 = sp->t0030.u0;
	w8 = (word32) v38;
	x9 = *((word32) x9 + 3448);
	x9.u1 = (word32) x9 + 16;
	*x19.u1 = x9;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0040.u1;
		((real64) q0, x0, x1);
	}
	x8.u1 = x22->t0028.u1;
	x9.u1 = x29->tFFFFFFD8.u1;
	word64 x31 = x8 - x9;
	Eq_89456 NZCV;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_89473 * v41 = (struct Eq_89473 *) ((char *) &sp->t0040 + 48);
		x29 = v41->ptr0000;
		x30 = v41->qw0008;
		struct Eq_89482 * v42 = (struct Eq_89482 *) ((char *) &sp->t0040 + 32);
		x20 = v42->qw0000;
		x19.u1 = v42->t0008.u1;
		struct Eq_89491 * v43 = (struct Eq_89491 *) ((char *) &sp->t0040 + 16);
		x22 = v43->ptr0000;
		x21 = v43->ptr0008;
		sp = (struct Eq_89199 *) ((char *) &sp->t0040 + 64);
	}
}

// 0000000000044D9C: void invalid_iterator::~invalid_iterator()
void invalid_iterator::~invalid_iterator()
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_89510 * v7 = (struct Eq_89510 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	_ZNSt13runtime_errorD1Ev();
	x0 = x19;
	_ZNSt9exceptionD2Ev();
	struct Eq_89539 * v10 = (struct Eq_89539 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000044DD8: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE
{
	struct Eq_89565 * x1;
	struct Eq_89561 * fp;
	struct Eq_89561 * sp = fp;
	sp = (struct Eq_89561 *) ((char *) sp - 32);
	struct Eq_89565 * x20;
	sp->ptr0000 = x20;
	struct Eq_89565 * x19;
	sp->ptr0008 = x19;
	struct Eq_89574 * v8 = (struct Eq_89574 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	struct Eq_89565 * x8;
	x19 = x1;
	struct Eq_89565 * x9;
	int64 x31;
	Eq_89604 NZCV;
	bool Z;
	for (x8 = x1->ptr0008; x8 != null; x8 = x8->ptr0000)
		x20 = x8;
	struct Eq_89565 * x0;
	x8 = x0->ptr0000;
	x31 = x8 - x19;
	NZCV.u0 = cond(x31);
	if (Test(EQ,Z))
		x0->ptr0000 = x20;
	struct Eq_89636 * v17 = (struct Eq_89636 *) &x0->ptr0008;
	x8 = v17->ptr0000;
	x9 = v17->ptr0008;
	x1 = x19;
	--x9;
	x0->ptr0010 = x9;
	x0 = x8;
	fn000000000001B600();
	byte v19 = x19->b0038;
	word32 w1 = (word32) v19;
	x0 = &x19->b0038 + 8;
	fn000000000001C590();
	byte v21 = x19->b0020;
	ui32 w8 = (word32) v21;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0 = x19->ptr0030;
		((real64) q0, x0, x1);
	}
	x0 = x19;
	((real64) q0, x0, x1);
	struct Eq_89682 * v23 = (struct Eq_89682 *) ((char *) &sp->ptr0008 + 8);
	x29 = v23->ptr0000;
	x30 = v23->qw0008;
	x0 = x20;
	struct Eq_89561 * v24 = sp;
	x20 = v24->ptr0000;
	x19 = v24->ptr0008;
	sp = (struct Eq_89561 *) ((char *) &sp->ptr0008 + 24);
}

// 0000000000044E88: define _ZNSt6__ndk113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_
define _ZNSt6__ndk113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_
{
	Eq_89711 x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_89711 x9 = *x1.u2;
	Eq_89711 x8;
	Eq_89711 x10;
	uint32 w11;
	Eq_89711 x12;
	if (x9 != 0x00)
	{
		x8.u1 = x1.u3->t0008.u1;
		if (x8 != 0x00)
		{
			do
			{
				x10 = x8;
				x8 = *x8.u2;
			} while (x8 != 0x00);
			x9.u1 = x10.u3->t0008.u1;
			if (x9 == 0x00)
			{
l0000000000044EBC:
				w11 = 0x00;
				x12.u1 = &x10.u3->t0010.u0;
l0000000000044EDC:
				Eq_89711 x13;
				x13.u1 = x10.u3->t0010.u1;
				x8 = *x13.u2;
				Eq_89763 x31 = x8 - x10;
				Eq_89765 NZCV;
				NZCV.u0 = cond(x31);
				bool Z;
				Eq_89711 x0;
				if (Test(NE,Z))
					x13.u3->t0008.u1 = (byte *) x9;
				else
				{
					x31 = x10 - x0;
					NZCV.u0 = cond(x31);
					*x13.u2 = x9;
					if (Test(NE,Z))
						x8.u1 = x13.u3->t0008.u1;
					else
					{
						x8.u0 = 0x00;
						x0 = x9;
					}
				}
				byte v15 = x10.u3->b0018;
				word32 w13 = (word32) v15;
				x31 = x10 - x1;
				NZCV.u0 = cond(x31);
				Eq_89711 x14;
				ui32 w15;
				word64 x15;
				ui32 w12;
				if (Test(NE,Z))
				{
					x14.u1 = x1.u3->t0010.u1;
					w15 = 0x00 | 0x08;
					*x12.u2 = x14;
					x12.u1 = x1.u3->t0010.u1;
					x12 = *x12.u2;
					x31 = x12 - x1;
					NZCV.u0 = cond(x31);
					x12.u1 = Test(EQ,Z) ? 0x00 : x15;
					*(x14 + x12) = (word64) x10;
					x12 = *x1.u2;
					*x10.u2 = x12;
					x12.u3->t0010.u1 = (byte *) x10;
					x12.u1 = x1.u3->t0008.u1;
					x10.u3->t0008.u1 = (byte *) x12;
					if (x12 != 0x00)
						x12.u3->t0010.u1 = (byte *) x10;
					byte v22 = x1.u3->b0018;
					w12 = (word32) v22;
					x31 = x0 - x1;
					NZCV.u0 = cond(x31);
					x0.u1 = Test(EQ,Z) ? x10 : x0;
					x10.u3->b0018 = (byte) w12;
				}
				if (w13 == 0x00 || x0 == 0x00)
					return;
				ui32 w8;
				if ((w11 & 0x01) != 0x00)
				{
					w8 = 0x00 | 0x01;
					x9.u3->b0018 = (byte) w8;
					return;
				}
				ui32 w9 = 0x00 | 0x01;
				ui32 w10 = 0x00 | 0x08;
l0000000000044FA0:
				Eq_89711 x11;
				x11.u1 = x8.u3->t0010.u1;
				byte v26 = x8.u3->b0018;
				w12 = (word32) v26;
				x13 = *x11.u2;
				x31 = x13 - x8;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					if (w12 != 0x00)
					{
						x12 = *x8.u2;
						if (x12 == 0x00)
							goto l0000000000044FC8;
					}
					else
					{
						x8.u3->b0018 = (byte) w9;
						x12.u1 = x11.u3->t0008.u1;
						x11.u3->b0018 = 0x00;
						x13 = *x12.u2;
						x11.u3->t0008.u1 = (byte *) x13;
						if (x13 != 0x00)
							x13.u3->t0010.u1 = (byte *) x11;
						x13.u1 = x11.u3->t0010.u1;
						x12.u3->t0010.u1 = (byte *) x13;
						x13.u1 = x11.u3->t0010.u1;
						x14 = *x13.u2;
						x31 = x14 - x11;
						NZCV.u0 = cond(x31);
						x14.u1 = Test(EQ,Z) ? 0x00 : x10;
						*(x13 + x14) = (word64) x12;
						*x12.u2 = x11;
						x11.u3->t0010.u1 = (byte *) x12;
						x11 = *x8.u2;
						x31 = x0 - x11;
						NZCV.u0 = cond(x31);
						x0.u1 = Test(EQ,Z) ? x8 : x0;
						x8.u1 = x11.u3->t0008.u1;
						x12 = *x8.u2;
						if (x12 == 0x00)
						{
l0000000000044FC8:
							x11.u1 = x8.u3->t0008.u1;
							if (x11 == 0x00)
							{
l0000000000044FD8:
								x11.u1 = x8.u3->t0010.u1;
								x8.u3->b0018 = 0x00;
								x31 = x11 - x0;
								NZCV.u0 = cond(x31);
								if (Test(EQ,Z))
								{
									x11 = x0;
									goto l00000000000450EC;
								}
								goto l0000000000045020;
							}
							byte v28 = x11.u3->b0018;
							w13 = (word32) v28;
							if (w13 != 0x00)
								goto l0000000000044FD8;
l0000000000045100:
							x11.u1 = &x11.u3->b0018;
							byte v30 = *x11.u1;
							w9 = (word32) v30;
							if (w9 == 0x00)
							{
								x10.u1 = &x8.u3->t0010.u0;
								x9.u1 = &x8.u3->b0018;
								goto l000000000004522C;
							}
l0000000000045108:
							w10 = 0x00 | 0x01;
							x9 = x12;
							x11 = x8;
							x9.u1 = &x9.u3->b0018;
							*x9.u1 = (byte) w10;
							x11.u1 = &x11.u3->b0018;
							Mem0[x11 + 0x00:byte] = 0x00;
							x10.u1 = x9.u3->tFFFFFFF0.u1;
							*x8.u2 = x10;
							if (x10 != 0x00)
								x10.u3->t0010.u1 = (byte *) x8;
							x13.u1 = x8.u3->t0010.u1;
							x10 = x12;
							w15 = 0x00 | 0x08;
							x10.u1 = &x10.u3->t0010.u0;
							*x10.u2 = x13;
							x13.u1 = x8.u3->t0010.u1;
							x14 = *x13.u2;
							x31 = x14 - x8;
							NZCV.u0 = cond(x31);
							x14.u1 = Test(EQ,Z) ? 0x00 : x15;
							*(x13 + x14) = (word64) x12;
							x12.u3->t0008.u1 = (byte *) x8;
							x8.u3->t0010.u1 = (byte *) x12;
l000000000004522C:
							x8 = *x10.u2;
							w12 = 0x00 | 0x01;
							byte v31 = x8.u3->b0018;
							w10 = (word32) v31;
							*x9.u1 = (byte) w10;
							x8.u3->b0018 = (byte) w12;
							*x11.u1 = (byte) (byte) w12;
							x9.u1 = x8.u3->t0008.u1;
							x10 = *x9.u2;
							x8.u3->t0008.u1 = (byte *) x10;
							if (x10 != 0x00)
								x10.u3->t0010.u1 = (byte *) x8;
							x10.u1 = x8.u3->t0010.u1;
							w12 = 0x00 | 0x08;
							x9.u3->t0010.u1 = (byte *) x10;
							x10.u1 = x8.u3->t0010.u1;
							x11 = *x10.u2;
							x31 = x11 - x8;
							NZCV.u0 = cond(x31);
							x11.u1 = Test(EQ,Z) ? 0x00 : x12;
							*(x10 + x11) = (word64) x9;
							*x9.u2 = x8;
							x8.u3->t0010.u1 = (byte *) x9;
							return;
						}
					}
					byte v27 = x12.u3->b0018;
					w11 = (word32) v27;
					if (w11 == 0x00)
					{
						x11.u1 = x8.u3->t0008.u1;
						if (x11 == 0x00)
							goto l0000000000045108;
						goto l0000000000045100;
					}
					goto l0000000000044FC8;
				}
				if (w12 != 0x00)
				{
					x11 = *x8.u2;
					if (x11 == 0x00)
						goto l0000000000045000;
				}
				else
				{
					x8.u3->b0018 = (byte) w9;
					x11.u3->b0018 = 0x00;
					x12.u1 = x8.u3->t0008.u1;
					*x11.u2 = x12;
					if (x12 != 0x00)
						x12.u3->t0010.u1 = (byte *) x11;
					x13.u1 = x11.u3->t0010.u1;
					x8.u3->t0010.u1 = (byte *) x13;
					x13.u1 = x11.u3->t0010.u1;
					x14 = *x13.u2;
					x31 = x14 - x11;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
						x13.u3->t0008.u1 = (byte *) x8;
					else
					{
						*x13.u2 = x8;
						x12 = *x11.u2;
					}
					x31 = x0 - x11;
					NZCV.u0 = cond(x31);
					x8.u3->t0008.u1 = (byte *) x11;
					x11.u3->t0010.u1 = (byte *) x8;
					x0.u1 = Test(EQ,Z) ? x8 : x0;
					x8 = x12;
					x11 = *x8.u2;
					if (x11 == 0x00)
					{
l0000000000045000:
						x12.u1 = x8.u3->t0008.u1;
						if (x12 == 0x00)
						{
l0000000000045010:
							x11.u1 = x8.u3->t0010.u1;
							x8.u3->b0018 = 0x00;
							x31 = x11 - x0;
							NZCV.u0 = cond(x31);
							if (Test(EQ,Z))
							{
l00000000000450EC:
								w8 = 0x00 | 0x01;
								x11.u3->b0018 = (byte) w8;
								return;
							}
l0000000000045020:
							byte v29 = x11.u3->b0018;
							w8 = (word32) v29;
							if (w8 == 0x00)
								goto l00000000000450EC;
							x8.u1 = x11.u3->t0010.u1;
							x12 = *x8.u2;
							x31 = x12 - x11;
							NZCV.u0 = cond(x31);
							w11 = (word32) Test(EQ,Z);
							x8 = *((char *) x8.u2 + (uint64) w11);
							goto l0000000000044FA0;
						}
						byte v33 = x12.u3->b0018;
						w13 = (word32) v33;
						if (w13 != 0x00)
							goto l0000000000045010;
						if (x11 == 0x00)
						{
l000000000004517C:
							w10 = 0x00 | 0x01;
							x9 = x12;
							x11 = x8;
							x9.u1 = x9 + 24;
							*x9.u1 = (byte) w10;
							x11.u1 = &x11.u3->b0018;
							*x11.u1 = 0x00;
							x10 = *x12.u2;
							x11.u3->tFFFFFFF0.u1 = (byte *) x10;
							if (x10 != 0x00)
								x10.u3->t0010.u1 = (byte *) x8;
							x13.u1 = x8.u3->t0010.u1;
							x10 = x12;
							w15 = 0x00 | 0x08;
							x10.u1 = &x10.u3->t0010.u0;
							*x10.u2 = x13;
							x13.u1 = x8.u3->t0010.u1;
							x14 = *x13.u2;
							x31 = x14 - x8;
							NZCV.u0 = cond(x31);
							x14.u1 = Test(EQ,Z) ? 0x00 : x15;
							*(x13 + x14) = (word64) x12;
							*x12.u2 = x8;
							x8.u3->t0010.u1 = (byte *) x12;
l00000000000451CC:
							x8 = *x10.u2;
							w12 = 0x00 | 0x01;
							byte v35 = x8.u3->b0018;
							w10 = (word32) v35;
							*x9.u1 = (byte) w10;
							x8.u3->b0018 = (byte) w12;
							*x11.u1 = (byte) w12;
							x9 = *x8.u2;
							x10.u1 = x9.u3->t0008.u1;
							*x8.u2 = x10;
							if (x10 != 0x00)
								x10.u3->t0010.u1 = (byte *) x8;
							x10.u1 = x8.u3->t0010.u1;
							w12 = 0x00 | 0x08;
							x9.u3->t0010.u1 = (byte *) x10;
							x10.u1 = x8.u3->t0010.u1;
							x11 = *x10.u2;
							x31 = x11 - x8;
							NZCV.u0 = cond(x31);
							x11.u1 = Test(EQ,Z) ? 0x00 : x12;
							*(x10 + x11) = (word64) x9;
							x9.u3->t0008.u1 = (byte *) x8;
							x8.u3->t0010.u1 = (byte *) x9;
							return;
						}
						x11.u1 = &x11.u3->b0018;
						byte v34 = *x11.u1;
						w9 = (word32) v34;
						if (w9 != 0x00)
						{
							x12.u1 = x8.u3->t0008.u1;
							goto l000000000004517C;
						}
l0000000000045160:
						x10.u1 = &x8.u3->t0010.u0;
						x9.u1 = &x8.u3->b0018;
						goto l00000000000451CC;
					}
				}
				byte v32 = x11.u3->b0018;
				w12 = (word32) v32;
				if (w12 == 0x00)
				{
					x11.u1 = &x11.u3->b0018;
					goto l0000000000045160;
				}
				goto l0000000000045000;
			}
		}
		else
			x10 = x1;
	}
	else
	{
		x10 = x1;
		x9.u1 = x10.u3->t0008.u1;
		if (x9 == 0x00)
			goto l0000000000044EBC;
	}
	x12 = x10;
	x12.u1 = &x12.u3->t0010.u0;
	x8 = *x12.u2;
	w11 = 0x00 | 0x01;
	x9.u3->t0010.u1 = (byte *) x8;
	goto l0000000000044EDC;
}

// 0000000000045284: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISX_EEEEEEDpOT_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISX_EEEEEEDpOT_
{
	struct Eq_90389 * fp;
	struct Eq_90389 * sp = fp;
	sp = (struct Eq_90389 *) ((char *) sp - 64);
	Eq_14 x24;
	sp->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	sp->t0008.u1 = (size_t) x23;
	struct Eq_90402 * v8 = (struct Eq_90402 *) ((char *) &sp->t0008 + 8);
	Eq_14 x22;
	v8->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v8->t0008.u1 = (size_t) x21;
	struct Eq_90413 * v11 = (struct Eq_90413 *) ((char *) &sp->t0008 + 24);
	Eq_14 x20;
	v11->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v11->t0008.u1 = (size_t) x19;
	struct Eq_90424 * v14 = (struct Eq_90424 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_14 x0;
	x22.u1 = (word32) x0 + 8;
	word32 w0 = 0x48;
	Eq_14 x2;
	x21 = x2;
	Eq_14 x8;
	x19 = x8;
	_Znwm();
	Eq_14 v19 = x19;
	*v19.u1 = x0;
	*((word32) v19 + 8) = x22;
	((word32) x19 + 16)->u0 = 0x00;
	x8 = *x21.u1;
	x20 = x0;
	x0.u1 = (word32) x0 + 32;
	x0.u1->u0 = 0x00;
	struct Eq_90466 * v20 = (struct Eq_90466 *) ((word32) x20 + 40);
	v20->qw0000 = 0x00;
	v20->qw0008 = 0x00;
	Eq_14 v22 = *x8.u1;
	ui32 w9 = (word32) v22;
	Eq_14 q0;
	if ((w9 & 0x01) != 0x00)
	{
		Eq_14 x9 = *((word32) x8 + 16);
		q0 = *x8.u1;
		*((word32) x0 + 16) = x9;
		*x0.u1 = q0;
		goto l0000000000045340;
	}
	x21 = *((word32) x8 + 8);
	sp = (struct Eq_90389 *) ((word32) x21 + 16);
	Eq_90491 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	Eq_14 x1;
	if (Test(UGE,C))
	{
		fn000000000001B2D0();
		x21 = x0;
		x0 = x20;
		x19.u1->u1 = 0x00;
		((real64) q0, x0, x1);
		x0 = x21;
		_Unwind_Resume();
		out_of_range::~out_of_range();
		return;
	}
	x22 = *((word32) x8 + 16);
	NZCV.u0 = cond(x21 - 0x17);
	ui32 w8;
	if (Test(ULT,C))
	{
		ui32 w21;
		w8 = w21 << 1;
		x23.u1 = (word32) x20 + 33;
		*((word32) x20 + 32) = (byte) w8;
		if (x21 == 0x00)
			goto l000000000004533C;
	}
	else
	{
		x8.u1 = (word32) x21 + 16;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		struct Eq_90592 * v34 = (struct Eq_90592 *) ((word32) x20 + 40);
		v34->t0000.u1 = (size_t) x21;
		v34->t0008.u1 = (size_t) x0;
		*((word32) x20 + 32) = x8;
	}
	x0 = x23;
	x1 = x22;
	x2 = x21;
	x0 = memcpy(x0, x1, x2);
l000000000004533C:
	*(x23 + x21) = (word64) 0x00;
l0000000000045340:
	w8 = 0x00 | 0x01;
	((word32) x20 + 56)->u0 = 0x00;
	((word32) x20 + 64)->u1 = 0x00;
	*((word32) x19 + 16) = (byte) w8;
	struct Eq_90526 * v29 = (struct Eq_90526 *) ((char *) &sp->t0008 + 40);
	x29 = v29->ptr0000;
	x30 = v29->qw0008;
	struct Eq_90535 * v30 = (struct Eq_90535 *) ((char *) &sp->t0008 + 24);
	x20.u1 = v30->t0000.u1;
	x19.u1 = v30->t0008.u1;
	struct Eq_90544 * v31 = (struct Eq_90544 *) ((char *) &sp->t0008 + 8);
	x22.u1 = v31->t0000.u1;
	x21.u1 = v31->t0008.u1;
	struct Eq_90389 * v32 = sp;
	x24.u1 = v32->t0000.u1;
	x23.u1 = v32->t0008.u1;
	sp = (struct Eq_90389 *) ((char *) &sp->t0008 + 56);
}

// 0000000000045380: void out_of_range::~out_of_range()
// Called from:
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISX_EEEEEEDpOT_
void out_of_range::~out_of_range()
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_90635 * v7 = (struct Eq_90635 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	_ZNSt13runtime_errorD1Ev();
	x0 = x19;
	_ZNSt9exceptionD2Ev();
	struct Eq_90664 * v10 = (struct Eq_90664 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 00000000000453BC: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEENS3_4pairIbPSD_EEOT_b
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEENS3_4pairIbPSD_EEOT_b
{
	Eq_90697 x0;
	struct Eq_90686 * fp;
	struct Eq_90686 * sp = fp;
	sp -= 0x70;
	struct Eq_90691 * v6 = (struct Eq_90691 *) (&sp->b0030 + 16);
	struct Eq_90693 * x22;
	v6->ptr0000 = x22;
	Eq_90697 x21;
	v6->t0008.u1 = (struct Eq_108898 *) x21;
	struct Eq_90702 * v9 = (struct Eq_90702 *) (&sp->b0030 + 32);
	Eq_90697 x20;
	v9->t0000.u1 = (struct Eq_108898 *) x20;
	Eq_90697 x19;
	v9->t0008.u1 = (struct Eq_108898 *) x19;
	struct Eq_90713 * v12 = (struct Eq_90713 *) (&sp->b0030 + 48);
	struct Eq_90715 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_90715 *) (&sp->b0030 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_90697 x8;
	x8.u1 = x22->t0028.u1;
	x29->tFFFFFFD8.u1 = (struct Eq_108898 *) x8;
	struct Eq_90738 * v17 = (struct Eq_90738 *) ((word32) x0 + 32);
	Eq_90697 x9;
	x9.u1 = v17->t0000.u1;
	x8.u1 = v17->t0008.u1;
	--x8;
	Eq_90697 x10 = x8 >> 3;
	x10 &= 0x1FFFFFFFFFFFFFF8;
	x9.u1 = *(x9 + x10);
	ui32 w10 = 0x00 | 0x01;
	x8 = x10 << x8;
	Eq_90762 NZ;
	NZ.u0 = cond(x8 & x9);
	bool C = false;
	bool V = false;
	bool Z;
	if (Test(EQ,Z))
	{
		x20.u0 = 0x00;
		x21.u0 = 0x00;
		goto l00000000000455C8;
	}
	Eq_90697 x1;
	x9 = x1.u2->u1;
	x8.u1 = &sp->b0020;
	x20 = x0;
	x19.u1 = x8 + 0x08;
	ui32 w8 = 0x00 | 0x07;
	sp->b0020 = (byte) w8;
	sp->t0028.u1 = (struct Eq_108898 *) x9;
	ui32 w2;
	word32 w1;
	if ((w2 & 0x01) != 0x00)
		x21.u1 = (word32) x20 + 16;
	else
	{
		x21 = x20;
		x21.u1 = (word32) x21 + 16;
		x8 = x21.u2->u1;
		w10 = 0x05;
		x9.u1 = x21.u1->tFFFFFFF8.u1;
		sp->b0030 = (byte) w10;
		x8 -= x9;
		x8 >>= 3;
		x29->dwFFFFFFD4 = w8;
		x0.u1 = x21.u1->t0070.u1;
		if (x0 == 0x00)
		{
			fn0000000000043A24();
			byte v43 = sp->b0020;
			w1 = (word32) v43;
			x20 = x0;
			x0 = x19;
			fn000000000001C590();
			x0 = x20;
			_Unwind_Resume();
			_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEENS3_4pairIbPSD_EEOT_b();
			return;
		}
		x8 = x0.u2->u1;
		x8.u1 = x8.u1->t0030.u1;
		x1 = x29 - 44;
		byte * x2 = &sp->b0030;
		byte * x3 = &sp->b0020;
		x8();
		ui32 w0;
		if ((w0 & 0x01) == 0x00)
			goto l0000000000045590;
	}
	struct Eq_90823 * v27 = (struct Eq_90823 *) &x20.u1->t0008.u0;
	x9.u1 = v27->t0000.u1;
	x8.u1 = v27->t0008.u1;
	Eq_90831 x31 = x9 - x8;
	Eq_90833 NZCV;
	NZCV.u0 = cond(x31);
	byte * x11;
	if (Test(EQ,Z))
	{
		byte v48 = sp->b0020;
		w8 = (word32) v48;
		x9.u1 = sp->t0028.u1;
		sp->b0020 = 0x00;
		sp->t0028.u1 = (struct Eq_108898 *) 0x00;
		sp->b0010 = (byte) w8;
		sp->t0018.u1 = (struct Eq_108898 *) x9;
		x9 = x20.u2->u1;
		x11 = &sp->b0010;
		x0.u1 = x11 + 8;
		Eq_90697 v49;
		v49.u0 = x9.u2->u0;
		w1 = (word32) v49;
		x9.u2->u0 = (byte) (byte) w8;
		x8.u1 = sp->t0018.u1;
		sp->b0010 = (byte) w1;
		x10.u1 = x9.u1->t0008.u1;
		x9.u1->t0008.u1 = (struct Eq_108898 *) x8;
		sp->t0018.u1 = (struct Eq_108898 *) x10;
		fn000000000001C590();
		x21 = x20.u2->u1;
		goto l00000000000455B8;
	}
	x8.u1 = x8.u1->tFFFFFFF8.u1;
	if (x8 != 0x00)
	{
		Eq_90697 v31;
		v31.u0 = x8.u2->u0;
		word32 w9 = (word32) v31;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_90956 * v32 = (struct Eq_90956 *) &x0.u1->t0008.u0;
			x8.u1 = v32->t0000.u1;
			x9.u1 = v32->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
				byte v33 = sp->b0020;
				w9 = (word32) v33;
				x8.u2->u0 = (byte) (byte) w9;
				x9.u1 = sp->t0028.u1;
				x8.u1->t0008.u1 = (struct Eq_108898 *) x9;
				sp->b0020 = 0x00;
				sp->t0028.u1 = (struct Eq_108898 *) 0x00;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = x8 + 0x10;
				x0.u1->t0008.u1 = (struct Eq_108898 *) x8;
			}
			else
			{
				x1.u1 = &sp->b0020;
				fn000000000001C490();
			}
			x8 = x21.u2->u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x21 = x8 - 0x10;
l00000000000455B8:
			ui32 w20 = 0x00 | 0x01;
l00000000000455BC:
			byte v42 = sp->b0020;
			w1 = (word32) v42;
			x0 = x19;
			fn000000000001C590();
l00000000000455C8:
			x8.u1 = x22->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				x0 = x20;
				x1 = x21;
				struct Eq_91019 * v34 = (struct Eq_91019 *) (&sp->b0030 + 48);
				x29 = v34->ptr0000;
				x30 = v34->qw0008;
				struct Eq_91028 * v35 = (struct Eq_91028 *) (&sp->b0030 + 32);
				x20.u1 = v35->t0000.u1;
				x19.u1 = v35->t0008.u1;
				struct Eq_91037 * v36 = (struct Eq_91037 *) (&sp->b0030 + 16);
				x22 = v36->ptr0000;
				x21.u1 = v36->t0008.u1;
				sp = &sp->b0030 + 64;
				return;
			}
		}
		struct Eq_90924 * v44 = (struct Eq_90924 *) ((word32) x20 + 56);
		x9.u1 = v44->t0000.u1;
		x8.u1 = v44->t0008.u1;
		--x8;
		x10 = x8 >> 3;
		x10 &= 0x1FFFFFFFFFFFFFF8;
		x9.u1 = *(x9 + x10);
		w10 = 0x00 | 0x01;
		x10 <<= x8;
		x20.u1->t0040.u1 = (struct Eq_108898 *) x8;
		NZ.u0 = cond(x10 & x9);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			byte v45 = sp->b0020;
			w8 = (word32) v45;
			x9.u1 = sp->t0028.u1;
			sp->b0020 = 0x00;
			sp->t0028.u1 = (struct Eq_108898 *) 0x00;
			sp->b0000 = (byte) w8;
			sp->t0008.u1 = (struct Eq_108898 *) x9;
			x9.u1 = x20.u1->t0050.u1;
			x11 = &sp->b0000;
			x0.u1 = x11 + 8;
			byte v47 = x9.u2->u0;
			w1 = (word32) v47;
			x9.u2->u0 = (byte) w8;
			x8.u1 = sp->t0008.u1;
			sp->b0000 = (byte) w1;
			x10.u1 = x9.u1->t0008.u1;
			x9.u1->t0008.u1 = (struct Eq_108898 *) x8;
			sp->t0008.u1 = (struct Eq_108898 *) x10;
			fn000000000001C590();
			x21.u1 = x20.u1->t0050.u1;
			goto l00000000000455B8;
		}
	}
l0000000000045590:
	x20.u0 = 0x00;
	x21.u0 = 0x00;
	goto l00000000000455BC;
}

<anonymous> g_t454AC = <code>; // 00000000000454AC
// 0000000000045614: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEENS3_4pairIbPSD_EEOT_b
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEENS3_4pairIbPSD_EEOT_b
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEENS3_4pairIbPSD_EEOT_b
{
	Eq_91157 x1;
	Eq_91157 x0;
	struct Eq_91146 * fp;
	struct Eq_91146 * sp = fp;
	sp -= 0x70;
	struct Eq_91151 * v6 = (struct Eq_91151 *) (&sp->b0030 + 16);
	struct Eq_91153 * x22;
	v6->ptr0000 = x22;
	Eq_91157 x21;
	v6->t0008.u1 = (struct Eq_108902 *) x21;
	struct Eq_91162 * v9 = (struct Eq_91162 *) (&sp->b0030 + 32);
	Eq_91157 x20;
	v9->t0000.u1 = (struct Eq_108902 *) x20;
	Eq_91157 x19;
	v9->t0008.u1 = (struct Eq_108902 *) x19;
	struct Eq_91173 * v12 = (struct Eq_91173 *) (&sp->b0030 + 48);
	struct Eq_91175 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_91175 *) (&sp->b0030 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_91157 x8;
	x8.u1 = x22->t0028.u1;
	x29->tFFFFFFD8.u1 = (struct Eq_108902 *) x8;
	struct Eq_91198 * v17 = (struct Eq_91198 *) ((word32) x0 + 32);
	Eq_91157 x9;
	x9.u1 = v17->t0000.u1;
	x8.u1 = v17->t0008.u1;
	--x8;
	Eq_91157 x10 = x8 >> 3;
	x10 &= 0x1FFFFFFFFFFFFFF8;
	x9.u1 = *(x9 + x10);
	ui32 w10 = 0x00 | 0x01;
	x8 = x10 << x8;
	Eq_91222 NZ;
	NZ.u0 = cond(x8 & x9);
	bool C = false;
	bool V = false;
	bool Z;
	if (Test(EQ,Z))
	{
		x20.u0 = 0x00;
		x21.u0 = 0x00;
		goto l0000000000045820;
	}
	byte v26 = x1.u2->u0;
	word32 w9 = (word32) v26;
	x8.u1 = &sp->b0020;
	x20 = x0;
	x19.u1 = x8 + 0x08;
	ui32 w8 = 0x00 | 0x04;
	sp->b0020 = (byte) w8;
	sp->t0028.u1 = (struct Eq_108902 *) x9;
	ui32 w2;
	word32 w1;
	if ((w2 & 0x01) != 0x00)
		x21.u1 = (word32) x20 + 16;
	else
	{
		x21 = x20;
		x21.u1 = (word32) x21 + 16;
		x8 = x21.u2->u1;
		w10 = 0x05;
		x9.u1 = x21.u1->tFFFFFFF8.u1;
		sp->b0030 = (byte) w10;
		x8 -= x9;
		x8 >>= 3;
		x29->dwFFFFFFD4 = w8;
		x0.u1 = x21.u1->t0070.u1;
		if (x0 == 0x00)
		{
			fn0000000000043A24();
			byte v44 = sp->b0020;
			w1 = (word32) v44;
			x20 = x0;
			x0 = x19;
			fn000000000001C590();
			x0 = x20;
			_Unwind_Resume();
			_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEENS3_4pairIbPSD_EEOT_b();
			return;
		}
		x8 = x0.u2->u1;
		x8.u1 = x8.u1->t0030.u1;
		x1 = x29 - 44;
		byte * x2 = &sp->b0030;
		byte * x3 = &sp->b0020;
		x8();
		ui32 w0;
		if ((w0 & 0x01) == 0x00)
			goto l00000000000457E8;
	}
	struct Eq_91286 * v29 = (struct Eq_91286 *) &x20.u1->t0008.u0;
	x9.u1 = v29->t0000.u1;
	x8.u1 = v29->t0008.u1;
	Eq_91294 x31 = x9 - x8;
	Eq_91296 NZCV;
	NZCV.u0 = cond(x31);
	byte * x11;
	if (Test(EQ,Z))
	{
		byte v49 = sp->b0020;
		w8 = (word32) v49;
		x9.u1 = sp->t0028.u1;
		sp->b0020 = 0x00;
		sp->t0028.u1 = (struct Eq_108902 *) 0x00;
		sp->b0010 = (byte) w8;
		sp->t0018.u1 = (struct Eq_108902 *) x9;
		x9 = x20.u2->u1;
		x11 = &sp->b0010;
		x0.u1 = x11 + 8;
		Eq_91157 v50;
		v50.u0 = x9.u2->u0;
		w1 = (word32) v50;
		x9.u2->u0 = (byte) (byte) w8;
		x8.u1 = sp->t0018.u1;
		sp->b0010 = (byte) w1;
		x10.u1 = x9.u1->t0008.u1;
		x9.u1->t0008.u1 = (struct Eq_108902 *) x8;
		sp->t0018.u1 = (struct Eq_108902 *) x10;
		fn000000000001C590();
		x21 = x20.u2->u1;
		goto l0000000000045810;
	}
	x8.u1 = x8.u1->tFFFFFFF8.u1;
	if (x8 != 0x00)
	{
		Eq_91157 v32;
		v32.u0 = x8.u2->u0;
		w9 = (word32) v32;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_91418 * v33 = (struct Eq_91418 *) &x0.u1->t0008.u0;
			x8.u1 = v33->t0000.u1;
			x9.u1 = v33->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
				byte v34 = sp->b0020;
				w9 = (word32) v34;
				x8.u2->u0 = (byte) (byte) w9;
				x9.u1 = sp->t0028.u1;
				x8.u1->t0008.u1 = (struct Eq_108902 *) x9;
				sp->b0020 = 0x00;
				sp->t0028.u1 = (struct Eq_108902 *) 0x00;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = x8 + 0x10;
				x0.u1->t0008.u1 = (struct Eq_108902 *) x8;
			}
			else
			{
				x1.u1 = &sp->b0020;
				fn000000000001C490();
			}
			x8 = x21.u2->u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x21 = x8 - 0x10;
l0000000000045810:
			ui32 w20 = 0x00 | 0x01;
l0000000000045814:
			byte v43 = sp->b0020;
			w1 = (word32) v43;
			x0 = x19;
			fn000000000001C590();
l0000000000045820:
			x8.u1 = x22->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				x0 = x20;
				x1 = x21;
				struct Eq_91481 * v35 = (struct Eq_91481 *) (&sp->b0030 + 48);
				x29 = v35->ptr0000;
				x30 = v35->qw0008;
				struct Eq_91490 * v36 = (struct Eq_91490 *) (&sp->b0030 + 32);
				x20.u1 = v36->t0000.u1;
				x19.u1 = v36->t0008.u1;
				struct Eq_91499 * v37 = (struct Eq_91499 *) (&sp->b0030 + 16);
				x22 = v37->ptr0000;
				x21.u1 = v37->t0008.u1;
				sp = &sp->b0030 + 64;
				return;
			}
		}
		struct Eq_91386 * v45 = (struct Eq_91386 *) ((word32) x20 + 56);
		x9.u1 = v45->t0000.u1;
		x8.u1 = v45->t0008.u1;
		--x8;
		x10 = x8 >> 3;
		x10 &= 0x1FFFFFFFFFFFFFF8;
		x9.u1 = *(x9 + x10);
		w10 = 0x00 | 0x01;
		x10 <<= x8;
		x20.u1->t0040.u1 = (struct Eq_108902 *) x8;
		NZ.u0 = cond(x10 & x9);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			byte v46 = sp->b0020;
			w8 = (word32) v46;
			x9.u1 = sp->t0028.u1;
			sp->b0020 = 0x00;
			sp->t0028.u1 = (struct Eq_108902 *) 0x00;
			sp->b0000 = (byte) w8;
			sp->t0008.u1 = (struct Eq_108902 *) x9;
			x9.u1 = x20.u1->t0050.u1;
			x11 = &sp->b0000;
			x0.u1 = x11 + 8;
			byte v48 = x9.u2->u0;
			w1 = (word32) v48;
			x9.u2->u0 = (byte) w8;
			x8.u1 = sp->t0008.u1;
			sp->b0000 = (byte) w1;
			x10.u1 = x9.u1->t0008.u1;
			x9.u1->t0008.u1 = (struct Eq_108902 *) x8;
			sp->t0008.u1 = (struct Eq_108902 *) x10;
			fn000000000001C590();
			x21.u1 = x20.u1->t0050.u1;
			goto l0000000000045810;
		}
	}
l00000000000457E8:
	x20.u0 = 0x00;
	x21.u0 = 0x00;
	goto l0000000000045814;
}

// 000000000004586C: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEENS3_4pairIbPSD_EEOT_b
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEENS3_4pairIbPSD_EEOT_b
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEENS3_4pairIbPSD_EEOT_b
{
	Eq_91619 x0;
	struct Eq_91608 * fp;
	struct Eq_91608 * sp = fp;
	sp -= 0x70;
	struct Eq_91612 * x21;
	sp->ptr0040 = x21;
	struct Eq_91617 * v7 = (struct Eq_91617 *) ((char *) &sp->ptr0040 + 16);
	Eq_91619 x20;
	v7->t0000.u1 = (byte *) x20;
	Eq_91619 x19;
	v7->t0008.u1 = (byte *) x19;
	struct Eq_91628 * v10 = (struct Eq_91628 *) ((char *) &sp->ptr0040 + 32);
	struct Eq_91630 * x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (struct Eq_91630 *) ((char *) &sp->ptr0040 + 32);
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_91619 x8;
	x8.u1 = x21->t0028.u1;
	x29->tFFFFFFD8.u1 = (byte *) x8;
	struct Eq_91653 * v15 = (struct Eq_91653 *) ((word32) x0 + 32);
	Eq_91619 x9;
	x9.u1 = v15->t0000.u1;
	x8.u1 = v15->t0008.u1;
	--x8;
	Eq_91619 x10 = x8 >> 3;
	x10 &= 0x1FFFFFFFFFFFFFF8;
	x9.u1 = *(x9 + x10);
	ui32 w10 = 0x00 | 0x01;
	x8 = x10 << x8;
	Eq_91677 NZ;
	NZ.u0 = cond(x8 & x9);
	bool C = false;
	bool V = false;
	bool Z;
	if (Test(EQ,Z))
	{
		x19.u0 = 0x00;
		x20.u0 = 0x00;
		goto l0000000000045A6C;
	}
	x19 = x0;
	sp->b0020 = 0x00;
	sp->t0028.u1 = (byte *) 0x00;
	ui32 w2;
	word32 w8;
	word32 w1;
	Eq_91619 x1;
	if ((w2 & 0x01) != 0x00)
		x20.u1 = (word32) x19 + 16;
	else
	{
		x20 = x19;
		x20.u1 = (word32) x20 + 16;
		x8 = *x20.u2;
		w10 = 0x05;
		x9.u1 = x20.u3->tFFFFFFF8.u1;
		sp->b0030 = (byte) w10;
		x8 -= x9;
		x8 >>= 3;
		x29->dwFFFFFFD4 = w8;
		x0.u1 = x20.u3->t0070.u1;
		if (x0 == 0x00)
		{
			fn0000000000043A24();
			byte v40 = sp->b0020;
			w1 = (word32) v40;
			x8.u1 = &sp->b0020;
			x19 = x0;
			x0.u1 = &x8.u3->t0008.u0;
			fn000000000001C590();
			x0 = x19;
			_Unwind_Resume();
			_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEENS3_4pairIbPSD_EEOT_b();
			return;
		}
		x8 = *x0.u2;
		x8.u1 = x8.u3->t0030.u1;
		x1 = x29 - 44;
		byte * x2 = &sp->b0030;
		byte * x3 = &sp->b0020;
		x8();
		ui32 w0;
		if ((w0 & 0x01) == 0x00)
			goto l0000000000045A30;
	}
	struct Eq_91728 * v23 = (struct Eq_91728 *) &x19.u3->t0008.u0;
	x9.u1 = v23->t0000.u1;
	x8.u1 = v23->t0008.u1;
	Eq_91736 x31 = x9 - x8;
	Eq_91738 NZCV;
	NZCV.u0 = cond(x31);
	byte * x11;
	if (Test(EQ,Z))
	{
		byte v45 = sp->b0020;
		w8 = (word32) v45;
		x9.u1 = sp->t0028.u1;
		sp->b0020 = 0x00;
		sp->t0028.u1 = (byte *) 0x00;
		sp->b0010 = (byte) w8;
		sp->t0018.u1 = (byte *) x9;
		x9 = *x19.u2;
		x11 = &sp->b0010;
		x0.u1 = x11 + 8;
		Eq_91783 v46;
		v46.u0 = *x9.u1;
		w1 = (word32) v46;
		*x9.u1 = (byte) (byte) w8;
		x8.u1 = sp->t0018.u1;
		sp->b0010 = (byte) w1;
		x10.u1 = x9.u3->t0008.u1;
		x9.u3->t0008.u1 = (byte *) x8;
		sp->t0018.u1 = (byte *) x10;
		fn000000000001C590();
		x20 = *x19.u2;
		goto l0000000000045A58;
	}
	x8.u1 = x8.u3->tFFFFFFF8.u1;
	if (x8 != 0x00)
	{
		Eq_91619 v27;
		v27.u0 = *x8.u1;
		word32 w9 = (word32) v27;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u3->t0008.u1;
			struct Eq_91861 * v28 = (struct Eq_91861 *) &x0.u3->t0008.u0;
			x8.u1 = v28->t0000.u1;
			x9.u1 = v28->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
				byte v29 = sp->b0020;
				w9 = (word32) v29;
				*x8.u1 = (byte) (byte) w9;
				x9.u1 = sp->t0028.u1;
				x8.u3->t0008.u1 = (byte *) x9;
				sp->b0020 = 0x00;
				sp->t0028.u1 = (byte *) 0x00;
				x8.u1 = x0.u3->t0008.u1;
				x8.u1 = (word32) x8 + 16;
				x0.u3->t0008.u1 = (byte *) x8;
			}
			else
			{
				x1.u1 = &sp->b0020;
				fn000000000001C490();
			}
			x8 = *x20.u2;
			x8.u1 = x8.u3->tFFFFFFF8.u1;
			x8.u1 = x8.u3->t0008.u1;
			x8.u1 = x8.u3->t0008.u1;
			x20 = x8 - 0x10;
l0000000000045A58:
			ui32 w19 = 0x00 | 0x01;
l0000000000045A5C:
			byte v39 = sp->b0020;
			w1 = (word32) v39;
			x8.u1 = &sp->b0020;
			x0.u1 = &x8.u3->t0008.u0;
			fn000000000001C590();
l0000000000045A6C:
			x8.u1 = x21->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				x0 = x19;
				x1 = x20;
				struct Eq_91925 * v31 = (struct Eq_91925 *) ((char *) &sp->ptr0040 + 32);
				x29 = v31->ptr0000;
				x30 = v31->qw0008;
				struct Eq_91934 * v32 = (struct Eq_91934 *) ((char *) &sp->ptr0040 + 16);
				x20.u1 = v32->t0000.u1;
				x19.u1 = v32->t0008.u1;
				x21 = sp->ptr0040;
				sp = (struct Eq_91608 *) ((char *) &sp->ptr0040 + 48);
				return;
			}
		}
		struct Eq_91829 * v41 = (struct Eq_91829 *) ((word32) x19 + 56);
		x9.u1 = v41->t0000.u1;
		x8.u1 = v41->t0008.u1;
		--x8;
		x10 = x8 >> 3;
		x10 &= 0x1FFFFFFFFFFFFFF8;
		x9.u1 = *(x9 + x10);
		w10 = 0x00 | 0x01;
		x10 <<= x8;
		x19.u3->t0040.u1 = (byte *) x8;
		NZ.u0 = cond(x10 & x9);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			byte v42 = sp->b0020;
			w8 = (word32) v42;
			x9.u1 = sp->t0028.u1;
			sp->b0020 = 0x00;
			sp->t0028.u1 = (byte *) 0x00;
			sp->b0000 = (byte) w8;
			sp->t0008.u1 = (byte *) x9;
			x9.u1 = x19.u3->t0050.u1;
			x11 = &sp->b0000;
			x0.u1 = x11 + 8;
			byte v44[] = (byte[]) *x9.u1;
			w1 = (word32) v44;
			*x9.u1 = (byte) (byte) w8;
			x8.u1 = sp->t0008.u1;
			sp->b0000 = (byte) w1;
			x10.u1 = x9.u3->t0008.u1;
			x9.u3->t0008.u1 = (byte *) x8;
			sp->t0008.u1 = (byte *) x10;
			fn000000000001C590();
			x20.u1 = x19.u3->t0050.u1;
			goto l0000000000045A58;
		}
	}
l0000000000045A30:
	x19.u0 = 0x00;
	x20.u0 = 0x00;
	goto l0000000000045A5C;
}

// 0000000000045ABC: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEENS3_4pairIbPSD_EEOT_b
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEENS3_4pairIbPSD_EEOT_b
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEENS3_4pairIbPSD_EEOT_b
{
	Eq_92065 x0;
	struct Eq_92054 * fp;
	struct Eq_92054 * sp = fp;
	sp -= 0x70;
	struct Eq_92059 * v6 = (struct Eq_92059 *) (&sp->b0030 + 16);
	struct Eq_92061 * x22;
	v6->ptr0000 = x22;
	Eq_92065 x21;
	v6->t0008.u1 = (struct Eq_108909 *) x21;
	struct Eq_92070 * v9 = (struct Eq_92070 *) (&sp->b0030 + 32);
	Eq_92065 x20;
	v9->t0000.u1 = (struct Eq_108909 *) x20;
	Eq_92065 x19;
	v9->t0008.u1 = (struct Eq_108909 *) x19;
	struct Eq_92081 * v12 = (struct Eq_92081 *) (&sp->b0030 + 48);
	struct Eq_92083 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_92083 *) (&sp->b0030 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_92065 x8;
	x8.u1 = x22->t0028.u1;
	x29->tFFFFFFD8.u1 = (struct Eq_108909 *) x8;
	struct Eq_92106 * v17 = (struct Eq_92106 *) ((word32) x0 + 32);
	Eq_92065 x9;
	x9.u1 = v17->t0000.u1;
	x8.u1 = v17->t0008.u1;
	--x8;
	Eq_92065 x10 = x8 >> 3;
	x10 &= 0x1FFFFFFFFFFFFFF8;
	x9.u1 = *(x9 + x10);
	ui32 w10 = 0x00 | 0x01;
	x8 = x10 << x8;
	Eq_92130 NZ;
	NZ.u0 = cond(x8 & x9);
	bool C = false;
	bool V = false;
	bool Z;
	if (Test(EQ,Z))
	{
		x20.u0 = 0x00;
		x21.u0 = 0x00;
		goto l0000000000045CC4;
	}
	Eq_92065 x1;
	x9 = x1.u2->u1;
	x8.u1 = &sp->b0020;
	x20 = x0;
	x19.u1 = x8 + 0x08;
	word32 w8 = 0x05;
	sp->b0020 = (byte) w8;
	sp->t0028.u1 = (struct Eq_108909 *) x9;
	ui32 w2;
	word32 w1;
	if ((w2 & 0x01) != 0x00)
		x21.u1 = (word32) x20 + 16;
	else
	{
		x21 = x20;
		x21.u1 = (word32) x21 + 16;
		x9 = x21.u2->u1;
		x10.u1 = x21.u1->tFFFFFFF8.u1;
		sp->b0030 = (byte) w8;
		x8 = x9 - x10;
		x8 >>= 3;
		x29->dwFFFFFFD4 = w8;
		x0.u1 = x21.u1->t0070.u1;
		if (x0 == 0x00)
		{
			fn0000000000043A24();
			byte v43 = sp->b0020;
			w1 = (word32) v43;
			x20 = x0;
			x0 = x19;
			fn000000000001C590();
			x0 = x20;
			_Unwind_Resume();
			_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EENS3_4pairIbPSD_EEOT_b();
			return;
		}
		x8 = x0.u2->u1;
		x8.u1 = x8.u1->t0030.u1;
		x1 = x29 - 44;
		byte * x2 = &sp->b0030;
		byte * x3 = &sp->b0020;
		x8();
		ui32 w0;
		if ((w0 & 0x01) == 0x00)
			goto l0000000000045C8C;
	}
	struct Eq_92188 * v27 = (struct Eq_92188 *) &x20.u1->t0008.u0;
	x9.u1 = v27->t0000.u1;
	x8.u1 = v27->t0008.u1;
	Eq_92196 x31 = x9 - x8;
	Eq_92198 NZCV;
	NZCV.u0 = cond(x31);
	byte * x11;
	if (Test(EQ,Z))
	{
		byte v48 = sp->b0020;
		w8 = (word32) v48;
		x9.u1 = sp->t0028.u1;
		sp->b0020 = 0x00;
		sp->t0028.u1 = (struct Eq_108909 *) 0x00;
		sp->b0010 = (byte) w8;
		sp->t0018.u1 = (struct Eq_108909 *) x9;
		x9 = x20.u2->u1;
		x11 = &sp->b0010;
		x0.u1 = x11 + 8;
		Eq_92065 v49;
		v49.u0 = x9.u2->u0;
		w1 = (word32) v49;
		x9.u2->u0 = (byte) (byte) w8;
		x8.u1 = sp->t0018.u1;
		sp->b0010 = (byte) w1;
		x10.u1 = x9.u1->t0008.u1;
		x9.u1->t0008.u1 = (struct Eq_108909 *) x8;
		sp->t0018.u1 = (struct Eq_108909 *) x10;
		fn000000000001C590();
		x21 = x20.u2->u1;
		goto l0000000000045CB4;
	}
	x8.u1 = x8.u1->tFFFFFFF8.u1;
	if (x8 != 0x00)
	{
		Eq_92065 v31;
		v31.u0 = x8.u2->u0;
		word32 w9 = (word32) v31;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_92321 * v32 = (struct Eq_92321 *) &x0.u1->t0008.u0;
			x8.u1 = v32->t0000.u1;
			x9.u1 = v32->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
				byte v33 = sp->b0020;
				w9 = (word32) v33;
				x8.u2->u0 = (byte) (byte) w9;
				x9.u1 = sp->t0028.u1;
				x8.u1->t0008.u1 = (struct Eq_108909 *) x9;
				sp->b0020 = 0x00;
				sp->t0028.u1 = (struct Eq_108909 *) 0x00;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = x8 + 0x10;
				x0.u1->t0008.u1 = (struct Eq_108909 *) x8;
			}
			else
			{
				x1.u1 = &sp->b0020;
				fn000000000001C490();
			}
			x8 = x21.u2->u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x21 = x8 - 0x10;
l0000000000045CB4:
			ui32 w20 = 0x00 | 0x01;
l0000000000045CB8:
			byte v42 = sp->b0020;
			w1 = (word32) v42;
			x0 = x19;
			fn000000000001C590();
l0000000000045CC4:
			x8.u1 = x22->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				x0 = x20;
				x1 = x21;
				struct Eq_92384 * v34 = (struct Eq_92384 *) (&sp->b0030 + 48);
				x29 = v34->ptr0000;
				x30 = v34->qw0008;
				struct Eq_92393 * v35 = (struct Eq_92393 *) (&sp->b0030 + 32);
				x20.u1 = v35->t0000.u1;
				x19.u1 = v35->t0008.u1;
				struct Eq_92402 * v36 = (struct Eq_92402 *) (&sp->b0030 + 16);
				x22 = v36->ptr0000;
				x21.u1 = v36->t0008.u1;
				sp = &sp->b0030 + 64;
				return;
			}
		}
		struct Eq_92289 * v44 = (struct Eq_92289 *) ((word32) x20 + 56);
		x9.u1 = v44->t0000.u1;
		x8.u1 = v44->t0008.u1;
		--x8;
		x10 = x8 >> 3;
		x10 &= 0x1FFFFFFFFFFFFFF8;
		x9.u1 = *(x9 + x10);
		w10 = 0x00 | 0x01;
		x10 <<= x8;
		x20.u1->t0040.u1 = (struct Eq_108909 *) x8;
		NZ.u0 = cond(x10 & x9);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			byte v45 = sp->b0020;
			w8 = (word32) v45;
			x9.u1 = sp->t0028.u1;
			sp->b0020 = 0x00;
			sp->t0028.u1 = (struct Eq_108909 *) 0x00;
			sp->b0000 = (byte) w8;
			sp->t0008.u1 = (struct Eq_108909 *) x9;
			x9.u1 = x20.u1->t0050.u1;
			x11 = &sp->b0000;
			x0.u1 = x11 + 8;
			byte v47 = x9.u2->u0;
			w1 = (word32) v47;
			x9.u2->u0 = (byte) w8;
			x8.u1 = sp->t0008.u1;
			sp->b0000 = (byte) w1;
			x10.u1 = x9.u1->t0008.u1;
			x9.u1->t0008.u1 = (struct Eq_108909 *) x8;
			sp->t0008.u1 = (struct Eq_108909 *) x10;
			fn000000000001C590();
			x21.u1 = x20.u1->t0050.u1;
			goto l0000000000045CB4;
		}
	}
l0000000000045C8C:
	x20.u0 = 0x00;
	x21.u0 = 0x00;
	goto l0000000000045CB8;
}

// 0000000000045D10: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EENS3_4pairIbPSD_EEOT_b
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEENS3_4pairIbPSD_EEOT_b
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EENS3_4pairIbPSD_EEOT_b
{
	ui32 w2;
	Eq_92522 x0;
	struct Eq_92511 * fp;
	struct Eq_92511 * sp = fp;
	sp -= 0x70;
	struct Eq_92516 * v6 = (struct Eq_92516 *) (&sp->b0030 + 16);
	struct Eq_92518 * x22;
	v6->ptr0000 = x22;
	Eq_92522 x21;
	v6->t0008.u1 = (byte *) x21;
	struct Eq_92527 * v9 = (struct Eq_92527 *) (&sp->b0030 + 32);
	Eq_92522 x20;
	v9->t0000.u1 = (byte *) x20;
	Eq_92522 x19;
	v9->t0008.u1 = (byte *) x19;
	struct Eq_92538 * v12 = (struct Eq_92538 *) (&sp->b0030 + 48);
	struct Eq_92540 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_92540 *) (&sp->b0030 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_92522 x8;
	x8.u1 = x22->t0028.u1;
	x29->tFFFFFFD8.u1 = (byte *) x8;
	struct Eq_92563 * v17 = (struct Eq_92563 *) ((word32) x0 + 32);
	Eq_92522 x9;
	x9.u1 = v17->t0000.u1;
	x8.u1 = v17->t0008.u1;
	--x8;
	Eq_92522 x10 = x8 >> 3;
	x10 &= 0x1FFFFFFFFFFFFFF8;
	x9.u1 = *(x9 + x10);
	ui32 w10 = 0x00 | 0x01;
	x8 = x10 << x8;
	Eq_92587 NZ;
	NZ.u0 = cond(x8 & x9);
	bool C = false;
	bool V = false;
	bool Z;
	if (Test(EQ,Z))
	{
		x20.u0 = 0x00;
		x21.u0 = 0x00;
		goto l0000000000045F24;
	}
	x20 = x0;
	x8.u1 = &sp->b0020;
	ui32 w9 = 0x00 | 0x03;
	Eq_92522 x1;
	x0 = x1;
	ui32 w21 = w2;
	x19.u1 = x8 + 0x08;
	sp->b0020 = (byte) w9;
	fn000000000001C190();
	sp->t0028.u1 = (byte *) x0;
	word32 w8;
	word32 w1;
	if ((w21 & 0x01) != 0x00)
		x21.u1 = (word32) x20 + 16;
	else
	{
		x21 = x20;
		x21.u1 = (word32) x21 + 16;
		x8 = *x21.u3;
		w10 = 0x05;
		x9.u1 = x21.u2->tFFFFFFF8.u1;
		sp->b0030 = (byte) w10;
		x8 -= x9;
		x8 >>= 3;
		x29->dwFFFFFFD4 = w8;
		x0.u1 = x21.u2->t0070.u1;
		if (x0 == 0x00)
		{
			fn0000000000043A24();
			byte v44 = sp->b0020;
			w1 = (word32) v44;
			x20 = x0;
			x0 = x19;
			fn000000000001C590();
			x0 = x20;
			_Unwind_Resume();
			_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEENS3_4pairIbPSD_EEOT_b();
			return;
		}
		x8 = *x0.u3;
		x8.u1 = x8.u2->t0030.u1;
		x1 = x29 - 44;
		byte * x2 = &sp->b0030;
		byte * x3 = &sp->b0020;
		x8();
		ui32 w0;
		if ((w0 & 0x01) == 0x00)
			goto l0000000000045EEC;
	}
	struct Eq_92648 * v28 = (struct Eq_92648 *) &x20.u2->t0008.u0;
	x9.u1 = v28->t0000.u1;
	x8.u1 = v28->t0008.u1;
	Eq_92656 x31 = x9 - x8;
	Eq_92658 NZCV;
	NZCV.u0 = cond(x31);
	byte * x11;
	if (Test(EQ,Z))
	{
		byte v49 = sp->b0020;
		w8 = (word32) v49;
		x9.u1 = sp->t0028.u1;
		sp->b0020 = 0x00;
		sp->t0028.u1 = (byte *) 0x00;
		sp->b0010 = (byte) w8;
		sp->t0018.u1 = (byte *) x9;
		x9 = *x20.u3;
		x11 = &sp->b0010;
		x0.u1 = x11 + 8;
		Eq_92522 v50;
		v50.u0 = *x9.u1;
		w1 = (word32) v50;
		*x9.u1 = (byte) (byte) w8;
		x8.u1 = sp->t0018.u1;
		sp->b0010 = (byte) w1;
		x10.u1 = x9.u2->t0008.u1;
		x9.u2->t0008.u1 = (byte *) x8;
		sp->t0018.u1 = (byte *) x10;
		fn000000000001C590();
		x21 = *x20.u3;
		goto l0000000000045F14;
	}
	x8.u1 = x8.u2->tFFFFFFF8.u1;
	if (x8 != 0x00)
	{
		Eq_92522 v31;
		v31.u0 = *x8.u1;
		w9 = (word32) v31;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u2->t0008.u1;
			struct Eq_92780 * v32 = (struct Eq_92780 *) &x0.u2->t0008.u0;
			x8.u1 = v32->t0000.u1;
			x9.u1 = v32->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
				byte v33 = sp->b0020;
				w9 = (word32) v33;
				*x8.u1 = (byte) (byte) w9;
				x9.u1 = sp->t0028.u1;
				x8.u2->t0008.u1 = (byte *) x9;
				sp->b0020 = 0x00;
				sp->t0028.u1 = (byte *) 0x00;
				x8.u1 = x0.u2->t0008.u1;
				x8.u1 = x8 + 0x10;
				x0.u2->t0008.u1 = (byte *) x8;
			}
			else
			{
				x1.u1 = &sp->b0020;
				fn000000000001C490();
			}
			x8 = *x21.u3;
			x8.u1 = x8.u2->tFFFFFFF8.u1;
			x8.u1 = x8.u2->t0008.u1;
			x8.u1 = x8.u2->t0008.u1;
			x21 = x8 - 0x10;
l0000000000045F14:
			ui32 w20 = 0x00 | 0x01;
l0000000000045F18:
			byte v43 = sp->b0020;
			w1 = (word32) v43;
			x0 = x19;
			fn000000000001C590();
l0000000000045F24:
			x8.u1 = x22->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				x0 = x20;
				x1 = x21;
				struct Eq_92843 * v34 = (struct Eq_92843 *) (&sp->b0030 + 48);
				x29 = v34->ptr0000;
				x30 = v34->qw0008;
				struct Eq_92852 * v35 = (struct Eq_92852 *) (&sp->b0030 + 32);
				x20.u1 = v35->t0000.u1;
				x19.u1 = v35->t0008.u1;
				struct Eq_92861 * v36 = (struct Eq_92861 *) (&sp->b0030 + 16);
				x22 = v36->ptr0000;
				x21.u1 = v36->t0008.u1;
				sp = &sp->b0030 + 64;
				return;
			}
		}
		struct Eq_92748 * v45 = (struct Eq_92748 *) ((word32) x20 + 56);
		x9.u1 = v45->t0000.u1;
		x8.u1 = v45->t0008.u1;
		--x8;
		x10 = x8 >> 3;
		x10 &= 0x1FFFFFFFFFFFFFF8;
		x9.u1 = *(x9 + x10);
		w10 = 0x00 | 0x01;
		x10 <<= x8;
		x20.u2->t0040.u1 = (byte *) x8;
		NZ.u0 = cond(x10 & x9);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			byte v46 = sp->b0020;
			w8 = (word32) v46;
			x9.u1 = sp->t0028.u1;
			sp->b0020 = 0x00;
			sp->t0028.u1 = (byte *) 0x00;
			sp->b0000 = (byte) w8;
			sp->t0008.u1 = (byte *) x9;
			x9.u1 = x20.u2->t0050.u1;
			x11 = &sp->b0000;
			x0.u1 = x11 + 8;
			Eq_92522 v48;
			v48.u0 = *x9.u1;
			w1 = (word32) v48;
			*x9.u1 = (byte) (byte) w8;
			x8.u1 = sp->t0008.u1;
			sp->b0000 = (byte) w1;
			x10.u1 = x9.u2->t0008.u1;
			x9.u2->t0008.u1 = (byte *) x8;
			sp->t0008.u1 = (byte *) x10;
			fn000000000001C590();
			x21.u1 = x20.u2->t0050.u1;
			goto l0000000000045F14;
		}
	}
l0000000000045EEC:
	x20.u0 = 0x00;
	x21.u0 = 0x00;
	goto l0000000000045F18;
}

<anonymous> g_t45D98 = <code>; // 0000000000045D98
// 0000000000045F70: define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEENS3_4pairIbPSD_EEOT_b
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EENS3_4pairIbPSD_EEOT_b
define _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEENS3_4pairIbPSD_EEOT_b
{
	Eq_92981 x0;
	struct Eq_92970 * fp;
	struct Eq_92970 * sp = fp;
	sp -= 0x70;
	struct Eq_92975 * v6 = (struct Eq_92975 *) (&sp->b0030 + 16);
	struct Eq_92977 * x22;
	v6->ptr0000 = x22;
	Eq_92981 x21;
	v6->t0008.u1 = (struct Eq_108917 *) x21;
	struct Eq_92986 * v9 = (struct Eq_92986 *) (&sp->b0030 + 32);
	Eq_92981 x20;
	v9->t0000.u1 = (struct Eq_108917 *) x20;
	Eq_92981 x19;
	v9->t0008.u1 = (struct Eq_108917 *) x19;
	struct Eq_92997 * v12 = (struct Eq_92997 *) (&sp->b0030 + 48);
	struct Eq_92999 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_92999 *) (&sp->b0030 + 48);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_92981 x8;
	x8.u1 = x22->t0028.u1;
	x29->tFFFFFFD8.u1 = (struct Eq_108917 *) x8;
	struct Eq_93022 * v17 = (struct Eq_93022 *) ((word32) x0 + 32);
	Eq_92981 x9;
	x9.u1 = v17->t0000.u1;
	x8.u1 = v17->t0008.u1;
	--x8;
	Eq_92981 x10 = x8 >> 3;
	x10 &= 0x1FFFFFFFFFFFFFF8;
	x9.u1 = *(x9 + x10);
	ui32 w10 = 0x00 | 0x01;
	x8 = x10 << x8;
	Eq_93046 NZ;
	NZ.u0 = cond(x8 & x9);
	bool C = false;
	bool V = false;
	bool Z;
	if (Test(EQ,Z))
	{
		x20.u0 = 0x00;
		x21.u0 = 0x00;
		goto l000000000004617C;
	}
	Eq_92981 x1;
	x9 = x1.u2->u1;
	x8.u1 = &sp->b0020;
	x20 = x0;
	x19.u1 = x8 + 0x08;
	ui32 w8 = 0x00 | 0x06;
	sp->b0020 = (byte) w8;
	sp->t0028.u1 = (struct Eq_108917 *) x9;
	ui32 w2;
	word32 w1;
	if ((w2 & 0x01) != 0x00)
		x21.u1 = (word32) x20 + 16;
	else
	{
		x21 = x20;
		x21.u1 = (word32) x21 + 16;
		x8 = x21.u2->u1;
		w10 = 0x05;
		x9.u1 = x21.u1->tFFFFFFF8.u1;
		sp->b0030 = (byte) w10;
		x8 -= x9;
		x8 >>= 3;
		x29->dwFFFFFFD4 = w8;
		x0.u1 = x21.u1->t0070.u1;
		if (x0 == 0x00)
		{
			fn0000000000043A24();
			byte v43 = sp->b0020;
			w1 = (word32) v43;
			x20 = x0;
			x0 = x19;
			fn000000000001C590();
			x0 = x20;
			_Unwind_Resume();
			_ZN8nlohmann6detail11parse_errorC2ERKS1_();
			return;
		}
		x8 = x0.u2->u1;
		x8.u1 = x8.u1->t0030.u1;
		x1 = x29 - 44;
		byte * x2 = &sp->b0030;
		byte * x3 = &sp->b0020;
		x8();
		ui32 w0;
		if ((w0 & 0x01) == 0x00)
			goto l0000000000046144;
	}
	struct Eq_93107 * v27 = (struct Eq_93107 *) &x20.u1->t0008.u0;
	x9.u1 = v27->t0000.u1;
	x8.u1 = v27->t0008.u1;
	Eq_93115 x31 = x9 - x8;
	Eq_93117 NZCV;
	NZCV.u0 = cond(x31);
	byte * x11;
	if (Test(EQ,Z))
	{
		byte v48 = sp->b0020;
		w8 = (word32) v48;
		x9.u1 = sp->t0028.u1;
		sp->b0020 = 0x00;
		sp->t0028.u1 = (struct Eq_108917 *) 0x00;
		sp->b0010 = (byte) w8;
		sp->t0018.u1 = (struct Eq_108917 *) x9;
		x9 = x20.u2->u1;
		x11 = &sp->b0010;
		x0.u1 = x11 + 8;
		Eq_92981 v49;
		v49.u0 = x9.u2->u0;
		w1 = (word32) v49;
		x9.u2->u0 = (byte) (byte) w8;
		x8.u1 = sp->t0018.u1;
		sp->b0010 = (byte) w1;
		x10.u1 = x9.u1->t0008.u1;
		x9.u1->t0008.u1 = (struct Eq_108917 *) x8;
		sp->t0018.u1 = (struct Eq_108917 *) x10;
		fn000000000001C590();
		x21 = x20.u2->u1;
		goto l000000000004616C;
	}
	x8.u1 = x8.u1->tFFFFFFF8.u1;
	if (x8 != 0x00)
	{
		Eq_92981 v31;
		v31.u0 = x8.u2->u0;
		word32 w9 = (word32) v31;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_93240 * v32 = (struct Eq_93240 *) &x0.u1->t0008.u0;
			x8.u1 = v32->t0000.u1;
			x9.u1 = v32->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(ULT,C))
			{
				byte v33 = sp->b0020;
				w9 = (word32) v33;
				x8.u2->u0 = (byte) (byte) w9;
				x9.u1 = sp->t0028.u1;
				x8.u1->t0008.u1 = (struct Eq_108917 *) x9;
				sp->b0020 = 0x00;
				sp->t0028.u1 = (struct Eq_108917 *) 0x00;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = x8 + 0x10;
				x0.u1->t0008.u1 = (struct Eq_108917 *) x8;
			}
			else
			{
				x1.u1 = &sp->b0020;
				fn000000000001C490();
			}
			x8 = x21.u2->u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x21 = x8 - 0x10;
l000000000004616C:
			ui32 w20 = 0x00 | 0x01;
l0000000000046170:
			byte v42 = sp->b0020;
			w1 = (word32) v42;
			x0 = x19;
			fn000000000001C590();
l000000000004617C:
			x8.u1 = x22->t0028.u1;
			x9.u1 = x29->tFFFFFFD8.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				x0 = x20;
				x1 = x21;
				struct Eq_93303 * v34 = (struct Eq_93303 *) (&sp->b0030 + 48);
				x29 = v34->ptr0000;
				x30 = v34->qw0008;
				struct Eq_93312 * v35 = (struct Eq_93312 *) (&sp->b0030 + 32);
				x20.u1 = v35->t0000.u1;
				x19.u1 = v35->t0008.u1;
				struct Eq_93321 * v36 = (struct Eq_93321 *) (&sp->b0030 + 16);
				x22 = v36->ptr0000;
				x21.u1 = v36->t0008.u1;
				sp = &sp->b0030 + 64;
				return;
			}
		}
		struct Eq_93208 * v44 = (struct Eq_93208 *) ((word32) x20 + 56);
		x9.u1 = v44->t0000.u1;
		x8.u1 = v44->t0008.u1;
		--x8;
		x10 = x8 >> 3;
		x10 &= 0x1FFFFFFFFFFFFFF8;
		x9.u1 = *(x9 + x10);
		w10 = 0x00 | 0x01;
		x10 <<= x8;
		x20.u1->t0040.u1 = (struct Eq_108917 *) x8;
		NZ.u0 = cond(x10 & x9);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			byte v45 = sp->b0020;
			w8 = (word32) v45;
			x9.u1 = sp->t0028.u1;
			sp->b0020 = 0x00;
			sp->t0028.u1 = (struct Eq_108917 *) 0x00;
			sp->b0000 = (byte) w8;
			sp->t0008.u1 = (struct Eq_108917 *) x9;
			x9.u1 = x20.u1->t0050.u1;
			x11 = &sp->b0000;
			x0.u1 = x11 + 8;
			byte v47 = x9.u2->u0;
			w1 = (word32) v47;
			x9.u2->u0 = (byte) w8;
			x8.u1 = sp->t0008.u1;
			sp->b0000 = (byte) w1;
			x10.u1 = x9.u1->t0008.u1;
			x9.u1->t0008.u1 = (struct Eq_108917 *) x8;
			sp->t0008.u1 = (struct Eq_108917 *) x10;
			fn000000000001C590();
			x21.u1 = x20.u1->t0050.u1;
			goto l000000000004616C;
		}
	}
l0000000000046144:
	x20.u0 = 0x00;
	x21.u0 = 0x00;
	goto l0000000000046170;
}

// 00000000000461C8: define _ZN8nlohmann6detail11parse_errorC2ERKS1_
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEENS3_4pairIbPSD_EEOT_b
define _ZN8nlohmann6detail11parse_errorC2ERKS1_
{
	struct Eq_93430 * fp;
	struct Eq_93430 * sp = fp;
	sp = (struct Eq_93430 *) ((char *) sp - 32);
	struct Eq_93434 * x20;
	sp->ptr0000 = x20;
	struct Eq_93438 * x19;
	sp->ptr0008 = x19;
	struct Eq_93443 * v8 = (struct Eq_93443 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	struct Eq_93434 * x0;
	x20 = x0;
	struct Eq_93438 * x1;
	x19 = x1;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	x0 = &x0->dw0008 + 2;
	word32 w8 = x1->dw0008;
	x1 = &x1->dw0008 + 2;
	x20->dw0008 = w8;
	_ZNSt13runtime_errorC1ERKS_();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0D98);
	x8.u1 = (word32) x8 + 16;
	x20->t0000.u1 = (size_t) x8;
	x8.u1 = x19->t0020.u1;
	x20->t0020.u1 = (size_t) x8;
	struct Eq_93494 * v13 = (struct Eq_93494 *) ((char *) &sp->ptr0008 + 8);
	x29 = v13->ptr0000;
	x30 = v13->qw0008;
	struct Eq_93430 * v14 = sp;
	x20 = v14->ptr0000;
	x19 = v14->ptr0008;
	sp = (struct Eq_93430 *) ((char *) &sp->ptr0008 + 24);
}

// 0000000000046220: define _ZN8nlohmann6detail12out_of_rangeC2ERKS1_
define _ZN8nlohmann6detail12out_of_rangeC2ERKS1_
{
	struct Eq_93544 * x1;
	struct Eq_93515 ** fp;
	struct Eq_93515 ** sp = fp;
	sp = (struct Eq_93515 **) ((char *) sp - 32);
	struct Eq_93515 * x19;
	*sp = (struct Eq_93515 **) x19;
	struct Eq_93520 * v7 = (struct Eq_93520 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	struct Eq_93515 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	x0 = &x0->dw0008 + 2;
	word32 w8 = x1->dw0008;
	x1 = &x1->dw0008 + 2;
	x19->dw0008 = w8;
	_ZNSt13runtime_errorC1ERKS_();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0CB8);
	x8.u1 = (word32) x8 + 16;
	x19->t0000.u1 = (size_t) x8;
	struct Eq_93565 * v12 = (struct Eq_93565 *) ((char *) sp + 16);
	x29 = v12->ptr0000;
	x30 = v12->qw0008;
	x19 = (struct Eq_93515 *) *sp;
	sp = (struct Eq_93515 **) ((char *) sp + 32);
}

// 000000000004626C: define _ZN8nlohmann6detail16invalid_iteratorC2ERKS1_
define _ZN8nlohmann6detail16invalid_iteratorC2ERKS1_
{
	struct Eq_93611 * x1;
	struct Eq_93582 ** fp;
	struct Eq_93582 ** sp = fp;
	sp = (struct Eq_93582 **) ((char *) sp - 32);
	struct Eq_93582 * x19;
	*sp = (struct Eq_93582 **) x19;
	struct Eq_93587 * v7 = (struct Eq_93587 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	struct Eq_93582 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	x0 = &x0->dw0008 + 2;
	word32 w8 = x1->dw0008;
	x1 = &x1->dw0008 + 2;
	x19->dw0008 = w8;
	_ZNSt13runtime_errorC1ERKS_();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3448);
	x8.u1 = (word32) x8 + 16;
	x19->t0000.u1 = (size_t) x8;
	struct Eq_93632 * v12 = (struct Eq_93632 *) ((char *) sp + 16);
	x29 = v12->ptr0000;
	x30 = v12->qw0008;
	x19 = (struct Eq_93582 *) *sp;
	sp = (struct Eq_93582 **) ((char *) sp + 32);
}

// 00000000000462B8: define _ZN8nlohmann6detail10type_errorC2ERKS1_
define _ZN8nlohmann6detail10type_errorC2ERKS1_
{
	struct Eq_93678 * x1;
	struct Eq_93649 ** fp;
	struct Eq_93649 ** sp = fp;
	sp = (struct Eq_93649 **) ((char *) sp - 32);
	struct Eq_93649 * x19;
	*sp = (struct Eq_93649 **) x19;
	struct Eq_93654 * v7 = (struct Eq_93654 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	struct Eq_93649 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	x0 = &x0->dw0008 + 2;
	word32 w8 = x1->dw0008;
	x1 = &x1->dw0008 + 2;
	x19->dw0008 = w8;
	_ZNSt13runtime_errorC1ERKS_();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0D58);
	x8.u1 = (word32) x8 + 16;
	x19->t0000.u1 = (size_t) x8;
	struct Eq_93699 * v12 = (struct Eq_93699 *) ((char *) sp + 16);
	x29 = v12->ptr0000;
	x30 = v12->qw0008;
	x19 = (struct Eq_93649 *) *sp;
	sp = (struct Eq_93649 **) ((char *) sp + 32);
}

// 0000000000046304: define _ZN8nlohmann6detail11other_errorC2ERKS1_
define _ZN8nlohmann6detail11other_errorC2ERKS1_
{
	struct Eq_93745 * x1;
	struct Eq_93716 ** fp;
	struct Eq_93716 ** sp = fp;
	sp = (struct Eq_93716 **) ((char *) sp - 32);
	struct Eq_93716 * x19;
	*sp = (struct Eq_93716 **) x19;
	struct Eq_93721 * v7 = (struct Eq_93721 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	struct Eq_93716 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	x0 = &x0->dw0008 + 2;
	word32 w8 = x1->dw0008;
	x1 = &x1->dw0008 + 2;
	x19->dw0008 = w8;
	_ZNSt13runtime_errorC1ERKS_();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F40);
	x8.u1 = (word32) x8 + 16;
	x19->t0000.u1 = (size_t) x8;
	struct Eq_93766 * v12 = (struct Eq_93766 *) ((char *) sp + 16);
	x29 = v12->ptr0000;
	x30 = v12->qw0008;
	x19 = (struct Eq_93716 *) *sp;
	sp = (struct Eq_93716 **) ((char *) sp + 32);
}

// 0000000000046350: void parse_error::~parse_error()
void parse_error::~parse_error()
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_93788 * v7 = (struct Eq_93788 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0F38);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 16);
	_ZNSt13runtime_errorD1Ev();
	x0 = x19;
	_ZNSt9exceptionD2Ev();
	struct Eq_93817 * v10 = (struct Eq_93817 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 000000000004638C: void (Register Eq_93839 x0)
void (Eq_93839 x0)
{
	struct Eq_93840 * fp;
	struct Eq_93840 * sp = fp;
	sp -= 0xA0;
	struct Eq_93844 * x21;
	sp->ptr0070 = x21;
	struct Eq_93849 * v7 = (struct Eq_93849 *) ((char *) &sp->ptr0070 + 16);
	Eq_93851 x20;
	v7->t0000.u0 = (word128 *) x20;
	Eq_93851 x19;
	v7->t0008.u0 = (word128 *) x19;
	struct Eq_93860 * v10 = (struct Eq_93860 *) ((char *) &sp->ptr0070 + 32);
	struct Eq_93862 * x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (struct Eq_93862 *) ((char *) &sp->ptr0070 + 32);
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_93851 x8;
	x19 = x8;
	x8.u0 = x21->t0028.u0;
	x20 = x0;
	x29->tFFFFFFD8.u0 = (word128 *) x8;
	x8.u0 = x0.u1->t0010.u0;
	x0.u0 = (word32) x8 + 1;
	x8.u0 = &sp->b0018;
	_ZNSt6__ndk19to_stringEm();
	Eq_14 x2;
	x2.u0 = 0x00053000;
	x2.u1 = (word32) x2 + 909;
	x0.u0 = &sp->b0018;
	word32 w3 = 0x09;
	Eq_14 x1;
	x1.u0 = 0x00;
	fn000000000001B4E0();
	x8.u0 = x0.u1->t0010.u0;
	Eq_93908 q0;
	q0.u1 = *x0.u0;
	sp->t0040.u0 = (word128 *) x8;
	sp->t0030.u1 = (word128) q0;
	struct Eq_93917 * v18 = (struct Eq_93917 *) &x0.u1->t0008.u0;
	v18->qw0000 = 0x00;
	v18->qw0008 = 0x00;
	x0->u0 = 0x00;
	x1.u0 = 0x00053000;
	x1.u1 = (word32) x1 + 919;
	x0.u0 = &sp->t0030.u0;
	word32 w2 = 0x09;
	fn000000000001B1B0();
	x8.u0 = x0.u1->t0010.u0;
	q0.u1 = *x0.u0;
	x29->tFFFFFFD0.u0 = (word128 *) x8;
	x29->tFFFFFFC0.u1 = (word128) q0;
	struct Eq_93951 * v20 = (struct Eq_93951 *) &x0.u1->t0008.u0;
	v20->qw0000 = 0x00;
	v20->qw0008 = 0x00;
	x0->u0 = 0x00;
	x0.u0 = x20.u1->t0008.u0;
	x8.u0 = &sp->b0000;
	x20.u0 = &sp->b0000;
	_ZNSt6__ndk19to_stringEm();
	byte v22 = sp->b0000;
	ui32 w8 = (word32) v22;
	struct Eq_93981 * v25 = (struct Eq_93981 *) (&sp->b0000 + 8);
	word64 x10 = v25->qw0000;
	Eq_93851 x9;
	x9.u0 = v25->t0008.u0;
	ui64 x11 = x20 | 0x01;
	ui32 w31 = w8 & 0x01;
	Eq_93997 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	uint64 x12 = x8 >> 1;
	bool Z;
	x1.u1 = Test(EQ,Z) ? x11 : x9;
	x2.u1 = Test(EQ,Z) ? x12 : x10;
	x0 = x29 - 0x40;
	fn000000000001B1B0();
	x8.u0 = x0.u1->t0010.u0;
	q0.u1 = *x0.u0;
	x19.u1->t0010.u0 = (word128 *) x8;
	*x19.u0 = (word128) q0;
	struct Eq_94027 * v33 = (struct Eq_94027 *) &x0.u1->t0008.u0;
	v33->qw0000 = 0x00;
	v33->qw0008 = 0x00;
	x0->u0 = 0x00;
	byte v34 = sp->b0000;
	w8 = (word32) v34;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_93908 v35;
		v35.u0 = x29->tFFFFFFC0.u0;
		w8 = (word32) v35;
		if ((w8 & 0x01) != 0x00)
		{
l000000000004647C:
			Eq_93908 v36;
			v36.u0 = sp->t0030.u0;
			w8 = (word32) v36;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000046484:
				byte v37 = sp->b0018;
				w8 = (word32) v37;
				if ((w8 & 0x01) == 0x00)
					goto l0000000000046494;
l000000000004648C:
				x0.u0 = sp->t0028.u0;
				((real64) q0, x0, x1);
l0000000000046494:
				x8.u0 = x21->t0028.u0;
				x9.u0 = x29->tFFFFFFD8.u0;
				Eq_94140 x31 = x8 - x9;
				Eq_94142 NZCV;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
					__stack_chk_fail();
				else
				{
					struct Eq_94159 * v43 = (struct Eq_94159 *) ((char *) &sp->ptr0070 + 32);
					x29 = v43->ptr0000;
					x30 = v43->qw0008;
					struct Eq_94168 * v44 = (struct Eq_94168 *) ((char *) &sp->ptr0070 + 16);
					x20.u0 = v44->t0000.u0;
					x19.u0 = v44->t0008.u0;
					x21 = sp->ptr0070;
					sp = (struct Eq_93840 *) ((char *) &sp->ptr0070 + 48);
					return;
				}
			}
l00000000000464D8:
			x0.u0 = sp->t0040.u0;
			((real64) q0, x0, x1);
			byte v40 = sp->b0018;
			w8 = (word32) v40;
			if ((w8 & 0x01) != 0x00)
				goto l0000000000046494;
			goto l000000000004648C;
		}
	}
	else
	{
		x0.u0 = sp->t0010.u0;
		((real64) q0, x0, x1);
		Eq_93908 v38;
		v38.u0 = x29->tFFFFFFC0.u0;
		w8 = (word32) v38;
		if ((w8 & 0x01) == 0x00)
			goto l000000000004647C;
	}
	x0.u0 = x29->tFFFFFFD0.u0;
	((real64) q0, x0, x1);
	Eq_93908 v39;
	v39.u0 = sp->t0030.u0;
	w8 = (word32) v39;
	if ((w8 & 0x01) == 0x00)
		goto l0000000000046484;
	goto l00000000000464D8;
}

// 000000000004658C: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
{
	Eq_14 x1;
	struct Eq_94181 * fp;
	struct Eq_94181 * sp = fp;
	sp -= 0x70;
	struct Eq_94186 * v6 = (struct Eq_94186 *) ((char *) &sp->t0020 + 32);
	struct Eq_94188 * x22;
	v6->ptr0000 = x22;
	Eq_14 x21;
	v6->t0008.u1 = (size_t) x21;
	struct Eq_94197 * v9 = (struct Eq_94197 *) ((char *) &sp->t0020 + 48);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_94208 * v12 = (struct Eq_94208 *) ((char *) &sp->t0020 + 64);
	struct Eq_94210 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_94210 *) ((char *) &sp->t0020 + 64);
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x22->t0028.u1;
	Eq_14 x0;
	x19 = x0;
	Eq_14 x2 = x1;
	x29->tFFFFFFD8.u1 = (size_t) x8;
	x8 = *((word32) x0 + 16);
	x8 = *((word32) x8 - 8);
	x20 = *((word32) x8 + 8);
	sp->t0010.u1 = (size_t) x1;
	x1.u1 = (char *) &sp->t0010 + 8;
	x0 = x20;
	fn000000000001AE80();
	x8 = *x0.u1;
	if (x8 == 0x00)
	{
		x1.u0 = 0x00053000;
		x21 = x0;
		x1.u1 = (word32) x1 + 3181;
		x8.u1 = &sp->t0020.u0;
		x2.u1 = &sp->t0010.u0;
		ptr64 x3 = (char *) sp + 8;
		x0 = x20;
		fn000000000001BA60();
		struct Eq_94283 * v19 = (struct Eq_94283 *) ((char *) &sp->t0010 + 8);
		x8.u1 = v19->t0000.u1;
		x1.u1 = v19->t0008.u1;
		Eq_14 v20 = x1;
		v20.u1->u1 = 0x00;
		((word32) v20 + 8)->u0 = 0x00;
		*((word32) x1 + 16) = x8;
		*x21.u1 = x1;
		x8 = *x20.u1;
		x8 = *x8.u1;
		if (x8 != 0x00)
		{
			*x20.u1 = x8;
			x1 = *x21.u1;
		}
		x0 = *((word32) x20 + 8);
		fn000000000001BD70();
		x8 = *((word32) x20 + 16);
		x8.u1 = (word32) x8 + 1;
		*((word32) x20 + 16) = x8;
		x8.u1 = sp->t0020.u1;
	}
	x8.u1 = (word32) x8 + 56;
	*((word32) x19 + 32) = x8;
	x8.u1 = x22->t0028.u1;
	Eq_14 x9;
	x9.u1 = x29->tFFFFFFD8.u1;
	ptr64 x31 = x8 - x9;
	Eq_94268 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_94339 * v25 = (struct Eq_94339 *) ((char *) &sp->t0020 + 64);
		x29 = v25->ptr0000;
		x30 = v25->qw0008;
		struct Eq_94348 * v26 = (struct Eq_94348 *) ((char *) &sp->t0020 + 48);
		x20.u1 = v26->t0000.u1;
		x19.u1 = v26->t0008.u1;
		struct Eq_94357 * v27 = (struct Eq_94357 *) ((char *) &sp->t0020 + 32);
		x22 = v27->ptr0000;
		x21.u1 = v27->t0008.u1;
		ui32 w0 = 0x00 | 0x01;
		sp = (struct Eq_94181 *) ((char *) &sp->t0020 + 80);
	}
}

// 0000000000046668: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEEPSD_OT_
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEEPSD_OT_
{
	struct Eq_94371 * fp;
	struct Eq_94371 * sp = fp;
	sp -= 0x60;
	struct Eq_94376 * v6 = (struct Eq_94376 *) ((char *) &sp->t0028 + 8);
	struct Eq_94378 * x22;
	v6->ptr0000 = x22;
	struct Eq_94382 * x21;
	v6->ptr0008 = x21;
	struct Eq_94387 * v9 = (struct Eq_94387 *) ((char *) &sp->t0028 + 24);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_94398 * v12 = (struct Eq_94398 *) ((char *) &sp->t0028 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0028 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x21->t0028.u1;
	Eq_14 x0;
	x19 = x0;
	sp->t0028.u1 = (size_t) x8;
	struct Eq_94423 * v17 = (struct Eq_94423 *) ((word32) x0 + 8);
	Eq_14 x9;
	x9.u1 = v17->t0000.u1;
	x8.u1 = v17->t0008.u1;
	ui64 x31 = x9 - x8;
	Eq_94434 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	byte * x1;
	word32 ZC;
	Eq_14 x10;
	ui32 w0;
	word32 w22;
	word32 w10;
	word32 w1;
	if (Test(NE,Z))
	{
		x8 = *((word32) x8 - 8);
		byte v22 = (byte) *x8.u1;
		word32 w9 = (word32) v22;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x20 = *((word32) x8 + 8);
			struct Eq_94494 * v23 = (struct Eq_94494 *) ((word32) x20 + 8);
			x22 = v23->ptr0000;
			x8.u1 = v23->t0008.u1;
			x31 = x22 - x8;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				byte v27 = *x1;
				word32 w8 = (word32) v27;
				word32 v33 = w8;
				NZCV.u0 = cond(w8 - 0x07);
				x22->b0000 = (byte) w8;
				if (Test(ULE,ZC))
				{
					x9.u0 = 0x00050000;
					x9.u1 = (word32) x9 + 0x0669;
					x10.u0 = 288480;
					byte v31 = (byte) *(x9 + x8);
					word32 w11 = (word32) v31;
					ui64 x11;
					x10.u1 = (char *) x10.u1 + (x11 << 2);
					switch (v33)
					{
					case 0x00:
					case 0x05:
					case 0x06:
					case 0x07:
						goto l00000000000466E0;
					case 0x01:
						w0 = 0x00 | 0x18;
						_Znwm();
						x8 = x0;
						x8.u1 = (word32) x8 + 8;
						x8.u1->u1 = 0x00;
						((word32) x0 + 16)->u0 = 0x00;
						*x0.u1 = x8;
						x22->t0008.u1 = (size_t) x0;
						break;
					case 0x02:
						w0 = 0x00 | 0x18;
						_Znwm();
						struct Eq_94568 * v46 = (struct Eq_94568 *) ((word32) x0 + 8);
						v46->qw0000 = 0x00;
						v46->qw0008 = 0x00;
						x0.u1->u0 = 0x00;
						x22->t0008.u1 = (size_t) x0;
						break;
					case 0x03:
						x0.u0 = 0x00052000;
						x0.u1 = (word32) x0 + 0x05EE;
						fn000000000001BA20();
						x22->t0008.u1 = (size_t) x0;
						break;
					case 0x04:
						x22->t0008.u0 = 0x00;
						break;
					}
				}
				else
				{
l00000000000466E0:
					x22->t0008.u1 = (size_t) 0x00;
				}
				x8 = *((word32) x20 + 8);
				x8.u1 = (word32) x8 + 16;
				*((word32) x20 + 8) = x8;
			}
			else
			{
				x0 = x20;
				fn000000000001B500();
			}
			x8 = *((word32) x19 + 16);
			x8 = *((word32) x8 - 8);
			x8 = *((word32) x8 + 8);
			x8 = *((word32) x8 + 8);
			x0 = x8 - 0x10;
		}
		else
		{
			byte v47 = *x1;
			w22 = (word32) v47;
			x8.u1 = &sp->b0008;
			x20.u1 = (word32) x8 + 8;
			word32 v49 = w22;
			NZCV.u0 = cond(w22 - 0x07);
			sp->b0008 = (byte) w22;
			if (Test(ULE,ZC))
			{
				x8.u0 = 0x00050000;
				x8.u1 = (word32) x8 + 0x0661;
				x9.u0 = 288648;
				byte v48 = (byte) *(x8 + x22);
				w10 = (word32) v48;
				x9.u1 = x9 + (x10 << 2);
				switch (v49)
				{
				case 0x00:
				case 0x05:
				case 0x06:
				case 0x07:
					goto l0000000000046788;
				case 0x01:
					w0 = 0x00 | 0x18;
					_Znwm();
					x8 = x0;
					x8.u1 = (word32) x8 + 8;
					x8.u1->u1 = 0x00;
					((word32) x0 + 16)->u0 = 0x00;
					*x0.u1 = x8;
					sp->t0010.u1 = (size_t) x0;
					break;
				case 0x02:
					w0 = 0x00 | 0x18;
					_Znwm();
					struct Eq_94801 * v51 = (struct Eq_94801 *) ((word32) x0 + 8);
					v51->ptr0000 = 0x00;
					v51->qw0008 = 0x00;
					x0.u1->u0 = 0x00;
					sp->t0010.u1 = (size_t) x0;
					break;
				case 0x03:
					x0.u0 = 0x00052000;
					x0.u1 = (word32) x0 + 0x05EE;
					fn000000000001BA20();
					sp->t0010.u1 = (size_t) x0;
					break;
				case 0x04:
					sp->t0010.u0 = 0x00;
					break;
				}
			}
			else
			{
l0000000000046788:
				sp->t0010.u1 = (size_t) 0x00;
			}
			x8 = *((word32) x19 + 32);
			x0 = x20;
			Eq_94833 v50;
			v50.u4 = *x8.u1;
			w1 = (word32) v50;
			x8.u1->u1 = (byte) w22;
			x9.u1 = sp->t0010.u1;
			sp->b0008 = (byte) w1;
			x10 = *((word32) x8 + 8);
			*((word32) x8 + 8) = x9;
			sp->t0010.u1 = (size_t) x10;
			fn000000000001C590();
			x0 = *((word32) x19 + 32);
		}
	}
	else
	{
		byte v35 = *x1;
		w22 = (word32) v35;
		x8.u1 = &sp->b0018;
		x20.u1 = (word32) x8 + 8;
		word32 v38 = w22;
		NZCV.u0 = cond(w22 - 0x07);
		sp->b0018 = (byte) w22;
		if (Test(ULE,ZC))
		{
			x8.u0 = 0x00050000;
			x8.u1 = (word32) x8 + 0x0671;
			x9.u0 = 288548;
			byte v37 = (byte) *(x8 + x22);
			w10 = (word32) v37;
			x9.u1 = x9 + (x10 << 2);
			switch (v38)
			{
			case 0x00:
			case 0x05:
			case 0x06:
			case 0x07:
				goto l0000000000046724;
			case 0x01:
				w0 = 0x00 | 0x18;
				_Znwm();
				x8 = x0;
				x8.u1 = (word32) x8 + 8;
				x8.u1->u1 = 0x00;
				((word32) x0 + 16)->u0 = 0x00;
				*x0.u1 = x8;
				sp->t0020.u1 = (size_t) x0;
				break;
			case 0x02:
				w0 = 0x00 | 0x18;
				_Znwm();
				struct Eq_94637 * v40 = (struct Eq_94637 *) ((word32) x0 + 8);
				v40->qw0000 = 0x00;
				v40->qw0008 = 0x00;
				x0.u1->u0 = 0x00;
				sp->t0020.u1 = (size_t) x0;
				break;
			case 0x03:
				x0.u0 = 0x00052000;
				x0.u1 = (word32) x0 + 0x05EE;
				fn000000000001BA20();
				sp->t0020.u1 = (size_t) x0;
				break;
			case 0x04:
				sp->t0020.u0 = 0x00;
				break;
			}
		}
		else
		{
l0000000000046724:
			sp->t0020.u1 = (size_t) 0x00;
		}
		x8 = *x19.u1;
		x0 = x20;
		Eq_94677 v42 = *x8.u1;
		w1 = (word32) v42;
		x8.u1->u1 = (byte) w22;
		x9.u1 = sp->t0020.u1;
		sp->b0018 = (byte) w1;
		x10 = *((word32) x8 + 8);
		*((word32) x8 + 8) = x9;
		sp->t0020.u1 = (size_t) x10;
		fn000000000001C590();
		x0 = *x19.u1;
	}
	x8.u1 = x21->t0028.u1;
	x9.u1 = sp->t0028.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_94732 * v43 = (struct Eq_94732 *) ((char *) &sp->t0028 + 40);
		x29 = v43->ptr0000;
		x30 = v43->qw0008;
		struct Eq_94741 * v44 = (struct Eq_94741 *) ((char *) &sp->t0028 + 24);
		x20.u1 = v44->t0000.u1;
		x19.u1 = v44->t0008.u1;
		struct Eq_94750 * v45 = (struct Eq_94750 *) ((char *) &sp->t0028 + 8);
		x22 = v45->ptr0000;
		x21 = v45->ptr0008;
		sp = (struct Eq_94371 *) ((char *) &sp->t0028 + 56);
	}
}

// 00000000000468FC: define _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathISC_EEvOT_
define _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathISC_EEvOT_
{
	Eq_14 x0;
	uint64 * fp;
	uint64 * sp = fp;
	sp += -0x0A;
	uint64 x25;
	*sp = x25;
	struct Eq_94869 * v7 = (struct Eq_94869 *) (sp + 2);
	Eq_14 x24;
	v7->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_94880 * v10 = (struct Eq_94880 *) (sp + 4);
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_94891 * v13 = (struct Eq_94891 *) (sp + 6);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_94902 * v16 = (struct Eq_94902 *) (sp + 8);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = sp + 8;
	Eq_14 v19 = x0;
	x20 = *v19.u1;
	Eq_14 x8 = *((word32) v19 + 8);
	x19 = x0;
	x21 = x8 - x20;
	x24 = x21 >> 3;
	x8.u1 = (word32) x24 + 1;
	Eq_14 x9 = x8 >> 61;
	if (x9 != 0x00)
	{
		x0 = x19;
		fn000000000001B7E0();
		_ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJNS1_6detail7value_tEEEEvDpOT_();
		return;
	}
	x9 = *((word32) x19 + 16);
	ui64 x10 = 0x00 | 0xFFFFFFFFFFFFFFE;
	Eq_14 x1;
	x22 = x1;
	x9 -= x20;
	Eq_94945 x31 = x10 - (x9 >> 3);
	Eq_94947 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 2;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x25 = Test(ULT,C) ? x8 : x9;
		if (x25 == 0x00)
		{
			x23.u0 = 0x00;
			goto l000000000004697C;
		}
		x8 = x25 >> 61;
		if (x8 == 0x00)
		{
l0000000000046970:
			x0 = x25 << 3;
			_Znwm();
			x23 = x0;
l000000000004697C:
			x8 = *x22.u1;
			x24.u1 = (char *) x23.u1 + (x24 << 3);
			x22.u1 = (char *) x23.u1 + (x25 << 3);
			NZCV.u0 = cond(x21 - 0x01);
			*x24.u1 = x8;
			x24.u1 = (word32) x24 + 8;
			word32 NV;
			if (Test(GE,NV))
			{
				x0 = x23;
				x1 = x20;
				Eq_14 x2 = x21;
				x0 = memcpy(x0, x1, x2);
			}
			Eq_14 v28 = x19;
			*v28.u1 = x23;
			*((word32) v28 + 8) = x24;
			*((word32) x19 + 16) = x22;
			if (x20 == 0x00)
			{
				struct Eq_95015 * v34 = (struct Eq_95015 *) (sp + 8);
				x29 = v34->ptr0000;
				x30 = v34->qw0008;
				struct Eq_95024 * v35 = (struct Eq_95024 *) (sp + 6);
				x20.u1 = v35->t0000.u1;
				x19.u1 = v35->t0008.u1;
				struct Eq_95033 * v36 = (struct Eq_95033 *) (sp + 4);
				x22.u1 = v36->t0000.u1;
				x21.u1 = v36->t0008.u1;
				struct Eq_95042 * v37 = (struct Eq_95042 *) (sp + 2);
				x24.u1 = v37->t0000.u1;
				x23.u1 = v37->t0008.u1;
				x25 = *sp;
				sp += 0x0A;
				return;
			}
			else
			{
				x0 = x20;
				struct Eq_95056 * v29 = (struct Eq_95056 *) (sp + 8);
				x29 = v29->ptr0000;
				x30 = v29->qw0008;
				struct Eq_95065 * v30 = (struct Eq_95065 *) (sp + 6);
				x20.u1 = v30->t0000.u1;
				x19.u1 = v30->t0008.u1;
				struct Eq_95074 * v31 = (struct Eq_95074 *) (sp + 4);
				x22.u1 = v31->t0000.u1;
				x21.u1 = v31->t0008.u1;
				struct Eq_95083 * v32 = (struct Eq_95083 *) (sp + 2);
				x24.u1 = v32->t0000.u1;
				x23.u1 = v32->t0008.u1;
				x25 = *sp;
				sp += 0x0A;
				word128 q0;
				((real64) q0, x0, x1);
				return;
			}
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x25 = 0x00 | 0x1FFFFFFFFFFFFFFF;
	goto l0000000000046970;
}

// 00000000000469F4: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJNS1_6detail7value_tEEEEvDpOT_
// Called from:
//      _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathISC_EEvOT_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJNS1_6detail7value_tEEEEvDpOT_
{
	Eq_14 x0;
	struct Eq_95104 * fp;
	struct Eq_95104 * sp = fp;
	sp = (struct Eq_95104 *) ((char *) sp - 80);
	Eq_14 x26;
	sp->t0000.u1 = (size_t) x26;
	uint64 x25;
	sp->qw0008 = x25;
	struct Eq_95117 * v8 = (struct Eq_95117 *) (&sp->qw0008 + 1);
	int64 x24;
	v8->qw0000 = x24;
	Eq_14 x23;
	v8->t0008.u1 = (size_t) x23;
	struct Eq_95128 * v11 = (struct Eq_95128 *) (&sp->qw0008 + 3);
	Eq_14 x22;
	v11->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v11->t0008.u1 = (size_t) x21;
	struct Eq_95139 * v14 = (struct Eq_95139 *) (&sp->qw0008 + 5);
	Eq_14 x20;
	v14->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v14->t0008.u1 = (size_t) x19;
	struct Eq_95150 * v17 = (struct Eq_95150 *) (&sp->qw0008 + 7);
	ptr64 x29;
	v17->ptr0000 = x29;
	word64 x30;
	v17->qw0008 = x30;
	x29 = &sp->qw0008 + 7;
	Eq_14 v19 = x0;
	x23 = *v19.u1;
	x22 = *((word32) v19 + 8);
	x19 = x0;
	Eq_14 x8 = x22 - x23;
	x24 = x8 >> 4;
	x8 = x24 + 0x01;
	Eq_14 x9 = x8 >> 60;
	word128 q0;
	Eq_14 x1;
	if (x9 != 0x00)
	{
		x0 = x19;
		fn000000000001B7E0();
		x19 = x0;
		if (x20 != 0x00)
		{
			x0 = x20;
			((real64) q0, x0, x1);
		}
		x0 = x19;
		_Unwind_Resume();
		_ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEEPSD_OT_();
		return;
	}
	x9 = *((word32) x19 + 16);
	struct Eq_95189 * x10 = 0x00 | 0x7FFFFFFFFFFFFFE;
	x21 = x1;
	x9 -= x23;
	struct Eq_95189 * x31 = x10 - (x9 >> 4);
	Eq_95197 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 3;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x25 = Test(ULT,C) ? x8 : x9;
		if (x25 == 0x00)
		{
			x20.u0 = 0x00;
			goto l0000000000046A74;
		}
		x8 = x25 >> 60;
		if (x8 == 0x00)
		{
l0000000000046A68:
			x0 = x25 << 4;
			_Znwm();
			x20 = x0;
l0000000000046A74:
			Eq_14 v29 = *x21.u1;
			word32 w8 = (word32) v29;
			x26.u1 = (char *) x20.u1 + (x24 << 4);
			x21 = x26;
			word32 v34 = w8;
			NZCV.u0 = cond(w8 - 0x07);
			*x21.u1 = (byte) w8;
			x21.u1 = (word32) x21 + 8;
			word32 ZC;
			struct Eq_95248 * x11;
			if (Test(ULE,ZC))
			{
				x9.u0 = 0x00050000;
				x9.u1 = x9 + &g_u0679;
				x10 = (struct Eq_95189 *) &g_t46AA4;
				Eq_14 v32;
				v32.u1 = *(x9 + x8);
				word32 w11 = (word32) v32;
				x10 += x11 << 2;
				switch (v34)
				{
				case 0x00:
				case 0x05:
				case 0x06:
				case 0x07:
					goto l0000000000046AA4;
				case 0x01:
					ui32 w0 = 0x00 | 0x18;
					_Znwm();
					x8 = x0;
					x8.u1 = (word32) x8 + 8;
					x8.u1->u0 = 0x00;
					((word32) x0 + 16)->u0 = 0x00;
					*x0.u1 = x8;
					*x21.u1 = x0;
					break;
				case 0x02:
					w0 = 0x00 | 0x18;
					_Znwm();
					struct Eq_95281 * v55 = x0 + (struct Eq_95280 *) 8;
					v55->t0000.u1 = (size_t) 0x00;
					v55->t0008.u1 = (size_t) 0x00;
					x0.u1->u0 = 0x00;
					*x21.u1 = x0;
					break;
				case 0x03:
					x0.u0 = 0x00052000;
					x0.u1 = x0 + &g_t05EE;
					fn000000000001BA20();
					*x21.u1 = x0;
					Eq_14 v40 = x19;
					x23 = *v40.u1;
					x22 = *((word32) v40 + 8);
					break;
				case 0x04:
					x21.u1->u0 = 0x00;
					break;
				}
			}
			else
			{
l0000000000046AA4:
				x21.u1->u0 = 0x00;
			}
			x8.u1 = (char *) x20.u1 + (x25 << 4);
			x31 = x22 - x23;
			NZCV.u0 = cond(x31);
			x9.u1 = (word32) x26 + 16;
			bool Z;
			if (Test(NE,Z))
			{
				x10 = x22 - 0x10;
				x11 = (struct Eq_95248 *) ~0x00;
				x10 -= x23;
				Eq_14 x12;
				x12.u1 = (char *) x20.u1 + (x24 << 4);
				x10 = x11 ^ x10 >> 4;
				x10 = &x10->t0000.u0 + x24;
				x11 = x12 - 0x08;
				do
				{
					x22.u1 = (word32) x22 - 16;
					Eq_14 v38 = *x22.u1;
					word32 w12 = (word32) v38;
					x11->bFFFFFFF8 = (byte) w12;
					x12 = *((word32) x22 + 8);
					x31 = x23 - x22;
					NZCV.u0 = cond(x31);
					x11->t0000.u1 = (size_t) x12;
					x11 = (struct Eq_95248 *) ((char *) x11 - 16);
					x22.u1->u0 = 0x00;
					((word32) x22 + 8)->u0 = 0x00;
				} while (Test(NE,Z));
				Eq_14 v39 = x19;
				x21 = *v39.u1;
				x22 = *((word32) v39 + 8);
				x26.u1 = (char *) x20.u1 + (x10 << 4);
			}
			else
				x21 = x22;
			x31 = x22 - x21;
			NZCV.u0 = cond(x31);
			Eq_14 v41 = x19;
			*v41.u1 = x26;
			*((word32) v41 + 8) = x9;
			*((word32) x19 + 16) = x8;
			while (Test(NE,Z))
			{
				x22.u1 = x22 + (struct Eq_108996 *) -16;
				Eq_14 v43 = *x22.u1;
				word32 w1 = (word32) v43;
				x0.u1 = x22 + (struct Eq_108998 *) 0x08;
				fn000000000001C590();
				x31 = x21 - x22;
				NZCV.u0 = cond(x31);
			}
			if (x21 == 0x00)
			{
				struct Eq_95429 * v49 = (struct Eq_95429 *) (&sp->qw0008 + 7);
				x29 = v49->ptr0000;
				x30 = v49->qw0008;
				struct Eq_95438 * v50 = (struct Eq_95438 *) (&sp->qw0008 + 5);
				x20.u1 = v50->t0000.u1;
				x19.u1 = v50->t0008.u1;
				struct Eq_95447 * v51 = (struct Eq_95447 *) (&sp->qw0008 + 3);
				x22.u1 = v51->t0000.u1;
				x21.u1 = v51->t0008.u1;
				struct Eq_95456 * v52 = (struct Eq_95456 *) (&sp->qw0008 + 1);
				x24 = v52->qw0000;
				x23.u1 = v52->t0008.u1;
				struct Eq_95104 * v53 = sp;
				x26.u1 = v53->t0000.u1;
				x25 = v53->qw0008;
				sp = &sp->qw0008 + 9;
				return;
			}
			else
			{
				x0 = x21;
				struct Eq_95474 * v44 = (struct Eq_95474 *) (&sp->qw0008 + 7);
				x29 = v44->ptr0000;
				x30 = v44->qw0008;
				struct Eq_95483 * v45 = (struct Eq_95483 *) (&sp->qw0008 + 5);
				x20.u1 = v45->t0000.u1;
				x19.u1 = v45->t0008.u1;
				struct Eq_95492 * v46 = (struct Eq_95492 *) (&sp->qw0008 + 3);
				x22.u1 = v46->t0000.u1;
				x21.u1 = v46->t0008.u1;
				struct Eq_95501 * v47 = (struct Eq_95501 *) (&sp->qw0008 + 1);
				x24 = v47->qw0000;
				x23.u1 = v47->t0008.u1;
				struct Eq_95104 * v48 = sp;
				x26.u1 = v48->t0000.u1;
				x25 = v48->qw0008;
				sp = &sp->qw0008 + 9;
				((real64) q0, x0, x1);
				return;
			}
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x25 = 0x00 | 0xFFFFFFFFFFFFFFF;
	goto l0000000000046A68;
}

struct Eq_95189 g_t46AA4 = // 0000000000046AA4
	{
		
		{
			191
		},
		
		{
			223
		},
		
		{
			0x60
		},
	};
// 0000000000046BE0: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEEPSD_OT_
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJNS1_6detail7value_tEEEEvDpOT_
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEEPSD_OT_
{
	struct Eq_95525 * fp;
	struct Eq_95525 * sp = fp;
	sp -= 0x50;
	struct Eq_95530 * v6 = (struct Eq_95530 *) ((char *) &sp->t0020 + 16);
	struct Eq_95532 * x20;
	v6->ptr0000 = x20;
	Eq_95536 x19;
	v6->t0008.u1 = (struct Eq_108999 *) x19;
	struct Eq_95541 * v9 = (struct Eq_95541 *) ((char *) &sp->t0020 + 32);
	struct Eq_95543 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_95543 *) ((char *) &sp->t0020 + 32);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_95536 x8;
	x8.u1 = x20->t0028.u1;
	Eq_95536 x0;
	x19 = x0;
	x29->tFFFFFFE8.u1 = (struct Eq_108999 *) x8;
	struct Eq_95566 * v14 = (struct Eq_95566 *) &x0.u1->t0008.u0;
	Eq_95536 x9;
	x9.u1 = v14->t0000.u1;
	x8.u1 = v14->t0008.u1;
	Eq_95575 x31 = x9 - x8;
	Eq_95577 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	ui32 w9;
	union Eq_95536 * x1;
	byte * x11;
	word32 w1;
	Eq_95536 x10;
	if (Test(NE,Z))
	{
		x8.u1 = x8.u1->tFFFFFFF8.u1;
		Eq_95536 v19;
		v19.u0 = x8.u1->t0000.u0;
		w9 = (word32) v19;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_95700 * v20 = (struct Eq_95700 *) &x0.u1->t0008.u0;
			x8.u1 = v20->t0000.u1;
			x9.u1 = v20->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				x8.u1->t0008.u1 = (struct Eq_108999 *) 0x00;
				x9.u1 = x1->u1;
				ui32 w10 = 0x00 | 0x07;
				x8.u1->t0000.u0 = (byte) (byte) w10;
				x8.u1->t0008.u1 = (struct Eq_108999 *) x9;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = &x8.u1->t0010.u0;
				x0.u1->t0008.u1 = (struct Eq_108999 *) x8;
			}
			else
				fn000000000001B350();
			x8.u1 = x19.u1->t0010.u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x0 = x8 - 0x10;
		}
		else
		{
			x8.u1 = x1->u1;
			w9 = 0x00 | 0x07;
			sp->b0008 = (byte) w9;
			x11 = &sp->b0008;
			sp->t0010.u1 = (struct Eq_108999 *) x8;
			x8.u1 = x19.u1->t0020.u1;
			x0.u1 = x11 + 8;
			Eq_95536 v30;
			v30.u0 = x8.u1->t0000.u0;
			w1 = (word32) v30;
			x8.u1->t0000.u0 = (byte) (byte) w9;
			x9.u1 = sp->t0010.u1;
			sp->b0008 = (byte) w1;
			x10.u1 = x8.u1->t0008.u1;
			x8.u1->t0008.u1 = (struct Eq_108999 *) x9;
			sp->t0010.u1 = (struct Eq_108999 *) x10;
			fn000000000001C590();
			x0.u1 = x19.u1->t0020.u1;
		}
	}
	else
	{
		x8.u1 = x1->u1;
		w9 = 0x00 | 0x07;
		sp->b0018 = (byte) w9;
		x11 = &sp->b0018;
		sp->t0020.u1 = (struct Eq_108999 *) x8;
		x8.u1 = x19.u1->t0000.u1;
		x0.u1 = x11 + 8;
		Eq_95536 v26;
		v26.u0 = x8.u1->t0000.u0;
		w1 = (word32) v26;
		x8.u1->t0000.u0 = (byte) (byte) w9;
		x9.u1 = sp->t0020.u1;
		sp->b0018 = (byte) w1;
		x10.u1 = x8.u1->t0008.u1;
		x8.u1->t0008.u1 = (struct Eq_108999 *) x9;
		sp->t0020.u1 = (struct Eq_108999 *) x10;
		fn000000000001C590();
		x0.u1 = x19.u1->t0000.u1;
	}
	x8.u1 = x20->t0028.u1;
	x9.u1 = x29->tFFFFFFE8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_95767 * v28 = (struct Eq_95767 *) ((char *) &sp->t0020 + 32);
		x29 = v28->ptr0000;
		x30 = v28->qw0008;
		struct Eq_95776 * v29 = (struct Eq_95776 *) ((char *) &sp->t0020 + 16);
		x20 = v29->ptr0000;
		x19.u1 = v29->t0008.u1;
		sp = (struct Eq_95525 *) ((char *) &sp->t0020 + 48);
	}
}

// 0000000000046D14: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRdEEEvDpOT_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRdEEEvDpOT_
{
	Eq_14 x0;
	struct Eq_95786 * fp;
	struct Eq_95786 * sp = fp;
	sp = (struct Eq_95786 *) ((char *) sp - 64);
	uint64 x24;
	sp->qw0000 = x24;
	int64 x23;
	sp->qw0008 = x23;
	struct Eq_95799 * v8 = (struct Eq_95799 *) (&sp->qw0008 + 1);
	Eq_14 x22;
	v8->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v8->t0008.u1 = (size_t) x21;
	struct Eq_95810 * v11 = (struct Eq_95810 *) (&sp->qw0008 + 3);
	Eq_14 x20;
	v11->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v11->t0008.u1 = (size_t) x19;
	struct Eq_95821 * v14 = (struct Eq_95821 *) (&sp->qw0008 + 5);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = &sp->qw0008 + 5;
	Eq_14 v16 = x0;
	x19 = *v16.u1;
	x22 = *((word32) v16 + 8);
	x20 = x0;
	Eq_14 x8 = x22 - x19;
	x23 = x8 >> 4;
	x8 = x23 + 0x01;
	Eq_14 x9 = x8 >> 60;
	if (x9 != 0x00)
	{
		x0 = x20;
		fn000000000001B7E0();
		_ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEEPSD_OT_();
		return;
	}
	x9 = *((word32) x20 + 16);
	struct Eq_95858 * x10 = 0x00 | 0x7FFFFFFFFFFFFFE;
	Eq_14 x1;
	x21 = x1;
	x9 -= x19;
	Eq_95864 x31 = x10 - (x9 >> 4);
	Eq_95866 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 3;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x24 = Test(ULT,C) ? x8 : x9;
		if (x24 == 0x00)
		{
			x0.u0 = 0x00;
			goto l0000000000046D8C;
		}
		x8 = x24 >> 60;
		if (x8 == 0x00)
		{
l0000000000046D84:
			x0 = x24 << 4;
			_Znwm();
l0000000000046D8C:
			x9 = *x21.u1;
			struct Eq_95896 * x11 = x0 + (x23 << 4);
			x8.u1 = x0 + (x24 << 4);
			ui32 w12 = 0x00 | 0x07;
			x10 = x22 - x19;
			NZCV.u0 = cond(x10);
			x11->t0008.u1 = (size_t) x9;
			x9.u1 = x11 + (struct Eq_109005 *) 0x10;
			x11->t0000.u0 = (byte) (byte) w12;
			bool Z;
			if (Test(NE,Z))
			{
				x10 -= 0x10;
				Eq_14 x12;
				x12.u0 = ~0x00;
				x10 = x12 ^ x10 >> 4;
				x10 = &x10->t0000.u0 + x23;
				x11 -= 0x08;
				do
				{
					x22.u1 = (word32) x22 - 16;
					byte v28 = (byte) *x22.u1;
					w12 = (word32) v28;
					x11->tFFFFFFF8.u0 = (byte) (byte) w12;
					x12 = *((word32) x22 + 8);
					x31 = x19 - x22;
					NZCV.u0 = cond(x31);
					x11->t0000.u1 = (size_t) x12;
					x11 = (struct Eq_95896 *) ((char *) x11 - 16);
					x22.u1->u0 = 0x00;
					((word32) x22 + 8)->u0 = 0x00;
				} while (Test(NE,Z));
				Eq_14 v29 = x20;
				x19 = *v29.u1;
				x21 = *((word32) v29 + 8);
				x10 = x0 + (x10 << 4);
				Eq_14 v30 = x20;
				v30.u1->u1 = x10;
				*((word32) v30 + 8) = x9;
				*((word32) x20 + 16) = x8;
				x31 = x21 - x19;
				NZCV.u0 = cond(x31);
				while (Test(NE,Z))
				{
					x21.u1 = (word32) x21 - 16;
					Eq_14 v32 = *x21.u1;
					word32 w1 = (word32) v32;
					x0.u1 = (word32) x21 + 8;
					fn000000000001C590();
					x31 = x19 - x21;
					NZCV.u0 = cond(x31);
				}
				if (x19 != 0x00)
				{
l0000000000046E14:
					x0 = x19;
					struct Eq_96026 * v33 = (struct Eq_96026 *) (&sp->qw0008 + 5);
					x29 = v33->ptr0000;
					x30 = v33->qw0008;
					struct Eq_96035 * v34 = (struct Eq_96035 *) (&sp->qw0008 + 3);
					x20.u1 = v34->t0000.u1;
					x19.u1 = v34->t0008.u1;
					struct Eq_96044 * v35 = (struct Eq_96044 *) (&sp->qw0008 + 1);
					x22.u1 = v35->t0000.u1;
					x21.u1 = v35->t0008.u1;
					struct Eq_95786 * v36 = sp;
					x24 = v36->qw0000;
					x23 = v36->qw0008;
					sp = &sp->qw0008 + 7;
					word128 q0;
					((real64) q0, x0, x1);
					return;
				}
			}
			else
			{
				Eq_14 v38 = x20;
				v38.u1->u1 = x11;
				*((word32) v38 + 8) = x9;
				*((word32) x20 + 16) = x8;
				if (x19 != 0x00)
					goto l0000000000046E14;
			}
			struct Eq_95990 * v39 = (struct Eq_95990 *) (&sp->qw0008 + 5);
			x29 = v39->ptr0000;
			x30 = v39->qw0008;
			struct Eq_95999 * v40 = (struct Eq_95999 *) (&sp->qw0008 + 3);
			x20.u1 = v40->t0000.u1;
			x19.u1 = v40->t0008.u1;
			struct Eq_96008 * v41 = (struct Eq_96008 *) (&sp->qw0008 + 1);
			x22.u1 = v41->t0000.u1;
			x21.u1 = v41->t0008.u1;
			struct Eq_95786 * v42 = sp;
			x24 = v42->qw0000;
			x23 = v42->qw0008;
			sp = &sp->qw0008 + 7;
			return;
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x24 = 0x00 | 0xFFFFFFFFFFFFFFF;
	goto l0000000000046D84;
}

// 0000000000046E5C: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEEPSD_OT_
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRdEEEvDpOT_
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEEPSD_OT_
{
	struct Eq_96093 * fp;
	struct Eq_96093 * sp = fp;
	sp -= 0x50;
	struct Eq_96098 * v6 = (struct Eq_96098 *) ((char *) &sp->t0020 + 16);
	struct Eq_96100 * x20;
	v6->ptr0000 = x20;
	Eq_96104 x19;
	v6->t0008.u1 = (struct Eq_109007 *) x19;
	struct Eq_96109 * v9 = (struct Eq_96109 *) ((char *) &sp->t0020 + 32);
	struct Eq_96111 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_96111 *) ((char *) &sp->t0020 + 32);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_96104 x8;
	x8.u1 = x20->t0028.u1;
	Eq_96104 x0;
	x19 = x0;
	x29->tFFFFFFE8.u1 = (struct Eq_109007 *) x8;
	struct Eq_96134 * v14 = (struct Eq_96134 *) &x0.u1->t0008.u0;
	Eq_96104 x9;
	x9.u1 = v14->t0000.u1;
	x8.u1 = v14->t0008.u1;
	ptr64 x31 = x9 - x8;
	Eq_96145 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	ui32 w9;
	byte * x1;
	word32 w8;
	byte * x11;
	word32 w1;
	Eq_96104 x10;
	if (Test(NE,Z))
	{
		x8.u1 = x8.u1->tFFFFFFF8.u1;
		Eq_96104 v19;
		v19.u0 = x8.u1->t0000.u0;
		w9 = (word32) v19;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_96273 * v20 = (struct Eq_96273 *) &x0.u1->t0008.u0;
			x8.u1 = v20->t0000.u1;
			x9.u1 = v20->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				x8.u1->t0008.u1 = (struct Eq_109007 *) 0x00;
				byte v23 = *x1;
				w9 = (word32) v23;
				ui32 w10 = 0x00 | 0x04;
				x8.u1->t0000.u0 = (byte) (byte) w10;
				x8.u1->t0008.u1 = (struct Eq_109007 *) x9;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = &x8.u1->t0010.u0;
				x0.u1->t0008.u1 = (struct Eq_109007 *) x8;
			}
			else
				fn000000000001BCB0();
			x8.u1 = x19.u1->t0010.u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x0 = x8 - 0x10;
		}
		else
		{
			byte v33 = *x1;
			w8 = (word32) v33;
			w9 = 0x00 | 0x04;
			sp->b0008 = (byte) w9;
			x11 = &sp->b0008;
			sp->t0010.u1 = (struct Eq_109007 *) x8;
			x8.u1 = x19.u1->t0020.u1;
			x0.u1 = x11 + 8;
			Eq_96104 v34;
			v34.u0 = x8.u1->t0000.u0;
			w1 = (word32) v34;
			x8.u1->t0000.u0 = (byte) (byte) w9;
			x9.u1 = sp->t0010.u1;
			sp->b0008 = (byte) w1;
			x10.u1 = x8.u1->t0008.u1;
			x8.u1->t0008.u1 = (struct Eq_109007 *) x9;
			sp->t0010.u1 = (struct Eq_109007 *) x10;
			fn000000000001C590();
			x0.u1 = x19.u1->t0020.u1;
		}
	}
	else
	{
		byte v26 = *x1;
		w8 = (word32) v26;
		w9 = 0x00 | 0x04;
		sp->b0018 = (byte) w9;
		x11 = &sp->b0018;
		sp->t0020.u1 = (struct Eq_109007 *) x8;
		x8.u1 = x19.u1->t0000.u1;
		x0.u1 = x11 + 8;
		Eq_96104 v29;
		v29.u0 = x8.u1->t0000.u0;
		w1 = (word32) v29;
		x8.u1->t0000.u0 = (byte) (byte) w9;
		x9.u1 = sp->t0020.u1;
		sp->b0018 = (byte) w1;
		x10.u1 = x8.u1->t0008.u1;
		x8.u1->t0008.u1 = (struct Eq_109007 *) x9;
		sp->t0020.u1 = (struct Eq_109007 *) x10;
		fn000000000001C590();
		x0.u1 = x19.u1->t0000.u1;
	}
	x8.u1 = x20->t0028.u1;
	x9.u1 = x29->tFFFFFFE8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_96342 * v31 = (struct Eq_96342 *) ((char *) &sp->t0020 + 32);
		x29 = v31->ptr0000;
		x30 = v31->qw0008;
		struct Eq_96351 * v32 = (struct Eq_96351 *) ((char *) &sp->t0020 + 16);
		x20 = v32->ptr0000;
		x19.u1 = v32->t0008.u1;
		sp = (struct Eq_96093 *) ((char *) &sp->t0020 + 48);
	}
}

// 0000000000046F90: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRbEEEvDpOT_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRbEEEvDpOT_
{
	Eq_14 x0;
	struct Eq_96361 * fp;
	struct Eq_96361 * sp = fp;
	sp = (struct Eq_96361 *) ((char *) sp - 64);
	uint64 x24;
	sp->qw0000 = x24;
	int64 x23;
	sp->qw0008 = x23;
	struct Eq_96374 * v8 = (struct Eq_96374 *) (&sp->qw0008 + 1);
	Eq_14 x22;
	v8->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v8->t0008.u1 = (size_t) x21;
	struct Eq_96385 * v11 = (struct Eq_96385 *) (&sp->qw0008 + 3);
	Eq_14 x20;
	v11->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v11->t0008.u1 = (size_t) x19;
	struct Eq_96396 * v14 = (struct Eq_96396 *) (&sp->qw0008 + 5);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = &sp->qw0008 + 5;
	Eq_14 v16 = x0;
	x19 = *v16.u1;
	x22 = *((word32) v16 + 8);
	x20 = x0;
	Eq_14 x8 = x22 - x19;
	x23 = x8 >> 4;
	x8 = x23 + 0x01;
	Eq_14 x9 = x8 >> 60;
	if (x9 != 0x00)
	{
		x0 = x20;
		fn000000000001B7E0();
		_ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEEPSD_OT_();
		return;
	}
	x9 = *((word32) x20 + 16);
	struct Eq_96433 * x10 = 0x00 | 0x7FFFFFFFFFFFFFE;
	Eq_14 x1;
	x21 = x1;
	x9 -= x19;
	Eq_96439 x31 = x10 - (x9 >> 4);
	Eq_96441 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 3;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x24 = Test(ULT,C) ? x8 : x9;
		if (x24 == 0x00)
		{
			x0.u0 = 0x00;
			goto l0000000000047008;
		}
		x8 = x24 >> 60;
		if (x8 == 0x00)
		{
l0000000000047000:
			x0 = x24 << 4;
			_Znwm();
l0000000000047008:
			byte v25 = (byte) *x21.u1;
			word32 w9 = (word32) v25;
			struct Eq_96471 * x11 = x0 + (x23 << 4);
			x8.u1 = x0 + (x24 << 4);
			ui32 w12 = 0x00 | 0x04;
			x10 = x22 - x19;
			NZCV.u0 = cond(x10);
			x11->t0008.u1 = (size_t) x9;
			x9.u1 = x11 + (struct Eq_109013 *) 0x10;
			x11->t0000.u0 = (byte) (byte) w12;
			bool Z;
			if (Test(NE,Z))
			{
				x10 -= 0x10;
				Eq_14 x12;
				x12.u0 = ~0x00;
				x10 = x12 ^ x10 >> 4;
				x10 = &x10->t0000.u0 + x23;
				x11 -= 0x08;
				do
				{
					x22.u1 = (word32) x22 - 16;
					byte v30 = (byte) *x22.u1;
					w12 = (word32) v30;
					x11->tFFFFFFF8.u0 = (byte) (byte) w12;
					x12 = *((word32) x22 + 8);
					x31 = x19 - x22;
					NZCV.u0 = cond(x31);
					x11->t0000.u1 = (size_t) x12;
					x11 = (struct Eq_96471 *) ((char *) x11 - 16);
					x22.u1->u0 = 0x00;
					((word32) x22 + 8)->u0 = 0x00;
				} while (Test(NE,Z));
				Eq_14 v31 = x20;
				x19 = *v31.u1;
				x21 = *((word32) v31 + 8);
				x10 = x0 + (x10 << 4);
				Eq_14 v32 = x20;
				v32.u1->u1 = x10;
				*((word32) v32 + 8) = x9;
				*((word32) x20 + 16) = x8;
				x31 = x21 - x19;
				NZCV.u0 = cond(x31);
				while (Test(NE,Z))
				{
					x21.u1 = (word32) x21 - 16;
					byte v34 = (byte) *x21.u1;
					word32 w1 = (word32) v34;
					x0.u1 = (word32) x21 + 8;
					fn000000000001C590();
					x31 = x19 - x21;
					NZCV.u0 = cond(x31);
				}
				if (x19 != 0x00)
				{
l0000000000047090:
					x0 = x19;
					struct Eq_96601 * v35 = (struct Eq_96601 *) (&sp->qw0008 + 5);
					x29 = v35->ptr0000;
					x30 = v35->qw0008;
					struct Eq_96610 * v36 = (struct Eq_96610 *) (&sp->qw0008 + 3);
					x20.u1 = v36->t0000.u1;
					x19.u1 = v36->t0008.u1;
					struct Eq_96619 * v37 = (struct Eq_96619 *) (&sp->qw0008 + 1);
					x22.u1 = v37->t0000.u1;
					x21.u1 = v37->t0008.u1;
					struct Eq_96361 * v38 = sp;
					x24 = v38->qw0000;
					x23 = v38->qw0008;
					sp = &sp->qw0008 + 7;
					word128 q0;
					((real64) q0, x0, x1);
					return;
				}
			}
			else
			{
				Eq_14 v40 = x20;
				v40.u1->u1 = x11;
				*((word32) v40 + 8) = x9;
				*((word32) x20 + 16) = x8;
				if (x19 != 0x00)
					goto l0000000000047090;
			}
			struct Eq_96565 * v41 = (struct Eq_96565 *) (&sp->qw0008 + 5);
			x29 = v41->ptr0000;
			x30 = v41->qw0008;
			struct Eq_96574 * v42 = (struct Eq_96574 *) (&sp->qw0008 + 3);
			x20.u1 = v42->t0000.u1;
			x19.u1 = v42->t0008.u1;
			struct Eq_96583 * v43 = (struct Eq_96583 *) (&sp->qw0008 + 1);
			x22.u1 = v43->t0000.u1;
			x21.u1 = v43->t0008.u1;
			struct Eq_96361 * v44 = sp;
			x24 = v44->qw0000;
			x23 = v44->qw0008;
			sp = &sp->qw0008 + 7;
			return;
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x24 = 0x00 | 0xFFFFFFFFFFFFFFF;
	goto l0000000000047000;
}

// 00000000000470D8: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEEPSD_OT_
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRbEEEvDpOT_
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEEPSD_OT_
{
	struct Eq_96671 * fp;
	struct Eq_96671 * sp = fp;
	sp -= 0x50;
	struct Eq_96676 * v6 = (struct Eq_96676 *) ((char *) &sp->t0020 + 16);
	struct Eq_96678 * x20;
	v6->ptr0000 = x20;
	Eq_96682 x19;
	v6->t0008.u1 = (struct Eq_109015 *) x19;
	struct Eq_96687 * v9 = (struct Eq_96687 *) ((char *) &sp->t0020 + 32);
	struct Eq_96689 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_96689 *) ((char *) &sp->t0020 + 32);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_96682 x8;
	x8.u1 = x20->t0028.u1;
	Eq_96682 x0;
	x19 = x0;
	x29->tFFFFFFE8.u1 = (struct Eq_109015 *) x8;
	struct Eq_96712 * v14 = (struct Eq_96712 *) &x0.u1->t0008.u0;
	Eq_96682 x9;
	x9.u1 = v14->t0000.u1;
	x8.u1 = v14->t0008.u1;
	ptr64 x31 = x9 - x8;
	Eq_96723 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	byte * x11;
	word32 w1;
	Eq_96682 x10;
	if (Test(NE,Z))
	{
		x8.u1 = x8.u1->tFFFFFFF8.u1;
		Eq_96682 v19;
		v19.u0 = x8.u1->t0000.u0;
		word32 w9 = (word32) v19;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_96835 * v20 = (struct Eq_96835 *) &x0.u1->t0008.u0;
			x8.u1 = v20->t0000.u1;
			x9.u1 = v20->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				x8.u1->t0000.u0 = 0x00;
				x8.u1->t0008.u1 = (struct Eq_109015 *) 0x00;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = &x8.u1->t0010.u0;
				x0.u1->t0008.u1 = (struct Eq_109015 *) x8;
			}
			else
				fn000000000001B080();
			x8.u1 = x19.u1->t0010.u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x0 = x8 - 0x10;
		}
		else
		{
			sp->b0008 = 0x00;
			sp->t0010.u1 = (struct Eq_109015 *) 0x00;
			x8.u1 = x19.u1->t0020.u1;
			x11 = &sp->b0008;
			x0.u1 = x11 + 8;
			Eq_96682 v28;
			v28.u0 = x8.u1->t0000.u0;
			w1 = (word32) v28;
			x8.u1->t0000.u0 = 0x00;
			x9.u1 = sp->t0010.u1;
			sp->b0008 = (byte) w1;
			x10.u1 = x8.u1->t0008.u1;
			x8.u1->t0008.u1 = (struct Eq_109015 *) x9;
			sp->t0010.u1 = (struct Eq_109015 *) x10;
			fn000000000001C590();
			x0.u1 = x19.u1->t0020.u1;
		}
	}
	else
	{
		sp->b0018 = 0x00;
		sp->t0020.u1 = (struct Eq_109015 *) 0x00;
		x8.u1 = x19.u1->t0000.u1;
		x11 = &sp->b0018;
		x0.u1 = x11 + 8;
		Eq_96682 v24;
		v24.u0 = x8.u1->t0000.u0;
		w1 = (word32) v24;
		x8.u1->t0000.u0 = 0x00;
		x9.u1 = sp->t0020.u1;
		sp->b0018 = (byte) w1;
		x10.u1 = x8.u1->t0008.u1;
		x8.u1->t0008.u1 = (struct Eq_109015 *) x9;
		sp->t0020.u1 = (struct Eq_109015 *) x10;
		fn000000000001C590();
		x0.u1 = x19.u1->t0000.u1;
	}
	x8.u1 = x20->t0028.u1;
	x9.u1 = x29->tFFFFFFE8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_96892 * v26 = (struct Eq_96892 *) ((char *) &sp->t0020 + 32);
		x29 = v26->ptr0000;
		x30 = v26->qw0008;
		struct Eq_96901 * v27 = (struct Eq_96901 *) ((char *) &sp->t0020 + 16);
		x20 = v27->ptr0000;
		x19.u1 = v27->t0008.u1;
		sp = (struct Eq_96671 *) ((char *) &sp->t0020 + 48);
	}
}

// 00000000000471F0: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJDnEEEvDpOT_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJDnEEEvDpOT_
{
	Eq_14 x0;
	uint64 * fp;
	uint64 * sp = fp;
	sp += -8;
	uint64 x23;
	*sp = x23;
	struct Eq_96920 * v7 = (struct Eq_96920 *) (sp + 2);
	int64 x22;
	v7->qw0000 = x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_96931 * v10 = (struct Eq_96931 *) (sp + 4);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_96942 * v13 = (struct Eq_96942 *) (sp + 6);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = sp + 6;
	Eq_14 v15 = x0;
	x19 = *v15.u1;
	x21 = *((word32) v15 + 8);
	x20 = x0;
	Eq_14 x8 = x21 - x19;
	x22 = x8 >> 4;
	x8 = x22 + 0x01;
	Eq_14 x9 = x8 >> 60;
	if (x9 != 0x00)
	{
		x0 = x20;
		fn000000000001B7E0();
		_ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEEPSD_OT_();
		return;
	}
	x9 = *((word32) x20 + 16);
	Eq_96979 x10 = 0x00 | 0x7FFFFFFFFFFFFFE;
	x9 -= x19;
	Eq_96984 x31 = x10 - (x9 >> 4);
	Eq_96986 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 3;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x23 = Test(ULT,C) ? x8 : x9;
		if (x23 == 0x00)
		{
			x0.u0 = 0x00;
			goto l0000000000047264;
		}
		x8 = x23 >> 60;
		if (x8 == 0x00)
		{
l000000000004725C:
			x0 = x23 << 4;
			_Znwm();
l0000000000047264:
			Eq_97016 x11;
			x11.u0 = x0 + (x22 << 4);
			x8.u1 = x0 + (x23 << 4);
			x10 = x21 - x19;
			NZCV.u0 = cond(x10);
			x9.u1 = x11 + 0x10;
			x11.u1->t0000.u0 = 0x00;
			x11.u1->t0008.u1 = (size_t) 0x00;
			bool Z;
			if (Test(NE,Z))
			{
				x10 -= 0x10;
				Eq_14 x12;
				x12.u0 = ~0x00;
				x10 = x12 ^ x10 >> 4;
				x10.u0 = (char *) x10.u0 + x22;
				x11 -= 0x08;
				do
				{
					x21.u1 = (word32) x21 - 16;
					byte v26 = (byte) *x21.u1;
					word32 w12 = (word32) v26;
					x11.u1->tFFFFFFF8.u0 = (byte) (byte) w12;
					x12 = *((word32) x21 + 8);
					x31 = x19 - x21;
					NZCV.u0 = cond(x31);
					*x11.u0 = (word64) x12;
					x11.u0 = (word32) x11 - 16;
					x21.u1->u0 = 0x00;
					((word32) x21 + 8)->u0 = 0x00;
				} while (Test(NE,Z));
				Eq_14 v27 = x20;
				x19 = *v27.u1;
				x21 = *((word32) v27 + 8);
				x10.u0 = x0 + (x10 << 4);
				Eq_14 v28 = x20;
				v28.u1->u1 = x10;
				*((word32) v28 + 8) = x9;
				*((word32) x20 + 16) = x8;
				x31 = x21 - x19;
				NZCV.u0 = cond(x31);
				while (Test(NE,Z))
				{
					x21.u1 = (word32) x21 - 16;
					byte v30 = (byte) *x21.u1;
					word32 w1 = (word32) v30;
					x0.u1 = (word32) x21 + 8;
					fn000000000001C590();
					x31 = x19 - x21;
					NZCV.u0 = cond(x31);
				}
				if (x19 != 0x00)
				{
l00000000000472E4:
					x0 = x19;
					struct Eq_97142 * v31 = (struct Eq_97142 *) (sp + 6);
					x29 = v31->ptr0000;
					x30 = v31->qw0008;
					struct Eq_97151 * v32 = (struct Eq_97151 *) (sp + 4);
					x20.u1 = v32->t0000.u1;
					x19.u1 = v32->t0008.u1;
					struct Eq_97160 * v33 = (struct Eq_97160 *) (sp + 2);
					x22 = v33->qw0000;
					x21.u1 = v33->t0008.u1;
					x23 = *sp;
					sp += 8;
					word128 q0;
					void * x1;
					((real64) q0, x0, x1);
					return;
				}
			}
			else
			{
				Eq_14 v36 = x20;
				v36.u1->u1 = x11;
				*((word32) v36 + 8) = x9;
				*((word32) x20 + 16) = x8;
				if (x19 != 0x00)
					goto l00000000000472E4;
			}
			struct Eq_97110 * v37 = (struct Eq_97110 *) (sp + 6);
			x29 = v37->ptr0000;
			x30 = v37->qw0008;
			struct Eq_97119 * v38 = (struct Eq_97119 *) (sp + 4);
			x20.u1 = v38->t0000.u1;
			x19.u1 = v38->t0008.u1;
			struct Eq_97128 * v39 = (struct Eq_97128 *) (sp + 2);
			x22 = v39->qw0000;
			x21.u1 = v39->t0008.u1;
			x23 = *sp;
			sp += 8;
			return;
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + 0x0569;
		fn00000000000373A8();
	}
	x23 = 0x00 | 0xFFFFFFFFFFFFFFF;
	goto l000000000004725C;
}

// 000000000004732C: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEEPSD_OT_
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJDnEEEvDpOT_
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEEPSD_OT_
{
	struct Eq_97201 * fp;
	struct Eq_97201 * sp = fp;
	sp -= 0x50;
	struct Eq_97206 * v6 = (struct Eq_97206 *) ((char *) &sp->t0020 + 16);
	struct Eq_97208 * x20;
	v6->ptr0000 = x20;
	Eq_97212 x19;
	v6->t0008.u1 = (struct Eq_109017 *) x19;
	struct Eq_97217 * v9 = (struct Eq_97217 *) ((char *) &sp->t0020 + 32);
	struct Eq_97219 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_97219 *) ((char *) &sp->t0020 + 32);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_97212 x8;
	x8.u1 = x20->t0028.u1;
	Eq_97212 x0;
	x19 = x0;
	x29->tFFFFFFE8.u1 = (struct Eq_109017 *) x8;
	struct Eq_97242 * v14 = (struct Eq_97242 *) &x0.u1->t0008.u0;
	Eq_97212 x9;
	x9.u1 = v14->t0000.u1;
	x8.u1 = v14->t0008.u1;
	Eq_97251 x31 = x9 - x8;
	Eq_97253 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	word32 w9;
	union Eq_97212 * x1;
	byte * x11;
	word32 w1;
	Eq_97212 x10;
	if (Test(NE,Z))
	{
		x8.u1 = x8.u1->tFFFFFFF8.u1;
		Eq_97212 v19;
		v19.u0 = x8.u1->t0000.u0;
		w9 = (word32) v19;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_97372 * v20 = (struct Eq_97372 *) &x0.u1->t0008.u0;
			x8.u1 = v20->t0000.u1;
			x9.u1 = v20->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				x8.u1->t0008.u1 = (struct Eq_109017 *) 0x00;
				x9.u1 = x1->u1;
				word32 w10 = 0x05;
				x8.u1->t0000.u0 = (byte) (byte) w10;
				x8.u1->t0008.u1 = (struct Eq_109017 *) x9;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = &x8.u1->t0010.u0;
				x0.u1->t0008.u1 = (struct Eq_109017 *) x8;
			}
			else
				fn000000000001ADD0();
			x8.u1 = x19.u1->t0010.u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x0 = x8 - 0x10;
		}
		else
		{
			x8.u1 = x1->u1;
			w9 = 0x05;
			sp->b0008 = (byte) w9;
			x11 = &sp->b0008;
			sp->t0010.u1 = (struct Eq_109017 *) x8;
			x8.u1 = x19.u1->t0020.u1;
			x0.u1 = x11 + 8;
			Eq_97212 v30;
			v30.u0 = x8.u1->t0000.u0;
			w1 = (word32) v30;
			x8.u1->t0000.u0 = (byte) (byte) w9;
			x9.u1 = sp->t0010.u1;
			sp->b0008 = (byte) w1;
			x10.u1 = x8.u1->t0008.u1;
			x8.u1->t0008.u1 = (struct Eq_109017 *) x9;
			sp->t0010.u1 = (struct Eq_109017 *) x10;
			fn000000000001C590();
			x0.u1 = x19.u1->t0020.u1;
		}
	}
	else
	{
		x8.u1 = x1->u1;
		w9 = 0x05;
		sp->b0018 = (byte) w9;
		x11 = &sp->b0018;
		sp->t0020.u1 = (struct Eq_109017 *) x8;
		x8.u1 = x19.u1->t0000.u1;
		x0.u1 = x11 + 8;
		Eq_97212 v26;
		v26.u0 = x8.u1->t0000.u0;
		w1 = (word32) v26;
		x8.u1->t0000.u0 = (byte) (byte) w9;
		x9.u1 = sp->t0020.u1;
		sp->b0018 = (byte) w1;
		x10.u1 = x8.u1->t0008.u1;
		x8.u1->t0008.u1 = (struct Eq_109017 *) x9;
		sp->t0020.u1 = (struct Eq_109017 *) x10;
		fn000000000001C590();
		x0.u1 = x19.u1->t0000.u1;
	}
	x8.u1 = x20->t0028.u1;
	x9.u1 = x29->tFFFFFFE8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_97437 * v28 = (struct Eq_97437 *) ((char *) &sp->t0020 + 32);
		x29 = v28->ptr0000;
		x30 = v28->qw0008;
		struct Eq_97446 * v29 = (struct Eq_97446 *) ((char *) &sp->t0020 + 16);
		x20 = v29->ptr0000;
		x19.u1 = v29->t0008.u1;
		sp = (struct Eq_97201 *) ((char *) &sp->t0020 + 48);
	}
}

// 0000000000047460: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRlEEEvDpOT_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRlEEEvDpOT_
{
	Eq_14 x0;
	struct Eq_97456 * fp;
	struct Eq_97456 * sp = fp;
	sp = (struct Eq_97456 *) ((char *) sp - 64);
	uint64 x24;
	sp->qw0000 = x24;
	int64 x23;
	sp->qw0008 = x23;
	struct Eq_97469 * v8 = (struct Eq_97469 *) (&sp->qw0008 + 1);
	Eq_14 x22;
	v8->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v8->t0008.u1 = (size_t) x21;
	struct Eq_97480 * v11 = (struct Eq_97480 *) (&sp->qw0008 + 3);
	Eq_14 x20;
	v11->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v11->t0008.u1 = (size_t) x19;
	struct Eq_97491 * v14 = (struct Eq_97491 *) (&sp->qw0008 + 5);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = &sp->qw0008 + 5;
	Eq_14 v16 = x0;
	x19 = *v16.u1;
	x22 = *((word32) v16 + 8);
	x20 = x0;
	Eq_14 x8 = x22 - x19;
	x23 = x8 >> 4;
	x8 = x23 + 0x01;
	Eq_14 x9 = x8 >> 60;
	if (x9 != 0x00)
	{
		x0 = x20;
		fn000000000001B7E0();
		_ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EEPSD_OT_();
		return;
	}
	x9 = *((word32) x20 + 16);
	struct Eq_97528 * x10 = 0x00 | 0x7FFFFFFFFFFFFFE;
	Eq_14 x1;
	x21 = x1;
	x9 -= x19;
	Eq_97534 x31 = x10 - (x9 >> 4);
	Eq_97536 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 3;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x24 = Test(ULT,C) ? x8 : x9;
		if (x24 == 0x00)
		{
			x0.u0 = 0x00;
			goto l00000000000474D8;
		}
		x8 = x24 >> 60;
		if (x8 == 0x00)
		{
l00000000000474D0:
			x0 = x24 << 4;
			_Znwm();
l00000000000474D8:
			x9 = *x21.u1;
			struct Eq_97566 * x11 = x0 + (x23 << 4);
			x8.u1 = x0 + (x24 << 4);
			word32 w12 = 0x05;
			x10 = x22 - x19;
			NZCV.u0 = cond(x10);
			x11->t0008.u1 = (size_t) x9;
			x9.u1 = x11 + (struct Eq_109023 *) 0x10;
			x11->t0000.u0 = (byte) (byte) w12;
			bool Z;
			if (Test(NE,Z))
			{
				x10 -= 0x10;
				Eq_14 x12;
				x12.u0 = ~0x00;
				x10 = x12 ^ x10 >> 4;
				x10 = &x10->t0000.u0 + x23;
				x11 -= 0x08;
				do
				{
					x22.u1 = (word32) x22 - 16;
					byte v28 = (byte) *x22.u1;
					w12 = (word32) v28;
					x11->tFFFFFFF8.u0 = (byte) (byte) w12;
					x12 = *((word32) x22 + 8);
					x31 = x19 - x22;
					NZCV.u0 = cond(x31);
					x11->t0000.u1 = (size_t) x12;
					x11 = (struct Eq_97566 *) ((char *) x11 - 16);
					x22.u1->u0 = 0x00;
					((word32) x22 + 8)->u0 = 0x00;
				} while (Test(NE,Z));
				Eq_14 v29 = x20;
				x19 = *v29.u1;
				x21 = *((word32) v29 + 8);
				x10 = x0 + (x10 << 4);
				Eq_14 v30 = x20;
				v30.u1->u1 = x10;
				*((word32) v30 + 8) = x9;
				*((word32) x20 + 16) = x8;
				x31 = x21 - x19;
				NZCV.u0 = cond(x31);
				while (Test(NE,Z))
				{
					x21.u1 = (word32) x21 - 16;
					Eq_14 v32 = *x21.u1;
					word32 w1 = (word32) v32;
					x0.u1 = (word32) x21 + 8;
					fn000000000001C590();
					x31 = x19 - x21;
					NZCV.u0 = cond(x31);
				}
				if (x19 != 0x00)
				{
l0000000000047560:
					x0 = x19;
					struct Eq_97696 * v33 = (struct Eq_97696 *) (&sp->qw0008 + 5);
					x29 = v33->ptr0000;
					x30 = v33->qw0008;
					struct Eq_97705 * v34 = (struct Eq_97705 *) (&sp->qw0008 + 3);
					x20.u1 = v34->t0000.u1;
					x19.u1 = v34->t0008.u1;
					struct Eq_97714 * v35 = (struct Eq_97714 *) (&sp->qw0008 + 1);
					x22.u1 = v35->t0000.u1;
					x21.u1 = v35->t0008.u1;
					struct Eq_97456 * v36 = sp;
					x24 = v36->qw0000;
					x23 = v36->qw0008;
					sp = &sp->qw0008 + 7;
					word128 q0;
					((real64) q0, x0, x1);
					return;
				}
			}
			else
			{
				Eq_14 v38 = x20;
				v38.u1->u1 = x11;
				*((word32) v38 + 8) = x9;
				*((word32) x20 + 16) = x8;
				if (x19 != 0x00)
					goto l0000000000047560;
			}
			struct Eq_97660 * v39 = (struct Eq_97660 *) (&sp->qw0008 + 5);
			x29 = v39->ptr0000;
			x30 = v39->qw0008;
			struct Eq_97669 * v40 = (struct Eq_97669 *) (&sp->qw0008 + 3);
			x20.u1 = v40->t0000.u1;
			x19.u1 = v40->t0008.u1;
			struct Eq_97678 * v41 = (struct Eq_97678 *) (&sp->qw0008 + 1);
			x22.u1 = v41->t0000.u1;
			x21.u1 = v41->t0008.u1;
			struct Eq_97456 * v42 = sp;
			x24 = v42->qw0000;
			x23 = v42->qw0008;
			sp = &sp->qw0008 + 7;
			return;
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x24 = 0x00 | 0xFFFFFFFFFFFFFFF;
	goto l00000000000474D0;
}

// 00000000000475A8: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EEPSD_OT_
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRlEEEvDpOT_
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EEPSD_OT_
{
	struct Eq_97761 * fp;
	struct Eq_97761 * sp = fp;
	sp -= 0x60;
	struct Eq_97766 * v6 = (struct Eq_97766 *) ((char *) &sp->ptr0028 + 8);
	struct Eq_97768 * x22;
	v6->ptr0000 = x22;
	struct Eq_97772 * x21;
	v6->ptr0008 = x21;
	struct Eq_97777 * v9 = (struct Eq_97777 *) ((char *) &sp->ptr0028 + 24);
	struct Eq_97779 * x20;
	v9->ptr0000 = x20;
	struct Eq_97779 * x19;
	v9->ptr0008 = x19;
	struct Eq_97788 * v12 = (struct Eq_97788 *) ((char *) &sp->ptr0028 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->ptr0028 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	struct Eq_97779 * x8 = x21->ptr0028;
	struct Eq_97779 * x0;
	x19 = x0;
	sp->ptr0028 = x8;
	struct Eq_97813 * v17 = (struct Eq_97813 *) &x0->ptr0008;
	struct Eq_97779 * x9 = v17->ptr0000;
	x8 = v17->ptr0008;
	Eq_97822 x31 = x9 - x8;
	Eq_97824 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	struct Eq_97779 * x1;
	ui32 w22;
	word32 w1;
	struct Eq_97779 * x10;
	if (Test(NE,Z))
	{
		x8 = x8->ptrFFFFFFF8;
		byte v22 = (byte) x8->ptr0000;
		word32 w9 = (word32) v22;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x20 = x8->ptr0008;
			struct Eq_97943 * v23 = (struct Eq_97943 *) &x20->ptr0008;
			x22 = v23->ptr0000;
			x8 = v23->ptr0008;
			x31 = x22 - x8;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				ui32 w8 = 0x00 | 0x03;
				x0 = x1;
				x22->ptr0008 = null;
				x22->b0000 = (byte) w8;
				fn000000000001C190();
				x22->ptr0008 = x0;
				x8 = x20->ptr0008;
				x8 = (struct Eq_97779 *) &x8->ptr0010;
				x20->ptr0008 = x8;
			}
			else
			{
				x0 = x20;
				fn000000000001B0A0();
			}
			x8 = x19->ptr0010;
			x8 = x8->ptrFFFFFFF8;
			x8 = x8->ptr0008;
			x8 = x8->ptr0008;
			x0 = x8 - 0x10;
		}
		else
		{
			x8 = (struct Eq_97779 *) &sp->b0008;
			w22 = 0x00 | 0x03;
			x0 = x1;
			x20 = (struct Eq_97779 *) &x8->ptr0008;
			sp->b0008 = (byte) w22;
			fn000000000001C190();
			sp->ptr0010 = x0;
			x8 = x19->ptr0020;
			x0 = x20;
			byte v34 = (byte) x8->ptr0000;
			w1 = (word32) v34;
			x8->ptr0000 = (ptr64) (byte) w22;
			x9 = sp->ptr0010;
			sp->b0008 = (byte) w1;
			x10 = x8->ptr0008;
			x8->ptr0008 = x9;
			sp->ptr0010 = x10;
			fn000000000001C590();
			x0 = x19->ptr0020;
		}
	}
	else
	{
		x8 = (struct Eq_97779 *) &sp->b0018;
		w22 = 0x00 | 0x03;
		x0 = x1;
		x20 = (struct Eq_97779 *) &x8->ptr0008;
		sp->b0018 = (byte) w22;
		fn000000000001C190();
		sp->ptr0020 = x0;
		x8 = x19->ptr0000;
		x0 = x20;
		byte v29 = (byte) x8->ptr0000;
		w1 = (word32) v29;
		x8->ptr0000 = (ptr64) (byte) w22;
		x9 = sp->ptr0020;
		sp->b0018 = (byte) w1;
		x10 = x8->ptr0008;
		x8->ptr0008 = x9;
		sp->ptr0020 = x10;
		fn000000000001C590();
		x0 = x19->ptr0000;
	}
	x8 = x21->ptr0028;
	x9 = sp->ptr0028;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_98008 * v31 = (struct Eq_98008 *) ((char *) &sp->ptr0028 + 40);
		x29 = v31->ptr0000;
		x30 = v31->qw0008;
		struct Eq_98017 * v32 = (struct Eq_98017 *) ((char *) &sp->ptr0028 + 24);
		x20 = v32->ptr0000;
		x19 = v32->ptr0008;
		struct Eq_98026 * v33 = (struct Eq_98026 *) ((char *) &sp->ptr0028 + 8);
		x22 = v33->ptr0000;
		x21 = v33->ptr0008;
		sp = (struct Eq_97761 *) ((char *) &sp->ptr0028 + 56);
	}
}

// 00000000000476FC: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRS9_EEEvDpOT_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRS9_EEEvDpOT_
{
	Eq_14 x0;
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 80);
	union Eq_14 * x25;
	*sp = (union Eq_14 **) x25;
	struct Eq_98045 * v7 = (struct Eq_98045 *) ((char *) sp + 16);
	union Eq_14 * x24;
	v7->ptr0000 = x24;
	uint64 x23;
	v7->qw0008 = x23;
	struct Eq_98056 * v10 = (struct Eq_98056 *) ((char *) sp + 32);
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_98067 * v13 = (struct Eq_98067 *) ((char *) sp + 48);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_98078 * v16 = (struct Eq_98078 *) ((char *) sp + 64);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = (char *) sp + 64;
	Eq_14 v20 = x0;
	Eq_14 x9 = *v20.u1;
	Eq_14 x8 = *((word32) v20 + 8);
	x19 = x0;
	x8 -= x9;
	x22 = x8 >> 4;
	x8.u1 = (word32) x22 + 1;
	Eq_14 x10 = x8 >> 60;
	word128 q0;
	Eq_14 x1;
	if (x10 != 0x00)
	{
		x0 = x19;
		fn000000000001B7E0();
		x19 = x0;
		if (x21 != 0x00)
		{
			x0 = x21;
			((real64) q0, x0, x1);
		}
		x0 = x19;
		_Unwind_Resume();
		_ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEEPSD_OT_();
		return;
	}
	x10 = *((word32) x19 + 16);
	x20 = x1;
	x9 = x10 - x9;
	x10 = 0x00 | 0x7FFFFFFFFFFFFFE;
	Eq_98123 x31 = x10 - (x9 >> 4);
	Eq_98125 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 3;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x23 = Test(ULT,C) ? x8 : x9;
		if (x23 == 0x00)
		{
			x21.u0 = 0x00;
			goto l000000000004777C;
		}
		x8 = x23 >> 60;
		if (x8 == 0x00)
		{
l0000000000047770:
			x0 = x23 << 4;
			_Znwm();
			x21 = x0;
l000000000004777C:
			x24 = (union Eq_14 *) ((char *) x21.u1 + (x22 << 4));
			x25 = x24;
			ui32 w8 = 0x00 | 0x03;
			x25 = (union Eq_14 *) ((char *) x25 + 8);
			x25->u1 = (size_t) 0x00;
			x24->u0 = (byte) (byte) w8;
			x0 = x20;
			fn000000000001C190();
			x25->u1 = (size_t) x0;
			Eq_14 v28 = x19;
			x20 = *v28.u1;
			x10 = *((word32) v28 + 8);
			x8.u1 = (char *) x21.u1 + (x23 << 4);
			x9.u1 = (char *) x24 + 16;
			x31 = x10 - x20;
			NZCV.u0 = cond(x31);
			bool Z;
			if (Test(NE,Z))
			{
				uint64 x11 = x10 - 0x10;
				struct Eq_98179 * x12 = (struct Eq_98179 *) ~0x00;
				x11 -= x20;
				Eq_14 x13;
				x13.u1 = (char *) x21.u1 + (x22 << 4);
				x11 = x12 ^ x11 >> 4;
				x11 = (char *) x22.u1 + x11;
				x12 = x13 - 0x08;
				do
				{
					x10.u1 = (word32) x10 - 16;
					byte v34 = (byte) *x10.u1;
					word32 w13 = (word32) v34;
					x12->bFFFFFFF8 = (byte) w13;
					x13 = *((word32) x10 + 8);
					x31 = x20 - x10;
					NZCV.u0 = cond(x31);
					x12->t0000.u1 = (size_t) x13;
					x12 = (struct Eq_98179 *) ((char *) x12 - 16);
					x10.u1->u0 = 0x00;
					((word32) x10 + 8)->u0 = 0x00;
				} while (Test(NE,Z));
				Eq_14 v35 = x19;
				x20 = *v35.u1;
				x22 = *((word32) v35 + 8);
				x10.u1 = (char *) x21.u1 + (x11 << 4);
				Eq_14 v36 = x19;
				*v36.u1 = x10;
				*((word32) v36 + 8) = x9;
				*((word32) x19 + 16) = x8;
				x31 = x22 - x20;
				NZCV.u0 = cond(x31);
				while (Test(NE,Z))
				{
					x22.u1 = (word32) x22 - 16;
					byte v38 = (byte) *x22.u1;
					word32 w1 = (word32) v38;
					x0.u1 = (word32) x22 + 8;
					fn000000000001C590();
					x31 = x20 - x22;
					NZCV.u0 = cond(x31);
				}
				if (x20 != 0x00)
				{
l000000000004781C:
					x0 = x20;
					struct Eq_98305 * v39 = (struct Eq_98305 *) ((char *) sp + 64);
					x29 = v39->ptr0000;
					x30 = v39->qw0008;
					struct Eq_98314 * v40 = (struct Eq_98314 *) ((char *) sp + 48);
					x20.u1 = v40->t0000.u1;
					x19.u1 = v40->t0008.u1;
					struct Eq_98323 * v41 = (struct Eq_98323 *) ((char *) sp + 32);
					x22.u1 = v41->t0000.u1;
					x21.u1 = v41->t0008.u1;
					struct Eq_98332 * v42 = (struct Eq_98332 *) ((char *) sp + 16);
					x24 = v42->ptr0000;
					x23 = v42->qw0008;
					x25 = (union Eq_14 *) *sp;
					sp = (union Eq_14 **) ((char *) sp + 80);
					((real64) q0, x0, x1);
					return;
				}
			}
			else
			{
				Eq_14 v43 = x19;
				v43.u1->u1 = x24;
				*((word32) v43 + 8) = x9;
				*((word32) x19 + 16) = x8;
				if (x20 != 0x00)
					goto l000000000004781C;
			}
			struct Eq_98264 * v44 = (struct Eq_98264 *) ((char *) sp + 64);
			x29 = v44->ptr0000;
			x30 = v44->qw0008;
			struct Eq_98273 * v45 = (struct Eq_98273 *) ((char *) sp + 48);
			x20.u1 = v45->t0000.u1;
			x19.u1 = v45->t0008.u1;
			struct Eq_98282 * v46 = (struct Eq_98282 *) ((char *) sp + 32);
			x22.u1 = v46->t0000.u1;
			x21.u1 = v46->t0008.u1;
			struct Eq_98291 * v47 = (struct Eq_98291 *) ((char *) sp + 16);
			x24 = v47->ptr0000;
			x23 = v47->qw0008;
			x25 = (union Eq_14 *) *sp;
			sp = (union Eq_14 **) ((char *) sp + 80);
			return;
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x23 = 0x00 | 0xFFFFFFFFFFFFFFF;
	goto l0000000000047770;
}

// 0000000000047884: define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEEPSD_OT_
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRS9_EEEvDpOT_
define _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEEPSD_OT_
{
	struct Eq_98388 * fp;
	struct Eq_98388 * sp = fp;
	sp -= 0x50;
	struct Eq_98393 * v6 = (struct Eq_98393 *) ((char *) &sp->t0020 + 16);
	struct Eq_98395 * x20;
	v6->ptr0000 = x20;
	Eq_98399 x19;
	v6->t0008.u1 = (struct Eq_109025 *) x19;
	struct Eq_98404 * v9 = (struct Eq_98404 *) ((char *) &sp->t0020 + 32);
	struct Eq_98406 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_98406 *) ((char *) &sp->t0020 + 32);
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_98399 x8;
	x8.u1 = x20->t0028.u1;
	Eq_98399 x0;
	x19 = x0;
	x29->tFFFFFFE8.u1 = (struct Eq_109025 *) x8;
	struct Eq_98429 * v14 = (struct Eq_98429 *) &x0.u1->t0008.u0;
	Eq_98399 x9;
	x9.u1 = v14->t0000.u1;
	x8.u1 = v14->t0008.u1;
	Eq_98438 x31 = x9 - x8;
	Eq_98440 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	ui32 w9;
	union Eq_98399 * x1;
	byte * x11;
	word32 w1;
	Eq_98399 x10;
	if (Test(NE,Z))
	{
		x8.u1 = x8.u1->tFFFFFFF8.u1;
		Eq_98399 v19;
		v19.u0 = x8.u1->t0000.u0;
		w9 = (word32) v19;
		NZCV.u0 = cond(w9 - 0x02);
		if (Test(EQ,Z))
		{
			x0.u1 = x8.u1->t0008.u1;
			struct Eq_98563 * v20 = (struct Eq_98563 *) &x0.u1->t0008.u0;
			x8.u1 = v20->t0000.u1;
			x9.u1 = v20->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			bool C;
			if (Test(ULT,C))
			{
				x8.u1->t0008.u1 = (struct Eq_109025 *) 0x00;
				x9.u1 = x1->u1;
				ui32 w10 = 0x00 | 0x06;
				x8.u1->t0000.u0 = (byte) (byte) w10;
				x8.u1->t0008.u1 = (struct Eq_109025 *) x9;
				x8.u1 = x0.u1->t0008.u1;
				x8.u1 = &x8.u1->t0010.u0;
				x0.u1->t0008.u1 = (struct Eq_109025 *) x8;
			}
			else
				fn000000000001B470();
			x8.u1 = x19.u1->t0010.u1;
			x8.u1 = x8.u1->tFFFFFFF8.u1;
			x8.u1 = x8.u1->t0008.u1;
			x8.u1 = x8.u1->t0008.u1;
			x0 = x8 - 0x10;
		}
		else
		{
			x8.u1 = x1->u1;
			w9 = 0x00 | 0x06;
			sp->b0008 = (byte) w9;
			x11 = &sp->b0008;
			sp->t0010.u1 = (struct Eq_109025 *) x8;
			x8.u1 = x19.u1->t0020.u1;
			x0.u1 = x11 + 8;
			Eq_98399 v30;
			v30.u0 = x8.u1->t0000.u0;
			w1 = (word32) v30;
			x8.u1->t0000.u0 = (byte) (byte) w9;
			x9.u1 = sp->t0010.u1;
			sp->b0008 = (byte) w1;
			x10.u1 = x8.u1->t0008.u1;
			x8.u1->t0008.u1 = (struct Eq_109025 *) x9;
			sp->t0010.u1 = (struct Eq_109025 *) x10;
			fn000000000001C590();
			x0.u1 = x19.u1->t0020.u1;
		}
	}
	else
	{
		x8.u1 = x1->u1;
		w9 = 0x00 | 0x06;
		sp->b0018 = (byte) w9;
		x11 = &sp->b0018;
		sp->t0020.u1 = (struct Eq_109025 *) x8;
		x8.u1 = x19.u1->t0000.u1;
		x0.u1 = x11 + 8;
		Eq_98399 v26;
		v26.u0 = x8.u1->t0000.u0;
		w1 = (word32) v26;
		x8.u1->t0000.u0 = (byte) (byte) w9;
		x9.u1 = sp->t0020.u1;
		sp->b0018 = (byte) w1;
		x10.u1 = x8.u1->t0008.u1;
		x8.u1->t0008.u1 = (struct Eq_109025 *) x9;
		sp->t0020.u1 = (struct Eq_109025 *) x10;
		fn000000000001C590();
		x0.u1 = x19.u1->t0000.u1;
	}
	x8.u1 = x20->t0028.u1;
	x9.u1 = x29->tFFFFFFE8.u1;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_98630 * v28 = (struct Eq_98630 *) ((char *) &sp->t0020 + 32);
		x29 = v28->ptr0000;
		x30 = v28->qw0008;
		struct Eq_98639 * v29 = (struct Eq_98639 *) ((char *) &sp->t0020 + 16);
		x20 = v29->ptr0000;
		x19.u1 = v29->t0008.u1;
		sp = (struct Eq_98388 *) ((char *) &sp->t0020 + 48);
	}
}

// 00000000000479B8: define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_
define _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_
{
	Eq_14 x0;
	struct Eq_98649 * fp;
	struct Eq_98649 * sp = fp;
	sp = (struct Eq_98649 *) ((char *) sp - 64);
	uint64 x24;
	sp->qw0000 = x24;
	int64 x23;
	sp->qw0008 = x23;
	struct Eq_98662 * v8 = (struct Eq_98662 *) (&sp->qw0008 + 1);
	Eq_14 x22;
	v8->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v8->t0008.u1 = (size_t) x21;
	struct Eq_98673 * v11 = (struct Eq_98673 *) (&sp->qw0008 + 3);
	Eq_14 x20;
	v11->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v11->t0008.u1 = (size_t) x19;
	struct Eq_98684 * v14 = (struct Eq_98684 *) (&sp->qw0008 + 5);
	ptr64 x29;
	v14->ptr0000 = x29;
	word64 x30;
	v14->qw0008 = x30;
	x29 = &sp->qw0008 + 5;
	Eq_14 v16 = x0;
	x19 = *v16.u1;
	x22 = *((word32) v16 + 8);
	x20 = x0;
	Eq_14 x8 = x22 - x19;
	x23 = x8 >> 4;
	x8 = x23 + 0x01;
	Eq_14 x9 = x8 >> 60;
	if (x9 != 0x00)
	{
		x0 = x20;
		fn000000000001B7E0();
		_ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEED2Ev();
		return;
	}
	x9 = *((word32) x20 + 16);
	struct Eq_98721 * x10 = 0x00 | 0x7FFFFFFFFFFFFFE;
	Eq_14 x1;
	x21 = x1;
	x9 -= x19;
	Eq_98727 x31 = x10 - (x9 >> 4);
	Eq_98729 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	if (Test(UGE,C))
	{
		x9 >>= 3;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		x24 = Test(ULT,C) ? x8 : x9;
		if (x24 == 0x00)
		{
			x0.u0 = 0x00;
			goto l0000000000047A30;
		}
		x8 = x24 >> 60;
		if (x8 == 0x00)
		{
l0000000000047A28:
			x0 = x24 << 4;
			_Znwm();
l0000000000047A30:
			x9 = *x21.u1;
			struct Eq_98759 * x11 = x0 + (x23 << 4);
			x8.u1 = x0 + (x24 << 4);
			ui32 w12 = 0x00 | 0x06;
			x10 = x22 - x19;
			NZCV.u0 = cond(x10);
			x11->t0008.u1 = (size_t) x9;
			x9.u1 = x11 + (struct Eq_109031 *) 0x10;
			x11->t0000.u0 = (byte) (byte) w12;
			bool Z;
			if (Test(NE,Z))
			{
				x10 -= 0x10;
				Eq_14 x12;
				x12.u0 = ~0x00;
				x10 = x12 ^ x10 >> 4;
				x10 = &x10->t0000.u0 + x23;
				x11 -= 0x08;
				do
				{
					x22.u1 = (word32) x22 - 16;
					byte v28 = (byte) *x22.u1;
					w12 = (word32) v28;
					x11->tFFFFFFF8.u0 = (byte) (byte) w12;
					x12 = *((word32) x22 + 8);
					x31 = x19 - x22;
					NZCV.u0 = cond(x31);
					x11->t0000.u1 = (size_t) x12;
					x11 = (struct Eq_98759 *) ((char *) x11 - 16);
					x22.u1->u0 = 0x00;
					((word32) x22 + 8)->u0 = 0x00;
				} while (Test(NE,Z));
				Eq_14 v29 = x20;
				x19 = *v29.u1;
				x21 = *((word32) v29 + 8);
				x10 = x0 + (x10 << 4);
				Eq_14 v30 = x20;
				v30.u1->u1 = x10;
				*((word32) v30 + 8) = x9;
				*((word32) x20 + 16) = x8;
				x31 = x21 - x19;
				NZCV.u0 = cond(x31);
				while (Test(NE,Z))
				{
					x21.u1 = (word32) x21 - 16;
					Eq_14 v32 = *x21.u1;
					word32 w1 = (word32) v32;
					x0.u1 = (word32) x21 + 8;
					fn000000000001C590();
					x31 = x19 - x21;
					NZCV.u0 = cond(x31);
				}
				if (x19 != 0x00)
				{
l0000000000047AB8:
					x0 = x19;
					struct Eq_98889 * v33 = (struct Eq_98889 *) (&sp->qw0008 + 5);
					x29 = v33->ptr0000;
					x30 = v33->qw0008;
					struct Eq_98898 * v34 = (struct Eq_98898 *) (&sp->qw0008 + 3);
					x20.u1 = v34->t0000.u1;
					x19.u1 = v34->t0008.u1;
					struct Eq_98907 * v35 = (struct Eq_98907 *) (&sp->qw0008 + 1);
					x22.u1 = v35->t0000.u1;
					x21.u1 = v35->t0008.u1;
					struct Eq_98649 * v36 = sp;
					x24 = v36->qw0000;
					x23 = v36->qw0008;
					sp = &sp->qw0008 + 7;
					word128 q0;
					((real64) q0, x0, x1);
					return;
				}
			}
			else
			{
				Eq_14 v38 = x20;
				v38.u1->u1 = x11;
				*((word32) v38 + 8) = x9;
				*((word32) x20 + 16) = x8;
				if (x19 != 0x00)
					goto l0000000000047AB8;
			}
			struct Eq_98853 * v39 = (struct Eq_98853 *) (&sp->qw0008 + 5);
			x29 = v39->ptr0000;
			x30 = v39->qw0008;
			struct Eq_98862 * v40 = (struct Eq_98862 *) (&sp->qw0008 + 3);
			x20.u1 = v40->t0000.u1;
			x19.u1 = v40->t0008.u1;
			struct Eq_98871 * v41 = (struct Eq_98871 *) (&sp->qw0008 + 1);
			x22.u1 = v41->t0000.u1;
			x21.u1 = v41->t0008.u1;
			struct Eq_98649 * v42 = sp;
			x24 = v42->qw0000;
			x23 = v42->qw0008;
			sp = &sp->qw0008 + 7;
			return;
		}
		x0.u0 = 0x00052000;
		x0.u1 = x0 + &g_t0569;
		fn00000000000373A8();
	}
	x24 = 0x00 | 0xFFFFFFFFFFFFFFF;
	goto l0000000000047A28;
}

// 0000000000047B00: define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEED2Ev
// Called from:
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_
define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEED2Ev
{
	ptr64 fp;
	ptr64 sp = fp;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
}

// 0000000000047B04: define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_98969 * v7 = (struct Eq_98969 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_98985 * v9 = (struct Eq_98985 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000047B28: define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEE16__on_zero_sharedEv
{
	ptr64 fp;
	ptr64 sp = fp;
	struct Eq_99014 ** x0 = (struct Eq_99014 **) ((char *) x0 + 24);
	struct Eq_99014 * x8 = (struct Eq_99014 *) *x0;
	<anonymous> * x1 = x8->ptr0008;
	x1();
}

// 0000000000047B34: define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_emplaceIN8nlohmann6detail20input_buffer_adapterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000047B38: void ()
void ()
{
	struct Eq_99034 * x0;
	ptr64 fp;
	ptr64 sp = fp;
	struct Eq_99036 * v7 = (struct Eq_99036 *) &x0->qw0008;
	byte * x8 = v7->ptr0000;
	word64 x9 = v7->qw0008;
	word64 x31 = x8 - x9;
	Eq_99048 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	word32 w0;
	if (Test(UGE,C))
		w0 = ~0x00;
	else
	{
		x9 = x8 + 1;
		x0->qw0008 = x9;
		byte v12 = *x8;
		w0 = (word32) v12;
	}
}

// 0000000000047B5C: void input_adapter_protocol::~input_adapter_protocol()
void input_adapter_protocol::~input_adapter_protocol()
{
	ptr64 fp;
	ptr64 sp = fp;
}

// 0000000000047B60: void input_buffer_adapter::~input_buffer_adapter()
void input_buffer_adapter::~input_buffer_adapter()
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000047B64: void pipeline::pipeline(Register Eq_99078 x0)
void pipeline::pipeline(Eq_99078 x0)
{
	struct Eq_99079 * fp;
	struct Eq_99079 * sp = fp;
	sp -= 0x40;
	struct Eq_99083 * x21;
	sp->ptr0010 = x21;
	struct Eq_99088 * v7 = (struct Eq_99088 *) ((char *) &sp->ptr0010 + 16);
	Eq_14 x20;
	v7->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v7->t0008.u1 = (size_t) x19;
	struct Eq_99099 * v10 = (struct Eq_99099 *) ((char *) &sp->ptr0010 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0010 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x21->t0028.u1;
	x19 = x0;
	sp->t0008.u1 = (size_t) x8;
	Eq_14 v14 = x0;
	v14.u1->u0 = 0x00;
	((word32) v14 + 8)->u0 = 0x00;
	sp->t0000.u1 = (size_t) 0x00;
	word64 * x1;
	x0.u1 = *x1;
	x1 = (word64 *) &sp->t0000.u0;
	rs2_create_pipeline();
	x20 = x0;
	word32 w0 = 0x28;
	_Znwm();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0E90);
	struct Eq_99152 * v17 = (struct Eq_99152 *) ((word32) x0 + 16);
	v17->qw0000 = 0x00;
	v17->t0008.u1 = (size_t) x20;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	x9 = *((word32) x9 + 0x0EE8);
	x8.u1 = (word32) x8 + 16;
	Eq_14 v19 = x0;
	*v19.u1 = x8;
	((word32) v19 + 8)->u0 = 0x00;
	*((word32) x0 + 32) = x9;
	*x19.u1 = x20;
	x19.u1 = (word32) x19 + 8;
	x20 = *x19.u1;
	*x19.u1 = x0;
	if (x20 == 0x00)
	{
		x0.u1 = sp->t0000.u1;
		fn000000000001ADF0();
		x8.u1 = x21->t0028.u1;
		x9.u1 = sp->t0008.u1;
		int64 x31 = x8 - x9;
		Eq_99203 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_99213 * v23 = (struct Eq_99213 *) ((char *) &sp->ptr0010 + 32);
			x29 = v23->ptr0000;
			x30 = v23->qw0008;
			struct Eq_99222 * v24 = (struct Eq_99222 *) ((char *) &sp->ptr0010 + 16);
			x20.u1 = v24->t0000.u1;
			x19.u1 = v24->t0008.u1;
			x21 = sp->ptr0010;
			sp = (struct Eq_99079 *) ((char *) &sp->ptr0010 + 48);
		}
	}
	else
		x8.u1 = (word32) x20 + 8;
}

// 0000000000047CB0: define _ZNSt6__ndk120__shared_ptr_pointerIP12rs2_pipelinePFvS2_ENS_9allocatorIS1_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_pointerIP12rs2_pipelinePFvS2_ENS_9allocatorIS1_EEED0Ev
{
	int64 * fp;
	int64 * sp = fp;
	sp += -4;
	int64 x19;
	*sp = x19;
	struct Eq_99244 * v7 = (struct Eq_99244 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	int64 x0;
	x19 = x0;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_99260 * v9 = (struct Eq_99260 *) (sp + 2);
	x29 = v9->ptr0000;
	x30 = v9->qw0008;
	x0 = x19;
	x19 = *sp;
	sp += 4;
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000047CD4: define _ZNSt6__ndk120__shared_ptr_pointerIP12rs2_pipelinePFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_pointerIP12rs2_pipelinePFvS2_ENS_9allocatorIS1_EEE16__on_zero_sharedEv
{
	word64 x0;
	struct Eq_99282 * fp;
	struct Eq_99282 * sp = fp;
	sp = (struct Eq_99282 *) ((char *) sp - 16);
	word64 * x29;
	sp->ptr0000 = x29;
	word64 x30;
	sp->qw0008 = x30;
	x29 = &sp->ptr0000;
	struct Eq_99298 * v9 = x0 + 24;
	word64 x8 = v9->qw0000;
	<anonymous> * x9 = v9->ptr0008;
	x0 = x8;
	x9();
	struct Eq_99282 * v10 = sp;
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	sp = &sp->qw0008 + 1;
}

// 0000000000047CF4: define _ZNKSt6__ndk120__shared_ptr_pointerIP12rs2_pipelinePFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
define _ZNKSt6__ndk120__shared_ptr_pointerIP12rs2_pipelinePFvS2_ENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info
{
	word64 x0;
	struct Eq_99320 * x1;
	ptr64 fp;
	ptr64 sp = fp;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	ui64 x8 = x1->qw0008;
	x9 = *((word32) x9 + 0x0E40);
	word64 x10 = x0 + 0x20;
	ui64 x31 = x8 - x9;
	Eq_99334 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	x0 = Test(EQ,Z) ? x10 : 0x00;
}

// 0000000000047D10: define _ZNSt6__ndk120__shared_ptr_pointerIP12rs2_pipelinePFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_pointerIP12rs2_pipelinePFvS2_ENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000048F5C: void frameset::frameset(Register Eq_99352 x0)
void frameset::frameset(Eq_99352 x0)
{
	struct Eq_99353 * fp;
	struct Eq_99353 * sp = fp;
	sp -= 0x40;
	struct Eq_99357 * x21;
	sp->ptr0010 = x21;
	struct Eq_99362 * v7 = (struct Eq_99362 *) ((char *) &sp->ptr0010 + 16);
	struct Eq_99364 ** x20;
	v7->ptr0000 = x20;
	struct Eq_99368 * x19;
	v7->ptr0008 = x19;
	struct Eq_99373 * v10 = (struct Eq_99373 *) ((char *) &sp->ptr0010 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0010 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	struct Eq_99368 * x8 = x21->ptr0028;
	struct Eq_99364 ** x1;
	x20 = x1;
	x19 = x0;
	sp->ptr0008 = x8;
	x8 = (struct Eq_99368 *) *x1;
	x0->ptr0000 = x8;
	if (x8 != null)
	{
		x1 = (struct Eq_99364 **) &sp->ptr0000;
		x0 = x8;
		sp->ptr0000 = null;
		rs2_frame_add_ref();
		x0 = sp->ptr0000;
		fn000000000001ADF0();
	}
	x19->ptr0008 = null;
	sp->ptr0000 = null;
	x0 = (struct Eq_99368 *) *x20;
	int32 w0;
	if (x0 != null)
	{
		word32 w1 = 0x0A;
		struct Eq_99439 ** x2 = (struct Eq_99439 **) &sp->ptr0000;
		rs2_is_frame_extendable_to();
		x8 = sp->ptr0000;
		if (w0 != 0x00 || x8 != null)
			goto l0000000000048FEC;
	}
	x0 = x19->ptr0000;
	if (x0 != null)
	{
		rs2_release_frame();
		x8 = sp->ptr0000;
	}
	else
		x8 = null;
	x19->ptr0000 = null;
l0000000000048FEC:
	x0 = x8;
	fn000000000001ADF0();
	x0 = x19->ptr0000;
	if (x0 != null)
	{
		x1 = (struct Eq_99364 **) &sp->ptr0000;
		rs2_embedded_frames_count();
		x8 = (int64) w0;
		x19->ptr0008 = x8;
		x0 = sp->ptr0000;
		fn000000000001ADF0();
	}
	x8 = x21->ptr0028;
	struct Eq_99368 * x9 = sp->ptr0008;
	ptr64 x31 = x8 - x9;
	Eq_99476 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_99496 * v22 = (struct Eq_99496 *) ((char *) &sp->ptr0010 + 32);
		x29 = v22->ptr0000;
		x30 = v22->qw0008;
		struct Eq_99505 * v23 = (struct Eq_99505 *) ((char *) &sp->ptr0010 + 16);
		x20 = v23->ptr0000;
		x19 = v23->ptr0008;
		x21 = sp->ptr0010;
		sp = (struct Eq_99353 *) ((char *) &sp->ptr0010 + 48);
	}
}

// 000000000004905C: define _ZNK3rs28framesetixEm
define _ZNK3rs28framesetixEm
{
	Eq_14 x1;
	struct Eq_99518 * fp;
	struct Eq_99518 * sp = fp;
	sp -= 0x60;
	struct Eq_99522 * x21;
	sp->ptr0030 = x21;
	struct Eq_99527 * v7 = (struct Eq_99527 *) ((char *) &sp->ptr0030 + 16);
	Eq_14 x20;
	v7->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v7->t0008.u1 = (size_t) x19;
	struct Eq_99538 * v10 = (struct Eq_99538 *) ((char *) &sp->ptr0030 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0030 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u1 = x21->t0028.u1;
	sp->t0028.u1 = (size_t) x9;
	sp->t0020.u1 = (size_t) 0x00;
	Eq_14 x0;
	x9 = *((word32) x0 + 8);
	int64 x31 = x9 - x1;
	Eq_99572 NZCV;
	NZCV.u0 = cond(x31);
	word32 ZC;
	Eq_14 x2;
	Eq_14 x8;
	if (Test(UGT,ZC))
	{
		x0 = *x0.u1;
		x2.u1 = &sp->t0020.u0;
		x19 = x8;
		rs2_extract_frame();
		x8.u1 = sp->t0020.u1;
		x20 = x0;
		x0 = x8;
		fn000000000001ADF0();
		*x19.u1 = x20;
		x8.u1 = x21->t0028.u1;
		x9.u1 = sp->t0028.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(EQ,Z))
		{
			struct Eq_99676 * v21 = (struct Eq_99676 *) ((char *) &sp->ptr0030 + 32);
			x29 = v21->ptr0000;
			x30 = v21->qw0008;
			struct Eq_99685 * v22 = (struct Eq_99685 *) ((char *) &sp->ptr0030 + 16);
			x20.u1 = v22->t0000.u1;
			x19.u1 = v22->t0008.u1;
			x21 = sp->ptr0030;
			sp = (struct Eq_99518 *) ((char *) &sp->ptr0030 + 48);
			return;
		}
	}
	else
	{
		ui32 w0 = 0x48;
		__cxa_allocate_exception();
		x19 = x0;
		struct Eq_99518 * v24 = sp;
		v24->t0000.u1 = 0x00;
		v24->qw0008 = 0x00;
		sp->t0010.u1 = (size_t) 0x00;
		w0 = 0x00 | 0x30;
		_Znwm();
		x9.u0 = 0x00053000;
		x8.u0 = 0x00050000;
		x9.u1 = (word32) x9 + 0x04B3;
		Eq_99581 q0 = *((word32) x8 + 752);
		Eq_14 v28 = x9;
		word128 q1 = (word128) *v28.u1;
		Eq_14 q2 = *((word32) v28 + 16);
		ui32 w21 = 0x00 | 0x01;
		sp->t0010.u1 = (size_t) x0;
		((word32) x0 + 32)->u0 = 0x00;
		sp->t0000.u0 = (word128) q0;
		Eq_14 v30 = x0;
		v30.u1->u1 = q1;
		*((word32) v30 + 16) = q2;
		x1.u1 = &sp->t0000.u0;
		x0 = x19;
		fn000000000001B140();
		x1.u0 = 0x00070000;
		x2.u0 = 0x00070000;
		x1 = *((word32) x1 + 0x0FC0);
		x2 = *((word32) x2 + 0x0E38);
		x0 = x19;
		w21 = 0x00;
		__cxa_throw();
	}
	__stack_chk_fail();
}

// 000000000004917C: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8pudutech9RGBD_INFOEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8pudutech9RGBD_INFOEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_
{
	Eq_99706 x8;
	Eq_14 x2;
	struct Eq_99698 * fp;
	struct Eq_99698 * sp = fp;
	sp = (struct Eq_99698 *) ((char *) sp - 96);
	uint64 x28;
	sp->qw0000 = x28;
	Eq_99706 x27;
	sp->t0008.u1 = (struct Eq_109033 *) x27;
	struct Eq_99711 * v8 = (struct Eq_99711 *) ((char *) &sp->t0008 + 8);
	word64 x26;
	v8->qw0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_99722 * v11 = (struct Eq_99722 *) ((char *) &sp->t0008 + 24);
	Eq_99706 x24;
	v11->t0000.u1 = (struct Eq_109033 *) x24;
	Eq_99706 x23;
	v11->t0008.u1 = (struct Eq_109033 *) x23;
	struct Eq_99733 * v14 = (struct Eq_99733 *) ((char *) &sp->t0008 + 40);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_99706 x21;
	v14->t0008.u1 = (struct Eq_109033 *) x21;
	struct Eq_99744 * v17 = (struct Eq_99744 *) ((char *) &sp->t0008 + 56);
	Eq_99706 x20;
	v17->t0000.u1 = (struct Eq_109033 *) x20;
	Eq_99706 x19;
	v17->t0008.u1 = (struct Eq_109033 *) x19;
	struct Eq_99755 * v20 = (struct Eq_99755 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	Eq_99706 x0;
	x20 = x0;
	x20.u1 = &x20.u1->t0008.u0;
	x24.u1 = x20.u1->t0000.u1;
	Eq_99706 x1;
	x19 = x1;
	if (x24 == 0x00)
	{
		x19.u1->t0000.u1 = (struct Eq_109033 *) x20;
		goto l0000000000049288;
	}
	byte v25 = (byte) *x2.u1;
	ui32 w8 = (word32) v25;
	struct Eq_99787 * v28 = (struct Eq_99787 *) ((word32) x2 + 8);
	uint64 x9 = v28->qw0000;
	word64 x10 = v28->qw0008;
	x20.u1 = &x0.u1->t0008.u0;
	uint64 x11 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_99806 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x25 = Test(EQ,Z) ? x11 : x9;
	x21.u1 = Test(NE,Z) ? x10 : (word32) x2 + 1;
l00000000000491CC:
	x27 = x24;
	x27.u1 = (word32) x27 + 32;
	Eq_99706 v37;
	v37.u0 = x27.u1->t0000.u0;
	ui32 w28 = (word32) v37;
	x8.u1 = x27.u1->t0008.u1;
	x9 = x28 >> 1;
	w31 = w28 & 0x01;
	NZ.u0 = cond(w31);
	x26 = Test(EQ,Z) ? x9 : x8;
	word64 x31 = x26 - x25;
	Eq_99839 NZCV;
	NZCV.u0 = cond(x31);
	x22.u1 = Test(ULT,C) ? x26 : x25;
	ui32 w0;
	if (x22 != 0x00)
	{
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x0 = x21;
		x2 = x22;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
		x1 = x23;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l0000000000049240;
l0000000000049220:
			x8.u1 = x24.u1->t0000.u1;
			if (x8 == 0x00)
			{
				x19.u1->t0000.u1 = (struct Eq_109033 *) x24;
				x20 = x24;
				goto l0000000000049288;
			}
			x20 = x24;
l00000000000491C8:
			x24 = x8;
			goto l00000000000491CC;
		}
	}
	x31 = x25 - x26;
	NZCV.u0 = cond(x31);
	if (Test(UGE,C))
	{
		if (x22 == 0x00)
		{
l000000000004925C:
			x31 = x26 - x25;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
				goto l0000000000049270;
			goto l0000000000049264;
		}
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
l0000000000049240:
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l0000000000049270;
l0000000000049264:
			x20 = x24;
			x20.u1 = &x20.u1->t0008.u0;
			x8.u1 = x20.u1->t0000.u1;
			if (x8 == 0x00)
			{
l0000000000049270:
				x19.u1->t0000.u1 = (struct Eq_109033 *) x24;
l0000000000049288:
				x0 = x20;
				struct Eq_99846 * v41 = (struct Eq_99846 *) ((char *) &sp->t0008 + 72);
				x29 = v41->ptr0000;
				x30 = v41->qw0008;
				struct Eq_99855 * v42 = (struct Eq_99855 *) ((char *) &sp->t0008 + 56);
				x20.u1 = v42->t0000.u1;
				x19.u1 = v42->t0008.u1;
				struct Eq_99864 * v43 = (struct Eq_99864 *) ((char *) &sp->t0008 + 40);
				x22.u1 = v43->t0000.u1;
				x21.u1 = v43->t0008.u1;
				struct Eq_99873 * v44 = (struct Eq_99873 *) ((char *) &sp->t0008 + 24);
				x24.u1 = v44->t0000.u1;
				x23.u1 = v44->t0008.u1;
				struct Eq_99882 * v45 = (struct Eq_99882 *) ((char *) &sp->t0008 + 8);
				x26 = v45->qw0000;
				x25 = v45->qw0008;
				struct Eq_99698 * v46 = sp;
				x28 = v46->qw0000;
				x27.u1 = v46->t0008.u1;
				sp = (struct Eq_99698 *) ((char *) &sp->t0008 + 88);
				return;
			}
			goto l00000000000491C8;
		}
		goto l000000000004925C;
	}
	goto l0000000000049220;
}

<anonymous> g_t491F8 = <code>; // 00000000000491F8
// 00000000000492A8: void video_stream_profile::video_stream_profile(Register Eq_99978 x0)
void video_stream_profile::video_stream_profile(Eq_99978 x0)
{
	word32 w0;
	Eq_99990 x1;
	struct Eq_99979 * fp;
	struct Eq_99979 * sp = fp;
	sp -= 0x40;
	struct Eq_99984 * v6 = (struct Eq_99984 *) ((char *) &sp->t0008 + 8);
	struct Eq_99986 * x22;
	v6->ptr0000 = x22;
	Eq_99990 x21;
	v6->t0008.u2 = (word64 *) x21;
	struct Eq_99995 * v9 = (struct Eq_99995 *) ((char *) &sp->t0008 + 24);
	Eq_99990 x20;
	v9->t0000.u2 = (word64 *) x20;
	Eq_99990 x19;
	v9->t0008.u2 = (word64 *) x19;
	struct Eq_100006 * v12 = (struct Eq_100006 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x22->t0028.u1;
	x19 = x0;
	sp->t0008.u1 = (size_t) x8;
	Eq_99990 q0 = *x1;
	*x0 = q0;
	x8.u1 = x1.u3->t0010.u1;
	x0.u3->t0010.u1 = (size_t) x8;
	Eq_14 x9;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v19 = &*x8.u1;
			x9 = __load_exclusive<word64>(v19);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v20 = &*x8.u1;
			w10 = __store_exclusive<word64>(v20, x9);
		} while (w10 != 0x00);
	}
	x8.u1 = x1.u3->t0025.u1;
	q0.u0 = x1.u3->t0018.u0;
	x20 = x19;
	x20.u1 = (word32) x20 + 48;
	x20->u1 = 0x00;
	x21 = x20;
	x20.u3->tFFFFFFF5.u1 = (size_t) x8;
	x20.u3->tFFFFFFE8.u0 = (word128) q0;
	x21.u1 = (word32) x21 + 4;
	x21->u1 = 0x00;
	sp->t0000.u2 = (word64 *) 0x00;
	x0.u2 = *x1.u2;
	ui32 w1 = 0x00 | 0x0F;
	Eq_99990 x2;
	x2.u2 = &sp->t0000.u0;
	rs2_stream_profile_is();
	word32 w8 = w0;
	x0.u2 = sp->t0000.u2;
	if (w8 == 0x00 && x0 == 0x00)
		*x19.u2 = (word64) 0x00;
	fn000000000001ADF0();
	x0.u2 = *x19.u2;
	if (x0 != 0x00)
	{
		word64 ** x3 = (word64 **) &sp->t0000.u0;
		x1 = x20;
		x2 = x21;
		rs2_get_video_stream_resolution();
		x0.u2 = sp->t0000.u2;
		fn000000000001ADF0();
	}
	x8.u1 = x22->t0028.u1;
	x9.u1 = sp->t0008.u1;
	ptr64 x31 = x8 - x9;
	Eq_100135 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_100152 * v30 = (struct Eq_100152 *) ((char *) &sp->t0008 + 40);
		x29 = v30->ptr0000;
		x30 = v30->qw0008;
		struct Eq_100161 * v31 = (struct Eq_100161 *) ((char *) &sp->t0008 + 24);
		x20.u2 = v31->t0000.u2;
		x19.u2 = v31->t0008.u2;
		struct Eq_100170 * v32 = (struct Eq_100170 *) ((char *) &sp->t0008 + 8);
		x22 = v32->ptr0000;
		x21.u2 = v32->t0008.u2;
		sp = (struct Eq_99979 *) ((char *) &sp->t0008 + 56);
	}
}

// 00000000000493CC: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_
{
	Eq_100188 x8;
	Eq_14 x2;
	struct Eq_100180 * fp;
	struct Eq_100180 * sp = fp;
	sp = (struct Eq_100180 *) ((char *) sp - 96);
	uint64 x28;
	sp->qw0000 = x28;
	Eq_100188 x27;
	sp->t0008.u1 = (struct Eq_109035 *) x27;
	struct Eq_100193 * v8 = (struct Eq_100193 *) ((char *) &sp->t0008 + 8);
	word64 x26;
	v8->qw0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_100204 * v11 = (struct Eq_100204 *) ((char *) &sp->t0008 + 24);
	Eq_100188 x24;
	v11->t0000.u1 = (struct Eq_109035 *) x24;
	Eq_100188 x23;
	v11->t0008.u1 = (struct Eq_109035 *) x23;
	struct Eq_100215 * v14 = (struct Eq_100215 *) ((char *) &sp->t0008 + 40);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_100188 x21;
	v14->t0008.u1 = (struct Eq_109035 *) x21;
	struct Eq_100226 * v17 = (struct Eq_100226 *) ((char *) &sp->t0008 + 56);
	Eq_100188 x20;
	v17->t0000.u1 = (struct Eq_109035 *) x20;
	Eq_100188 x19;
	v17->t0008.u1 = (struct Eq_109035 *) x19;
	struct Eq_100237 * v20 = (struct Eq_100237 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	Eq_100188 x0;
	x20 = x0;
	x20.u1 = &x20.u1->t0008.u0;
	x24.u1 = x20.u1->t0000.u1;
	Eq_100188 x1;
	x19 = x1;
	if (x24 == 0x00)
	{
		x19.u1->t0000.u1 = (struct Eq_109035 *) x20;
		goto l00000000000494D8;
	}
	byte v25 = (byte) *x2.u1;
	ui32 w8 = (word32) v25;
	struct Eq_100269 * v28 = (struct Eq_100269 *) ((word32) x2 + 8);
	uint64 x9 = v28->qw0000;
	word64 x10 = v28->qw0008;
	x20.u1 = &x0.u1->t0008.u0;
	uint64 x11 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_100288 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x25 = Test(EQ,Z) ? x11 : x9;
	x21.u1 = Test(NE,Z) ? x10 : (word32) x2 + 1;
l000000000004941C:
	x27 = x24;
	x27.u1 = (word32) x27 + 32;
	Eq_100188 v37;
	v37.u0 = x27.u1->t0000.u0;
	ui32 w28 = (word32) v37;
	x8.u1 = x27.u1->t0008.u1;
	x9 = x28 >> 1;
	w31 = w28 & 0x01;
	NZ.u0 = cond(w31);
	x26 = Test(EQ,Z) ? x9 : x8;
	word64 x31 = x26 - x25;
	Eq_100321 NZCV;
	NZCV.u0 = cond(x31);
	x22.u1 = Test(ULT,C) ? x26 : x25;
	ui32 w0;
	if (x22 != 0x00)
	{
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x0 = x21;
		x2 = x22;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
		x1 = x23;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l0000000000049490;
l0000000000049470:
			x8.u1 = x24.u1->t0000.u1;
			if (x8 == 0x00)
			{
				x19.u1->t0000.u1 = (struct Eq_109035 *) x24;
				x20 = x24;
				goto l00000000000494D8;
			}
			x20 = x24;
l0000000000049418:
			x24 = x8;
			goto l000000000004941C;
		}
	}
	x31 = x25 - x26;
	NZCV.u0 = cond(x31);
	if (Test(UGE,C))
	{
		if (x22 == 0x00)
		{
l00000000000494AC:
			x31 = x26 - x25;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
				goto l00000000000494C0;
			goto l00000000000494B4;
		}
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
l0000000000049490:
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l00000000000494C0;
l00000000000494B4:
			x20 = x24;
			x20.u1 = &x20.u1->t0008.u0;
			x8.u1 = x20.u1->t0000.u1;
			if (x8 == 0x00)
			{
l00000000000494C0:
				x19.u1->t0000.u1 = (struct Eq_109035 *) x24;
l00000000000494D8:
				x0 = x20;
				struct Eq_100328 * v41 = (struct Eq_100328 *) ((char *) &sp->t0008 + 72);
				x29 = v41->ptr0000;
				x30 = v41->qw0008;
				struct Eq_100337 * v42 = (struct Eq_100337 *) ((char *) &sp->t0008 + 56);
				x20.u1 = v42->t0000.u1;
				x19.u1 = v42->t0008.u1;
				struct Eq_100346 * v43 = (struct Eq_100346 *) ((char *) &sp->t0008 + 40);
				x22.u1 = v43->t0000.u1;
				x21.u1 = v43->t0008.u1;
				struct Eq_100355 * v44 = (struct Eq_100355 *) ((char *) &sp->t0008 + 24);
				x24.u1 = v44->t0000.u1;
				x23.u1 = v44->t0008.u1;
				struct Eq_100364 * v45 = (struct Eq_100364 *) ((char *) &sp->t0008 + 8);
				x26 = v45->qw0000;
				x25 = v45->qw0008;
				struct Eq_100180 * v46 = sp;
				x28 = v46->qw0000;
				x27.u1 = v46->t0008.u1;
				sp = (struct Eq_100180 *) ((char *) &sp->t0008 + 88);
				return;
			}
			goto l0000000000049418;
		}
		goto l00000000000494AC;
	}
	goto l0000000000049470;
}

// 00000000000494F8: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_
{
	Eq_100468 x8;
	Eq_14 x2;
	struct Eq_100460 * fp;
	struct Eq_100460 * sp = fp;
	sp = (struct Eq_100460 *) ((char *) sp - 96);
	uint64 x28;
	sp->qw0000 = x28;
	Eq_100468 x27;
	sp->t0008.u1 = (struct Eq_109036 *) x27;
	struct Eq_100473 * v8 = (struct Eq_100473 *) ((char *) &sp->t0008 + 8);
	word64 x26;
	v8->qw0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_100484 * v11 = (struct Eq_100484 *) ((char *) &sp->t0008 + 24);
	Eq_100468 x24;
	v11->t0000.u1 = (struct Eq_109036 *) x24;
	Eq_100468 x23;
	v11->t0008.u1 = (struct Eq_109036 *) x23;
	struct Eq_100495 * v14 = (struct Eq_100495 *) ((char *) &sp->t0008 + 40);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_100468 x21;
	v14->t0008.u1 = (struct Eq_109036 *) x21;
	struct Eq_100506 * v17 = (struct Eq_100506 *) ((char *) &sp->t0008 + 56);
	Eq_100468 x20;
	v17->t0000.u1 = (struct Eq_109036 *) x20;
	Eq_100468 x19;
	v17->t0008.u1 = (struct Eq_109036 *) x19;
	struct Eq_100517 * v20 = (struct Eq_100517 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	Eq_100468 x0;
	x20 = x0;
	x20.u1 = &x20.u1->t0008.u0;
	x24.u1 = x20.u1->t0000.u1;
	Eq_100468 x1;
	x19 = x1;
	if (x24 == 0x00)
	{
		x19.u1->t0000.u1 = (struct Eq_109036 *) x20;
		goto l0000000000049604;
	}
	byte v25 = (byte) *x2.u1;
	ui32 w8 = (word32) v25;
	struct Eq_100549 * v28 = (struct Eq_100549 *) ((word32) x2 + 8);
	uint64 x9 = v28->qw0000;
	word64 x10 = v28->qw0008;
	x20.u1 = &x0.u1->t0008.u0;
	uint64 x11 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_100568 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x25 = Test(EQ,Z) ? x11 : x9;
	x21.u1 = Test(NE,Z) ? x10 : (word32) x2 + 1;
l0000000000049548:
	x27 = x24;
	x27.u1 = (word32) x27 + 32;
	Eq_100468 v37;
	v37.u0 = x27.u1->t0000.u0;
	ui32 w28 = (word32) v37;
	x8.u1 = x27.u1->t0008.u1;
	x9 = x28 >> 1;
	w31 = w28 & 0x01;
	NZ.u0 = cond(w31);
	x26 = Test(EQ,Z) ? x9 : x8;
	word64 x31 = x26 - x25;
	Eq_100601 NZCV;
	NZCV.u0 = cond(x31);
	x22.u1 = Test(ULT,C) ? x26 : x25;
	ui32 w0;
	if (x22 != 0x00)
	{
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x0 = x21;
		x2 = x22;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
		x1 = x23;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l00000000000495BC;
l000000000004959C:
			x8.u1 = x24.u1->t0000.u1;
			if (x8 == 0x00)
			{
				x19.u1->t0000.u1 = (struct Eq_109036 *) x24;
				x20 = x24;
				goto l0000000000049604;
			}
			x20 = x24;
l0000000000049544:
			x24 = x8;
			goto l0000000000049548;
		}
	}
	x31 = x25 - x26;
	NZCV.u0 = cond(x31);
	if (Test(UGE,C))
	{
		if (x22 == 0x00)
		{
l00000000000495D8:
			x31 = x26 - x25;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
				goto l00000000000495EC;
			goto l00000000000495E0;
		}
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
l00000000000495BC:
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l00000000000495EC;
l00000000000495E0:
			x20 = x24;
			x20.u1 = &x20.u1->t0008.u0;
			x8.u1 = x20.u1->t0000.u1;
			if (x8 == 0x00)
			{
l00000000000495EC:
				x19.u1->t0000.u1 = (struct Eq_109036 *) x24;
l0000000000049604:
				x0 = x20;
				struct Eq_100608 * v41 = (struct Eq_100608 *) ((char *) &sp->t0008 + 72);
				x29 = v41->ptr0000;
				x30 = v41->qw0008;
				struct Eq_100617 * v42 = (struct Eq_100617 *) ((char *) &sp->t0008 + 56);
				x20.u1 = v42->t0000.u1;
				x19.u1 = v42->t0008.u1;
				struct Eq_100626 * v43 = (struct Eq_100626 *) ((char *) &sp->t0008 + 40);
				x22.u1 = v43->t0000.u1;
				x21.u1 = v43->t0008.u1;
				struct Eq_100635 * v44 = (struct Eq_100635 *) ((char *) &sp->t0008 + 24);
				x24.u1 = v44->t0000.u1;
				x23.u1 = v44->t0008.u1;
				struct Eq_100644 * v45 = (struct Eq_100644 *) ((char *) &sp->t0008 + 8);
				x26 = v45->qw0000;
				x25 = v45->qw0008;
				struct Eq_100460 * v46 = sp;
				x28 = v46->qw0000;
				x27.u1 = v46->t0008.u1;
				sp = (struct Eq_100460 *) ((char *) &sp->t0008 + 88);
				return;
			}
			goto l0000000000049544;
		}
		goto l00000000000495D8;
	}
	goto l000000000004959C;
}

// 0000000000049624: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_
{
	struct Eq_100740 * fp;
	struct Eq_100740 * sp = fp;
	sp -= 0x50;
	struct Eq_100744 * x23;
	sp->ptr0010 = x23;
	struct Eq_100749 * v7 = (struct Eq_100749 *) ((char *) &sp->ptr0010 + 16);
	Eq_100751 x22;
	v7->t0000.u2 = (struct Eq_109037 *) x22;
	Eq_100751 x21;
	v7->t0008.u2 = (struct Eq_109037 *) x21;
	struct Eq_100760 * v10 = (struct Eq_100760 *) ((char *) &sp->ptr0010 + 32);
	Eq_100751 x20;
	v10->t0000.u2 = (struct Eq_109037 *) x20;
	Eq_100751 x19;
	v10->t0008.u2 = (struct Eq_109037 *) x19;
	struct Eq_100771 * v13 = (struct Eq_100771 *) ((char *) &sp->ptr0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->ptr0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_100751 x8;
	x8.u2 = x23->t0028.u2;
	Eq_100751 x2;
	x22 = x2;
	Eq_100751 x1;
	x2 = x1;
	x1.u2 = &sp->t0000.u0;
	Eq_100751 x0;
	x20 = x0;
	sp->t0008.u2 = (struct Eq_109037 *) x8;
	fn000000000001C3B0();
	x19.u2 = x0.u2->t0000.u2;
	Eq_100751 x9;
	if (x19 != 0x00)
		x1.u0 = 0x00;
	else
	{
		x21 = x0;
		word32 w0 = 0x88;
		_Znwm();
		x8.u2 = x22.u2->t0010.u2;
		Eq_100751 q0;
		q0.u0 = x22.u2->t0000.u0;
		x19 = x0;
		x0.u2->t0030.u2 = (struct Eq_109037 *) x8;
		x0.u2->t0020.u0 = (word128) q0;
		x8.u2 = x22.u2->t0028.u2;
		q0.u0 = x22.u2->t0018.u0;
		struct Eq_100830 * v21 = (struct Eq_100830 *) &x22.u2->t0008.u0;
		v21->qw0000 = 0x00;
		v21->qw0008 = 0x00;
		x22.u2->t0000.u2 = (struct Eq_109037 *) 0x00;
		x0.u2->t0048.u2 = (struct Eq_109037 *) x8;
		x0.u2->t0038.u0 = (word128) q0;
		q0.u0 = x22.u2->t0030.u0;
		struct Eq_100854 * v22 = (struct Eq_100854 *) &x22.u2->t0020.u0;
		v22->qw0000 = 0x00;
		v22->qw0008 = 0x00;
		x22.u2->t0018.u2 = (struct Eq_109037 *) 0x00;
		struct Eq_100869 * v23 = (struct Eq_100869 *) &x22.u2->t0030.u0;
		v23->ow0000 = (word128) 0x00;
		v23->qw0008 = 0x00;
		x0.u2->t0050.u0 = (word128) q0;
		x8.u2 = x22.u2->t0040.u2;
		x0.u2->t0060.u2 = (struct Eq_109037 *) x8;
		q0.u0 = x22.u2->t0048.u0;
		x22.u2->t0040.u2 = (struct Eq_109037 *) 0x00;
		x0.u2->t0068.u0 = (word128) q0;
		x8.u2 = x22.u2->t0058.u2;
		x0.u2->t0078.u2 = (struct Eq_109037 *) x8;
		x22.u2->t0058.u2 = (struct Eq_109037 *) 0x00;
		Eq_100751 w8;
		w8.u1 = x22.u2->t0060.u1;
		x9.u2 = sp->t0000.u2;
		Eq_100751 v26 = x0;
		v26.u2->t0000.u2 = (struct Eq_109037 *) 0x00;
		v26.u2->t0008.u2 = (struct Eq_109037 *) 0x00;
		x0.u2->t0080.u1 = (word32) w8;
		x0.u2->t0010.u2 = (struct Eq_109037 *) x9;
		x21.u2->t0000.u2 = (struct Eq_109037 *) x0;
		x8.u2 = x20.u2->t0000.u2;
		x8.u2 = x8.u2->t0000.u2;
		if (x8 != 0x00)
		{
			x20.u2->t0000.u2 = (struct Eq_109037 *) x8;
			x1.u2 = x21.u2->t0000.u2;
		}
		else
			x1 = x19;
		x0.u2 = x20.u2->t0008.u2;
		fn000000000001BD70();
		x8.u2 = x20.u2->t0010.u2;
		ui32 w1 = 0x00 | 0x01;
		x8.u1 = (word32) x8 + 1;
		x20.u2->t0010.u2 = (struct Eq_109037 *) x8;
	}
	x8.u2 = x23->t0028.u2;
	x9.u2 = sp->t0008.u2;
	ptr64 x31 = x8 - x9;
	Eq_100951 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		x0 = x19;
		struct Eq_100981 * v30 = (struct Eq_100981 *) ((char *) &sp->ptr0010 + 48);
		x29 = v30->ptr0000;
		x30 = v30->qw0008;
		struct Eq_100990 * v31 = (struct Eq_100990 *) ((char *) &sp->ptr0010 + 32);
		x20.u2 = v31->t0000.u2;
		x19.u2 = v31->t0008.u2;
		struct Eq_100999 * v32 = (struct Eq_100999 *) ((char *) &sp->ptr0010 + 16);
		x22.u2 = v32->t0000.u2;
		x21.u2 = v32->t0008.u2;
		x23 = sp->ptr0010;
		sp = (struct Eq_100740 *) ((char *) &sp->ptr0010 + 64);
	}
}

// 0000000000049754: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_
{
	Eq_101020 x8;
	Eq_14 x2;
	struct Eq_101012 * fp;
	struct Eq_101012 * sp = fp;
	sp = (struct Eq_101012 *) ((char *) sp - 96);
	uint64 x28;
	sp->qw0000 = x28;
	Eq_101020 x27;
	sp->t0008.u1 = (struct Eq_109038 *) x27;
	struct Eq_101025 * v8 = (struct Eq_101025 *) ((char *) &sp->t0008 + 8);
	word64 x26;
	v8->qw0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_101036 * v11 = (struct Eq_101036 *) ((char *) &sp->t0008 + 24);
	Eq_101020 x24;
	v11->t0000.u1 = (struct Eq_109038 *) x24;
	Eq_101020 x23;
	v11->t0008.u1 = (struct Eq_109038 *) x23;
	struct Eq_101047 * v14 = (struct Eq_101047 *) ((char *) &sp->t0008 + 40);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_101020 x21;
	v14->t0008.u1 = (struct Eq_109038 *) x21;
	struct Eq_101058 * v17 = (struct Eq_101058 *) ((char *) &sp->t0008 + 56);
	Eq_101020 x20;
	v17->t0000.u1 = (struct Eq_109038 *) x20;
	Eq_101020 x19;
	v17->t0008.u1 = (struct Eq_109038 *) x19;
	struct Eq_101069 * v20 = (struct Eq_101069 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	Eq_101020 x0;
	x20 = x0;
	x20.u1 = &x20.u1->t0008.u0;
	x24.u1 = x20.u1->t0000.u1;
	Eq_101020 x1;
	x19 = x1;
	if (x24 == 0x00)
	{
		x19.u1->t0000.u1 = (struct Eq_109038 *) x20;
		goto l0000000000049860;
	}
	byte v25 = (byte) *x2.u1;
	ui32 w8 = (word32) v25;
	struct Eq_101101 * v28 = (struct Eq_101101 *) ((word32) x2 + 8);
	uint64 x9 = v28->qw0000;
	word64 x10 = v28->qw0008;
	x20.u1 = &x0.u1->t0008.u0;
	uint64 x11 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_101120 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x25 = Test(EQ,Z) ? x11 : x9;
	x21.u1 = Test(NE,Z) ? x10 : (word32) x2 + 1;
l00000000000497A4:
	x27 = x24;
	x27.u1 = (word32) x27 + 32;
	Eq_101020 v37;
	v37.u0 = x27.u1->t0000.u0;
	ui32 w28 = (word32) v37;
	x8.u1 = x27.u1->t0008.u1;
	x9 = x28 >> 1;
	w31 = w28 & 0x01;
	NZ.u0 = cond(w31);
	x26 = Test(EQ,Z) ? x9 : x8;
	word64 x31 = x26 - x25;
	Eq_101153 NZCV;
	NZCV.u0 = cond(x31);
	x22.u1 = Test(ULT,C) ? x26 : x25;
	ui32 w0;
	if (x22 != 0x00)
	{
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x0 = x21;
		x2 = x22;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
		x1 = x23;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l0000000000049818;
l00000000000497F8:
			x8.u1 = x24.u1->t0000.u1;
			if (x8 == 0x00)
			{
				x19.u1->t0000.u1 = (struct Eq_109038 *) x24;
				x20 = x24;
				goto l0000000000049860;
			}
			x20 = x24;
l00000000000497A0:
			x24 = x8;
			goto l00000000000497A4;
		}
	}
	x31 = x25 - x26;
	NZCV.u0 = cond(x31);
	if (Test(UGE,C))
	{
		if (x22 == 0x00)
		{
l0000000000049834:
			x31 = x26 - x25;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
				goto l0000000000049848;
			goto l000000000004983C;
		}
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
l0000000000049818:
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l0000000000049848;
l000000000004983C:
			x20 = x24;
			x20.u1 = &x20.u1->t0008.u0;
			x8.u1 = x20.u1->t0000.u1;
			if (x8 == 0x00)
			{
l0000000000049848:
				x19.u1->t0000.u1 = (struct Eq_109038 *) x24;
l0000000000049860:
				x0 = x20;
				struct Eq_101160 * v41 = (struct Eq_101160 *) ((char *) &sp->t0008 + 72);
				x29 = v41->ptr0000;
				x30 = v41->qw0008;
				struct Eq_101169 * v42 = (struct Eq_101169 *) ((char *) &sp->t0008 + 56);
				x20.u1 = v42->t0000.u1;
				x19.u1 = v42->t0008.u1;
				struct Eq_101178 * v43 = (struct Eq_101178 *) ((char *) &sp->t0008 + 40);
				x22.u1 = v43->t0000.u1;
				x21.u1 = v43->t0008.u1;
				struct Eq_101187 * v44 = (struct Eq_101187 *) ((char *) &sp->t0008 + 24);
				x24.u1 = v44->t0000.u1;
				x23.u1 = v44->t0008.u1;
				struct Eq_101196 * v45 = (struct Eq_101196 *) ((char *) &sp->t0008 + 8);
				x26 = v45->qw0000;
				x25 = v45->qw0008;
				struct Eq_101012 * v46 = sp;
				x28 = v46->qw0000;
				x27.u1 = v46->t0008.u1;
				sp = (struct Eq_101012 *) ((char *) &sp->t0008 + 88);
				return;
			}
			goto l00000000000497A0;
		}
		goto l0000000000049834;
	}
	goto l00000000000497F8;
}

// 000000000004AF60: void rs2_devices_changed_callback::~rs2_devices_changed_callback()
void rs2_devices_changed_callback::~rs2_devices_changed_callback()
{
	ptr64 fp;
	ptr64 sp = fp;
}

// 000000000004AF64: define _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_
define _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_
{
	Eq_14 x0;
	struct Eq_101294 * fp;
	struct Eq_101294 * sp = fp;
	sp = (struct Eq_101294 *) ((char *) sp - 96);
	ui64 x28;
	sp->qw0000 = x28;
	ui64 x27;
	sp->qw0008 = x27;
	struct Eq_101307 * v8 = (struct Eq_101307 *) (&sp->qw0008 + 1);
	int64 x26;
	v8->qw0000 = x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_101318 * v11 = (struct Eq_101318 *) (&sp->qw0008 + 3);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_101329 * v14 = (struct Eq_101329 *) (&sp->qw0008 + 5);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_101340 * v17 = (struct Eq_101340 *) (&sp->qw0008 + 7);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_101351 * v20 = (struct Eq_101351 *) (&sp->qw0008 + 9);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = &sp->qw0008 + 9;
	Eq_14 v22 = x0;
	x20 = *v22.u1;
	x24 = *((word32) v22 + 8);
	Eq_14 x9 = 0x00 | 0xAAAAAAAAAAAAAAAA;
	x9 = SEQ(SLICE(x9, word48, 16), ~0x5554);
	x26 = 0x00 | 0xAAAAAAAAAAAAAAAA;
	Eq_14 x8 = x24 - x20;
	x8 >>= 3;
	x28 = x8 *64 x9;
	x26 = SEQ(0x0AAA, (word48) x26);
	x8 = x28 + 0x01;
	x19 = x0;
	int64 x31 = x8 - x26;
	Eq_101393 NZCV;
	NZCV.u0 = cond(x31);
	word32 ZC;
	if (Test(UGT,ZC))
	{
		x0 = x19;
		fn000000000001B7E0();
		goto l000000000004B150;
	}
	Eq_14 x10 = *((word32) x19 + 16);
	Eq_14 x1;
	x23 = x1;
	x10 -= x20;
	x10 >>= 3;
	x9 = x10 *64 x9;
	x10 = 0x00 | 0x5555555555555555;
	x10 = SEQ(SLICE(x10, word48, 16), 0x5554);
	x10 = SEQ(0x0555, (word48) x10);
	x31 = x9 - x10;
	NZCV.u0 = cond(x31);
	if (Test(ULE,ZC))
	{
		x9 <<= 1;
		x31 = x9 - x8;
		NZCV.u0 = cond(x31);
		bool C;
		x26 = Test(ULT,C) ? x8 : x9;
		if (x26 == 0x00)
		{
			x22.u0 = 0x00;
l000000000004AFF8:
			ui32 w27 = 0x00 | 0x18;
			x21.u1 = (char *) x22.u1 + x28 * x27;
			struct Eq_101615 * v32 = (struct Eq_101615 *) ((word32) x21 + 8);
			v32->qw0000 = 0x00;
			v32->qw0008 = 0x00;
			x21.u1->u0 = 0x00;
			Eq_14 v34 = *x23.u1;
			ui32 w8 = (word32) v34;
			Eq_14 q0;
			if ((w8 & 0x01) != 0x00)
			{
				x8 = *((word32) x23 + 16);
				q0 = *x23.u1;
				*((word32) x21 + 16) = x8;
				*x21.u1 = q0;
				goto l000000000004B094;
			}
			x20 = *((word32) x23 + 8);
			sp = (struct Eq_101294 *) ((word32) x20 + 16);
			NZCV.u0 = cond(sp);
			if (Test(ULT,C))
			{
				x23 = *((word32) x23 + 16);
				NZCV.u0 = cond(x20 - 0x17);
				if (Test(ULT,C))
				{
					ui32 w20;
					w8 = w20 << 1;
					x24 = x21;
					*x24.u1 = (byte) w8;
					x24.u1 = (word32) x24 + 1;
					if (x20 == 0x00)
						goto l000000000004B088;
				}
				else
				{
					x8.u1 = (word32) x20 + 16;
					x25 = x8 & ~0x0F;
					x0 = x25;
					_Znwm();
					w8 = 0x00 | 0x18;
					x9 = x25 | 0x01;
					x8.u1 = (char *) x22.u1 + x28 *64 x8;
					x24 = x0;
					struct Eq_101569 * v56 = (struct Eq_101569 *) ((word32) x8 + 8);
					v56->t0000.u1 = (size_t) x20;
					v56->t0008.u1 = (size_t) x0;
					*x21.u1 = x9;
				}
				x0 = x24;
				x1 = x23;
				Eq_14 x2 = x20;
				x0 = memcpy(x0, x1, x2);
l000000000004B088:
				*(x24 + x20) = (word64) 0x00;
				Eq_14 v48 = x19;
				x20 = *v48.u1;
				x24 = *((word32) v48 + 8);
l000000000004B094:
				x8.u1 = (char *) x22.u1 + x26 * x27;
				x31 = x24 - x20;
				NZCV.u0 = cond(x31);
				x9.u1 = (word32) x21 + 24;
				bool Z;
				if (Test(NE,Z))
				{
					do
					{
						x10 = *((word32) x24 - 8);
						q0 = *((word32) x24 - 24);
						*((word32) x21 - 8) = x10;
						*((word32) x21 - 24) = q0;
						struct Eq_101499 * v37 = (struct Eq_101499 *) ((word32) x24 - 16);
						v37->qw0000 = 0x00;
						v37->qw0008 = 0x00;
						((word32) x24 - 24)->u0 = 0x00;
						x24 -= 0x18;
						x31 = x20 - x24;
						NZCV.u0 = cond(x31);
						x21 -= 0x18;
					} while (Test(NE,Z));
					Eq_14 v38 = x19;
					x20 = *v38.u1;
					x24 = *((word32) v38 + 8);
				}
				x31 = x24 - x20;
				NZCV.u0 = cond(x31);
				Eq_14 v39 = x19;
				*v39.u1 = x21;
				*((word32) v39 + 8) = x9;
				*((word32) x19 + 16) = x8;
				if (Test(NE,Z))
				{
					x19 = x24;
					do
					{
						x19.u1 = (word32) x19 - 24;
						Eq_101757 v40 = *x19.u1;
						w8 = (word32) v40;
						if ((w8 & 0x01) != 0x00)
						{
							x0 = *((word32) x24 - 8);
							((real64) q0, x0, x1);
						}
						x31 = x20 - x19;
						NZCV.u0 = cond(x31);
						x24 = x19;
					} while (Test(NE,Z));
				}
				if (x20 == 0x00)
				{
					struct Eq_101639 * v49 = (struct Eq_101639 *) (&sp->qw0008 + 9);
					x29 = v49->ptr0000;
					x30 = v49->qw0008;
					struct Eq_101648 * v50 = (struct Eq_101648 *) (&sp->qw0008 + 7);
					x20.u1 = v50->t0000.u1;
					x19.u1 = v50->t0008.u1;
					struct Eq_101657 * v51 = (struct Eq_101657 *) (&sp->qw0008 + 5);
					x22.u1 = v51->t0000.u1;
					x21.u1 = v51->t0008.u1;
					struct Eq_101666 * v52 = (struct Eq_101666 *) (&sp->qw0008 + 3);
					x24.u1 = v52->t0000.u1;
					x23.u1 = v52->t0008.u1;
					struct Eq_101675 * v53 = (struct Eq_101675 *) (&sp->qw0008 + 1);
					x26 = v53->qw0000;
					x25.u1 = v53->t0008.u1;
					struct Eq_101294 * v54 = sp;
					x28 = v54->qw0000;
					x27 = v54->qw0008;
					sp = &sp->qw0008 + 11;
					return;
				}
				else
				{
					x0 = x20;
					struct Eq_101693 * v42 = (struct Eq_101693 *) (&sp->qw0008 + 9);
					x29 = v42->ptr0000;
					x30 = v42->qw0008;
					struct Eq_101702 * v43 = (struct Eq_101702 *) (&sp->qw0008 + 7);
					x20.u1 = v43->t0000.u1;
					x19.u1 = v43->t0008.u1;
					struct Eq_101711 * v44 = (struct Eq_101711 *) (&sp->qw0008 + 5);
					x22.u1 = v44->t0000.u1;
					x21.u1 = v44->t0008.u1;
					struct Eq_101720 * v45 = (struct Eq_101720 *) (&sp->qw0008 + 3);
					x24.u1 = v45->t0000.u1;
					x23.u1 = v45->t0008.u1;
					struct Eq_101729 * v46 = (struct Eq_101729 *) (&sp->qw0008 + 1);
					x26 = v46->qw0000;
					x25.u1 = v46->t0008.u1;
					struct Eq_101294 * v47 = sp;
					x28 = v47->qw0000;
					x27 = v47->qw0008;
					sp = &sp->qw0008 + 11;
					((real64) q0, x0, x1);
					return;
				}
			}
l000000000004B150:
			x0 = x21;
			fn000000000001B2D0();
			x19 = x0;
			if (x22 != 0x00)
			{
				x0 = x22;
				((real64) q0, x0, x1);
			}
			x0 = x19;
			_Unwind_Resume();
			_ZNSt6__ndk16uniqueINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_10__equal_toIS7_S7_EEEET_SC_SC_T0_();
			return;
		}
	}
	x8 = x26 + (x26 << 1);
	x0 = x8 << 3;
	_Znwm();
	x22 = x0;
	goto l000000000004AFF8;
}

// 000000000004B170: define _ZNSt6__ndk16uniqueINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_10__equal_toIS7_S7_EEEET_SC_SC_T0_
// Called from:
//      _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_
define _ZNSt6__ndk16uniqueINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_10__equal_toIS7_S7_EEEET_SC_SC_T0_
{
	struct Eq_101764 * fp;
	struct Eq_101764 * sp = fp;
	sp = (struct Eq_101764 *) ((char *) sp - 48);
	Eq_101768 x22;
	sp->t0000.u0 = (byte *) x22;
	Eq_101768 x21;
	sp->t0008.u0 = (byte *) x21;
	struct Eq_101777 * v8 = (struct Eq_101777 *) ((char *) &sp->t0008 + 8);
	Eq_101768 x20;
	v8->t0000.u0 = (byte *) x20;
	Eq_101768 x19;
	v8->t0008.u0 = (byte *) x19;
	struct Eq_101788 * v11 = (struct Eq_101788 *) ((char *) &sp->t0008 + 24);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 24;
	Eq_101768 x1;
	x19 = x1;
	Eq_101768 x0;
	x20 = x0;
	Eq_101802 x31 = x0 - x1;
	Eq_101804 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	Eq_101768 x8;
	Eq_101768 x10;
	ui32 w8;
	Eq_101768 x12;
	ui32 w11;
	word64 x13;
	Eq_101768 x9;
	ui32 w31;
	Eq_101861 NZ;
	uint64 x14;
	uint64 x11;
	Eq_14 x2;
	bool C;
	bool V;
	word32 w10;
	word32 w0;
	if (Test(NE,Z))
	{
		x8.u0 = &x20.u1->t0018.u0;
		x31 = x8 - x19;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x21 = x20;
			do
			{
				x10 = x21;
				x21 = x8;
				Eq_101903 v20;
				v20.u0 = *x20.u0;
				w8 = (word32) v20;
				x12.u0 = x20.u1->t0008.u0;
				byte v23 = *x21.u0;
				w11 = (word32) v23;
				x13 = x10.u1->qw0020;
				x9 = x8 >> 1;
				w31 = w8 & 0x01;
				NZ.u0 = cond(w31);
				x14 = x11 >> 1;
				x2.u1 = Test(EQ,Z) ? x9 : x12;
				w31 = w11 & 0x01;
				NZ.u0 = cond(w31);
				x12.u0 = Test(EQ,Z) ? x14 : x13;
				x31 = x2 - x12;
				NZCV.u0 = cond(x31);
				if (Test(EQ,Z))
				{
					x12.u0 = x20.u1->t0010.u0;
					x10.u0 = x10.u1->t0028.u0;
					w31 = w8 & 0x01;
					NZ.u0 = cond(w31);
					x0.u0 = Test(NE,Z) ? x12 : (word32) x20 + 1;
					w31 = w11 & 0x01;
					NZ.u0 = cond(w31);
					C = false;
					V = false;
					x1.u0 = Test(NE,Z) ? x10 : (word32) x21 + 1;
					if ((w8 & 0x01) != 0x00)
					{
						if (x2 != 0x00)
						{
							x8.u0 = (word32) x20 + 1;
							x9 = 0x00 - x9;
							do
							{
								Eq_101903 v34;
								v34.u0 = *x8.u0;
								w10 = (word32) v34;
								byte v35 = *x1.u0;
								w11 = (word32) v35;
								NZCV.u0 = cond(w10 - w11);
								if (Test(NE,Z))
									goto l000000000004B230;
								x8.u0 = (word32) x8 + 1;
								x9.u0 = (word32) x9 + 1;
								NZCV.u0 = cond(x9);
								x1.u0 = (word32) x1 + 1;
							} while (Test(NE,Z));
						}
						goto l000000000004B244;
					}
					if (x2 == 0x00)
						goto l000000000004B244;
					x0 = SEQ(0x00, memcmp(x0, x1, x2));
					if (w0 == 0x00)
						goto l000000000004B244;
				}
l000000000004B230:
				x8.u0 = &x21.u1->t0018.u0;
				x31 = x8 - x19;
				NZCV.u0 = cond(x31);
				x20 = x21;
			} while (Test(NE,Z));
		}
	}
	else
	{
l000000000004B244:
		x31 = x20 - x19;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x8.u0 = (word32) x20 + 48;
			x31 = x8 - x19;
			NZCV.u0 = cond(x31);
			x21.u0 = &x20.u1->t0018.u0;
			if (Test(NE,Z))
			{
				do
				{
					x9 = x21;
					x21 = x8;
					Eq_101903 v36;
					v36.u0 = *x20.u0;
					w8 = (word32) v36;
					x12.u0 = x20.u1->t0008.u0;
					Eq_101903 v37;
					v37.u0 = *x21.u0;
					w11 = (word32) v37;
					x13 = x9.u1->qw0020;
					x10 = x8 >> 1;
					w31 = w8 & 0x01;
					NZ.u0 = cond(w31);
					x14 = x11 >> 1;
					x2.u1 = Test(EQ,Z) ? x10 : x12;
					w31 = w11 & 0x01;
					NZ.u0 = cond(w31);
					x12.u0 = Test(EQ,Z) ? x14 : x13;
					x31 = x2 - x12;
					NZCV.u0 = cond(x31);
					if (Test(EQ,Z))
					{
						x12.u0 = x20.u1->t0010.u0;
						x9.u0 = x9.u1->t0028.u0;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						x0.u0 = Test(NE,Z) ? x12 : (word32) x20 + 1;
						w31 = w11 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x1.u0 = Test(NE,Z) ? x9 : (word32) x21 + 1;
						if ((w8 & 0x01) != 0x00)
						{
							if (x2 != 0x00)
							{
								x8.u0 = (word32) x20 + 1;
								x9 = 0x00 - x10;
								do
								{
									Eq_101903 v38;
									v38.u0 = *x8.u0;
									w10 = (word32) v38;
									byte v39 = *x1.u0;
									w11 = (word32) v39;
									NZCV.u0 = cond(w10 - w11);
									if (Test(NE,Z))
										goto l000000000004B2EC;
									x8.u0 = (word32) x8 + 1;
									x9.u0 = (word32) x9 + 1;
									NZCV.u0 = cond(x9);
									x1.u0 = (word32) x1 + 1;
								} while (Test(NE,Z));
							}
							goto l000000000004B33C;
						}
						if (x2 == 0x00)
							goto l000000000004B33C;
						x0 = SEQ(0x00, memcmp(x0, x1, x2));
						if (w0 != 0x00)
							goto l000000000004B2EC;
					}
					else
					{
l000000000004B2EC:
						x22 = x20;
						x22.u0 = &x22.u1->t0018.u0;
						Eq_101903 v40;
						v40.u0 = *x22.u0;
						w8 = (word32) v40;
						Eq_101903 q0;
						if ((w8 & 0x01) != 0x00)
							x22->u0 = 0x00;
						else
						{
							x8.u0 = x20.u1->t0028.u0;
							*x8.u0 = 0x00;
							Eq_102038 v43;
							v43.u0 = x20.u1->t0018.u0;
							w8 = (word32) v43;
							x20.u1->qw0020 = 0x00;
							if ((w8 & 0x01) != 0x00)
							{
								x0.u0 = x20.u1->t0028.u0;
								((real64) q0, x0, x1);
								x20.u1->t0018.u1 = 0x00;
							}
						}
						x8.u0 = x21.u1->t0010.u0;
						q0 = *x21;
						x20 = x22;
						x22.u1->t0010.u0 = (byte *) x8;
						x22->u0 = q0;
						struct Eq_102067 * v42 = (struct Eq_102067 *) &x21.u1->t0008.u0;
						v42->qw0000 = 0x00;
						v42->qw0008 = 0x00;
						x21->u0 = 0x00;
					}
l000000000004B33C:
					x8.u0 = &x21.u1->t0018.u0;
					x31 = x8 - x19;
					NZCV.u0 = cond(x31);
				} while (Test(NE,Z));
				x21.u0 = &x20.u1->t0018.u0;
			}
			x19 = x21;
		}
		else
			x19 = x20;
	}
	x0 = x19;
	struct Eq_101818 * v45 = (struct Eq_101818 *) ((char *) &sp->t0008 + 24);
	x29 = v45->ptr0000;
	x30 = v45->qw0008;
	struct Eq_101827 * v46 = (struct Eq_101827 *) ((char *) &sp->t0008 + 8);
	x20.u0 = v46->t0000.u0;
	x19.u0 = v46->t0008.u0;
	struct Eq_101764 * v47 = sp;
	x22.u0 = v47->t0000.u0;
	x21.u0 = v47->t0008.u0;
	sp = (struct Eq_101764 *) ((char *) &sp->t0008 + 40);
}

// 000000000004B36C: define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEEC2Ev
define _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEEC2Ev
{
	ui32 w0;
	struct Eq_102151 * fp;
	struct Eq_102151 * sp = fp;
	sp -= 0x50;
	struct Eq_102155 * x23;
	sp->ptr0010 = x23;
	struct Eq_102160 * v7 = (struct Eq_102160 *) ((char *) &sp->ptr0010 + 16);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	word64 x21;
	v7->qw0008 = x21;
	struct Eq_102171 * v10 = (struct Eq_102171 *) ((char *) &sp->ptr0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_102182 * v13 = (struct Eq_102182 *) ((char *) &sp->ptr0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->ptr0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	x22.u0 = 0x00070000;
	Eq_14 x8;
	x8.u1 = x23->t0028.u1;
	x22 = *((word32) x22 + 4064);
	Eq_14 x0;
	x20.u1 = (word32) x0 + 8;
	x19 = x0;
	sp->t0008.u1 = (size_t) x8;
	Eq_14 x9;
	x9.u1 = (word32) x22 + 16;
	*x0.u1 = x9;
	x0 = x20;
	_ZNSt6__ndk16localeC1Ev();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3776);
	word128 q0 = 0;
	x0.u1 = sp;
	Eq_14 x1 = x20;
	x8.u1 = (word32) x8 + 16;
	struct Eq_102230 * v20 = (struct Eq_102230 *) ((word32) x19 + 72);
	v20->qw0000 = 0x00;
	v20->qw0008 = 0x00;
	((word32) x19 + 64)->u1 = 0x00;
	((word32) x19 + 0x00A2)->u0 = 0x00;
	((word32) x19 + 0x00A0)->u1 = 0x00;
	struct Eq_102253 * v21 = (struct Eq_102253 *) ((word32) x19 + 32);
	v21->ow0000 = q0;
	v21->ow0010 = q0;
	((word32) x19 + 16)->u1 = q0;
	struct Eq_102265 * v22 = (struct Eq_102265 *) ((word32) x19 + 0x0080);
	v22->ow0000 = q0;
	v22->ow0010 = q0;
	*x19.u1 = x8;
	struct Eq_102277 * v23 = (struct Eq_102277 *) ((word32) x19 + 96);
	v23->ow0000 = q0;
	v23->ow0010 = q0;
	_ZNSt6__ndk16localeC1ERKS0_();
	x1.u0 = 0x00070000;
	x1 = *((word32) x1 + 3600);
	x0.u1 = sp;
	_ZNKSt6__ndk16locale9has_facetERNS0_2idE();
	ui32 w21 = w0;
	x0.u1 = sp;
	_ZNSt6__ndk16localeD1Ev();
	if ((w21 & 0x01) != 0x00)
	{
		x0.u1 = sp;
		x1 = x20;
		_ZNSt6__ndk16localeC1ERKS0_();
		x1.u0 = 0x00070000;
		x1 = *((word32) x1 + 3600);
		x0.u1 = sp;
		_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
		*((word32) x19 + 0x0080) = x0;
		x0.u1 = sp;
		_ZNSt6__ndk16localeD1Ev();
		x0 = *((word32) x19 + 0x0080);
		x8 = *x0.u1;
		x8 = *((word32) x8 + 56);
		x8();
		ui32 w8 = w0 & 0x01;
		((word32) x19 + 0x00A2)->u0 = (byte) w8;
	}
	x8 = *x19.u1;
	x8 = *((word32) x8 + 24);
	ui32 w2 = 0x00 | 0x1000;
	x0 = x19;
	x1.u0 = 0x00;
	x8();
	x8.u1 = x23->t0028.u1;
	x9.u1 = sp->t0008.u1;
	int64 x31 = x8 - x9;
	Eq_102323 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_102365 * v31 = (struct Eq_102365 *) ((char *) &sp->ptr0010 + 48);
		x29 = v31->ptr0000;
		x30 = v31->qw0008;
		struct Eq_102374 * v32 = (struct Eq_102374 *) ((char *) &sp->ptr0010 + 32);
		x20.u1 = v32->t0000.u1;
		x19.u1 = v32->t0008.u1;
		struct Eq_102383 * v33 = (struct Eq_102383 *) ((char *) &sp->ptr0010 + 16);
		x22.u1 = v33->t0000.u1;
		x21 = v33->qw0008;
		x23 = sp->ptr0010;
		sp = (struct Eq_102151 *) ((char *) &sp->ptr0010 + 64);
	}
}

// 000000000004B4C4: define _ZNSt6__ndk16vectorIhNS_9allocatorIhEEE8__appendEm
define _ZNSt6__ndk16vectorIhNS_9allocatorIhEEE8__appendEm
{
	Eq_14 x0;
	Eq_102396 fp;
	Eq_102396 sp = fp;
	sp.u1 = (word32) sp - 80;
	Eq_14 x25;
	sp->u1 = x25;
	struct Eq_102405 * v7 = (struct Eq_102405 *) ((word32) sp + 16);
	Eq_14 x24;
	v7->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_102416 * v10 = (struct Eq_102416 *) &sp.u3->t0020.u0;
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_102427 * v13 = (struct Eq_102427 *) ((word32) sp + 48);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_102438 * v16 = (struct Eq_102438 *) ((word32) sp + 64);
	Eq_102440 x29;
	v16->t0000.u1 = (struct Eq_109043 *) x29;
	Eq_14 x30;
	v16->t0008.u1 = (size_t) x30;
	x29 = (word32) sp + 64;
	struct Eq_102452 * v19 = (struct Eq_102452 *) ((word32) x0 + 8);
	x25.u1 = v19->t0000.u1;
	Eq_14 x8;
	x8.u1 = v19->t0008.u1;
	Eq_14 x1;
	x20 = x1;
	x19 = x0;
	Eq_14 x9 = x8 - x25;
	Eq_102464 x31 = x9 - x1;
	Eq_102466 NZCV;
	NZCV.u0 = cond(x31);
	bool C;
	bool Z;
	if (Test(UGE,C))
	{
		do
		{
			x25.u1->u0 = 0x00;
			x8 = *((word32) x19 + 8);
			--x20;
			NZCV.u0 = cond(x20);
			x25.u1 = (word32) x8 + 1;
			*((word32) x19 + 8) = x25;
		} while (Test(NE,Z));
		goto l000000000004B5B8;
	}
	x21 = *x19.u1;
	x22 = x25 - x21;
	x9.u1 = x22 + x20;
	NZCV.u0 = cond(x9);
	bool N;
	Eq_102551 x10;
	Eq_14 x2;
	word128 q0;
	if (Test(GE,N))
	{
		x8 -= x21;
		x10 = 0x00 | 0x3FFFFFFFFFFFFFFE;
		x31 = x8 - x10;
		NZCV.u0 = cond(x31);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x8 <<= 1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			x24.u1 = Test(ULT,C) ? x9 : x8;
			if (x24 == 0x00)
			{
				x23.u0 = 0x00;
l000000000004B558:
				x0.u1 = x23 + x22;
				x8.u1 = x25 + x20;
				word32 w1 = 0x00;
				x2 = x20;
				x24.u1 = x23 + x24;
				x25 = x8 - x21;
				x0 = memset(x0, (int32) x1, x2);
				NZCV.u0 = cond(x22 - 0x01);
				x20.u1 = x23 + x25;
				word32 NV;
				if (Test(GE,NV))
				{
					x0 = x23;
					x1 = x21;
					x2 = x22;
					x0 = memcpy(x0, x1, x2);
				}
				Eq_14 v36 = x19;
				*v36.u1 = x23;
				*((word32) v36 + 8) = x20;
				*((word32) x19 + 16) = x24;
				if (x21 != 0x00)
				{
					x0 = x21;
					Eq_102710 v37 = (Eq_102710) (sp + (struct <anonymous> *) 64);
					x29.u0 = v37->b0000;
					x30.u1 = v37->t0008.u1;
					Eq_102719 v38 = (Eq_102719) (sp + (struct <anonymous> *) 48);
					x20.u1 = v38->b0000;
					x19.u1 = v38->t0008.u1;
					Eq_102728 v39 = (Eq_102728) (sp + (struct <anonymous> *) 32);
					x22.u1 = v39->b0000;
					x21.u1 = v39->t0008.u1;
					Eq_102737 v40 = (Eq_102737) (sp + (struct <anonymous> *) 16);
					x24.u1 = v40->b0000;
					x23.u1 = v40->t0008.u1;
					x25.u1 = *sp;
					sp.u1 = (word32) sp + 80;
					((real64) q0, x0, x1);
					return;
				}
l000000000004B5B8:
				Eq_102651 v32 = (Eq_102651) ((word32) sp + 64);
				x29.u0 = v32->b0000;
				x30.u1 = v32->t0008.u1;
				Eq_102660 v33 = (Eq_102660) ((word32) sp + 48);
				x20.u1 = v33->b0000;
				x19.u1 = v33->t0008.u1;
				struct Eq_102669 * v34 = (struct Eq_102669 *) &sp.u3->t0020.u0;
				x22.u1 = v34->dw0000;
				x21.u1 = v34->t0008.u1;
				Eq_102678 v35 = (Eq_102678) ((word32) sp + 16);
				x24.u1 = v35->b0000;
				x23.u1 = v35->t0008.u1;
				x25.u1 = *sp;
				sp.u1 = (word32) sp + 80;
				return;
			}
		}
		else
			x24 = 0x00 | 0x7FFFFFFFFFFFFFFF;
		x0 = x24;
		_Znwm();
		x23 = x0;
		goto l000000000004B558;
	}
	x0 = x19;
	fn000000000001B7E0();
	sp -= 0x01E0;
	word64 d8;
	sp.u3->qw0190 = d8;
	struct Eq_102503 * v44 = (struct Eq_102503 *) ((word32) sp + 416);
	word64 x28;
	v44->qw0000 = x28;
	v44->t0008.u1 = (size_t) x23;
	struct Eq_102513 * v45 = (struct Eq_102513 *) ((word32) sp + 432);
	v45->t0000.u1 = (size_t) x22;
	v45->t0008.u1 = (size_t) x21;
	struct Eq_102522 * v46 = (struct Eq_102522 *) ((word32) sp + 448);
	v46->t0000.u1 = (size_t) x20;
	v46->t0008.u1 = (size_t) x19;
	struct Eq_102531 * v47 = (struct Eq_102531 *) ((word32) sp + 464);
	v47->t0000.u1 = (struct Eq_109043 *) x29;
	v47->t0008.u1 = (size_t) x30;
	x29 = (word32) sp + 464;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	x8 = *((word32) x23 + 40);
	x9.u0 = 0x00071000;
	x9.u1 = (word32) x9 + 312;
	x10 = &sp.u3->t0020.u0;
	x29.u1->tFFFFFFB8.u1 = (size_t) x8;
	Eq_102470 w8 = *x9.u1;
	x21.u1 = (word32) x10 + 8;
	Eq_14 v51 = *((word32) x9 + 8);
	ui32 w10 = (word32) v51;
	word128 q8 = q0;
	sp.u3->t0020.u0 = (ui32) w8;
	x8.u1 = (word32) x9 + 9;
	x9 = *((word32) x9 + 24);
	ui32 w31 = w10 & 0x01;
	Eq_102581 NZ;
	NZ.u0 = cond(w31);
	struct Eq_102584 * v56 = (struct Eq_102584 *) ((word32) sp + 48);
	v56->qw0000 = 0x00;
	v56->qw0008 = 0x00;
	sp.u3->t0028.u1 = (size_t) 0x00;
	x20.u1 = Test(EQ,Z) ? x8 : x9;
	x0 = x20;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
		x0 = x21;
		fn000000000001B2D0();
		goto l000000000004B7FC;
	}
	x19 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	int32 w19;
	if (Test(ULT,C))
	{
		w8 = w19 << 1;
		x21.u1 = (word32) x21 + 1;
		sp.u3->t0028.u0 = (byte) (byte) w8;
		if (x19 == 0x00)
			goto l000000000004B698;
	}
	else
	{
		x8.u1 = x19 + 0x10;
		x22 = x8 & ~0x0F;
		x0 = x22;
		_Znwm();
		x8 = x22 | 0x01;
		x21 = x0;
		Eq_102771 v78 = (Eq_102771) (sp + (struct <anonymous> *) 48);
		v78->b0000 = (char) x19;
		v78->t0008.u1 = (size_t) x0;
		sp.u3->t0028.u1 = (size_t) x8;
	}
	x0 = x21;
	x1 = x20;
	x2 = x19;
	x0 = memcpy(x0, x1, x2);
l000000000004B698:
	*(x21 + x19) = (word64) 0x00;
	x0.u1 = &sp.u3->t0020.u0;
	((LEVELS) x0);
	int32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w19 = 0x00;
		Eq_14 v61;
		v61.u0 = sp.u3->t0028.u0;
		w8 = (word32) v61;
		if ((w8 & 0x01) == 0x00)
			goto l000000000004B750;
		goto l000000000004B768;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_102828 v59 = (Eq_102828) ((word32) sp + 16);
	v59->b0000 = (char) 0x00;
	v59->t0008.u1 = (size_t) 0x00;
	sp.u3->t0008.u1 = (size_t) 0x00;
	x19 = *x8.u1;
	x0 = x19;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	if (Test(ULT,C))
	{
		x20 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = &sp.u3->t0008.u0;
			ui32 w20;
			w8 = w20 << 1;
			x21 = x9 | 0x01;
			sp.u3->t0008.u0 = (byte) (byte) w8;
			if (x20 == 0x00)
				goto l000000000004B730;
		}
		else
		{
			x8.u1 = (word32) x20 + 16;
			x22 = x8 & ~0x0F;
			x0 = x22;
			_Znwm();
			x8 = x22 | 0x01;
			x21 = x0;
			Eq_102885 v62;
			v62.u1 = (word32) sp + 16;
			v62->u1 = x20;
			v62.u3->t0008.u1 = (size_t) x0;
			sp.u3->t0008.u1 = (size_t) x8;
		}
		x0 = x21;
		x1 = x19;
		x2 = x20;
		x0 = memcpy(x0, x1, x2);
l000000000004B730:
		*(x21 + x20) = (word64) 0x00;
		x0.u1 = &sp.u3->t0008.u0;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v63;
		v63.u0 = sp.u3->t0008.u0;
		w8 = (word32) v63;
		w19 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v64;
			v64.u0 = sp.u3->t0028.u0;
			w8 = (word32) v64;
			if ((w8 & 0x01) != 0x00)
			{
l000000000004B750:
				if ((w19 & 0x01) != 0x00)
					goto l000000000004B7C8;
				goto l000000000004B774;
			}
		}
		else
		{
			x0.u1 = *((word32) sp + 24);
			((real64) q0, x0, x1);
			Eq_14 v75;
			v75.u0 = sp.u3->t0028.u0;
			w8 = (word32) v75;
			if ((w8 & 0x01) == 0x00)
				goto l000000000004B750;
		}
l000000000004B768:
		x0.u1 = *((word32) sp + 56);
		((real64) q0, x0, x1);
		if ((w19 & 0x01) == 0x00)
			goto l000000000004B7C8;
l000000000004B774:
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		x2.u0 = 0x00071000;
		Eq_14 x3;
		x3.u0 = 0x00052000;
		x2.u1 = (word32) x2 + 312;
		x1 = *x8.u1;
		x3.u1 = (word32) x3 + 0x05EE;
		x0.u1 = (word32) sp + 64;
		ui32 w4 = 0x00 | 0x06;
		word64 x5 = 0x00;
		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
		x8.u0 = 0x00050000;
		real32 s0 = (real32) *((word32) x8 + 1668);
		real32 s8;
		s0 = s8 * s0;
		real32 s2;
		w0 = (int32) truncf(s2);
		x1.u0 = 0x00053000;
		x1.u1 = (word32) x1 + 0x0563;
		x0.u1 = (word32) sp + 64;
		(x0, 0x00);
		x0.u1 = (word32) sp + 64;
		LogCapture::~LogCapture();
		sp.u1 = &sp.u3->t0008.u0;
l000000000004B7C8:
		x8 = *((word32) x23 + 40);
		x9.u1 = x29.u1->tFFFFFFB8.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			Eq_103039 v71;
			v71.u1 = (word32) sp + 464;
			x29 = *v71;
			x30.u1 = v71.u3->t0008.u1;
			Eq_103048 v72;
			v72.u1 = (word32) sp + 448;
			x20.u1 = *v72;
			x19.u1 = v72.u3->t0008.u1;
			Eq_103057 v73;
			v73.u1 = (word32) sp + 432;
			x22.u1 = *v73;
			x21.u1 = v73.u3->t0008.u1;
			Eq_103066 v74;
			v74.u1 = (word32) sp + 416;
			x28 = (word64) *v74;
			x23.u1 = v74.u3->t0008.u1;
			d8 = sp.u3->qw0190;
			sp.u1 = (word32) sp + 480;
			return;
		}
l000000000004B7FC:
		__stack_chk_fail();
	}
	x0.u1 = &sp.u3->t0008.u0;
	fn000000000001B2D0();
	x19 = x0;
	LogCapture::~LogCapture();
	sp.u1 = &sp.u3->t0008.u0;
	x0 = x19;
	_Unwind_Resume();
	Eq_14 v76;
	v76.u0 = sp.u3->t0008.u0;
	w8 = (word32) v76;
	x19 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = *((word32) sp + 24);
		((real64) q0, x0, x1);
		Eq_14 v77;
		v77.u0 = sp.u3->t0028.u0;
		w8 = (word32) v77;
		if ((w8 & 0x01) != 0x00)
			goto l000000000004B850;
	}
	else
	{
		Eq_14 v79;
		v79.u0 = sp.u3->t0028.u0;
		w8 = (word32) v79;
		if ((w8 & 0x01) == 0x00)
			goto l000000000004B850;
	}
	x0 = x19;
	_Unwind_Resume();
l000000000004B850:
	x0.u1 = *((word32) sp + 56);
	((real64) q0, x0, x1);
	x0 = x19;
	_Unwind_Resume();
	if (x0 == 0x00)
		return;
	x8 = *x0.u1;
	x1 = *((word32) x8 + 24);
	x1();
}

// 000000000004B878: void rs2_update_progress_callback::~rs2_update_progress_callback()
void rs2_update_progress_callback::~rs2_update_progress_callback()
{
	ptr64 fp;
	ptr64 sp = fp;
}

// 000000000004C3D4: define _ZN3rs26deviceaSERKS0_
define _ZN3rs26deviceaSERKS0_
{
	struct Eq_103131 * fp;
	struct Eq_103131 * sp = fp;
	sp = (struct Eq_103131 *) ((char *) sp - 48);
	struct Eq_103135 * x22;
	sp->ptr0000 = x22;
	word64 x21;
	sp->qw0008 = x21;
	struct Eq_103144 * v8 = (struct Eq_103144 *) (&sp->qw0008 + 1);
	word64 x20;
	v8->qw0000 = x20;
	struct Eq_103135 * x19;
	v8->ptr0008 = x19;
	struct Eq_103155 * v11 = (struct Eq_103155 *) (&sp->qw0008 + 3);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = &sp->qw0008 + 3;
	struct Eq_103135 * x0;
	x22 = x0;
	x22 = (struct Eq_103135 *) &x22->qw0008;
	x22->qw0000 = 0x00;
	x21 = x22->qw0008;
	word64 x1;
	x20 = x1;
	x19 = x0;
	x22->qw0008 = 0x00;
	word64 x8;
	if (x21 == 0x00)
	{
		struct Eq_103135 * v15 = x22;
		v15->qw0000 = 0x00;
		v15->qw0008 = 0x00;
		struct Eq_103194 * v17 = x20 + 8;
		word64 x9 = v17->qw0000;
		x8 = v17->qw0008;
		if (x8 != 0x00)
		{
			word64 * x10 = x8 + 0x08;
			Eq_14 w12;
			do
			{
				union Eq_3183 * v20 = &*x10;
				Eq_14 x11 = __load_exclusive<word64>(v20);
				x11.u1 = (word32) x11 + 1;
				union Eq_3192 * v21 = &*x10;
				w12 = __store_exclusive<word64>(v21, x11);
			} while (w12 != 0x00);
		}
		x20 = x19->qw0010;
		struct Eq_103212 * v23 = (struct Eq_103212 *) &x19->qw0008;
		v23->qw0000 = x9;
		v23->qw0008 = x8;
		if (x20 == 0x00)
		{
			x0 = x19;
			struct Eq_103246 * v24 = (struct Eq_103246 *) (&sp->qw0008 + 3);
			x29 = v24->ptr0000;
			x30 = v24->qw0008;
			struct Eq_103255 * v25 = (struct Eq_103255 *) (&sp->qw0008 + 1);
			x20 = v25->qw0000;
			x19 = v25->ptr0008;
			struct Eq_103131 * v26 = sp;
			x22 = v26->ptr0000;
			x21 = v26->qw0008;
			sp = &sp->qw0008 + 5;
		}
		else
			x8 = x20 + 0x08;
	}
	else
		x8 = x21 + 0x08;
}

// 000000000004C4E8: define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE3putEc
define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE3putEc
{
	word32 w0;
	ui32 w1;
	struct Eq_103274 * fp;
	struct Eq_103274 * sp = fp;
	sp -= 0x50;
	struct Eq_103278 * x21;
	sp->ptr0020 = x21;
	struct Eq_103283 * v7 = (struct Eq_103283 *) ((char *) &sp->ptr0020 + 16);
	word64 x20;
	v7->qw0000 = x20;
	struct Eq_103289 * x19;
	v7->ptr0008 = x19;
	struct Eq_103294 * v10 = (struct Eq_103294 *) ((char *) &sp->ptr0020 + 32);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = (char *) &sp->ptr0020 + 32;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_103312 x8;
	x8.u1 = x21->t0028.u1;
	struct Eq_103289 * x0;
	x19 = x0;
	sp->t0018.u1 = (struct Eq_109082 *) x8;
	sp->b0008 = 0x00;
	sp->ptr0010 = x0;
	x8.u0 = x0->b0000;
	x8.u1 = (word32) x8 - 24;
	Eq_103312 x9;
	x9.u1 = x8.u1->t0000.u1;
	x9.u1 = x0 + x9;
	word32 w10 = x9.u1->dw0020;
	word64 x31;
	Eq_103352 NZCV;
	bool Z;
	if (w10 != 0x00)
	{
l000000000004C5A8:
		x0 = (struct Eq_103289 *) &sp->b0008;
		fn000000000001BCE0();
		x8.u1 = x21->t0028.u1;
		x9.u1 = sp->t0018.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			x0 = x19;
			struct Eq_103390 * v21 = (struct Eq_103390 *) ((char *) &sp->ptr0020 + 32);
			x29 = v21->ptr0000;
			x30 = v21->qw0008;
			struct Eq_103399 * v22 = (struct Eq_103399 *) ((char *) &sp->ptr0020 + 16);
			x20 = v22->qw0000;
			x19 = v22->ptr0008;
			x21 = sp->ptr0020;
			sp = (struct Eq_103274 *) ((char *) &sp->ptr0020 + 48);
		}
	}
	else
	{
		x0 = x9.u1->ptr0088;
		ui32 w20 = w1;
		if (x0 != null)
		{
			fn000000000001B260();
			x8.u0 = x19->b0000;
			x8 -= 0x18;
		}
		ui32 w9 = 0x00 | 0x01;
		sp->b0008 = (byte) w9;
		x9.u1 = x8.u1->t0000.u1;
		x9.u1 = x19 + x9;
		x0 = x9.u1->ptr0028;
		if (x0 != null)
		{
			struct Eq_103425 * v24 = (struct Eq_103425 *) &x0->t0030.u0;
			x8.u1 = v24->t0000.u1;
			x9.u1 = v24->t0008.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
			{
				x9.u1 = (word32) x8 + 1;
				x0->t0030.u1 = (struct Eq_109082 *) x9;
				x8.u1->t0000.u0 = (byte) (byte) w20;
				goto l000000000004C5A8;
			}
			x8.u0 = x0->b0000;
			w1 = w20 & 0xFF;
			x8.u1 = x8.u1->t0068.u1;
			x8();
			word32 wsp = w0 + 0x01;
			NZCV.u0 = cond(wsp);
			if (Test(NE,Z))
				goto l000000000004C5A8;
			x8.u0 = x19->b0000;
			x8 -= 0x18;
		}
		x8.u1 = x8.u1->t0000.u1;
		x0 = x19 + x8;
		ui32 w8 = x0->dw0020;
		w1 = w8 | 0x01;
		_ZNSt6__ndk18ios_base5clearEj();
		goto l000000000004C5A8;
	}
}

// tmpecu37ckl_text_0003.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

// 000000000004D1FC: void updatable::updatable(Register Eq_46798 x0)
void updatable::updatable(Eq_46798 x0)
{
	word64 x1;
	struct Eq_103465 * fp;
	struct Eq_103465 * sp = fp;
	sp -= 0x50;
	Eq_14 x23;
	sp->t0010.u1 = (size_t) x23;
	struct Eq_103474 * v7 = (struct Eq_103474 *) ((char *) &sp->t0010 + 16);
	Eq_14 x22;
	v7->t0000.u1 = (size_t) x22;
	struct Eq_103480 * x21;
	v7->ptr0008 = x21;
	struct Eq_103485 * v10 = (struct Eq_103485 *) ((char *) &sp->t0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_103496 * v13 = (struct Eq_103496 *) ((char *) &sp->t0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->t0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x21->t0028.u1;
	x19 = x0;
	sp->t0008.u1 = (size_t) x8;
	struct Eq_103522 * v18 = x1 + 8;
	x8.u1 = v18->t0000.u1;
	x20.u1 = v18->t0008.u1;
	Eq_14 x9;
	if (x20 == 0x00)
	{
		x9.u0 = 0x00070000;
		x9 = *((word32) x9 + 0x0DC0);
		x23 = x19;
		x22 = x19;
		x9.u1 = (word32) x9 + 16;
		*x19.u1 = x9;
		x23.u1 = (word32) x23 + 8;
		*x23.u1 = x8;
		x22.u1 = (word32) x22 + 16;
		x22.u1->u0 = 0x00;
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3656);
		x8.u1 = (word32) x8 + 16;
		*x19.u1 = x8;
		sp->t0000.u1 = (size_t) 0x00;
		x0 = *((word32) x19 + 8);
		word32 w1 = 0x25;
		word64 * x2 = (word64 *) &sp->t0000.u0;
		rs2_is_device_extendable_to();
		word32 w0;
		if (w0 == 0x00)
		{
			x8.u1 = sp->t0000.u1;
			if (x8 == 0x00)
			{
				x23.u1->u1 = 0x00;
				x20 = *((word32) x19 + 16);
				((word32) x19 + 16)->u0 = 0x00;
				if (x20 != 0x00)
					x8.u1 = (word32) x20 + 8;
			}
		}
		x0.u1 = sp->t0000.u1;
		fn000000000001ADF0();
		x8.u1 = x21->t0028.u1;
		x9.u1 = sp->t0008.u1;
		int64 x31 = x8 - x9;
		Eq_103648 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_103676 * v33 = (struct Eq_103676 *) ((char *) &sp->t0010 + 48);
			x29 = v33->ptr0000;
			x30 = v33->qw0008;
			struct Eq_103685 * v34 = (struct Eq_103685 *) ((char *) &sp->t0010 + 32);
			x20.u1 = v34->t0000.u1;
			x19.u1 = v34->t0008.u1;
			struct Eq_103694 * v35 = (struct Eq_103694 *) ((char *) &sp->t0010 + 16);
			x22.u1 = v35->t0000.u1;
			x21 = v35->ptr0008;
			x23.u1 = sp->t0010.u1;
			sp = (struct Eq_103465 *) ((char *) &sp->t0010 + 64);
		}
	}
	else
	{
		x9.u1 = (word32) x20 + 8;
		Eq_14 x10;
		Eq_14 w11;
		do
		{
			union Eq_3183 * v21 = &*x9.u1;
			x10 = __load_exclusive<word64>(v21);
			x10.u1 = (word32) x10 + 1;
			union Eq_3192 * v22 = &*x9.u1;
			w11 = __store_exclusive<word64>(v22, x10);
		} while (w11 != 0x00);
		x10.u0 = 0x00070000;
		x10 = *((word32) x10 + 0x0DC0);
		x23 = x19;
		x22 = x19;
		x10.u1 = (word32) x10 + 16;
		*x19.u1 = x10;
		x23.u1 = (word32) x23 + 8;
		*x23.u1 = x8;
		x22.u1 = (word32) x22 + 16;
		*x22.u1 = x20;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v24 = &*x9.u1;
			x8 = __load_exclusive<word64>(v24);
			x8.u1 = (word32) x8 + 1;
			union Eq_3192 * v25 = &*x9.u1;
			w10 = __store_exclusive<word64>(v25, x8);
		} while (w10 != 0x00);
	}
}

// 000000000004D3B8: void updatable::~updatable()
void updatable::~updatable()
{
	struct Eq_103707 * fp;
	struct Eq_103707 * sp = fp;
	sp = (struct Eq_103707 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_103715 * x19;
	sp->ptr0008 = x19;
	struct Eq_103720 * v8 = (struct Eq_103720 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_103715 * x0;
	x20 = x0->qw0010;
	x8 = *((word32) x8 + 0x0DC0);
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x20 == 0x00)
	{
		struct Eq_103748 * v11 = (struct Eq_103748 *) ((char *) &sp->ptr0008 + 8);
		x29 = v11->ptr0000;
		x30 = v11->qw0008;
		x0 = x19;
		struct Eq_103707 * v12 = sp;
		x20 = v12->qw0000;
		x19 = v12->ptr0008;
		sp = (struct Eq_103707 *) ((char *) &sp->ptr0008 + 24);
		word128 q0;
		void * x1;
		((real64) q0, x0, x1);
	}
	else
		x8 = x20 + 0x08;
}

// 000000000004D420: define _ZNSt6__ndk110shared_ptrIN4rgbd13RGBDRealSenseEED2Ev
define _ZNSt6__ndk110shared_ptrIN4rgbd13RGBDRealSenseEED2Ev
{
	word64 * fp;
	word64 * sp = fp;
	sp += -4;
	word64 x19;
	*sp = x19;
	struct Eq_103785 * v7 = (struct Eq_103785 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	struct Eq_103797 * x0;
	x19 = x0->qw0008;
	if (x19 == 0x00)
	{
		struct Eq_103804 * v10 = (struct Eq_103804 *) (sp + 2);
		x29 = v10->ptr0000;
		x30 = v10->qw0008;
		x19 = *sp;
		sp += 4;
	}
	else
	{
		word64 x8 = x19 + 0x08;
	}
}

// 000000000004D478: define JNI_OnLoad
define JNI_OnLoad
{
	struct Eq_103820 * fp;
	struct Eq_103820 * sp = fp;
	sp -= 0xB0;
	struct Eq_103825 * v6 = (struct Eq_103825 *) ((char *) &sp->t0048 + 8);
	struct Eq_103827 * x28;
	v6->ptr0000 = x28;
	Eq_14 x27;
	v6->t0008.u1 = (size_t) x27;
	struct Eq_103836 * v9 = (struct Eq_103836 *) ((char *) &sp->t0048 + 24);
	Eq_14 x26;
	v9->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v9->t0008.u1 = (size_t) x25;
	struct Eq_103847 * v12 = (struct Eq_103847 *) ((char *) &sp->t0048 + 40);
	Eq_14 x24;
	v12->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v12->t0008.u1 = (size_t) x23;
	struct Eq_103858 * v15 = (struct Eq_103858 *) ((char *) &sp->t0048 + 56);
	Eq_14 x22;
	v15->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v15->t0008.u1 = (size_t) x21;
	struct Eq_103869 * v18 = (struct Eq_103869 *) ((char *) &sp->t0048 + 72);
	Eq_14 x20;
	v18->t0000.u1 = (size_t) x20;
	word64 x19;
	v18->qw0008 = x19;
	struct Eq_103880 * v21 = (struct Eq_103880 *) ((char *) &sp->t0048 + 88);
	ptr64 x29;
	v21->ptr0000 = x29;
	word64 x30;
	v21->qw0008 = x30;
	x29 = (char *) &sp->t0048 + 88;
	Eq_1720 sysreg3_3_13_0_2;
	x28 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x28->t0028.u1;
	ui32 w2 = 0x06;
	ui32 w19 = 0x06;
	Eq_14 x1;
	x1.u1 = &sp->t0008.u0;
	sp->t0048.u1 = (size_t) x8;
	Eq_14 x0;
	x8 = *x0.u1;
	w2 = SEQ(0x01, (word16) w2);
	x21 = x0;
	w19 = SEQ(0x01, (word16) w19);
	x8 = *((word32) x8 + 48);
	x8();
	ui32 w0;
	if (w0 != 0x00)
	{
		w19 = ~0x00;
		goto l000000000004D4D0;
	}
	x20.u1 = sp->t0008.u1;
	x8.u0 = 0x00071000;
	*((word32) x8 + 0x0518) = x21;
	x1.u0 = 0x00054000;
	x8 = *x20.u1;
	x1.u1 = (word32) x1 + 0x0B8A;
	x0 = x20;
	x8 = *((word32) x8 + 48);
	x8();
	if (x0 == 0x00)
		goto l000000000004D4D0;
	x8 = *x20.u1;
	x21 = x0;
	Eq_14 x2;
	x2.u0 = 0x00071000;
	x2.u1 = (word32) x2 + 40;
	x8 = *((word32) x8 + 0x06B8);
	word32 w3 = 0x0A;
	x0 = x20;
	x1 = x21;
	x8();
	if ((w0 & 0x00) == 0x00)
	{
		x1.u0 = 0x00054000;
		x2.u0 = 0x00054000;
		x1.u1 = (word32) x1 + 0x0BAA;
		x2.u1 = (word32) x2 + 0x0BB0;
		w0 = 0x05;
		__android_log_print();
		goto l000000000004D4D0;
	}
	x23.u0 = 0x00071000;
	x23.u1 = (word32) x23 + 1224;
	x25 = *x23.u1;
	Eq_14 w8;
	Eq_104011 NZCV;
	word32 NV;
	if (x25 != 0x00)
	{
		x24.u0 = 0x00071000;
		x24.u1 = (word32) x24 + 1224;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x25 + 32);
				NZCV.u0 = cond(w8 - 0x01);
				if (Test(LT,NV))
					break;
				x8 = *x25.u1;
				if (x8 == 0x00)
				{
					x24 = x25;
					x22 = *x24.u1;
					if (x22 != 0x00)
						goto l000000000004D63C;
					goto l000000000004D5E4;
				}
				x24 = x25;
				x25 = x8;
			}
			if ((w8 & 0x00) == 0x00)
				break;
			x24 = x25;
			x24.u1 = (word32) x24 + 8;
			x8 = *x24.u1;
			if (x8 == 0x00)
				break;
			x25 = x8;
		}
	}
	else
	{
		x25 = x23;
		x24 = x23;
	}
	x22 = *x24.u1;
	if (x22 != 0x00)
		goto l000000000004D63C;
l000000000004D5E4:
	w0 = 0x00 | 0x40;
	_Znwm();
	((word32) x0 + 32)->u0 = 0x00;
	struct Eq_104078 * v43 = (struct Eq_104078 *) ((word32) x0 + 48);
	v43->qw0000 = 0x00;
	v43->qw0008 = 0x00;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v44 = x0;
	v44.u1->u0 = 0x00;
	((word32) v44 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x25;
	*x24.u1 = x0;
	x8.u0 = 0x00071000;
	Eq_14 x9 = *((word32) x8 + 1216);
	x22 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 1216) = x9;
		x1 = *x24.u1;
	}
	else
		x1 = x22;
	x0 = *x23.u1;
	fn000000000001BD70();
	x8 = *((word32) x23 + 8);
	x8.u1 = (word32) x8 + 1;
	*((word32) x23 + 8) = x8;
l000000000004D63C:
	x1.u0 = 0x00054000;
	x0.u1 = (word32) x22 + 40;
	x1.u1 = (word32) x1 + 3898;
	w2 = 0x00 | 0x0F;
	fn000000000001B8B0();
	x25 = *x23.u1;
	bool Z;
	if (x25 != 0x00)
	{
		x24.u0 = 0x00071000;
		x24.u1 = (word32) x24 + 1224;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x25 + 32);
				NZCV.u0 = cond(w8 - 0x02);
				if (Test(LT,NV))
					break;
				x8 = *x25.u1;
				if (x8 == 0x00)
				{
					x24 = x25;
					x22 = *x24.u1;
					if (x22 != 0x00)
						goto l000000000004D71C;
					goto l000000000004D6B0;
				}
				x24 = x25;
				x25 = x8;
			}
			NZCV.u0 = cond(w8 - 0x01);
			if (Test(EQ,Z))
				break;
			x24 = x25;
			x24.u1 = x24 + 8;
			x8 = *x24.u1;
			if (x8 == 0x00)
				break;
			x25 = x8;
		}
	}
	else
	{
		x25 = x23;
		x24 = x23;
	}
	x22 = *x24.u1;
	if (x22 != 0x00)
		goto l000000000004D71C;
l000000000004D6B0:
	w0 = 0x00 | 0x40;
	_Znwm();
	w8 = 0x00 | 0x01;
	Eq_104204 v45;
	v45.u0 = x0 + 48;
	v45.u1->t0000.u2 = 0x00;
	v45.u1->t0008.u1 = (size_t) 0x00;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v46 = x0;
	v46.u1->u1 = 0x00;
	((word32) v46 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x25;
	*((word32) x0 + 32) = w8;
	*x24.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 1216);
	x22 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 1216) = x9;
		x1 = *x24.u1;
	}
	else
		x1 = x22;
	x0 = *x23.u1;
	fn000000000001BD70();
	x8 = *((word32) x23 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x23 + 8) = x8;
l000000000004D71C:
	x1.u0 = 0x00054000;
	x0.u1 = x22 + 0x28;
	x1.u1 = x1 + 0x0F4A;
	w2 = 0x00 | 0x10;
	fn000000000001B8B0();
	x25 = *x23.u1;
	if (x25 != 0x00)
	{
		x24.u0 = 0x00071000;
		x24.u1 = x24 + 1224;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x25 + 32);
				NZCV.u0 = cond(w8 - 0x03);
				if (Test(LT,NV))
					break;
				x8 = *x25.u1;
				if (x8 == 0x00)
				{
					x24 = x25;
					x22 = *x24.u1;
					if (x22 != 0x00)
						goto l000000000004D7FC;
					goto l000000000004D790;
				}
				x24 = x25;
				x25 = x8;
			}
			NZCV.u0 = cond(w8 - 0x02);
			if (Test(EQ,Z))
				break;
			x24 = x25;
			x24.u1 = x24 + 8;
			x8 = *x24.u1;
			if (x8 == 0x00)
				break;
			x25 = x8;
		}
	}
	else
	{
		x25 = x23;
		x24 = x23;
	}
	x22 = *x24.u1;
	if (x22 != 0x00)
		goto l000000000004D7FC;
l000000000004D790:
	w0 = 0x00 | 0x40;
	_Znwm();
	w8 = 0x00 | 0x02;
	Eq_104317 v47;
	v47.u0 = x0 + 48;
	v47.u1->t0000.u2 = 0x00;
	v47.u1->t0008.u1 = (size_t) 0x00;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v48 = x0;
	v48.u1->u1 = 0x00;
	((word32) v48 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x25;
	*((word32) x0 + 32) = w8;
	*x24.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 1216);
	x22 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 1216) = x9;
		x1 = *x24.u1;
	}
	else
		x1 = x22;
	x0 = *x23.u1;
	fn000000000001BD70();
	x8 = *((word32) x23 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x23 + 8) = x8;
l000000000004D7FC:
	x1.u0 = 0x00054000;
	x0.u1 = x22 + 0x28;
	x1.u1 = x1 + 3931;
	w2 = 0x11;
	fn000000000001B8B0();
	x25 = *x23.u1;
	if (x25 != 0x00)
	{
		x24.u0 = 0x00071000;
		x24.u1 = x24 + 1224;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x25 + 32);
				NZCV.u0 = cond(w8 - 0x04);
				if (Test(LT,NV))
					break;
				x8 = *x25.u1;
				if (x8 == 0x00)
				{
					x24 = x25;
					x22 = *x24.u1;
					if (x22 != 0x00)
						goto l000000000004D8DC;
					goto l000000000004D870;
				}
				x24 = x25;
				x25 = x8;
			}
			NZCV.u0 = cond(w8 - 0x03);
			if (Test(EQ,Z))
				break;
			x24 = x25;
			x24.u1 = x24 + 8;
			x8 = *x24.u1;
			if (x8 == 0x00)
				break;
			x25 = x8;
		}
	}
	else
	{
		x25 = x23;
		x24 = x23;
	}
	x22 = *x24.u1;
	if (x22 != 0x00)
		goto l000000000004D8DC;
l000000000004D870:
	w0 = 0x00 | 0x40;
	_Znwm();
	w8 = 0x00 | 0x03;
	Eq_104457 v49;
	v49.u0 = x0 + 48;
	v49.u1->t0000.u2 = 0x00;
	v49.u1->t0008.u1 = (size_t) 0x00;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v50 = x0;
	v50.u1->u1 = 0x00;
	((word32) v50 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x25;
	*((word32) x0 + 32) = w8;
	*x24.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 1216);
	x22 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 1216) = x9;
		x1 = *x24.u1;
	}
	else
		x1 = x22;
	x0 = *x23.u1;
	fn000000000001BD70();
	x8 = *((word32) x23 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x23 + 8) = x8;
l000000000004D8DC:
	x1.u0 = 0x00054000;
	x0.u1 = x22 + 0x28;
	x1.u1 = x1 + 3949;
	w2 = 0x00 | 0x0F;
	fn000000000001B8B0();
	x8 = *x20.u1;
	x2.u0 = 0x00054000;
	Eq_14 x3;
	x3.u0 = 0x00054000;
	x2.u1 = (word32) x2 + 0x0DBF;
	x8 = *((word32) x8 + 264);
	x3.u1 = (word32) x3 + 0x0DD2;
	x0 = x20;
	x1 = x21;
	x8();
	x24.u0 = 0x00071000;
	x24.u1 = x24 + 1272;
	x26 = *x24.u1;
	x22 = x0;
	if (x26 != 0x00)
	{
		x25.u0 = 0x00071000;
		x25.u1 = x25 + 1272;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x26 + 32);
				NZCV.u0 = cond(w8 - 0x01);
				if (Test(LT,NV))
					break;
				x8 = *x26.u1;
				if (x8 == 0x00)
				{
					x25 = x26;
					x23 = *x25.u1;
					if (x23 != 0x00)
						goto l000000000004D9E0;
					goto l000000000004D98C;
				}
				x25 = x26;
				x26 = x8;
			}
			if ((w8 & 0x00) == 0x00)
				break;
			x25 = x26;
			x25.u1 = x25 + 8;
			x8 = *x25.u1;
			if (x8 == 0x00)
				break;
			x26 = x8;
		}
	}
	else
	{
		x26 = x24;
		x25 = x24;
	}
	x23 = *x25.u1;
	if (x23 != 0x00)
		goto l000000000004D9E0;
l000000000004D98C:
	w0 = 0x00 | 0x30;
	_Znwm();
	((word32) x0 + 32)->u0 = 0x00;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v52 = x0;
	v52.u1->u1 = 0x00;
	((word32) v52 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x26;
	*x25.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 0x04F0);
	x23 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 0x04F0) = x9;
		x1 = *x25.u1;
	}
	else
		x1 = x23;
	x0 = *x24.u1;
	fn000000000001BD70();
	x8 = *((word32) x24 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x24 + 8) = x8;
l000000000004D9E0:
	*((word32) x23 + 40) = x22;
	x8 = *x20.u1;
	x2.u0 = 0x00054000;
	x3.u0 = 0x00054000;
	x2.u1 = (word32) x2 + 0x0DF1;
	x8 = *((word32) x8 + 264);
	x3.u1 = (word32) x3 + 0x0DD2;
	x0 = x20;
	x1 = x21;
	x8();
	x26 = *x24.u1;
	x22 = x0;
	if (x26 != 0x00)
	{
		x25.u0 = 0x00071000;
		x25.u1 = x25 + 1272;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x26 + 32);
				NZCV.u0 = cond(w8 - 0x02);
				if (Test(LT,NV))
					break;
				x8 = *x26.u1;
				if (x8 == 0x00)
				{
					x25 = x26;
					x23 = *x25.u1;
					if (x23 != 0x00)
						goto l000000000004DAD4;
					goto l000000000004DA6C;
				}
				x25 = x26;
				x26 = x8;
			}
			NZCV.u0 = cond(w8 - 0x01);
			if (Test(EQ,Z))
				break;
			x25 = x26;
			x25.u1 = x25 + 8;
			x8 = *x25.u1;
			if (x8 == 0x00)
				break;
			x26 = x8;
		}
	}
	else
	{
		x26 = x24;
		x25 = x24;
	}
	x23 = *x25.u1;
	if (x23 != 0x00)
		goto l000000000004DAD4;
l000000000004DA6C:
	w0 = 0x00 | 0x30;
	_Znwm();
	w8 = 0x00 | 0x01;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v53 = x0;
	v53.u1->u1 = 0x00;
	((word32) v53 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x26;
	*((word32) x0 + 32) = w8;
	*x25.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 0x04F0);
	x23 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 0x04F0) = x9;
		x1 = *x25.u1;
	}
	else
		x1 = x23;
	x0 = *x24.u1;
	fn000000000001BD70();
	x8 = *((word32) x24 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x24 + 8) = x8;
l000000000004DAD4:
	*((word32) x23 + 40) = x22;
	x8 = *x20.u1;
	x2.u0 = 0x00054000;
	x3.u0 = 0x00054000;
	x2.u1 = (word32) x2 + 0x0E05;
	x8 = *((word32) x8 + 264);
	x3.u1 = (word32) x3 + 0x0DD2;
	x0 = x20;
	x1 = x21;
	x8();
	x26 = *x24.u1;
	x22 = x0;
	if (x26 != 0x00)
	{
		x25.u0 = 0x00071000;
		x25.u1 = x25 + 1272;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x26 + 32);
				NZCV.u0 = cond(w8 - 0x03);
				if (Test(LT,NV))
					break;
				x8 = *x26.u1;
				if (x8 == 0x00)
				{
					x25 = x26;
					x23 = *x25.u1;
					if (x23 != 0x00)
						goto l000000000004DBC8;
					goto l000000000004DB60;
				}
				x25 = x26;
				x26 = x8;
			}
			NZCV.u0 = cond(w8 - 0x02);
			if (Test(EQ,Z))
				break;
			x25 = x26;
			x25.u1 = x25 + 8;
			x8 = *x25.u1;
			if (x8 == 0x00)
				break;
			x26 = x8;
		}
	}
	else
	{
		x26 = x24;
		x25 = x24;
	}
	x23 = *x25.u1;
	if (x23 != 0x00)
		goto l000000000004DBC8;
l000000000004DB60:
	w0 = 0x00 | 0x30;
	_Znwm();
	w8 = 0x00 | 0x02;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v54 = x0;
	v54.u1->u1 = 0x00;
	((word32) v54 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x26;
	*((word32) x0 + 32) = w8;
	*x25.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 0x04F0);
	x23 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 0x04F0) = x9;
		x1 = *x25.u1;
	}
	else
		x1 = x23;
	x0 = *x24.u1;
	fn000000000001BD70();
	x8 = *((word32) x24 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x24 + 8) = x8;
l000000000004DBC8:
	*((word32) x23 + 40) = x22;
	x8 = *x20.u1;
	x2.u0 = 0x00054000;
	x3.u0 = 0x00054000;
	x2.u1 = (word32) x2 + 0x0E1A;
	x8 = *((word32) x8 + 264);
	x3.u1 = (word32) x3 + 0x0DD2;
	x0 = x20;
	x1 = x21;
	x8();
	x26 = *x24.u1;
	x22 = x0;
	if (x26 != 0x00)
	{
		x25.u0 = 0x00071000;
		x25.u1 = x25 + 1272;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x26 + 32);
				NZCV.u0 = cond(w8 - 0x04);
				if (Test(LT,NV))
					break;
				x8 = *x26.u1;
				if (x8 == 0x00)
				{
					x25 = x26;
					x23 = *x25.u1;
					if (x23 != 0x00)
						goto l000000000004DCBC;
					goto l000000000004DC54;
				}
				x25 = x26;
				x26 = x8;
			}
			NZCV.u0 = cond(w8 - 0x03);
			if (Test(EQ,Z))
				break;
			x25 = x26;
			x25.u1 = x25 + 8;
			x8 = *x25.u1;
			if (x8 == 0x00)
				break;
			x26 = x8;
		}
	}
	else
	{
		x26 = x24;
		x25 = x24;
	}
	x23 = *x25.u1;
	if (x23 != 0x00)
		goto l000000000004DCBC;
l000000000004DC54:
	w0 = 0x00 | 0x30;
	_Znwm();
	w8 = 0x00 | 0x03;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v55 = x0;
	v55.u1->u1 = 0x00;
	((word32) v55 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x26;
	*((word32) x0 + 32) = w8;
	*x25.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 0x04F0);
	x23 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 0x04F0) = x9;
		x1 = *x25.u1;
	}
	else
		x1 = x23;
	x0 = *x24.u1;
	fn000000000001BD70();
	x8 = *((word32) x24 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x24 + 8) = x8;
l000000000004DCBC:
	*((word32) x23 + 40) = x22;
	x8 = *x20.u1;
	x0 = x20;
	x1 = x21;
	x8 = *((word32) x8 + 0x00B8);
	x8();
	x8 = *x20.u1;
	x1.u0 = 0x00054000;
	x1.u1 = x1 + 0x0E2D;
	x0 = x20;
	x8 = *((word32) x8 + 48);
	x8();
	x8 = *x20.u1;
	x21 = x0;
	x2.u0 = 0x00054000;
	x3.u0 = 0x00054000;
	x8 = *((word32) x8 + 264);
	x2.u1 = (word32) x2 + 0x0E44;
	x3.u1 = (word32) x3 + 0x0CAF;
	x0 = x20;
	x1 = x21;
	x8();
	x8 = *x20.u1;
	x2.u0 = 0x00054000;
	x3.u0 = 0x00054000;
	x22 = x0;
	x8 = *((word32) x8 + 752);
	x2.u1 = (word32) x2 + 0x0E4B;
	x3.u1 = (word32) x3 + 0x0B88;
	x0 = x20;
	x1 = x21;
	x8();
	x9.u0 = 0x6946;
	x9 = SEQ(SLICE(x9, word32, 32), 0x656C, (word16) x9);
	x9 = SEQ(SLICE(x9, word16, 48), 0x6544, (word32) x9);
	x23 = x0;
	w8 = 0x00 | 0x10;
	x9 = SEQ(0x6373, (word48) x9);
	struct Eq_104928 * v56 = (struct Eq_104928 *) &sp->t0028.u0;
	v56->qw0000 = 0x00;
	v56->qw0008 = 0x00;
	sp->t0038.u1 = (size_t) 0x00;
	sp->t0028.u0 = (byte) (byte) w8;
	sp->t0029.u1 = (size_t) x9;
	sp->b0031 = 0x00;
	x0.u0 = 0x00071000;
	x0.u1 = x0 + 1192;
	x1.u1 = &sp->t0010.u0;
	x2.u1 = &sp->t0028.u0;
	fn000000000001B720();
	x24 = *x0.u1;
	x25 = x0;
	Eq_14 q0;
	if (x24 == 0x00)
	{
		w0 = 0x50;
		_Znwm();
		x8.u1 = sp->t0038.u1;
		q0.u2 = sp->t0028.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
		x9 = x0;
		struct Eq_105080 * v58 = (struct Eq_105080 *) (&sp->w002A + 3);
		v58->qw0000 = 0x00;
		v58->qw0008 = 0x00;
		*((word32) x0 + 48) = x8;
		x8.u1 = sp->t0010.u1;
		*((word32) x0 + 32) = q0;
		x9.u1 = (word32) x9 + 64;
		x9.u1->u1 = 0x00;
		sp->t0028.u1 = (size_t) 0x00;
		((word32) x0 + 72)->u0 = 0x00;
		Eq_14 v59 = x0;
		v59.u1->u1 = 0x00;
		((word32) v59 + 8)->u0 = 0x00;
		*((word32) x0 + 16) = x8;
		*((word32) x0 + 56) = x9;
		*x25.u1 = x0;
		x8.u0 = 0x00071000;
		x9 = *((word32) x8 + 1192);
		x24 = x0;
		x9 = *x9.u1;
		if (x9 != 0x00)
		{
			*((word32) x8 + 1192) = x9;
			x1 = *x25.u1;
		}
		else
			x1 = x24;
		x25.u0 = 0x00071000;
		x25.u1 = x25 + 0x04B0;
		x0 = *x25.u1;
		fn000000000001BD70();
		x8 = *((word32) x25 + 8);
		x8.u1 = x8 + 0x01;
		*((word32) x25 + 8) = x8;
	}
	word32 w9 = 0x6564;
	x25.u1 = x24 + 0x38;
	w8.u0 = 0x0A;
	w9 = SEQ(0x6373, (word16) w9);
	word32 w10 = 0x66;
	struct Eq_105033 * v62 = (struct Eq_105033 *) &sp->t0010.u0;
	v62->qw0000 = 0x00;
	v62->qw0008 = 0x00;
	sp->t0020.u1 = (size_t) 0x00;
	sp->t0010.u0 = (byte) (byte) w8;
	sp->dw0011 = w9;
	sp->w002A = (word16) w10;
	x1.u1 = &sp->t0040.u0;
	x2.u1 = &sp->t0010.u0;
	x0 = x25;
	fn000000000001B3D0();
	x26 = *x0.u1;
	x27 = x0;
	if (x26 == 0x00)
	{
		w0 = 0x00 | 0x40;
		_Znwm();
		q0.u2 = sp->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
		x8.u1 = sp->t0020.u1;
		x9.u1 = sp->t0040.u1;
		struct Eq_105186 * v63 = (struct Eq_105186 *) ((char *) &sp->dw0011 + 7);
		v63->qw0000 = 0x00;
		v63->qw0008 = 0x00;
		sp->t0010.u1 = (size_t) 0x00;
		Eq_14 v64 = x0;
		v64.u1->u1 = 0x00;
		((word32) v64 + 8)->u0 = 0x00;
		*((word32) x0 + 32) = q0;
		Eq_105213 v65;
		v65.u0 = x0 + 48;
		v65.u0->t0000.u2 = (word64) x8;
		v65.u0->t0008.u1 = (size_t) 0x00;
		*((word32) x0 + 16) = x9;
		*x27.u1 = x0;
		x8 = *x25.u1;
		x26 = x0;
		x8 = *x8.u1;
		if (x8 != 0x00)
		{
			*x25.u1 = x8;
			x1 = *x27.u1;
		}
		else
			x1 = x26;
		x0 = *((word32) x24 + 64);
		fn000000000001BD70();
		x8 = *((word32) x24 + 72);
		x8.u1 = x8 + 0x01;
		*((word32) x24 + 72) = x8;
	}
	*((word32) x26 + 56) = x23;
	Eq_14 v66;
	v66.u0 = sp->t0010.u0;
	w8.u1 = (word32) v66;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0020.u1;
		((real64) q0, x0, x1);
	}
	Eq_14 v67;
	v67.u0 = sp->t0028.u0;
	w8.u1 = (word32) v67;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t0038.u1;
		((real64) q0, x0, x1);
	}
	x0 = x20;
	x1 = x21;
	x2 = x22;
	fn000000000001B160();
	x8 = *x20.u1;
	x1 = x0;
	x0 = x20;
	x8 = *((word32) x8 + 0x00A8);
	x8();
	x25.u0 = 0x00071000;
	*((word32) x25 + 0x0528) = x0;
	x0 = x20;
	x1 = x21;
	x2 = x22;
	fn000000000001B160();
	x8 = *x20.u1;
	x1 = x0;
	x0 = x20;
	x8 = *((word32) x8 + 0x00A8);
	x8();
	x24.u0 = 0x00071000;
	*((word32) x24 + 0x0530) = x0;
	x0 = x20;
	x1 = x21;
	x2 = x22;
	fn000000000001B160();
	x8 = *x20.u1;
	x1 = x0;
	x0 = x20;
	x8 = *((word32) x8 + 0x00A8);
	x8();
	x8.u0 = 0x00071000;
	*((word32) x8 + 1336) = x0;
	x0 = x20;
	x1 = x21;
	x2 = x22;
	fn000000000001B160();
	x8 = *x20.u1;
	x1 = x0;
	x0 = x20;
	x8 = *((word32) x8 + 0x00A8);
	x8();
	x22.u0 = 0x00071000;
	*((word32) x22 + 1344) = x0;
	x8 = *x20.u1;
	x0 = x20;
	x1 = x21;
	x8 = *((word32) x8 + 0x00B8);
	x8();
	x26.u0 = 0x00071000;
	x26.u1 = x26 + 0x04E0;
	x23 = *x26.u1;
	x25 = *((word32) x25 + 0x0528);
	if (x23 != 0x00)
	{
		x27.u0 = 0x00071000;
		x27.u1 = x27 + 0x04E0;
		x21 = x23;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x21 + 32);
				NZCV.u0 = cond(w8 - 0x01);
				if (Test(LT,NV))
					break;
				x8 = *x21.u1;
				if (x8 == 0x00)
				{
					x27 = x21;
					x20 = *x27.u1;
					if (x20 != 0x00)
						goto l000000000004E068;
					goto l000000000004E014;
				}
				x27 = x21;
				x21 = x8;
			}
			if ((w8 & 0x00) == 0x00)
				break;
			x27 = x21;
			x27.u1 = x27 + 8;
			x8 = *x27.u1;
			if (x8 == 0x00)
				break;
			x21 = x8;
		}
	}
	else
	{
		x21 = x26;
		x27 = x26;
	}
	x20 = *x27.u1;
	if (x20 != 0x00)
		goto l000000000004E068;
l000000000004E014:
	w0 = 0x00 | 0x30;
	_Znwm();
	((word32) x0 + 32)->u0 = 0x00;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v68 = x0;
	v68.u1->u1 = 0x00;
	((word32) v68 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x21;
	*x27.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 0x04D8);
	x20 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 0x04D8) = x9;
		x1 = *x27.u1;
	}
	else
		x1 = x20;
	x0 = *x26.u1;
	fn000000000001BD70();
	Eq_14 v69 = x26;
	x23 = *v69.u1;
	x8 = *((word32) v69 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x26 + 8) = x8;
l000000000004E068:
	*((word32) x20 + 40) = x25;
	x24 = *((word32) x24 + 0x0530);
	x25.u0 = 0x00071000;
	x25.u1 = x25 + 0x04E0;
	if (x23 != 0x00)
	{
		x26.u0 = 0x00071000;
		x26.u1 = x26 + 0x04E0;
		x21 = x23;
		x27.u0 = 0x00071000;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x21 + 32);
				NZCV.u0 = cond(w8 - 0x02);
				if (Test(LT,NV))
					break;
				x8 = *x21.u1;
				if (x8 == 0x00)
				{
					x26 = x21;
					x20 = *x26.u1;
					if (x20 != 0x00)
						goto l000000000004E148;
					goto l000000000004E0E0;
				}
				x26 = x21;
				x21 = x8;
			}
			NZCV.u0 = cond(w8 - 0x01);
			if (Test(EQ,Z))
				break;
			x26 = x21;
			x26.u1 = x26 + 8;
			x8 = *x26.u1;
			if (x8 == 0x00)
				break;
			x21 = x8;
		}
	}
	else
	{
		x21 = x25;
		x26 = x25;
		x27.u0 = 0x00071000;
	}
	x20 = *x26.u1;
	if (x20 != 0x00)
		goto l000000000004E148;
l000000000004E0E0:
	w0 = 0x00 | 0x30;
	_Znwm();
	w8 = 0x00 | 0x01;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v70 = x0;
	v70.u1->u1 = 0x00;
	((word32) v70 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x21;
	*((word32) x0 + 32) = w8;
	*x26.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 0x04D8);
	x20 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 0x04D8) = x9;
		x1 = *x26.u1;
	}
	else
		x1 = x20;
	x0 = *x25.u1;
	fn000000000001BD70();
	Eq_14 v71 = x25;
	x23 = *v71.u1;
	x8 = *((word32) v71 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x25 + 8) = x8;
l000000000004E148:
	*((word32) x20 + 40) = x24;
	x21 = *((word32) x27 + 1336);
	x24.u0 = 0x00071000;
	x24.u1 = x24 + 0x04E0;
	if (x23 != 0x00)
	{
		x25.u0 = 0x00071000;
		x25.u1 = x25 + 0x04E0;
		x26 = x23;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x26 + 32);
				NZCV.u0 = cond(w8 - 0x03);
				if (Test(LT,NV))
					break;
				x8 = *x26.u1;
				if (x8 == 0x00)
				{
					x25 = x26;
					x20 = *x25.u1;
					if (x20 != 0x00)
						goto l000000000004E220;
					goto l000000000004E1B8;
				}
				x25 = x26;
				x26 = x8;
			}
			NZCV.u0 = cond(w8 - 0x02);
			if (Test(EQ,Z))
				break;
			x25 = x26;
			x25.u1 = x25 + 8;
			x8 = *x25.u1;
			if (x8 == 0x00)
				break;
			x26 = x8;
		}
	}
	else
	{
		x26 = x24;
		x25 = x24;
	}
	x20 = *x25.u1;
	if (x20 != 0x00)
		goto l000000000004E220;
l000000000004E1B8:
	w0 = 0x00 | 0x30;
	_Znwm();
	w8 = 0x00 | 0x02;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v72 = x0;
	v72.u1->u1 = 0x00;
	((word32) v72 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x26;
	*((word32) x0 + 32) = w8;
	*x25.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 0x04D8);
	x20 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 0x04D8) = x9;
		x1 = *x25.u1;
	}
	else
		x1 = x20;
	x0 = *x24.u1;
	fn000000000001BD70();
	Eq_14 v73 = x24;
	x23 = *v73.u1;
	x8 = *((word32) v73 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x24 + 8) = x8;
l000000000004E220:
	*((word32) x20 + 40) = x21;
	x22 = *((word32) x22 + 1344);
	x21.u0 = 0x00071000;
	x21.u1 = x21 + 0x04E0;
	if (x23 != 0x00)
	{
		x24.u0 = 0x00071000;
		x24.u1 = x24 + 0x04E0;
		while (true)
		{
			while (true)
			{
				w8 = *((word32) x23 + 32);
				NZCV.u0 = cond(w8 - 0x04);
				if (Test(LT,NV))
					break;
				x8 = *x23.u1;
				if (x8 == 0x00)
				{
					x24 = x23;
					x20 = *x24.u1;
					if (x20 != 0x00)
						goto l000000000004E2F4;
					goto l000000000004E28C;
				}
				x24 = x23;
				x23 = x8;
			}
			NZCV.u0 = cond(w8 - 0x03);
			if (Test(EQ,Z))
				break;
			x24 = x23;
			x24.u1 = x24 + 8;
			x8 = *x24.u1;
			if (x8 == 0x00)
				break;
			x23 = x8;
		}
	}
	else
	{
		x23 = x21;
		x24 = x21;
	}
	x20 = *x24.u1;
	if (x20 != 0x00)
		goto l000000000004E2F4;
l000000000004E28C:
	w0 = 0x00 | 0x30;
	_Znwm();
	w8 = 0x00 | 0x03;
	((word32) x0 + 40)->u0 = 0x00;
	Eq_14 v74 = x0;
	v74.u1->u1 = 0x00;
	((word32) v74 + 8)->u0 = 0x00;
	*((word32) x0 + 16) = x23;
	*((word32) x0 + 32) = w8;
	*x24.u1 = x0;
	x8.u0 = 0x00071000;
	x9 = *((word32) x8 + 0x04D8);
	x20 = x0;
	x9 = *x9.u1;
	if (x9 != 0x00)
	{
		*((word32) x8 + 0x04D8) = x9;
		x1 = *x24.u1;
	}
	else
		x1 = x20;
	x0 = *x21.u1;
	fn000000000001BD70();
	x8 = *((word32) x21 + 8);
	x8.u1 = x8 + 0x01;
	*((word32) x21 + 8) = x8;
l000000000004E2F4:
	w0 = 0x05C0;
	*((word32) x20 + 40) = x22;
	_Znwm();
	((word32) x0 + 16)->u0 = 0x00;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0D80);
	x20 = x0;
	x22.u1 = x0 + 0x20;
	x8.u1 = x8 + 0x10;
	Eq_14 v75 = x0;
	*v75.u1 = x8;
	((word32) v75 + 8)->u0 = 0x00;
	x0 = x22;
	fn000000000001BF90();
	x8.u0 = 0x00071000;
	x8.u1 = x8 + 0x0508;
	x21 = *((word32) x8 + 8);
	Eq_14 v76 = x8;
	*v76.u1 = x22;
	*((word32) v76 + 8) = x20;
	if (x21 != 0x00)
		x8.u1 = x21 + 0x08;
l000000000004D4D0:
	x8.u1 = x28->t0028.u1;
	x9.u1 = sp->t0048.u1;
	ptr64 x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		w0 = w19;
		struct Eq_103947 * v33 = (struct Eq_103947 *) ((char *) &sp->t0048 + 88);
		x29 = v33->ptr0000;
		x30 = v33->qw0008;
		struct Eq_103956 * v34 = (struct Eq_103956 *) ((char *) &sp->t0048 + 72);
		x20.u1 = v34->t0000.u1;
		x19 = v34->qw0008;
		struct Eq_103965 * v35 = (struct Eq_103965 *) ((char *) &sp->t0048 + 56);
		x22.u1 = v35->t0000.u1;
		x21.u1 = v35->t0008.u1;
		struct Eq_103974 * v36 = (struct Eq_103974 *) ((char *) &sp->t0048 + 40);
		x24.u1 = v36->t0000.u1;
		x23.u1 = v36->t0008.u1;
		struct Eq_103983 * v37 = (struct Eq_103983 *) ((char *) &sp->t0048 + 24);
		x26.u1 = v37->t0000.u1;
		x25.u1 = v37->t0008.u1;
		struct Eq_103992 * v38 = (struct Eq_103992 *) ((char *) &sp->t0048 + 8);
		x28 = v38->ptr0000;
		x27.u1 = v38->t0008.u1;
		sp = (struct Eq_103820 *) ((char *) &sp->t0048 + 0x0068);
	}
}

<anonymous> g_t4D610 = <code>; // 000000000004D610
<anonymous> g_t4D984 = <code>; // 000000000004D984
<anonymous> g_t4DA3C = <code>; // 000000000004DA3C
<anonymous> g_t4DB3C = <code>; // 000000000004DB3C
<anonymous> g_t4DF14 = <code>; // 000000000004DF14
<anonymous> g_t4DFD0 = <code>; // 000000000004DFD0
// 000000000004E3D0: define JNI_OnUnload
define JNI_OnUnload
{
	struct Eq_105787 * fp;
	struct Eq_105787 * sp = fp;
	sp -= 0x40;
	struct Eq_105792 * v6 = (struct Eq_105792 *) ((char *) &sp->t0008 + 8);
	Eq_14 x22;
	v6->t0000.u1 = (size_t) x22;
	struct Eq_105798 * x21;
	v6->ptr0008 = x21;
	struct Eq_105803 * v9 = (struct Eq_105803 *) ((char *) &sp->t0008 + 24);
	Eq_14 x20;
	v9->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_105814 * v12 = (struct Eq_105814 *) ((char *) &sp->t0008 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x21->t0028.u1;
	word32 w2 = 0x06;
	Eq_14 x1;
	x1.u1 = &sp->t0000.u0;
	w2 = SEQ(0x01, (word16) w2);
	sp->t0008.u1 = (size_t) x8;
	Eq_14 x0;
	x8 = *x0.u1;
	x8 = *((word32) x8 + 48);
	x8();
	ui32 w0;
	if (w0 == 0x00)
	{
		x19.u1 = sp->t0000.u1;
		x1.u0 = 0x00054000;
		x1.u1 = (word32) x1 + 0x0B8A;
		x8 = *x19.u1;
		x0 = x19;
		x8 = *((word32) x8 + 48);
		x8();
		if (x0 != 0x00)
		{
			x8 = *x19.u1;
			x20 = x0;
			x0 = x19;
			x1 = x20;
			x8 = *((word32) x8 + 0x06C0);
			x8();
			if ((w0 & 0x00) != 0x00)
			{
				x8 = *x19.u1;
				x0 = x19;
				x1 = x20;
				x8 = *((word32) x8 + 0x00B8);
				x8();
				x20.u0 = 0x00071000;
				x20.u1 = (word32) x20 + 1144;
				x22 = x20;
				x22.u1 = (word32) x22 + 8;
				x1 = *x22.u1;
				x0 = x20;
				fn000000000001AEA0();
				*x20.u1 = x22;
				((word32) x20 + 16)->u0 = 0x00;
				x20.u0 = 0x00071000;
				x20.u1 = (word32) x20 + 1168;
				x22.u1->u0 = 0x00;
				x22 = x20;
				x22.u1 = (word32) x22 + 8;
				x1 = *x22.u1;
				x0 = x20;
				fn000000000001B130();
				*x20.u1 = x22;
				((word32) x20 + 16)->u0 = 0x00;
				x20.u0 = 0x00071000;
				x20.u1 = (word32) x20 + 1192;
				x22.u1->u0 = 0x00;
				x22 = x20;
				x22.u1 = (word32) x22 + 8;
				x1 = *x22.u1;
				x0 = x20;
				fn000000000001B830();
				*x20.u1 = x22;
				((word32) x20 + 16)->u0 = 0x00;
				x20.u0 = 0x00071000;
				x20.u1 = (word32) x20 + 1216;
				x22.u1->u0 = 0x00;
				x22 = x20;
				x22.u1 = (word32) x22 + 8;
				x1 = *x22.u1;
				x0 = x20;
				fn000000000001BFE0();
				*x20.u1 = x22;
				((word32) x20 + 16)->u0 = 0x00;
				x20.u0 = 0x00071000;
				x20.u1 = (word32) x20 + 0x04D8;
				x22.u1->u0 = 0x00;
				x22 = x20;
				x22.u1 = (word32) x22 + 8;
				x1 = *x22.u1;
				x0 = x20;
				fn000000000001B110();
				x8.u0 = 0x00071000;
				x1 = *((word32) x8 + 0x0528);
				*x20.u1 = x22;
				((word32) x20 + 16)->u0 = 0x00;
				x22.u1->u0 = 0x00;
				if (x1 != 0x00)
				{
					x8 = *x19.u1;
					x0 = x19;
					x8 = *((word32) x8 + 0x00B0);
					x8();
				}
				x8.u0 = 0x00071000;
				x1 = *((word32) x8 + 0x0530);
				if (x1 != 0x00)
				{
					x8 = *x19.u1;
					x0 = x19;
					x8 = *((word32) x8 + 0x00B0);
					x8();
				}
				x8.u0 = 0x00071000;
				x1 = *((word32) x8 + 1336);
				if (x1 != 0x00)
				{
					x8 = *x19.u1;
					x0 = x19;
					x8 = *((word32) x8 + 0x00B0);
					x8();
				}
				x8.u0 = 0x00071000;
				x1 = *((word32) x8 + 1344);
				if (x1 != 0x00)
				{
					x8 = *x19.u1;
					x0 = x19;
					x8 = *((word32) x8 + 0x00B0);
					x8();
				}
			}
		}
	}
	x8.u1 = x21->t0028.u1;
	Eq_14 x9;
	x9.u1 = sp->t0008.u1;
	ptr64 x31 = x8 - x9;
	Eq_105877 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_105885 * v23 = (struct Eq_105885 *) ((char *) &sp->t0008 + 40);
		x29 = v23->ptr0000;
		x30 = v23->qw0008;
		struct Eq_105894 * v24 = (struct Eq_105894 *) ((char *) &sp->t0008 + 24);
		x20.u1 = v24->t0000.u1;
		x19.u1 = v24->t0008.u1;
		struct Eq_105903 * v25 = (struct Eq_105903 *) ((char *) &sp->t0008 + 8);
		x22.u1 = v25->t0000.u1;
		x21 = v25->ptr0008;
		sp = (struct Eq_105787 *) ((char *) &sp->t0008 + 56);
	}
}

<anonymous> g_t4E790 = <code>; // 000000000004E790
<anonymous> g_t4E8E8 = <code>; // 000000000004E8E8
<anonymous> g_t4EB0C = <code>; // 000000000004EB0C
<anonymous> g_t4EC64 = <code>; // 000000000004EC64
<anonymous> g_t4ED74 = <code>; // 000000000004ED74
<anonymous> g_t4F478 = <code>; // 000000000004F478
<anonymous> g_t4F524 = <code>; // 000000000004F524
// 000000000004F5AC: void (Register (ptr64 Eq_106068) x0, Register (ptr64 Eq_106069) x1, ...)
void (_jobject * x0, _jmethodID * x1, ...)
{
	struct Eq_106070 * fp;
	struct Eq_106070 * sp = fp;
	sp -= 0x0130;
	struct Eq_106075 * v6 = (struct Eq_106075 *) ((char *) &sp->ptr0008 + 264);
	word64 x28;
	v6->qw0000 = x28;
	struct Eq_106081 * x19;
	v6->ptr0008 = x19;
	struct Eq_106086 * v9 = (struct Eq_106086 *) ((char *) &sp->ptr0008 + 0x0118);
	struct Eq_106088 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_106088 *) ((char *) &sp->ptr0008 + 0x0118);
	struct Eq_106099 * v12 = (struct Eq_106099 *) ((char *) &sp->ptr0008 + 0x0068);
	word128 q6;
	v12->ow0000 = q6;
	word128 q7;
	v12->ow0010 = q7;
	struct Eq_106110 * v15 = (struct Eq_106110 *) ((char *) &sp->ptr0008 + 72);
	word128 q4;
	v15->ow0000 = q4;
	word128 q5;
	v15->ow0010 = q5;
	struct Eq_106121 * v18 = (struct Eq_106121 *) ((char *) &sp->ptr0008 + 40);
	word128 q2;
	v18->ow0000 = q2;
	word128 q3;
	v18->ow0010 = q3;
	struct Eq_106132 * v21 = (struct Eq_106132 *) ((char *) &sp->ptr0008 + 8);
	word128 q0;
	v21->ow0000 = q0;
	word128 q1;
	v21->ow0010 = q1;
	struct Eq_106143 * v24 = (struct Eq_106143 *) (&x29->ptrFFFFFF78 + 3);
	word64 x6;
	v24->qw0000 = x6;
	word64 x7;
	v24->qw0008 = x7;
	struct Eq_106154 * v27 = (struct Eq_106154 *) (&x29->ptrFFFFFF78 + 1);
	word64 x4;
	v27->qw0000 = x4;
	word64 x5;
	v27->qw0008 = x5;
	ptr64 x3;
	x29->ptrFFFFFF78 = x3;
	Eq_1720 sysreg3_3_13_0_2;
	x19 = __mrs(sysreg3_3_13_0_2);
	struct Eq_106174 * x11 = x19->ptr0028;
	struct Eq_106174 * x8 = (struct Eq_106174 *) ~0x27;
	struct Eq_106174 * x9 = (struct Eq_106174 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x10 = x29 - 0x88;
	x8 = SEQ(SLICE(x8, word16, 48), ~0x7F, (word32) x8);
	ptr64 x12 = &x29->ptrFFFFFF78 + 19;
	x9 = &x9->ow0010 + 7;
	x10 += 0x28;
	sp->ptr0008 = x11;
	struct Eq_106199 * v35 = (struct Eq_106199 *) (&x29->ptrFFFFFF78 + 0x0C);
	v35->ptr0000 = x9;
	v35->ptr0008 = x8;
	struct Eq_106208 * v36 = (struct Eq_106208 *) (&x29->ptrFFFFFF78 + 0x0A);
	v36->ptr0000 = x12;
	v36->ptr0008 = x10;
	x8 = (struct Eq_106174 *) *x0;
	x9 = x29 - 0x38;
	struct Eq_106174 * v38 = x9;
	q1 = v38->t0000;
	q0 = v38->ow0010;
	x3 = x29 - 0x60;
	x8 = x8->ptr0118;
	struct Eq_106235 * v39 = (struct Eq_106235 *) (&x29->ptrFFFFFF78 + 5);
	v39->ow0000 = q1;
	v39->ow0010 = q0;
	x8();
	x8 = x19->ptr0028;
	x9 = sp->ptr0008;
	int64 x31 = x8 - x9;
	Eq_106251 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_106259 * v43 = (struct Eq_106259 *) ((char *) &sp->ptr0008 + 0x0118);
		x29 = v43->ptr0000;
		x30 = v43->qw0008;
		struct Eq_106268 * v44 = (struct Eq_106268 *) ((char *) &sp->ptr0008 + 264);
		x28 = v44->qw0000;
		x19 = v44->ptr0008;
		sp = (struct Eq_106070 *) ((char *) &sp->ptr0008 + 296);
	}
}

<anonymous> g_t4F7E4 = <code>; // 000000000004F7E4
<anonymous> g_t4FAD8 = <code>; // 000000000004FAD8
<anonymous> g_t4FB28 = <code>; // 000000000004FB28
<anonymous> g_t4FB78 = <code>; // 000000000004FB78
<anonymous> g_t4FBD4 = <code>; // 000000000004FBD4
<anonymous> g_t4FC24 = <code>; // 000000000004FC24
<anonymous> g_t4FC74 = <code>; // 000000000004FC74
<anonymous> g_t4FCB4 = <code>; // 000000000004FCB4
<anonymous> g_t4FCF4 = <code>; // 000000000004FCF4
// 000000000004FE48: void (Register (ptr64 Eq_106278) x0, Register (ptr64 Eq_106279) x1, ...)
void (_jobject * x0, _jmethodID * x1, ...)
{
	struct Eq_106280 * fp;
	struct Eq_106280 * sp = fp;
	sp -= 0x0130;
	struct Eq_106285 * v6 = (struct Eq_106285 *) ((char *) &sp->ptr0008 + 264);
	word64 x28;
	v6->qw0000 = x28;
	struct Eq_106291 * x19;
	v6->ptr0008 = x19;
	struct Eq_106296 * v9 = (struct Eq_106296 *) ((char *) &sp->ptr0008 + 0x0118);
	struct Eq_106298 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_106298 *) ((char *) &sp->ptr0008 + 0x0118);
	struct Eq_106309 * v12 = (struct Eq_106309 *) ((char *) &sp->ptr0008 + 0x0068);
	word128 q6;
	v12->ow0000 = q6;
	word128 q7;
	v12->ow0010 = q7;
	struct Eq_106320 * v15 = (struct Eq_106320 *) ((char *) &sp->ptr0008 + 72);
	word128 q4;
	v15->ow0000 = q4;
	word128 q5;
	v15->ow0010 = q5;
	struct Eq_106331 * v18 = (struct Eq_106331 *) ((char *) &sp->ptr0008 + 40);
	word128 q2;
	v18->ow0000 = q2;
	word128 q3;
	v18->ow0010 = q3;
	struct Eq_106342 * v21 = (struct Eq_106342 *) ((char *) &sp->ptr0008 + 8);
	word128 q0;
	v21->ow0000 = q0;
	word128 q1;
	v21->ow0010 = q1;
	struct Eq_106353 * v24 = (struct Eq_106353 *) (&x29->ptrFFFFFF78 + 3);
	word64 x6;
	v24->qw0000 = x6;
	word64 x7;
	v24->qw0008 = x7;
	struct Eq_106364 * v27 = (struct Eq_106364 *) (&x29->ptrFFFFFF78 + 1);
	word64 x4;
	v27->qw0000 = x4;
	word64 x5;
	v27->qw0008 = x5;
	ptr64 x3;
	x29->ptrFFFFFF78 = x3;
	Eq_1720 sysreg3_3_13_0_2;
	x19 = __mrs(sysreg3_3_13_0_2);
	struct Eq_106384 * x11 = x19->ptr0028;
	struct Eq_106384 * x8 = (struct Eq_106384 *) ~0x27;
	struct Eq_106384 * x9 = (struct Eq_106384 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x10 = x29 - 0x88;
	x8 = SEQ(SLICE(x8, word16, 48), ~0x7F, (word32) x8);
	ptr64 x12 = &x29->ptrFFFFFF78 + 19;
	x9 = &x9->ow0010 + 7;
	x10 += 0x28;
	sp->ptr0008 = x11;
	struct Eq_106409 * v35 = (struct Eq_106409 *) (&x29->ptrFFFFFF78 + 0x0C);
	v35->ptr0000 = x9;
	v35->ptr0008 = x8;
	struct Eq_106418 * v36 = (struct Eq_106418 *) (&x29->ptrFFFFFF78 + 0x0A);
	v36->ptr0000 = x12;
	v36->ptr0008 = x10;
	x8 = (struct Eq_106384 *) *x0;
	x9 = x29 - 0x38;
	struct Eq_106384 * v38 = x9;
	q1 = v38->t0000;
	q0 = v38->ow0010;
	x3 = x29 - 0x60;
	x8 = x8->ptr01F0;
	struct Eq_106445 * v39 = (struct Eq_106445 *) (&x29->ptrFFFFFF78 + 5);
	v39->ow0000 = q1;
	v39->ow0010 = q0;
	x8();
	x8 = x19->ptr0028;
	x9 = sp->ptr0008;
	int64 x31 = x8 - x9;
	Eq_106461 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_106469 * v43 = (struct Eq_106469 *) ((char *) &sp->ptr0008 + 0x0118);
		x29 = v43->ptr0000;
		x30 = v43->qw0008;
		struct Eq_106478 * v44 = (struct Eq_106478 *) ((char *) &sp->ptr0008 + 264);
		x28 = v44->qw0000;
		x19 = v44->ptr0008;
		sp = (struct Eq_106280 *) ((char *) &sp->ptr0008 + 296);
	}
}

<anonymous> g_t4FEA8 = <code>; // 000000000004FEA8
<anonymous> g_t4FEDC = <code>; // 000000000004FEDC
// 000000000004FEE4: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3mapIS7_P9_jfieldIDNS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEEEENS_19__map_value_compareIS7_SI_SC_Lb1EEENS5_ISI_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISR_EERKT_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3mapIS7_P9_jfieldIDNS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEEEENS_19__map_value_compareIS7_SI_SC_Lb1EEENS5_ISI_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISR_EERKT_
{
	Eq_106496 x8;
	Eq_14 x2;
	struct Eq_106488 * fp;
	struct Eq_106488 * sp = fp;
	sp = (struct Eq_106488 *) ((char *) sp - 96);
	uint64 x28;
	sp->qw0000 = x28;
	Eq_106496 x27;
	sp->t0008.u1 = (struct Eq_109444 *) x27;
	struct Eq_106501 * v8 = (struct Eq_106501 *) ((char *) &sp->t0008 + 8);
	word64 x26;
	v8->qw0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_106512 * v11 = (struct Eq_106512 *) ((char *) &sp->t0008 + 24);
	Eq_106496 x24;
	v11->t0000.u1 = (struct Eq_109444 *) x24;
	Eq_106496 x23;
	v11->t0008.u1 = (struct Eq_109444 *) x23;
	struct Eq_106523 * v14 = (struct Eq_106523 *) ((char *) &sp->t0008 + 40);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_106496 x21;
	v14->t0008.u1 = (struct Eq_109444 *) x21;
	struct Eq_106534 * v17 = (struct Eq_106534 *) ((char *) &sp->t0008 + 56);
	Eq_106496 x20;
	v17->t0000.u1 = (struct Eq_109444 *) x20;
	Eq_106496 x19;
	v17->t0008.u1 = (struct Eq_109444 *) x19;
	struct Eq_106545 * v20 = (struct Eq_106545 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	Eq_106496 x0;
	x20 = x0;
	x20.u1 = &x20.u1->t0008.u0;
	x24.u1 = x20.u1->t0000.u1;
	Eq_106496 x1;
	x19 = x1;
	if (x24 == 0x00)
	{
		x19.u1->t0000.u1 = (struct Eq_109444 *) x20;
		goto l000000000004FFF0;
	}
	byte v25 = (byte) *x2.u1;
	ui32 w8 = (word32) v25;
	struct Eq_106577 * v28 = (struct Eq_106577 *) ((word32) x2 + 8);
	uint64 x9 = v28->qw0000;
	word64 x10 = v28->qw0008;
	x20.u1 = &x0.u1->t0008.u0;
	uint64 x11 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_106596 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x25 = Test(EQ,Z) ? x11 : x9;
	x21.u1 = Test(NE,Z) ? x10 : (word32) x2 + 1;
l000000000004FF34:
	x27 = x24;
	x27.u1 = (word32) x27 + 32;
	Eq_106496 v37;
	v37.u0 = x27.u1->t0000.u0;
	ui32 w28 = (word32) v37;
	x8.u1 = x27.u1->t0008.u1;
	x9 = x28 >> 1;
	w31 = w28 & 0x01;
	NZ.u0 = cond(w31);
	x26 = Test(EQ,Z) ? x9 : x8;
	word64 x31 = x26 - x25;
	Eq_106629 NZCV;
	NZCV.u0 = cond(x31);
	x22.u1 = Test(ULT,C) ? x26 : x25;
	ui32 w0;
	if (x22 != 0x00)
	{
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x0 = x21;
		x2 = x22;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
		x1 = x23;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l000000000004FFA8;
l000000000004FF88:
			x8.u1 = x24.u1->t0000.u1;
			if (x8 == 0x00)
			{
				x19.u1->t0000.u1 = (struct Eq_109444 *) x24;
				x20 = x24;
				goto l000000000004FFF0;
			}
			x20 = x24;
l000000000004FF30:
			x24 = x8;
			goto l000000000004FF34;
		}
	}
	x31 = x25 - x26;
	NZCV.u0 = cond(x31);
	if (Test(UGE,C))
	{
		if (x22 == 0x00)
		{
l000000000004FFC4:
			x31 = x26 - x25;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
				goto l000000000004FFD8;
			goto l000000000004FFCC;
		}
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
l000000000004FFA8:
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l000000000004FFD8;
l000000000004FFCC:
			x20 = x24;
			x20.u1 = &x20.u1->t0008.u0;
			x8.u1 = x20.u1->t0000.u1;
			if (x8 == 0x00)
			{
l000000000004FFD8:
				x19.u1->t0000.u1 = (struct Eq_109444 *) x24;
l000000000004FFF0:
				x0 = x20;
				struct Eq_106636 * v41 = (struct Eq_106636 *) ((char *) &sp->t0008 + 72);
				x29 = v41->ptr0000;
				x30 = v41->qw0008;
				struct Eq_106645 * v42 = (struct Eq_106645 *) ((char *) &sp->t0008 + 56);
				x20.u1 = v42->t0000.u1;
				x19.u1 = v42->t0008.u1;
				struct Eq_106654 * v43 = (struct Eq_106654 *) ((char *) &sp->t0008 + 40);
				x22.u1 = v43->t0000.u1;
				x21.u1 = v43->t0008.u1;
				struct Eq_106663 * v44 = (struct Eq_106663 *) ((char *) &sp->t0008 + 24);
				x24.u1 = v44->t0000.u1;
				x23.u1 = v44->t0008.u1;
				struct Eq_106672 * v45 = (struct Eq_106672 *) ((char *) &sp->t0008 + 8);
				x26 = v45->qw0000;
				x25 = v45->qw0008;
				struct Eq_106488 * v46 = sp;
				x28 = v46->qw0000;
				x27.u1 = v46->t0008.u1;
				sp = (struct Eq_106488 *) ((char *) &sp->t0008 + 88);
				return;
			}
			goto l000000000004FF30;
		}
		goto l000000000004FFC4;
	}
	goto l000000000004FF88;
}

<anonymous> g_t4FF60 = <code>; // 000000000004FF60
<anonymous> g_t4FF94 = <code>; // 000000000004FF94
<anonymous> g_t4FFC8 = <code>; // 000000000004FFC8
<anonymous> g_t4FFFC = <code>; // 000000000004FFFC
// 0000000000050010: define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP9_jfieldIDEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_
define _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP9_jfieldIDEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_
{
	Eq_106776 x8;
	Eq_14 x2;
	struct Eq_106768 * fp;
	struct Eq_106768 * sp = fp;
	sp = (struct Eq_106768 *) ((char *) sp - 96);
	uint64 x28;
	sp->qw0000 = x28;
	Eq_106776 x27;
	sp->t0008.u1 = (struct Eq_109445 *) x27;
	struct Eq_106781 * v8 = (struct Eq_106781 *) ((char *) &sp->t0008 + 8);
	word64 x26;
	v8->qw0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_106792 * v11 = (struct Eq_106792 *) ((char *) &sp->t0008 + 24);
	Eq_106776 x24;
	v11->t0000.u1 = (struct Eq_109445 *) x24;
	Eq_106776 x23;
	v11->t0008.u1 = (struct Eq_109445 *) x23;
	struct Eq_106803 * v14 = (struct Eq_106803 *) ((char *) &sp->t0008 + 40);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_106776 x21;
	v14->t0008.u1 = (struct Eq_109445 *) x21;
	struct Eq_106814 * v17 = (struct Eq_106814 *) ((char *) &sp->t0008 + 56);
	Eq_106776 x20;
	v17->t0000.u1 = (struct Eq_109445 *) x20;
	Eq_106776 x19;
	v17->t0008.u1 = (struct Eq_109445 *) x19;
	struct Eq_106825 * v20 = (struct Eq_106825 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	Eq_106776 x0;
	x20 = x0;
	x20.u1 = &x20.u1->t0008.u0;
	x24.u1 = x20.u1->t0000.u1;
	Eq_106776 x1;
	x19 = x1;
	if (x24 == 0x00)
	{
		x19.u1->t0000.u1 = (struct Eq_109445 *) x20;
		goto l000000000005011C;
	}
	byte v25 = (byte) *x2.u1;
	ui32 w8 = (word32) v25;
	struct Eq_106857 * v28 = (struct Eq_106857 *) ((word32) x2 + 8);
	uint64 x9 = v28->qw0000;
	word64 x10 = v28->qw0008;
	x20.u1 = &x0.u1->t0008.u0;
	uint64 x11 = x8 >> 1;
	ui32 w31 = w8 & 0x01;
	Eq_106876 NZ;
	NZ.u0 = cond(w31);
	bool C = false;
	bool V = false;
	bool Z;
	x25 = Test(EQ,Z) ? x11 : x9;
	x21.u1 = Test(NE,Z) ? x10 : (word32) x2 + 1;
l0000000000050060:
	x27 = x24;
	x27.u1 = (word32) x27 + 32;
	Eq_106776 v37;
	v37.u0 = x27.u1->t0000.u0;
	ui32 w28 = (word32) v37;
	x8.u1 = x27.u1->t0008.u1;
	x9 = x28 >> 1;
	w31 = w28 & 0x01;
	NZ.u0 = cond(w31);
	x26 = Test(EQ,Z) ? x9 : x8;
	word64 x31 = x26 - x25;
	Eq_106909 NZCV;
	NZCV.u0 = cond(x31);
	x22.u1 = Test(ULT,C) ? x26 : x25;
	ui32 w0;
	if (x22 != 0x00)
	{
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x0 = x21;
		x2 = x22;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
		x1 = x23;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l00000000000500D4;
l00000000000500B4:
			x8.u1 = x24.u1->t0000.u1;
			if (x8 == 0x00)
			{
				x19.u1->t0000.u1 = (struct Eq_109445 *) x24;
				x20 = x24;
				goto l000000000005011C;
			}
			x20 = x24;
l000000000005005C:
			x24 = x8;
			goto l0000000000050060;
		}
	}
	x31 = x25 - x26;
	NZCV.u0 = cond(x31);
	if (Test(UGE,C))
	{
		if (x22 == 0x00)
		{
l00000000000500F0:
			x31 = x26 - x25;
			NZCV.u0 = cond(x31);
			if (Test(UGE,C))
				goto l0000000000050104;
			goto l00000000000500F8;
		}
		x8.u1 = x24.u1->t0030.u1;
		w31 = w28 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x23.u1 = Test(NE,Z) ? x8 : (word32) x27 + 1;
l00000000000500D4:
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = SEQ(0x00, memcmp(x0, x1, x2));
		if (w0 != 0x00)
		{
			if ((w0 & 0x00) != 0x00)
				goto l0000000000050104;
l00000000000500F8:
			x20 = x24;
			x20.u1 = &x20.u1->t0008.u0;
			x8.u1 = x20.u1->t0000.u1;
			if (x8 == 0x00)
			{
l0000000000050104:
				x19.u1->t0000.u1 = (struct Eq_109445 *) x24;
l000000000005011C:
				x0 = x20;
				struct Eq_106916 * v41 = (struct Eq_106916 *) ((char *) &sp->t0008 + 72);
				x29 = v41->ptr0000;
				x30 = v41->qw0008;
				struct Eq_106925 * v42 = (struct Eq_106925 *) ((char *) &sp->t0008 + 56);
				x20.u1 = v42->t0000.u1;
				x19.u1 = v42->t0008.u1;
				struct Eq_106934 * v43 = (struct Eq_106934 *) ((char *) &sp->t0008 + 40);
				x22.u1 = v43->t0000.u1;
				x21.u1 = v43->t0008.u1;
				struct Eq_106943 * v44 = (struct Eq_106943 *) ((char *) &sp->t0008 + 24);
				x24.u1 = v44->t0000.u1;
				x23.u1 = v44->t0008.u1;
				struct Eq_106952 * v45 = (struct Eq_106952 *) ((char *) &sp->t0008 + 8);
				x26 = v45->qw0000;
				x25 = v45->qw0008;
				struct Eq_106768 * v46 = sp;
				x28 = v46->qw0000;
				x27.u1 = v46->t0008.u1;
				sp = (struct Eq_106768 *) ((char *) &sp->t0008 + 88);
				return;
			}
			goto l000000000005005C;
		}
		goto l00000000000500F0;
	}
	goto l00000000000500B4;
}

<anonymous> g_t50030 = <code>; // 0000000000050030
// 000000000005013C: void (Register (ptr64 Eq_107048) x0, Register (ptr64 Eq_107049) x1, ...)
void (_jclass * x0, _jmethodID * x1, ...)
{
	struct Eq_107050 * fp;
	struct Eq_107050 * sp = fp;
	sp -= 0x0130;
	struct Eq_107055 * v6 = (struct Eq_107055 *) ((char *) &sp->ptr0008 + 264);
	word64 x28;
	v6->qw0000 = x28;
	struct Eq_107061 * x19;
	v6->ptr0008 = x19;
	struct Eq_107066 * v9 = (struct Eq_107066 *) ((char *) &sp->ptr0008 + 0x0118);
	struct Eq_107068 * x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (struct Eq_107068 *) ((char *) &sp->ptr0008 + 0x0118);
	struct Eq_107079 * v12 = (struct Eq_107079 *) ((char *) &sp->ptr0008 + 0x0068);
	word128 q6;
	v12->ow0000 = q6;
	word128 q7;
	v12->ow0010 = q7;
	struct Eq_107090 * v15 = (struct Eq_107090 *) ((char *) &sp->ptr0008 + 72);
	word128 q4;
	v15->ow0000 = q4;
	word128 q5;
	v15->ow0010 = q5;
	struct Eq_107101 * v18 = (struct Eq_107101 *) ((char *) &sp->ptr0008 + 40);
	word128 q2;
	v18->ow0000 = q2;
	word128 q3;
	v18->ow0010 = q3;
	struct Eq_107112 * v21 = (struct Eq_107112 *) ((char *) &sp->ptr0008 + 8);
	word128 q0;
	v21->ow0000 = q0;
	word128 q1;
	v21->ow0010 = q1;
	struct Eq_107123 * v24 = (struct Eq_107123 *) (&x29->ptrFFFFFF78 + 3);
	word64 x6;
	v24->qw0000 = x6;
	word64 x7;
	v24->qw0008 = x7;
	struct Eq_107134 * v27 = (struct Eq_107134 *) (&x29->ptrFFFFFF78 + 1);
	word64 x4;
	v27->qw0000 = x4;
	word64 x5;
	v27->qw0008 = x5;
	ptr64 x3;
	x29->ptrFFFFFF78 = x3;
	Eq_1720 sysreg3_3_13_0_2;
	x19 = __mrs(sysreg3_3_13_0_2);
	struct Eq_107154 * x11 = x19->ptr0028;
	struct Eq_107154 * x8 = (struct Eq_107154 *) ~0x27;
	struct Eq_107154 * x9 = (struct Eq_107154 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x10 = x29 - 0x88;
	x8 = SEQ(SLICE(x8, word16, 48), ~0x7F, (word32) x8);
	ptr64 x12 = &x29->ptrFFFFFF78 + 19;
	x9 = &x9->ow0010 + 7;
	x10 += 0x28;
	sp->ptr0008 = x11;
	struct Eq_107179 * v35 = (struct Eq_107179 *) (&x29->ptrFFFFFF78 + 0x0C);
	v35->ptr0000 = x9;
	v35->ptr0008 = x8;
	struct Eq_107188 * v36 = (struct Eq_107188 *) (&x29->ptrFFFFFF78 + 0x0A);
	v36->ptr0000 = x12;
	v36->ptr0008 = x10;
	x8 = (struct Eq_107154 *) *x0;
	x9 = x29 - 0x38;
	struct Eq_107154 * v38 = x9;
	q1 = v38->t0000;
	q0 = v38->ow0010;
	x3 = x29 - 0x60;
	x8 = x8->ptr00E8;
	struct Eq_107215 * v39 = (struct Eq_107215 *) (&x29->ptrFFFFFF78 + 5);
	v39->ow0000 = q1;
	v39->ow0010 = q0;
	x8();
	x8 = x19->ptr0028;
	x9 = sp->ptr0008;
	int64 x31 = x8 - x9;
	Eq_107231 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_107239 * v43 = (struct Eq_107239 *) ((char *) &sp->ptr0008 + 0x0118);
		x29 = v43->ptr0000;
		x30 = v43->qw0008;
		struct Eq_107248 * v44 = (struct Eq_107248 *) ((char *) &sp->ptr0008 + 264);
		x28 = v44->qw0000;
		x19 = v44->ptr0008;
		sp = (struct Eq_107050 *) ((char *) &sp->ptr0008 + 296);
	}
}

// 00000000000501D8: define _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEED2Ev
define _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEED2Ev
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_107267 * v7 = (struct Eq_107267 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0D80);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 32);
	fn000000000001B330();
	struct Eq_107293 * v10 = (struct Eq_107293 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	_ZNSt6__ndk119__shared_weak_countD2Ev();
}

// 000000000005020C: define _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEED0Ev
define _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEED0Ev
{
	union Eq_14 ** fp;
	union Eq_14 ** sp = fp;
	sp = (union Eq_14 **) ((char *) sp - 32);
	union Eq_14 * x19;
	*sp = (union Eq_14 **) x19;
	struct Eq_107317 * v7 = (struct Eq_107317 *) ((char *) sp + 16);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = (char *) sp + 16;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0D80);
	union Eq_14 * x0;
	x19 = x0;
	x8.u1 = (word32) x8 + 16;
	x0->u1 = (size_t) x8;
	x0 = (union Eq_14 *) ((char *) x0 + 32);
	fn000000000001B330();
	x0 = x19;
	_ZNSt6__ndk119__shared_weak_countD2Ev();
	struct Eq_107345 * v10 = (struct Eq_107345 *) ((char *) sp + 16);
	x29 = v10->ptr0000;
	x30 = v10->qw0008;
	x0 = x19;
	x19 = (union Eq_14 *) *sp;
	sp = (union Eq_14 **) ((char *) sp + 32);
	word128 q0;
	void * x1;
	((real64) q0, x0, x1);
}

// 0000000000050248: define _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEE16__on_zero_sharedEv
define _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEE16__on_zero_sharedEv
{
	ptr64 fp;
	ptr64 sp = fp;
	<anonymous> *** x0 = (<anonymous> ***) ((char *) x0 + 32);
	<anonymous> ** x8 = (<anonymous> **) *x0;
	<anonymous> * x1 = (<anonymous> *) *x8;
	x1();
}

// 0000000000050254: define _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEE21__on_zero_shared_weakEv
define _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEE21__on_zero_shared_weakEv
{
	ptr64 fp;
	ptr64 sp = fp;
	word128 q0;
	int64 x0;
	void * x1;
	((real64) q0, x0, x1);
}

// tmpecu37ckl_text_0000.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

// 000000000001C690: define fn000000000001C690
define fn000000000001C690
{
	g_dw71118 = 100;
	g_t71120.u1 = 0x4402;
	g_qw7112A = 0x00;
	g_qw71122 = 0x00;
	g_ptr71130 = null;
	void (* x20_28)(void * x0) = _ZN6LEVELSD2Ev_GOT;
	__cxa_atexit(x20_28, &g_dw71118, 0x00071000);
	g_dw71138 = 0x32;
	g_w71140 = 0x5602;
	g_qw7114A = 0x00;
	g_qw71142 = 0x00;
	g_qw71150 = 0x00;
	__cxa_atexit(x20_28, &g_dw71138, 0x00071000);
	g_dw71158 = 300;
	g_w71160 = 0x4902;
	g_qw7116A = 0x00;
	g_qw71162 = 0x00;
	g_qw71170 = 0x00;
	__cxa_atexit(x20_28, &g_dw71158, 0x00071000);
	g_dw71178 = 500;
	g_w71180 = 22274;
	g_qw7118A = 0x00;
	g_qw71182 = 0x00;
	g_qw71190 = 0x00;
	__cxa_atexit(x20_28, &g_dw71178, 0x00071000);
	g_dw71198 = 800;
	g_t711A0.u1 = 17666;
	g_qw711AA = 0x00;
	g_qw711A2 = 0x00;
	g_qw711B0 = 0x00;
	__cxa_atexit(x20_28, &g_dw71198, 0x00071000);
	g_dw711B8 = 1000;
	g_w711C0 = 0x4602;
	g_qw711CA = 0x00;
	g_qw711C2 = 0x00;
	g_qw711D0 = 0x00;
	__cxa_atexit(x20_28, &g_dw711B8, 0x00071000);
	g_dw711D8 = 2000;
	g_b711E0 = 0x10;
	g_qw711E1 = 0x54434152544E4F43;
	g_qw711F0 = 0x00;
	g_qw711E9 = 0x00;
	__cxa_atexit(x20_28, &g_dw711D8, 0x00071000);
	g_dw711F8 = 2001;
	word64 x8_116 = g_qw50688;
	g_b71200 = 0x18;
	g_dw71209 = 0x4C414E47;
	g_b71217 = 0x00;
	g_w71232 = 0x00;
	g_qw71201 = x8_116;
	g_qw7120D = 0x00;
	__cxa_atexit(x20_28, &g_dw711F8, 0x00071000);
	word64 * x10_134 = &g_qw50695;
	g_dw71218 = 2002;
	g_b71220 = 0x1E;
	word64 x8_137 = g_qw5069C;
	word64 x9_138 = g_qw50695;
	word32 x9_32_32_297 = SLICE(x9_138, word32, 32);
	g_b71230 = 0x00;
	g_b71237 = 0x00;
	g_w71252 = 0x00;
	g_qw71228 = x8_137;
	g_qw71221 = x9_138;
	g_dw71231 = 0x00;
	__cxa_atexit(x20_28, &g_dw71218, 0x00071000);
	g_t71238.u1 = 0x00;
	g_qw71240 = 0x00;
	g_qw71248 = 0x00;
	g_t71238.u0 = 0x10;
	g_qw71239 = 7216226123752888613;
	g_b71241 = 0x00;
	void (* x20_162)(void * x0) = _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev_GOT;
	__cxa_atexit(x20_162, &g_t71238, 0x00071000);
	word64 x8_168 = g_qw506A5;
	g_t71250.u1 = 0x00;
	g_qw71258 = 0x00;
	g_qw71260 = 0x00;
	g_t71250.u0 = 0x18;
	g_dw71259 = 0x33662520;
	g_qw71251 = x8_168;
	g_b7125D = 0x00;
	__cxa_atexit(x20_162, &g_t71250, 0x00071000);
	g_qw71270 = 0x00;
	g_qw71278 = 0x00;
	g_ptr71268 = &g_qw71270;
	void (* x0_192)(void * x0) = _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev_GOT;
	__cxa_atexit(x0_192, &g_ptr71268, 0x00071000);
	g_qw71288 = 0x00;
	g_qw71290 = 0x00;
	g_ptr71280 = &g_qw71288;
	void (* x0_203)(void * x0) = _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev_GOT;
	__cxa_atexit(x0_203, &g_ptr71280, 0x00071000);
	g_qw712A0 = 0x00;
	g_qw712A8 = 0x00;
	g_ptr71298 = &g_qw712A0;
	void (* x0_214)(void * x0) = _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS0_IS6_P9_jfieldIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEESA_NS4_INSB_ISC_SF_EEEEED2Ev_GOT;
	__cxa_atexit(x0_214, &g_ptr71298, 0x00071000);
	g_qw712B8 = 0x00;
	g_qw712C0 = 0x00;
	g_ptr712B0 = &g_qw712B8;
	void (* x0_225)(void * x0) = _ZNSt6__ndk13mapIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev_GOT;
	__cxa_atexit(x0_225, &g_ptr712B0, 0x00071000);
	g_qw712D0 = 0x00;
	g_qw712D8 = 0x00;
	g_ptr712C8 = &g_qw712D0;
	void (* x0_236)(void * x0) = _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP8_jobjectNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev_GOT;
	__cxa_atexit(x0_236, &g_ptr712C8, 0x00071000);
	word32 x8_32_32_295 = SLICE(&g_qw712E8, word32, 32);
	g_qw712E8 = 0x00;
	g_qw712F0 = 0x00;
	g_ptr712E0 = &g_qw712E8;
	void (* x0_247)(void * x0) = _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP10_jmethodIDNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev_GOT;
	__cxa_atexit(x0_247, &g_ptr712E0, 0x00071000);
	g_qw71300 = 0x00;
	g_qw71308 = 0x00;
	g_t712F8.u1 = 0x00;
	g_t712F8.u0 = 0x08;
	g_dw712F9 = 925909552;
	g_b712FD = 0x00;
	__cxa_atexit(x20_162, &g_t712F8, 0x00071000);
	union Eq_1317 * x1_267 = &g_t71310;
	g_qw71318 = 0x00;
	g_qw71320 = 0x00;
	g_t71310.u1 = 0x00;
	g_t71310.u0 = 0x08;
	g_dw71311 = 876888368;
	g_b71315 = 0x00;
	Eq_14 x2_277;
	x2_277.u0 = 0x00071000;
	uint64 x0_288 = (uint64) __cxa_atexit(x20_162, &g_t71310, 0x00071000);
	word64 x8_296 = SEQ(x8_32_32_295, 876888368);
	word64 x9_298 = SEQ(x9_32_32_297, 0x33662520);
}

// 000000000001CE7C: define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
define _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev
{
	struct Eq_1338 * x0;
	struct Eq_1338 * x0;
	<unknown> Mem0;
	word128 q0;
	void * x1;
	byte v6_5 = x0->b0000;
	ui32 w8_6 = (word32) v6_5;
	if ((w8_6 & 0x01) != 0x00)
		return;
	struct Eq_1338 * x0_7 = x0->ptr0010;
	word128 q0;
	void * x1;
	((real64) q0, x0_7, x1);
}

// 000000000001CE90: void LEVELS::~LEVELS()
void LEVELS::~LEVELS()
{
	struct Eq_1366 * x0;
	ptr64 fp;
	ptr64 fp;
	struct Eq_1366 * x0;
	<unknown> Mem0;
	word128 q0;
	void * x1;
	ptr64 sp_2 = fp;
	byte v6_5 = x0->b0008;
	ui32 w8_6 = (word32) v6_5;
	if ((w8_6 & 0x01) != 0x00)
		return;
	struct Eq_1366 * x0_7 = x0->ptr0018;
	word128 q0;
	void * x1;
	((real64) q0, x0_7, x1);
}

// 000000000001CEA4: define _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev
define _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev
{
	struct Eq_1395 * x0;
	struct Eq_1395 * x0;
	<unknown> Mem0;
	word64 x1_5 = x0->qw0008;
	fn000000000001AEA0();
}

// 000000000001CEAC: define _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev
define _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev
{
	struct Eq_1404 * x0;
	struct Eq_1404 * x0;
	<unknown> Mem0;
	word64 x1_5 = x0->qw0008;
	fn000000000001B130();
}

// 000000000001CEB4: define _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS0_IS6_P9_jfieldIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEESA_NS4_INSB_ISC_SF_EEEEED2Ev
define _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS0_IS6_P9_jfieldIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEESA_NS4_INSB_ISC_SF_EEEEED2Ev
{
	struct Eq_1413 * x0;
	struct Eq_1413 * x0;
	<unknown> Mem0;
	word64 x1_5 = x0->qw0008;
	fn000000000001B830();
}

// 000000000001CEBC: define _ZNSt6__ndk13mapIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev
define _ZNSt6__ndk13mapIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev
{
	struct Eq_1422 * x0;
	struct Eq_1422 * x0;
	<unknown> Mem0;
	word64 x1_5 = x0->qw0008;
	fn000000000001BFE0();
}

// 000000000001CEC4: define _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP8_jobjectNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev
define _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP8_jobjectNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev
{
	struct Eq_1431 * x0;
	struct Eq_1431 * x0;
	<unknown> Mem0;
	word64 x1_5 = x0->qw0008;
	fn000000000001B110();
}

// 000000000001CECC: define _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP10_jmethodIDNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev
define _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP10_jmethodIDNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev
{
	struct Eq_1440 * x0;
	struct Eq_1440 * x0;
	<unknown> Mem0;
	word64 x1_5 = x0->qw0008;
	fn000000000001BB70();
}

// 000000000001CED4: void RGBDRealSense::RGBDRealSense()
void RGBDRealSense::RGBDRealSense()
{
	ptr64 fp;
	word64 x27;
	word64 x28;
	word64 x25;
	word64 x26;
	word64 x23;
	word64 x24;
	word64 x21;
	word64 x22;
	word64 x19;
	word64 x20;
	word64 x30;
	word64 x29;
	struct Eq_1651 * x19_195;
	word64 x8_198;
	word64 x19_172;
	ptr64 fp;
	word64 x28;
	word64 x27;
	word64 x26;
	word64 x25;
	word64 x24;
	word64 x23;
	word64 x22;
	word64 x21;
	word64 x20;
	word64 x19;
	word64 x29;
	word64 x30;
	struct Eq_1471 * x0;
	word64 x8_36 = g_qw70F98;
	struct Eq_1471 * x0;
	x0->qw0010 = 0x00;
	x0->qw0018 = 0x00;
	x0->qw0000 = x8_36 + 0x10;
	x0->qw0008 = 0x00;
	x0->b0009 = 0x00;
	x0->dw0020 = 1221284;
	x0->ptr0028 = &g_t506B2;
	fn000000000001B590();
	fn000000000001B8F0();
	fn000000000001B300();
	x0->qw00E8 = 0x00;
	x0->qw00A0 = 0x00;
	x0->ptr0098 = &x0->qw00A0;
	x0->qw00B8 = 0x00;
	x0->qw00A8 = 0x00;
	x0->ptr00B0 = &x0->qw00B8;
	x0->qw00D0 = 0x00;
	x0->qw00C0 = 0x00;
	x0->ptr00C8 = &x0->qw00D0;
	x0->qw00D8 = 0x00;
	x0->ptr00E0 = &x0->qw00E8;
	x0->qw00F0 = 0x00;
	x0->qw0108 = 0x00;
	x0->qw0110 = 0x00;
	x0->ptr0100 = &x0->qw0108;
	x0->qw0140 = 0x00;
	x0->ow0130 = 0;
	x0->ow0120 = 0;
	x0->qw0170 = 0x00;
	x0->ptr0190 = &x0->qw0198;
	x0->qw0198 = 0x00;
	x0->qw01A0 = 0x00;
	x0->qw0180 = 0x00;
	x0->qw0188 = 0x00;
	x0->ow01D8 = 0;
	x0->ow01E8 = 0;
	x0->ow01B8 = 0;
	x0->ow01C8 = 0;
	x0->ow01A8 = 0;
	_ZN4rgbd9RGBDParamC1Ea((char *) &x0->ow01E8 + 24);
	word64 x19_124;
	_ZN4rgbd9RGBDParamC1Ea(x19_124 + 0x02D0);
	word64 x19_148;
	_ZN4rgbd9RGBDParamC1Ea(x19_148 + 0x03A0);
	word64 x0_201 = _ZN4rgbd9RGBDParamC1Ea(x19_172 + 0x0470);
	word32 x8_32_32_248 = SLICE(x8_198, word32, 32);
	word128 q0_206 = 0;
	word64 x9_208 = &x19_195->ow0568;
	word64 x10_209 = &x19_195->ow0578;
	x19_195->ow0550 = 0;
	x19_195->ow0540 = 0;
	x19_195->dw0560 = 0x3F800000;
	x19_195->ow0578 = 0;
	x19_195->ow0568 = 0;
	x19_195->dw0588 = 0x3F800000;
	x19_195->dw0590 = 0x00;
	word64 x29_218 = x29;
	word64 x30_219 = x30;
	word64 x20_221 = x20;
	word64 x19_222 = x19;
	word64 x22_224 = x22;
	word64 x21_225 = x21;
	word64 x24_227 = x24;
	word64 x23_228 = x23;
	word64 x26_230 = x26;
	word64 x25_231 = x25;
	word64 x28_233 = x28;
	word64 x27_234 = x27;
	ptr64 sp_235 = fp;
	word64 x8_249 = SEQ(x8_32_32_248, 0x3F800000);
}

// 000000000001D2A0: void context::context()
void context::context()
{
	word64 x21;
	word64 x19;
	word64 x20;
	word64 x30;
	word64 x29;
	struct Eq_1796 * x21_49;
	ptr64 fp;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_1697 * x0;
	ptr64 fp;
	word64 x21;
	word64 x20;
	word64 x19;
	word64 x29;
	word64 x30;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_1697 * x0;
	word32 x0_32_32_29 = SLICE(x0, word32, 32);
	struct Eq_1722 * x21_18 = __mrs(sysreg3_3_13_0_2);
	word64 x8_19 = x21_18->qw0028;
	x0->qw0000 = 0x00;
	x0->qw0008 = 0x00;
	word64 x0_30 = SEQ(x0_32_32_29, 0x5B05);
	word64 x0_39 = rs2_create_context(x0_30, fp - 0x40);
	word32 x0_32_32_46 = SLICE(x0_39, word32, 32);
	word64 x0_47 = SEQ(x0_32_32_46, 0x28);
	struct Eq_1753 * x0_56 = _Znwm(x0_47);
	word64 x8_62 = g_qw70E30;
	x0_56->qw0010 = 0x00;
	word64 x20_50;
	x0_56->qw0018 = x20_50;
	word64 x9_67 = g_qw70F88;
	x0_56->qw0000 = x8_62 + 0x10;
	x0_56->qw0008 = 0x00;
	x0_56->qw0020 = x9_67;
	struct Eq_1781 * x19_51;
	x19_51->qw0000 = x20_50;
	struct Eq_1753 * x20_75 = x19_51->ptr0008;
	x19_51->ptr0008 = x0_56;
	if (x20_75 == null)
	{
		word64 x0_77 = 0x00;
		fn000000000001ADF0();
		word64 x8_80 = x21_49->qw0028;
		word64 x9_81 = x8_19;
		word64 x31_82 = x8_80 - x8_19;
		Eq_1801 NZCV_83;
		NZCV_83.u0 = cond(x31_82);
		bool Z_84 = SLICE(NZCV_83, bool, 30);
		bool C_105 = SLICE(NZCV_83, bool, 29);
		bool N_106 = SLICE(NZCV_83, bool, 31);
		bool V_107 = SLICE(NZCV_83, bool, 28);
		if (x31_82 != 0x00)
			__stack_chk_fail();
		else
		{
			word64 x29_86 = x29;
			word64 x30_87 = x30;
			word64 x20_89 = x20;
			word64 x19_90 = x19;
			word64 x21_91 = x21;
			ptr64 sp_92 = fp;
		}
	}
}

// 000000000001D3EC: void config::config()
void config::config()
{
	word64 x21;
	word64 x19;
	word64 x20;
	word64 x30;
	word64 x29;
	struct Eq_1908 * x21_45;
	ptr64 fp;
	Eq_1720 sysreg3_3_13_0_2;
	ptr64 fp;
	word64 x21;
	word64 x20;
	word64 x19;
	word64 x29;
	word64 x30;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_1844 * x0;
	struct Eq_1837 * x21_18 = __mrs(sysreg3_3_13_0_2);
	word64 x8_19 = x21_18->qw0028;
	struct Eq_1844 * x0;
	x0->qw0000 = 0x00;
	x0->qw0008 = 0x00;
	word64 x0_36 = rs2_create_config(fp - 0x40);
	word32 x0_32_32_42 = SLICE(x0_36, word32, 32);
	word64 x0_43 = SEQ(x0_32_32_42, 0x28);
	struct Eq_1866 * x0_52 = _Znwm(x0_43);
	word64 x8_57 = g_qw70E18;
	x0_52->qw0010 = 0x00;
	word64 x20_46;
	x0_52->qw0018 = x20_46;
	word64 x9_62 = g_qw70F20;
	x0_52->qw0000 = x8_57 + 0x10;
	x0_52->qw0008 = 0x00;
	x0_52->qw0020 = x9_62;
	struct Eq_1894 * x19_47;
	x19_47->qw0000 = x20_46;
	struct Eq_1866 * x20_70 = x19_47->ptr0008;
	x19_47->ptr0008 = x0_52;
	if (x20_70 == null)
	{
		word64 x0_72 = 0x00;
		fn000000000001ADF0();
		word64 x8_75 = x21_45->qw0028;
		word64 x9_76 = x8_19;
		word64 x31_77 = x8_75 - x8_19;
		Eq_1913 NZCV_78;
		NZCV_78.u0 = cond(x31_77);
		bool Z_79 = SLICE(NZCV_78, bool, 30);
		bool C_100 = SLICE(NZCV_78, bool, 29);
		bool N_101 = SLICE(NZCV_78, bool, 31);
		bool V_102 = SLICE(NZCV_78, bool, 28);
		if (x31_77 != 0x00)
			__stack_chk_fail();
		else
		{
			word64 x29_81 = x29;
			word64 x30_82 = x30;
			word64 x20_84 = x20;
			word64 x19_85 = x19;
			word64 x21_86 = x21;
			ptr64 sp_87 = fp;
		}
	}
}

// 000000000001D534: void pointcloud::pointcloud()
void pointcloud::pointcloud()
{
	word64 x21;
	word64 x22;
	word64 x19;
	word64 x20;
	word64 x30;
	word64 x29;
	ptr64 fp;
	Eq_1720 sysreg3_3_13_0_2;
	ptr64 fp;
	word64 x22;
	word64 x21;
	word64 x20;
	word64 x19;
	word64 x29;
	word64 x30;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_1934 * x0;
	word64 qwLoc40;
	struct Eq_1952 * x21_21 = __mrs(sysreg3_3_13_0_2);
	word64 x8_23 = x21_21->qw0028;
	word64 x22_24 = g_qw70CE8;
	word64 x10_29 = x22_24 + 0x38;
	struct Eq_1934 * x0;
	x0->qw0000 = x22_24 + 0x10;
	x0->qw0020 = x22_24 + 0x38;
	fn000000000001BA90();
	ptr64 x1_35 = fp - 0x48;
	word32 w2_36 = 0x01;
	struct Eq_1934 * x0_37 = x0;
	fn000000000001BB90();
	word64 qwLoc40;
	if (qwLoc40 == 0x00)
	{
		x0->qw0000 = x22_24 + 0x10;
		x0->qw0020 = x22_24 + 0x38;
		word64 x8_45 = x21_21->qw0028;
		word64 x9_46 = x8_23;
		word64 x31_47 = x8_45 - x8_23;
		Eq_1998 NZCV_48;
		NZCV_48.u0 = cond(x31_47);
		bool Z_49 = SLICE(NZCV_48, bool, 30);
		bool C_69 = SLICE(NZCV_48, bool, 29);
		bool N_70 = SLICE(NZCV_48, bool, 31);
		bool V_71 = SLICE(NZCV_48, bool, 28);
		if (x31_47 != 0x00)
			__stack_chk_fail();
		else
		{
			word64 x29_51 = x29;
			word64 x30_52 = x30;
			word64 x20_54 = x20;
			word64 x19_55 = x19;
			word64 x22_57 = x22;
			word64 x21_58 = x21;
			ptr64 sp_59 = fp;
		}
	}
}

// 000000000001D63C: void RGBDParam::~RGBDParam()
void RGBDParam::~RGBDParam()
{
	word64 x19;
	word64 x29;
	<unknown> ϕ;
	<unknown> ϕ;
	word32 NZCV_139;
	<unknown> ϕ;
	struct Eq_2072 * x19_69;
	<unknown> ϕ;
	word128 q0_75;
	<unknown> ϕ;
	void * x1_76;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	ptr64 x31_74;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x8_73;
	word32 NZCV_77;
	<unknown> ϕ;
	struct Eq_2072 * x19_35;
	<unknown> ϕ;
	word64 x20_34;
	word64 x20;
	<unknown> ϕ;
	ptr64 x29_36;
	<unknown> ϕ;
	word64 x30_37;
	word64 x30;
	<unknown> ϕ;
	word128 q0_41;
	word128 q0;
	<unknown> ϕ;
	void * x1_42;
	void * x1;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2072 * x0;
	ptr64 fp;
	ptr64 fp;
	word64 x20;
	word64 x19;
	word64 x29;
	word64 x30;
	struct Eq_2072 * x0;
	word128 q0;
	void * x1;
	ptr64 x29_13 = fp + ~0x0F;
	struct Eq_2072 * x19_15 = x0;
	struct Eq_2086 ** x0_16 = x0->ptr00C0;
	ptr64 x31_18 = (char *) &x0->ptr0090 + 16 - x0_16;
	<anonymous> * x8_24;
	<anonymous> * x8_22;
	if (x31_18 != null)
	{
		if (x0_16 == null)
			goto l000000000001D678;
		struct Eq_2086 * x8_23 = (struct Eq_2086 *) *x0_16;
		x8_24 = x8_23->ptr0028;
	}
	else
	{
		struct Eq_2086 * x8_21 = (struct Eq_2086 *) *x0_16;
		x8_22 = x8_21->ptr0020;
	}
	<anonymous> * x8_25 = ϕ(x8_24, x8_22);
	x8_25();
l000000000001D678:
	void * x1_88 = ϕ(x1, x1_42);
	word128 q0_85 = ϕ(q0, q0_41);
	word64 x30_62 = ϕ(x30, x30_37);
	ptr64 x29_60 = ϕ(x29_13, x29_36);
	word64 x20_57 = ϕ(x20, x20_34);
	struct Eq_2072 * x19_44 = ϕ(x19_15, x19_35);
	struct Eq_2151 ** x0_46 = x19_44->ptr0090;
	ptr64 x8_47 = &x19_44->qw0058 + 3;
	word32 x8_32_32_189 = SLICE(x8_47, word32, 32);
	ptr64 x31_48 = x8_47 - x0_46;
	Eq_2127 NZCV_49;
	NZCV_49.u0 = cond(x31_48);
	bool Z_50 = SLICE(NZCV_49, bool, 30);
	bool C_150 = SLICE(NZCV_49, bool, 29);
	bool N_158 = SLICE(NZCV_49, bool, 31);
	bool V_169 = SLICE(NZCV_49, bool, 28);
	<anonymous> * x8_54;
	<anonymous> * x8_52;
	if (x31_48 != null)
	{
		if (x0_46 == null)
			goto l000000000001D6A4;
		struct Eq_2151 * x8_53 = (struct Eq_2151 *) *x0_46;
		x8_54 = x8_53->ptr0028;
	}
	else
	{
		struct Eq_2151 * x8_51 = (struct Eq_2151 *) *x0_46;
		x8_52 = x8_51->ptr0020;
	}
	<anonymous> * x8_55 = ϕ(x8_54, x8_52);
	x8_55();
	bool C_151 = SLICE(NZCV_77, bool, 29);
	bool N_159 = SLICE(NZCV_77, bool, 31);
	bool V_170 = SLICE(NZCV_77, bool, 28);
	word32 x8_32_32_190 = SLICE(x8_73, word32, 32);
	bool Z_199 = SLICE(NZCV_77, bool, 30);
l000000000001D6A4:
	bool Z_198 = ϕ(Z_50, Z_199);
	word32 x8_32_32_188 = ϕ(x8_32_32_189, x8_32_32_190);
	ptr64 x31_183 = ϕ(x31_48, x31_74);
	bool V_168 = ϕ(V_169, V_170);
	bool N_157 = ϕ(N_158, N_159);
	bool C_149 = ϕ(C_150, C_151);
	void * x1_87 = ϕ(x1_88, x1_76);
	word128 q0_84 = ϕ(q0_85, q0_75);
	struct Eq_2072 * x19_78 = ϕ(x19_44, x19_69);
	word64 x20_80 = x19_78->qw0058;
	if (x20_80 != 0x00)
		;
	byte v15_81 = x19_78->b0030;
	ui32 w8_82 = (word32) v15_81;
	word64 x8_191;
	word64 x8_192;
	word64 x8_193;
	word64 x0_99;
	if ((w8_82 & 0x01) != 0x00)
	{
		byte v16_92 = x19_78->b0010;
		ui32 w8_93 = (word32) v16_92;
		x8_191 = SEQ(x8_32_32_188, w8_93);
		if ((w8_93 & 0x01) != 0x00)
		{
l000000000001D6D4:
			word64 x8_187 = ϕ(x8_191, x8_192);
			word64 x0_102 = x19_78->qw0008;
			if (x0_102 != 0x00)
			{
l000000000001D6DC:
				word64 x0_134 = _ZNSt6__ndk119__shared_weak_count14__release_weakEv();
				bool C_146 = SLICE(NZCV_139, bool, 29);
				bool N_154 = SLICE(NZCV_139, bool, 31);
				bool V_165 = SLICE(NZCV_139, bool, 28);
				bool Z_195 = SLICE(NZCV_139, bool, 30);
				return;
			}
l000000000001D728:
			word64 x8_186 = ϕ(x8_187, x8_193);
			word64 x0_173 = ϕ(x0_102, x0_99);
			word64 x29_109 = x29;
			word64 x30_110 = x30;
			word64 x20_112 = x20;
			word64 x19_113 = x19;
			return;
		}
	}
	else
	{
		int64 x0_83 = x19_78->qw0040;
		((real64) q0_84, x0_83, x1_87);
		byte v21_90 = x19_78->b0010;
		ui32 w8_91 = (word32) v21_90;
		x8_192 = SEQ(x8_32_32_188, w8_91);
		if ((w8_91 & 0x01) == 0x00)
			goto l000000000001D6D4;
	}
	<unknown> ϕ;
	x8_193 = ϕ(x8_191, x8_192);
	int64 x0_96 = x19_78->qw0020;
	((real64) q0_84, x0_96, x1_87);
	x0_99 = x19_78->qw0008;
	if (x0_99 != 0x00)
		goto l000000000001D6DC;
	goto l000000000001D728;
}

// 000000000001D734: void filter::~filter()
void filter::~filter()
{
	ptr64 fp;
	word64 x19;
	word64 x20;
	word64 x30;
	word64 x29;
	struct Eq_2296 * x0;
	ptr64 fp;
	word64 x20;
	word64 x19;
	word64 x29;
	word64 x30;
	struct Eq_2296 * x0;
	word64 x8_15 = g_qw70DA0;
	word64 x20_17 = x0->qw0030;
	word64 x9_19 = x8_15 + 0x10;
	x0->qw0000 = x8_15 + 0x10;
	x0->qw0020 = x8_15 + 0x38;
	if (x20_17 == 0x00)
	{
		word64 x20_24 = x0->qw0018;
		word64 x8_25 = g_qw70E50;
		word64 x8_26 = x8_25 + 0x10;
		x0->qw0000 = x8_25 + 0x10;
		if (x20_24 == 0x00)
		{
			word64 x29_29 = x29;
			word64 x30_30 = x30;
			word64 x20_32 = x20;
			word64 x19_33 = x19;
			ptr64 sp_34 = fp;
		}
	}
}

// 000000000001D7F0: void (Register (ptr32 Eq_2334) x0, Register int32 x1, Register int32 x2, Register int32 x3)
void (struct Eq_2334 * x0, int32 x1, int32 x2, int32 x3)
{
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_5725 * sp_1412;
	word64 x8_1425;
	<unknown> ϕ;
	size_t sp_1319;
	word64 x23_1325;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x23_1241;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x28_1127;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x22_1133;
	<unknown> ϕ;
	Eq_14 x26_1129;
	<unknown> ϕ;
	Eq_3059 x25_1130;
	<unknown> ϕ;
	word64 x21_1134;
	<unknown> ϕ;
	word64 x20_1135;
	<unknown> ϕ;
	Eq_14 x19_1136;
	<unknown> ϕ;
	struct Eq_3051 * x29_1137;
	<unknown> ϕ;
	Eq_3047 x30_1138;
	<unknown> ϕ;
	word64 sysreg3_3_13_0_2_1140;
	<unknown> ϕ;
	word64 x3_1144;
	<unknown> ϕ;
	word32 w4_1145;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_2346 q0_1150;
	<unknown> ϕ;
	word64 x10_1147;
	<unknown> ϕ;
	Eq_2354 x11_1146;
	<unknown> ϕ;
	Eq_2355 x12_1153;
	<unknown> ϕ;
	word64 x13_1152;
	<unknown> ϕ;
	word64 x5_1151;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x19_1422;
	<unknown> ϕ;
	word64 x21_1420;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x26_793;
	<unknown> ϕ;
	Eq_3059 x25_794;
	<unknown> ϕ;
	word64 x22_797;
	<unknown> ϕ;
	word64 x21_798;
	<unknown> ϕ;
	word64 x20_799;
	<unknown> ϕ;
	Eq_14 x19_800;
	<unknown> ϕ;
	struct Eq_3051 * x29_801;
	<unknown> ϕ;
	Eq_3047 x30_802;
	<unknown> ϕ;
	word64 sysreg3_3_13_0_2_804;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x2_807;
	<unknown> ϕ;
	word64 x3_808;
	<unknown> ϕ;
	word32 w4_809;
	<unknown> ϕ;
	Eq_2346 q0_814;
	<unknown> ϕ;
	struct Eq_3067 * x27_792;
	<unknown> ϕ;
	word64 x10_811;
	<unknown> ϕ;
	Eq_2354 x11_810;
	<unknown> ϕ;
	Eq_2355 x12_817;
	<unknown> ϕ;
	word64 x13_816;
	<unknown> ϕ;
	word64 x5_815;
	<unknown> ϕ;
	<unknown> ϕ;
	size_t sp_790;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x20_3564;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x22_3566;
	<unknown> ϕ;
	word64 x21_3574;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x21_2665;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x21_2583;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	char * x22_2424;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word128 q0_2441;
	word128 q0_2369;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x20_2083;
	struct Eq_5794 * sp_2074;
	ptr64 x20_2545;
	ptr64 x20_2032;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x21_2909;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x21_2827;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	char * x22_1911;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word128 q0_1928;
	word128 q0_1858;
	<unknown> ϕ;
	struct Eq_3259 * sp_1740;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	ptr64 fp;
	word64 x27;
	word64 x28;
	word64 x25;
	word64 x26;
	word64 x23;
	word64 x24;
	word64 x21;
	word64 x22;
	word64 x19;
	word64 x20;
	word64 x30;
	word64 x29;
	Eq_2346 q0_3513;
	<unknown> ϕ;
	word64 sysreg3_3_13_0_2_3503;
	<unknown> ϕ;
	word32 w4_3508;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x10_3510;
	<unknown> ϕ;
	Eq_2354 x11_3509;
	<unknown> ϕ;
	Eq_2355 x12_3516;
	<unknown> ϕ;
	word64 x13_3515;
	<unknown> ϕ;
	word64 x16_3527;
	<unknown> ϕ;
	word64 x17_3528;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x3_3507;
	<unknown> ϕ;
	word64 x5_3514;
	<unknown> ϕ;
	word64 x24_3494;
	word64 x0_3427;
	struct Eq_3067 * x24_3345;
	<unknown> ϕ;
	Eq_14 x28_3341;
	<unknown> ϕ;
	struct Eq_3067 * x27_3342;
	<unknown> ϕ;
	Eq_14 x26_3343;
	<unknown> ϕ;
	Eq_3059 x25_3344;
	<unknown> ϕ;
	ui64 x23_3346;
	<unknown> ϕ;
	void * x22_3347;
	<unknown> ϕ;
	Eq_14 x21_3348;
	<unknown> ϕ;
	word64 x20_3349;
	<unknown> ϕ;
	Eq_14 x19_3350;
	<unknown> ϕ;
	struct Eq_3051 * x29_3351;
	<unknown> ϕ;
	Eq_3047 x30_3352;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x3_3358;
	<unknown> ϕ;
	word32 w4_3359;
	<unknown> ϕ;
	word64 x2_3357;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_2463 sp_3237;
	word64 x20_3246;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x20_3164;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x21_1600;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_2346 q0_1616;
	<unknown> ϕ;
	Eq_14 x28_1593;
	<unknown> ϕ;
	struct Eq_3067 * x27_1594;
	<unknown> ϕ;
	Eq_14 x26_1595;
	<unknown> ϕ;
	Eq_3059 x25_1596;
	<unknown> ϕ;
	struct Eq_3067 * x24_1597;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x19_1602;
	<unknown> ϕ;
	struct Eq_3051 * x29_1603;
	<unknown> ϕ;
	Eq_3047 x30_1604;
	<unknown> ϕ;
	word64 x3_1610;
	<unknown> ϕ;
	word32 w4_1611;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x28_575;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x26_577;
	<unknown> ϕ;
	Eq_3059 x25_578;
	<unknown> ϕ;
	Eq_14 x19_584;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x1_590;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	ui64 x23_580;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x10_595;
	<unknown> ϕ;
	Eq_2354 x11_594;
	<unknown> ϕ;
	Eq_2355 x12_601;
	<unknown> ϕ;
	word64 x13_600;
	<unknown> ϕ;
	word64 x16_1478;
	word64 x16_608;
	<unknown> ϕ;
	word64 x17_1479;
	word64 x17_609;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_2463 sp_574;
	word64 x21_582;
	<unknown> ϕ;
	word64 sp_462;
	struct Eq_2959 * sp_419;
	word64 x2_436;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_2463 sp_314;
	word64 x20_323;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x20_239;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_14 x21_138;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_2346 q0_154;
	<unknown> ϕ;
	word64 x1_80;
	Eq_1720 sysreg3_3_13_0_2;
	ptr64 fp;
	word64 x28;
	word64 x27;
	word64 x26;
	word64 x25;
	word64 x24;
	word64 x23;
	word64 x22;
	word64 x21;
	word64 x20;
	word64 x19;
	word64 x29;
	word64 x30;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_2334 * x0;
	int32 x1;
	int32 x2;
	int32 x3;
	word32 w4;
	word32 x1_32_32_58 = SLICE(x1, word32, 32);
	word32 x2_32_32_60 = SLICE(x2, word32, 32);
	word32 x3_32_32_62 = SLICE(x3, word32, 32);
	struct Eq_2381 * x8_36 = __mrs(sysreg3_3_13_0_2);
	word64 x8_38 = x8_36->qw0028;
	x0->dw00F8 = x1;
	x0->dw00FC = x2;
	x0->dw0118 = x3;
	word32 w4;
	x0->dw011C = w4;
	uint64 x0_57 = (uint64) system("su -c \"chmod -R 777 /dev/bus/usb\"");
	Eq_2407 x1_59 = SEQ(x1_32_32_58, x1);
	Eq_2409 x2_61 = SEQ(x2_32_32_60, x2);
	Eq_2411 x3_63 = SEQ(x3_32_32_62, x3);
	_ZNSt6__ndk16chrono12system_clock3nowEv(0x00050000, "su -c \"chmod -R 777 /dev/bus/usb\"", x0_57, x1_59, x2_61, x3_63);
	word32 x1_32_32_128 = SLICE(x1_80, word32, 32);
	struct Eq_2421 * sp_64;
	word64 x24_69;
	sp_64->qw0038 = x24_69;
	fn000000000001AF40();
	Eq_916 v31_103;
	v31_103.u0 = g_t71120.u0;
	ui32 w8_104 = (word32) v31_103;
	ptr64 x10_105 = g_ptr71130;
	word32 w9_106 = g_dw71118;
	Eq_14 x21_111;
	x21_111.u1 = (w8_104 & 0x01) == 0x00 ? 0x00071121 : x10_105;
	sp_64->dw01B0 = w9_106;
	sp_64->qw01C0 = 0x00;
	sp_64->qw01C8 = 0x00;
	sp_64->qw01B8 = 0x00;
	Eq_14 x0_118 = strlen(x21_111);
	Eq_2463 sp_119 = (Eq_2463) ((word32) x0_118 + 16);
	Eq_14 x1_129 = SEQ(x1_32_32_128, 0x02);
	Eq_2346 q0_1689;
	Eq_2346 q0_88;
	Eq_2346 q0_1690;
	Eq_14 x1_1669;
	Eq_14 x1_1670;
	Eq_2463 sp_1532;
	Eq_2463 sp_1194;
	if (x0_118 >= ~0x0F)
	{
l000000000001E234:
		<unknown> ϕ;
		q0_1689 = ϕ(q0_88, q0_1690);
		<unknown> ϕ;
		Mem1678 = ϕ(Mem117, Mem1679);
		<unknown> ϕ;
		x1_1669 = ϕ(x1_129, x1_1670);
		<unknown> ϕ;
		sp_1532 = ϕ(sp_119, sp_1194);
		fn000000000001B2D0();
		goto l000000000001E23C;
	}
	Eq_14 x20_122 = x0_118;
	word32 w20_167 = (word32) x0_118;
	void * x22_169;
	void * x22_162;
	Eq_2463 sp_130;
	Eq_14 x20_139;
	if (x0_118 < 0x17)
	{
		x22_169 = (void *) ((char *) &sp_64->qw01B8 + 1);
		((word32) x0_118 + 456)->u1 = (byte) w20_167 << 0x01;
		if (x0_118 == 0x00)
			goto l000000000001D8E8;
	}
	else
	{
		ui64 x23_126 = (word32) x0_118 + 16 & ~0x0F;
		void * x0_145 = _Znwm(x23_126);
		x22_162 = x0_145;
		*((word64) sp_130 + 448) = (Eq_2463) x20_139;
		*((word64) sp_130 + 456) = (Eq_2463) x0_145;
		ui64 x23_136;
		*((word64) sp_130 + 440) = (Eq_2463) (x23_136 | 0x01);
	}
	Eq_2346 q0_359 = ϕ(q0_88, q0_154);
	Eq_2463 sp_182 = ϕ(sp_119, sp_130);
	Eq_14 x20_175 = ϕ(x20_122, x20_139);
	Eq_14 x21_173 = ϕ(x21_111, x21_138);
	void * x22_171 = ϕ(x22_169, x22_162);
	Eq_14 x1_174 = x21_173;
	memcpy(x22_171, x21_173, x20_175);
l000000000001D8E8:
	Eq_2346 q0_358 = ϕ(q0_88, q0_359);
	Eq_14 x1_224 = ϕ(x1_129, x1_174);
	Eq_2463 sp_181 = ϕ(sp_119, sp_182);
	Eq_14 x20_179 = ϕ(x20_122, x20_175);
	word32 x20_32_32_406 = SLICE(x20_179, word32, 32);
	void * x22_178 = ϕ(x22_169, x22_171);
	*(x22_178 + x20_179) = (word64) 0x00;
	word64 x0_183 = (word64) sp_181 + 432;
	ui32 w0_184 = (word32) x0_183;
	((LEVELS) x0_183);
	word64 x20_4702;
	word64 x20_4706;
	if ((w0_184 & 0x01) == 0x00)
	{
		word32 w20_185 = 0x00;
		Eq_2511 v133_186 = *((word64) sp_181 + 440);
		ui32 w8_187 = (word32) v133_186;
		x20_4702 = SEQ(x20_32_32_406, w20_185);
		x20_4706 = SEQ(x20_32_32_406, w20_185);
		if ((w8_187 & 0x01) == 0x00)
			goto l000000000001D9AC;
		goto l000000000001D94C;
	}
	struct Eq_2626 ** x8_189 = g_ptr70D68;
	struct Eq_2610 * v43_190 = (word64) sp_181 + 416;
	v43_190->qw0000 = 0x00;
	v43_190->qw0008 = 0x00;
	*((word64) sp_181 + 408) = (Eq_2463) 0x00;
	struct Eq_2626 * x20_194 = (struct Eq_2626 *) *x8_189;
	Eq_14 x0_196 = strlen(x20_194);
	Eq_2463 sp_197 = (Eq_2463) ((word32) x0_196 + 16);
	if (x0_196 >= ~0x0F)
		goto l000000000001E244;
	Eq_14 x21_200 = x0_196;
	word32 w21_268 = (word32) x0_196;
	void * x22_270;
	void * x22_262;
	Eq_2463 sp_230;
	Eq_14 x21_238;
	if (x0_196 < 0x17)
	{
		x22_270 = (word32) x0_196 + 424 | 0x01;
		((word32) x0_196 + 424)->u1 = (byte) w21_268 << 0x01;
		if (x0_196 == 0x00)
			goto l000000000001D98C;
	}
	else
	{
		ui64 x23_204 = (word32) x0_196 + 16 & ~0x0F;
		void * x0_245 = _Znwm(x23_204);
		x22_262 = x0_245;
		*((word64) sp_230 + 416) = (Eq_2463) x21_238;
		*((word64) sp_230 + 424) = (Eq_2463) x0_245;
		ui64 x23_236;
		*((word64) sp_230 + 408) = (Eq_2463) (x23_236 | 0x01);
	}
	Eq_2463 sp_283 = ϕ(sp_197, sp_230);
	Eq_14 x21_276 = ϕ(x21_200, x21_238);
	struct Eq_2626 * x20_274 = ϕ(x20_194, x20_239);
	void * x22_272 = ϕ(x22_270, x22_262);
	memcpy(x22_272, x20_274, x21_276);
l000000000001D98C:
	size_t sp_282 = ϕ(sp_197, sp_283);
	Eq_14 x21_280 = ϕ(x21_200, x21_276);
	void * x22_279 = ϕ(x22_270, x22_272);
	*(x22_279 + x21_280) = (word64) 0x00;
	word64 x0_284 = (word64) sp_282 + 408;
	word64 x0_329 = _ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(x0_284);
	word32 w0_347 = (word32) x0_329;
	word32 x20_32_32_405 = SLICE(x20_323, word32, 32);
	Eq_2677 v51_345 = *((word64) sp_314 + 408);
	ui32 w8_346 = (word32) v51_345;
	word32 w20_348 = w0_347;
	word64 x20_4700;
	word64 x20_4705;
	Eq_2463 sp_354;
	Eq_2346 q0_338;
	Eq_14 x1_330;
	word64 x20_4701;
	if ((w8_346 & 0x01) != 0x00)
	{
		byte v52_352 = (byte) *((word64) sp_314 + 440);
		ui32 w8_353 = (word32) v52_352;
		x20_4700 = SEQ(x20_32_32_405, w20_348);
		word64 x20_4704 = SEQ(x20_32_32_405, w20_348);
		if ((w8_353 & 0x01) != 0x00)
		{
l000000000001D9AC:
			word64 x20_4707 = ϕ(x20_4704, x20_4705, x20_4706);
			Eq_2463 sp_373 = ϕ(sp_314, sp_314, sp_181);
			<unknown> ϕ;
			Mem365 = ϕ(Mem281, Mem281, Mem180);
			ui32 w20_362 = (word32) x20_4707;
			if ((w20_362 & 0x01) == 0x00)
				goto l000000000001DA28;
l000000000001D9B0:
			size_t sp_372 = ϕ(sp_373, sp_354);
			<unknown> ϕ;
			Mem364 = ϕ(Mem365, Mem355);
			struct Eq_2626 ** x8_366 = g_ptr70D68;
			struct Eq_2626 * x1_367 = (struct Eq_2626 *) *x8_366;
			word64 x0_374 = (word64) sp_372 + 480;
			_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_(x0_374, x1_367, 0x00071000, &g_dw71118, 0x00052000, 337390, 0x00);
			word32 x2_32_32_460 = SLICE(x2_436, word32, 32);
			fn000000000001BB30();
			word64 x0_457 = sp_419->qw01D0;
			Eq_2965 x2_461 = SEQ(x2_32_32_460, 0x12);
			rs2_get_device_count(x0_457, (char *) sp_419 + 384, x2_461, 0x00);
			fn000000000001ADF0();
			fn000000000001B220();
			LogCapture::~LogCapture();
			Eq_2463 sp_503 = sp_462 + 0x08;
l000000000001DA28:
			<unknown> ϕ;
			Mem505 = ϕ(Mem365, Mem458, Mem355);
			size_t sp_504 = ϕ(sp_373, sp_503, sp_354);
			word64 x0_506 = (word64) *((word64) sp_504 + 464);
			ptr64 x1_508 = (word64) sp_504 + 384;
			word64 x0_550 = rs2_get_device_count(x0_506, x1_508, 0x00);
			word32 w0_566 = (word32) x0_550;
			struct Eq_2902 * sp_535;
			sp_535->dw0044 = w0_566;
			fn000000000001ADF0();
			word64 x0_571 = sp_535->qw01D0;
			word64 x0_589 = rs2_get_device_count(x0_571, &sp_535->dw0044 + 79, 0x00);
			word32 w0_605 = (word32) x0_589;
			word32 x21_32_32_3567 = SLICE(x21_582, word32, 32);
			word64 x0_607 = (word64) *((word64) sp_574 + 384);
			word32 x0_32_32_3606 = SLICE(x0_607, word32, 32);
			fn000000000001ADF0();
			word64 x21_3568 = SEQ(x21_32_32_3567, w0_605);
			word64 x5_599;
			word64 x5_3713;
			word64 x13_3682;
			Eq_2355 x12_3661;
			Eq_2354 x11_3642;
			word64 x10_3616;
			word32 x0_32_32_3607;
			ui64 x23_1482;
			Eq_2346 q0_598;
			Eq_2346 q0_1470;
			word32 w4_593;
			word32 w4_1589;
			word64 x3_592;
			word64 x3_1584;
			Eq_14 x2_591;
			Eq_14 x2_1574;
			Eq_14 x1_1487;
			word64 sysreg3_3_13_0_2_588;
			word64 sysreg3_3_13_0_2_1570;
			Eq_3047 x30_586;
			Eq_3047 x30_1567;
			struct Eq_3051 * x29_585;
			struct Eq_3051 * x29_1564;
			Eq_14 x19_1495;
			Eq_3059 x25_1560;
			Eq_14 x26_1557;
			struct Eq_3067 * x27_576;
			struct Eq_3067 * x27_1549;
			Eq_14 x28_1544;
			Eq_2463 sp_1465;
			if (w0_605 == 0x00)
			{
l000000000001DF94:
				word64 x5_3711 = ϕ(x5_599, x5_3713);
				word64 x17_3704 = ϕ(x17_609, x17_1479);
				word64 x16_3701 = ϕ(x16_608, x16_1478);
				word64 x13_3680 = ϕ(x13_600, x13_3682);
				Eq_2355 x12_3659 = ϕ(x12_601, x12_3661);
				Eq_2354 x11_3640 = ϕ(x11_594, x11_3642);
				word64 x10_3614 = ϕ(x10_595, x10_3616);
				word32 x0_32_32_3605 = ϕ(x0_32_32_3606, x0_32_32_3607);
				ui64 x23_2222 = ϕ(x23_580, x23_1482);
				Eq_2346 q0_1692 = ϕ(q0_598, q0_1470);
				word32 w4_1587 = ϕ(w4_593, w4_1589);
				word64 x3_1582 = ϕ(x3_592, x3_1584);
				Eq_14 x2_1572 = ϕ(x2_591, x2_1574);
				Eq_14 x1_1571 = ϕ(x1_590, x1_1487);
				word64 sysreg3_3_13_0_2_1568 = ϕ(sysreg3_3_13_0_2_588, sysreg3_3_13_0_2_1570);
				Eq_3047 x30_1565 = ϕ(x30_586, x30_1567);
				struct Eq_3051 * x29_1562 = ϕ(x29_585, x29_1564);
				Eq_14 x19_1561 = ϕ(x19_584, x19_1495);
				Eq_3059 x25_1558 = ϕ(x25_578, x25_1560);
				Eq_14 x26_1555 = ϕ(x26_577, x26_1557);
				struct Eq_3067 * x27_1547 = ϕ(x27_576, x27_1549);
				Eq_14 x28_1542 = ϕ(x28_575, x28_1544);
				<unknown> ϕ;
				Mem1498 = ϕ(Mem572, Mem1484);
				size_t sp_1497 = ϕ(sp_574, sp_1465);
				word64 x21_1499 = (word64) *((word64) sp_1497 + 472);
				struct Eq_3067 * x24_1500 = (struct Eq_3067 *) *((word64) sp_1497 + 56);
				if (x21_1499 != 0x00)
					;
				word32 w8_1501 = (word32) *((word64) sp_1497 + 0x0044);
				word64 x5_3710;
				word64 x3_3708;
				Eq_14 x2_3706;
				word64 x17_3703;
				word64 x16_3700;
				word64 x13_3679;
				Eq_2355 x12_3658;
				Eq_2354 x11_3639;
				word64 x10_3613;
				Eq_14 x1_3611;
				word32 x0_32_32_3608;
				word32 x0_32_32_3448;
				word32 w4_3600;
				word64 sysreg3_3_13_0_2_3597;
				Eq_2346 q0_3595;
				word64 x0_3609;
				if (w8_1501 == 0x00)
				{
l000000000001E978:
					<unknown> ϕ;
					word64 x5_3141;
					word64 x5_3437;
					x5_3710 = ϕ(x5_3711, x5_3141, x5_3437);
					<unknown> ϕ;
					word64 x3_3134;
					word64 x3_3430;
					x3_3708 = ϕ(x3_1582, x3_3134, x3_3430);
					<unknown> ϕ;
					Eq_14 x2_3133;
					Eq_14 x2_3429;
					x2_3706 = ϕ(x2_1572, x2_3133, x2_3429);
					<unknown> ϕ;
					word64 x17_3145;
					word64 x17_3441;
					x17_3703 = ϕ(x17_3704, x17_3145, x17_3441);
					<unknown> ϕ;
					word64 x16_3144;
					word64 x16_3440;
					x16_3700 = ϕ(x16_3701, x16_3144, x16_3440);
					<unknown> ϕ;
					word64 x13_3142;
					word64 x13_3438;
					x13_3679 = ϕ(x13_3680, x13_3142, x13_3438);
					<unknown> ϕ;
					Eq_2355 x12_3143;
					Eq_2355 x12_3439;
					x12_3658 = ϕ(x12_3659, x12_3143, x12_3439);
					<unknown> ϕ;
					Eq_2354 x11_3136;
					Eq_2354 x11_3432;
					x11_3639 = ϕ(x11_3640, x11_3136, x11_3432);
					<unknown> ϕ;
					word64 x10_3137;
					word64 x10_3433;
					x10_3613 = ϕ(x10_3614, x10_3137, x10_3433);
					<unknown> ϕ;
					Eq_14 x1_3132;
					Eq_14 x1_3428;
					x1_3611 = ϕ(x1_1571, x1_3132, x1_3428);
					word32 x0_32_32_3604 = ϕ(x0_32_32_3605, x0_32_32_3608, x0_32_32_3448);
					<unknown> ϕ;
					word32 w4_3135;
					word32 w4_3431;
					w4_3600 = ϕ(w4_1587, w4_3135, w4_3431);
					<unknown> ϕ;
					word64 sysreg3_3_13_0_2_3130;
					word64 sysreg3_3_13_0_2_3426;
					sysreg3_3_13_0_2_3597 = ϕ(sysreg3_3_13_0_2_1568, sysreg3_3_13_0_2_3130, sysreg3_3_13_0_2_3426);
					<unknown> ϕ;
					Eq_2346 q0_3140;
					Eq_2346 q0_3436;
					q0_3595 = ϕ(q0_1692, q0_3140, q0_3436);
					<unknown> ϕ;
					Mem3533 = ϕ(Mem1498, Mem3114, Mem3380);
					x0_3609 = SEQ(x0_32_32_3604, 0x00);
					goto l000000000001E97C;
				}
				Eq_916 v68_1505;
				v68_1505.u0 = g_t71120.u0;
				ui32 w10_1506 = (word32) v68_1505;
				ptr64 x11_1507 = g_ptr71130;
				word32 w8_1508 = g_dw71118;
				Eq_14 x21_1513;
				x21_1513.u1 = (w10_1506 & 0x01) == 0x00 ? (char *) &g_t71120 + 1 : x11_1507;
				ptr64 x9_1514 = (word64) sp_1497 + 0x0068;
				*((word64) sp_1497 + 0x0068) = (Eq_2463) w8_1508;
				struct Eq_3528 * v69_1518 = (word64) sp_1497 + 0x0078;
				v69_1518->qw0000 = 0x00;
				v69_1518->qw0008 = 0x00;
				*((word64) sp_1497 + 112) = (Eq_2463) 0x00;
				Eq_14 x0_1522 = strlen(x21_1513);
				Eq_2463 sp_1523 = (Eq_2463) ((word32) x0_1522 + 16);
				Eq_2346 q0_1687;
				Eq_14 x1_1667;
				Eq_2463 sp_1530;
				if (x0_1522 < ~0x0F)
				{
					Eq_14 x20_1536 = x0_1522;
					word32 w20_1629 = (word32) x0_1522;
					void * x22_1631;
					void * x22_1624;
					Eq_2463 sp_1592;
					Eq_14 x20_1601;
					ui64 x23_1598;
					if (x0_1522 < 0x17)
					{
						x22_1631 = x9_1514 + 0x09;
						((word32) x0_1522 + 0x0080)->u1 = (byte) w20_1629 << 0x01;
						if (x0_1522 == 0x00)
							goto l000000000001E058;
					}
					else
					{
						ui64 x23_1540 = (word32) x0_1522 + 16 & ~0x0F;
						void * x0_1607 = _Znwm(x23_1540);
						x22_1624 = x0_1607;
						*((word64) sp_1592 + 0x0078) = (Eq_2463) x20_1601;
						*((word64) sp_1592 + 0x0080) = (Eq_2463) x0_1607;
						*((word64) sp_1592 + 112) = (Eq_2463) (x23_1598 | 0x01);
					}
					word32 w4_2308 = ϕ(w4_1587, w4_1611);
					word64 x3_2297 = ϕ(x3_1582, x3_1610);
					Eq_3047 x30_2264 = ϕ(x30_1565, x30_1604);
					struct Eq_3051 * x29_2253 = ϕ(x29_1562, x29_1603);
					Eq_14 x19_2242 = ϕ(x19_1561, x19_1602);
					ui64 x23_2224 = ϕ(x23_2222, x23_1598);
					struct Eq_3067 * x24_2202 = ϕ(x24_1500, x24_1597);
					Eq_3059 x25_2191 = ϕ(x25_1558, x25_1596);
					Eq_14 x26_2181 = ϕ(x26_1555, x26_1595);
					struct Eq_3067 * x27_2170 = ϕ(x27_1547, x27_1594);
					Eq_14 x28_2159 = ϕ(x28_1542, x28_1593);
					Eq_2346 q0_1695 = ϕ(q0_1692, q0_1616);
					Eq_2463 sp_1644 = ϕ(sp_1523, sp_1592);
					Eq_14 x20_1637 = ϕ(x20_1536, x20_1601);
					Eq_14 x21_1635 = ϕ(x21_1513, x21_1600);
					void * x22_1633 = ϕ(x22_1631, x22_1624);
					Eq_14 x1_1636 = x21_1635;
					Eq_14 x2_1638 = x20_1637;
					memcpy(x22_1633, x21_1635, x20_1637);
l000000000001E058:
					Eq_14 x21_3322 = ϕ(x21_1513, x21_1635);
					word32 w4_2307 = ϕ(w4_1587, w4_2308);
					word64 x3_2296 = ϕ(x3_1582, x3_2297);
					Eq_14 x2_2286 = ϕ(x2_1572, x2_1638);
					Eq_3047 x30_2263 = ϕ(x30_1565, x30_2264);
					struct Eq_3051 * x29_2252 = ϕ(x29_1562, x29_2253);
					Eq_14 x19_2241 = ϕ(x19_1561, x19_2242);
					ui64 x23_2223 = ϕ(x23_2222, x23_2224);
					struct Eq_3067 * x24_2201 = ϕ(x24_1500, x24_2202);
					Eq_3059 x25_2190 = ϕ(x25_1558, x25_2191);
					Eq_14 x26_2180 = ϕ(x26_1555, x26_2181);
					struct Eq_3067 * x27_2169 = ϕ(x27_1547, x27_2170);
					Eq_14 x28_2158 = ϕ(x28_1542, x28_2159);
					Eq_2346 q0_1694 = ϕ(q0_1692, q0_1695);
					Eq_14 x1_1672 = ϕ(x1_1571, x1_1636);
					Eq_2463 sp_1643 = ϕ(sp_1523, sp_1644);
					Eq_14 x20_1641 = ϕ(x20_1536, x20_1637);
					word32 x20_32_32_3327 = SLICE(x20_1641, word32, 32);
					void * x22_1640 = ϕ(x22_1631, x22_1633);
					*(x22_1640 + x20_1641) = (word64) 0x00;
					word64 x0_1645 = (word64) sp_1643 + 0x0068;
					ui32 w0_1646 = (word32) x0_1645;
					((LEVELS) x0_1645);
					word64 x20_4719;
					word64 x20_4723;
					if ((w0_1646 & 0x01) == 0x00)
					{
						word32 w20_1647 = 0x00;
						Eq_3538 v114_1648 = *((word64) sp_1643 + 112);
						ui32 w8_1649 = (word32) v114_1648;
						x20_4719 = SEQ(x20_32_32_3327, w20_1647);
						x20_4723 = SEQ(x20_32_32_3327, w20_1647);
						if ((w8_1649 & 0x01) == 0x00)
							goto l000000000001E154;
						goto l000000000001E0BC;
					}
					struct Eq_2626 ** x8_1651 = g_ptr70D68;
					struct Eq_3883 * v73_1652 = (word64) sp_1643 + 88;
					v73_1652->qw0000 = 0x00;
					v73_1652->qw0008 = 0x00;
					*((word64) sp_1643 + 80) = (Eq_2463) 0x00;
					struct Eq_2626 * x20_1656 = (struct Eq_2626 *) *x8_1651;
					Eq_14 x0_1658 = strlen(x20_1656);
					Eq_2463 sp_1659 = (Eq_2463) ((word32) x0_1658 + 16);
					if (x0_1658 < ~0x0F)
					{
						Eq_14 x21_3149 = x0_1658;
						word32 w21_3193 = (word32) x0_1658;
						void * x22_3195;
						void * x22_3187;
						Eq_2463 sp_3155;
						Eq_14 x21_3163;
						if (x0_1658 < 0x17)
						{
							x22_3195 = (word32) x0_1658 + 96 | 0x01;
							((word32) x0_1658 + 96)->u1 = (byte) w21_3193 << 0x01;
							if (x0_1658 == 0x00)
								goto l000000000001E134;
						}
						else
						{
							ui64 x23_3153 = (word32) x0_1658 + 16 & ~0x0F;
							void * x0_3170 = _Znwm(x23_3153);
							x22_3187 = x0_3170;
							*((word64) sp_3155 + 88) = (Eq_2463) x21_3163;
							*((word64) sp_3155 + 96) = (Eq_2463) x0_3170;
							ui64 x23_3161;
							*((word64) sp_3155 + 80) = (Eq_2463) (x23_3161 | 0x01);
						}
						Eq_2463 sp_3208 = ϕ(sp_1659, sp_3155);
						Eq_14 x21_3201 = ϕ(x21_3149, x21_3163);
						struct Eq_2626 * x20_3199 = ϕ(x20_1656, x20_3164);
						void * x22_3197 = ϕ(x22_3195, x22_3187);
						memcpy(x22_3197, x20_3199, x21_3201);
l000000000001E134:
						size_t sp_3207 = ϕ(sp_1659, sp_3208);
						Eq_14 x21_3205 = ϕ(x21_3149, x21_3201);
						void * x22_3204 = ϕ(x22_3195, x22_3197);
						*(x22_3204 + x21_3205) = (word64) 0x00;
						word64 x0_3209 = (word64) sp_3207 + 80;
						word64 x0_3252 = _ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(x0_3209);
						word32 w0_3270 = (word32) x0_3252;
						word32 x20_32_32_3326 = SLICE(x20_3246, word32, 32);
						Eq_3893 v78_3268 = *((word64) sp_3237 + 80);
						ui32 w8_3269 = (word32) v78_3268;
						word32 w20_3271 = w0_3270;
						word64 x20_4717;
						word64 x20_4722;
						word32 w4_3256;
						word64 x3_3255;
						Eq_14 x2_3254;
						Eq_14 x1_3253;
						Eq_14 x19_3247;
						Eq_3047 x30_3249;
						struct Eq_3051 * x29_3248;
						Eq_14 x21_3245;
						void * x22_3244;
						ui64 x23_3243;
						struct Eq_3067 * x24_3242;
						Eq_3059 x25_3241;
						Eq_14 x26_3240;
						struct Eq_3067 * x27_3239;
						Eq_14 x28_3238;
						Eq_2463 sp_3277;
						word32 w4_3410;
						word64 x3_3407;
						Eq_14 x2_3404;
						Eq_14 x1_3281;
						Eq_3047 x30_3336;
						struct Eq_3051 * x29_3333;
						Eq_14 x19_3394;
						word64 x20_3330;
						Eq_14 x21_3323;
						void * x22_3319;
						ui64 x23_3316;
						Eq_3059 x25_3310;
						Eq_14 x26_3307;
						struct Eq_3067 * x27_3304;
						Eq_14 x28_3301;
						struct Eq_3067 * x24_3313;
						Eq_2346 q0_3261;
						word64 x20_4718;
						if ((w8_3269 & 0x01) != 0x00)
						{
							Eq_3538 v79_3275 = *((word64) sp_3237 + 112);
							ui32 w8_3276 = (word32) v79_3275;
							x20_4717 = SEQ(x20_32_32_3326, w20_3271);
							word64 x20_4721 = SEQ(x20_32_32_3326, w20_3271);
							if ((w8_3276 & 0x01) != 0x00)
							{
l000000000001E154:
								word64 x20_4724 = ϕ(x20_4721, x20_4722, x20_4723);
								word32 w4_3409 = ϕ(w4_3256, w4_3256, w4_2307);
								word64 x3_3406 = ϕ(x3_3255, x3_3255, x3_2296);
								Eq_14 x2_3401 = ϕ(x2_3254, x2_3254, x2_2286);
								Eq_14 x1_3399 = ϕ(x1_3253, x1_3253, x1_1672);
								Eq_14 x19_3393 = ϕ(x19_3247, x19_3247, x19_2241);
								Eq_3047 x30_3335 = ϕ(x30_3249, x30_3249, x30_2263);
								struct Eq_3051 * x29_3332 = ϕ(x29_3248, x29_3248, x29_2252);
								Eq_14 x21_3321 = ϕ(x21_3245, x21_3245, x21_3322);
								void * x22_3318 = ϕ(x22_3244, x22_3244, x22_1640);
								ui64 x23_3315 = ϕ(x23_3243, x23_3243, x23_2223);
								struct Eq_3067 * x24_3312 = ϕ(x24_3242, x24_3242, x24_2201);
								Eq_3059 x25_3309 = ϕ(x25_3241, x25_3241, x25_2190);
								Eq_14 x26_3306 = ϕ(x26_3240, x26_3240, x26_2180);
								struct Eq_3067 * x27_3303 = ϕ(x27_3239, x27_3239, x27_2169);
								Eq_14 x28_3300 = ϕ(x28_3238, x28_3238, x28_2158);
								Eq_2463 sp_3294 = ϕ(sp_3237, sp_3237, sp_1643);
								<unknown> ϕ;
								Mem3286 = ϕ(Mem3206, Mem3206, Mem1642);
								ui32 w20_3283 = (word32) x20_4724;
								word64 x20_3328 = x20_4724;
								if ((w20_3283 & 0x01) == 0x00)
									goto l000000000001E1A4;
l000000000001E158:
								size_t sp_3293 = ϕ(sp_3294, sp_3277);
								<unknown> ϕ;
								Mem3285 = ϕ(Mem3286, Mem3278);
								struct Eq_2626 ** x8_3287 = g_ptr70D68;
								struct Eq_2626 * x1_3291 = (struct Eq_2626 *) *x8_3287;
								word64 x0_3295 = (word64) sp_3293 + 480;
								_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_(x0_3295, x1_3291, 0x00071000, &g_dw71118, 0x00052000, 337390, 0x00);
								word32 x2_32_32_3402 = SLICE(x2_3357, word32, 32);
								Eq_14 x1_3373;
								x1_3373.u0 = 329533;
								fn000000000001BB30();
								LogCapture::~LogCapture();
								Eq_14 x2_3403 = SEQ(x2_32_32_3402, 0x0D);
l000000000001E1A4:
								word32 w4_3408 = ϕ(w4_3409, w4_3359, w4_3410);
								word64 x3_3405 = ϕ(x3_3406, x3_3358, x3_3407);
								Eq_14 x2_3400 = ϕ(x2_3401, x2_3403, x2_3404);
								Eq_14 x1_3398 = ϕ(x1_3399, x1_3373, x1_3281);
								Eq_3047 x30_3396 = ϕ(x30_3335, x30_3352, x30_3336);
								struct Eq_3051 * x29_3395 = ϕ(x29_3332, x29_3351, x29_3333);
								Eq_14 x19_3392 = ϕ(x19_3393, x19_3350, x19_3394);
								word64 x20_3391 = ϕ(x20_3328, x20_3349, x20_3330);
								Eq_14 x21_3390 = ϕ(x21_3321, x21_3348, x21_3323);
								void * x22_3389 = ϕ(x22_3318, x22_3347, x22_3319);
								ui64 x23_3388 = ϕ(x23_3315, x23_3346, x23_3316);
								Eq_3059 x25_3387 = ϕ(x25_3309, x25_3344, x25_3310);
								Eq_14 x26_3386 = ϕ(x26_3306, x26_3343, x26_3307);
								struct Eq_3067 * x27_3385 = ϕ(x27_3303, x27_3342, x27_3304);
								Eq_14 x28_3384 = ϕ(x28_3300, x28_3341, x28_3301);
								<unknown> ϕ;
								Mem3380 = ϕ(Mem3286, Mem3285, Mem3278);
								struct Eq_3067 * x24_3379 = ϕ(x24_3312, x24_3345, x24_3313);
								struct Eq_4490 * x8_3381 = x24_3379->ptr0000;
								<anonymous> * x8_3383 = x8_3381->ptr0038;
								x8_3383();
								ui32 w0_3443 = (word32) x0_3427;
								x0_32_32_3448 = SLICE(x0_3427, word32, 32);
								if ((w0_3443 & 0x01) != 0x00)
								{
									Eq_4555 x0_3449 = SEQ(x0_32_32_3448, 0x10);
									struct Eq_4560 * x0_3465 = _Znwm(x0_3449, 0x00);
									x0_3465->ptr0000 = &g_t6F980;
									word64 x24_3455;
									x0_3465->qw0008 = x24_3455;
									word64 x20_3459;
									word64 sp_3450;
									rs2_set_devices_changed_callback_cpp(x20_3459, x0_3465, sp_3450 + 0x01E0);
									fn000000000001ADF0();
									word32 x0_32_32_3602 = SLICE(x24_3494 + 0x08, word32, 32);
									Eq_14 x1_3525;
									x1_3525.u0 = 337390;
									Eq_14 x2_3526;
									x2_3526.u0 = 0x00;
									fn000000000001B8B0();
									word64 x0_3603 = SEQ(x0_32_32_3602, 0x01);
l000000000001E97C:
									word64 x5_3709 = ϕ(x5_3514, x5_3710);
									word64 x3_3707 = ϕ(x3_3507, x3_3708);
									Eq_14 x2_3705 = ϕ(x2_3526, x2_3706);
									word64 x17_3702 = ϕ(x17_3528, x17_3703);
									word64 x16_3699 = ϕ(x16_3527, x16_3700);
									word64 x13_3678 = ϕ(x13_3515, x13_3679);
									Eq_2355 x12_3657 = ϕ(x12_3516, x12_3658);
									Eq_2354 x11_3638 = ϕ(x11_3509, x11_3639);
									word64 x10_3612 = ϕ(x10_3510, x10_3613);
									Eq_14 x1_3610 = ϕ(x1_3525, x1_3611);
									word64 x0_3601 = ϕ(x0_3603, x0_3609);
									word32 w4_3599 = ϕ(w4_3508, w4_3600);
									word64 sysreg3_3_13_0_2_3596 = ϕ(sysreg3_3_13_0_2_3503, sysreg3_3_13_0_2_3597);
									Eq_2346 q0_3594 = ϕ(q0_3513, q0_3595);
									<unknown> ϕ;
									Mem3532 = ϕ(Mem3486, Mem3533);
									word64 x8_3535 = x8_36->qw0028;
									word64 x9_3536 = x8_38;
									word64 x31_3537 = x8_3535 - x8_38;
									Eq_4622 NZCV_3538;
									NZCV_3538.u0 = cond(x31_3537);
									bool Z_3539 = SLICE(NZCV_3538, bool, 30);
									bool C_3592 = SLICE(NZCV_3538, bool, 29);
									bool N_3593 = SLICE(NZCV_3538, bool, 31);
									bool V_3598 = SLICE(NZCV_3538, bool, 28);
									if (x31_3537 != 0x00)
										__stack_chk_fail();
									else
									{
										word64 x29_3542 = x29;
										word64 x30_3543 = x30;
										word64 x20_3545 = x20;
										word64 x19_3546 = x19;
										word64 x22_3548 = x22;
										word64 x21_3549 = x21;
										word64 x24_3551 = x24;
										word64 x23_3552 = x23;
										word64 x26_3554 = x26;
										word64 x25_3555 = x25;
										word64 x28_3557 = x28;
										word64 x27_3558 = x27;
										ptr64 sp_3559 = fp;
										return;
									}
								}
								goto l000000000001E978;
							}
						}
						else
						{
							void * x0_3272 = (void *) *((word64) sp_3237 + 96);
							((real64) q0_3261, x0_3272, x1_3253);
							Eq_3538 v83_3273 = *((word64) sp_3237 + 112);
							ui32 w8_3274 = (word32) v83_3273;
							x20_4722 = SEQ(x20_32_32_3326, w20_3271);
							if ((w8_3274 & 0x01) == 0x00)
								goto l000000000001E154;
							x20_4718 = SEQ(x20_32_32_3326, w20_3271);
						}
l000000000001E0BC:
						word64 x20_4720 = ϕ(x20_4717, x20_4718, x20_4719);
						<unknown> ϕ;
						w4_3410 = ϕ(w4_3256, w4_3256, w4_2307);
						<unknown> ϕ;
						x3_3407 = ϕ(x3_3255, x3_3255, x3_2296);
						<unknown> ϕ;
						x2_3404 = ϕ(x2_3254, x2_3254, x2_2286);
						<unknown> ϕ;
						x19_3394 = ϕ(x19_3247, x19_3247, x19_2241);
						<unknown> ϕ;
						x30_3336 = ϕ(x30_3249, x30_3249, x30_2263);
						<unknown> ϕ;
						x29_3333 = ϕ(x29_3248, x29_3248, x29_2252);
						<unknown> ϕ;
						x21_3323 = ϕ(x21_3245, x21_3245, x21_3322);
						<unknown> ϕ;
						x22_3319 = ϕ(x22_3244, x22_3244, x22_1640);
						<unknown> ϕ;
						x23_3316 = ϕ(x23_3243, x23_3243, x23_2223);
						<unknown> ϕ;
						x24_3313 = ϕ(x24_3242, x24_3242, x24_2201);
						<unknown> ϕ;
						x25_3310 = ϕ(x25_3241, x25_3241, x25_2190);
						<unknown> ϕ;
						x26_3307 = ϕ(x26_3240, x26_3240, x26_2180);
						<unknown> ϕ;
						x27_3304 = ϕ(x27_3239, x27_3239, x27_2169);
						<unknown> ϕ;
						x28_3301 = ϕ(x28_3238, x28_3238, x28_2158);
						ui32 w20_3282 = (word32) x20_4720;
						<unknown> ϕ;
						x1_3281 = ϕ(x1_3253, x1_3253, x1_1672);
						Eq_2346 q0_3280 = ϕ(q0_3261, q0_3261, q0_1694);
						<unknown> ϕ;
						Mem3278 = ϕ(Mem3206, Mem3206, Mem1642);
						<unknown> ϕ;
						sp_3277 = ϕ(sp_3237, sp_3237, sp_1643);
						void * x0_3279 = (void *) *((word64) sp_3277 + 0x0080);
						((real64) q0_3280, x0_3279, x1_3281);
						x20_3330 = x20_4720;
						if ((w20_3282 & 0x01) == 0x00)
							goto l000000000001E1A4;
						goto l000000000001E158;
					}
l000000000001E24C:
					Eq_2346 q0_1686 = ϕ(q0_1687, q0_1694);
					<unknown> ϕ;
					Mem1675 = ϕ(Mem1676, Mem1655);
					Eq_14 x1_1666 = ϕ(x1_1667, x1_1672);
					size_t sp_1662 = ϕ(sp_1530, sp_1659);
					ptr64 x0_1663 = (word64) sp_1662 + 80;
					fn000000000001B2D0();
					word32 w21_1716 = (word32) x1_1666;
					ptr64 x20_1674 = x0_1663;
					byte v47_1681 = (byte) *((word64) sp_1662 + 0x0118);
					ui32 w8_1682 = (word32) v47_1681;
					if ((w8_1682 & 0x01) != 0x00)
					{
						int64 x0_1685 = (int64) *((word64) sp_1662 + 296);
						((real64) q0_1686, x0_1685, x1_1666);
						byte v49_1696 = (byte) *((word64) sp_1662 + 304);
						ui32 w8_1697 = (word32) v49_1696;
						if ((w8_1697 & 0x01) != 0x00)
							goto l000000000001E654;
					}
					else
					{
						byte v131_1683 = (byte) *((word64) sp_1662 + 304);
						ui32 w8_1684 = (word32) v131_1683;
						if ((w8_1684 & 0x01) == 0x00)
							goto l000000000001E654;
					}
					int64 x0_1700 = (int64) *((word64) sp_1662 + 320);
					((real64) q0_1686, x0_1700, x1_1666);
l000000000001E654:
					fn000000000001B760();
					word64 x8_1710 = g_qw70DC0;
					word64 x22_1711 = (word64) *((word64) sp_1662 + 400);
					*((word64) sp_1662 + 384) = (Eq_2463) (x8_1710 + 0x10);
					if (x22_1711 != 0x00)
						;
					word64 x22_1714 = (word64) *((word64) sp_1662 + 472);
					if (x22_1714 != 0x00)
						;
					ptr64 x20_2139;
					ptr64 x20_2146;
					Eq_14 x1_2123;
					if (w21_1716 == 0x02)
					{
						word32 w21_2140;
						do
						{
							<unknown> ϕ;
							Mem1739 = ϕ(Mem1713, Mem2073);
							ptr64 x20_1720 = ϕ(x20_1674, x20_2139);
							struct Eq_3257 * x0_1755 = __cxa_begin_catch(x20_1720);
							word64 x8_1771 = sp_1740->qw0038;
							word32 x8_32_32_1790 = SLICE(x8_1771, word32, 32);
							fn000000000001B8B0();
							fn000000000001B1B0();
							fn000000000001B1B0();
							byte v64_1805 = x0_1755->b0028;
							ui32 w8_1806 = (word32) v64_1805;
							word64 x9_1808 = x0_1755->qw0030;
							uint64 x8_1815 = SEQ(x8_32_32_1790, w8_1806);
							word64 x2_1819 = (w8_1806 & 0x01) == 0x00 ? x8_1815 >> 1 : x9_1808;
							word32 x2_32_32_1832 = SLICE(x2_1819, word32, 32);
							fn000000000001B1B0();
							fn000000000001B1B0();
							struct Eq_3297 * x8_1829 = x0_1755->ptr0000;
							<anonymous> * x8_1831 = x8_1829->ptr0010;
							Eq_3304 x2_1833 = SEQ(x2_32_32_1832, 0x02);
							x8_1831();
							char * x0_1849;
							strlen(x0_1849);
							char * x1_1869 = x0_1849;
							fn000000000001B1B0();
							Eq_1004 v66_1876;
							v66_1876.u0 = g_t711A0.u0;
							ui32 w9_1877 = (word32) v66_1876;
							word64 x11_1878 = g_qw711B0;
							word32 w10_1879 = g_dw71198;
							char * x22_1884 = (w9_1877 & 0x01) == 0x00 ? 0x000711A1 : x11_1878;
							struct Eq_3328 * sp_1834;
							sp_1834->dw00A0 = w10_1879;
							sp_1834->qw00B0 = 0x00;
							sp_1834->qw00B8 = 0x00;
							sp_1834->qw00A8 = 0x00;
							Eq_14 x0_1891 = strlen(x22_1884);
							Eq_3350 sp_1892 = (Eq_3350) ((word32) x0_1891 + 16);
							if (x0_1891 < ~0x0F)
							{
								Eq_14 x21_1898 = x0_1891;
								word32 w21_1941 = (word32) x0_1891;
								void * x23_1943;
								void * x23_1936;
								Eq_3350 sp_1904;
								Eq_14 x21_1912;
								if (x0_1891 < 0x17)
								{
									x23_1943 = (void *) ((char *) &sp_1834->qw00A8 + 1);
									((word32) x0_1891 + 0x00B8)->u1 = (byte) w21_1941 << 0x01;
									if (x0_1891 == 0x00)
										goto l000000000001E850;
								}
								else
								{
									ui64 x24_1902 = (word32) x0_1891 + 16 & ~0x0F;
									void * x0_1919 = _Znwm(x24_1902);
									x23_1936 = x0_1919;
									sp_1904->t00B0.u1 = (size_t) x21_1912;
									sp_1904->ptr00B8 = x0_1919;
									ui64 x24_1909;
									sp_1904->t00A8.u0 = (ui64) (x24_1909 | 0x01);
								}
								word128 q0_2946 = ϕ(q0_1858, q0_1928);
								Eq_3350 sp_1956 = ϕ(sp_1892, sp_1904);
								Eq_14 x21_1949 = ϕ(x21_1898, x21_1912);
								char * x22_1947 = ϕ(x22_1884, x22_1911);
								void * x23_1945 = ϕ(x23_1943, x23_1936);
								char * x1_1948 = x22_1947;
								memcpy(x23_1945, x22_1947, x21_1949);
l000000000001E850:
								word128 q0_2945 = ϕ(q0_1858, q0_2946);
								char * x1_2013 = ϕ(x1_1869, x1_1948);
								Eq_3350 sp_1955 = ϕ(sp_1892, sp_1956);
								Eq_14 x21_1953 = ϕ(x21_1898, x21_1949);
								word32 x21_32_32_2989 = SLICE(x21_1953, word32, 32);
								void * x23_1952 = ϕ(x23_1943, x23_1945);
								*(x23_1952 + x21_1953) = (word64) 0x00;
								word64 x0_1957 = &sp_1955->qw0098 + 1;
								ui32 w0_1958 = (word32) x0_1957;
								((LEVELS) x0_1957);
								word64 x21_4711;
								word64 x21_4715;
								if ((w0_1958 & 0x01) == 0x00)
								{
									word32 w21_1959 = 0x00;
									Eq_3380 v116_1960;
									v116_1960.u1 = sp_1955->t00A8.u1;
									ui32 w8_1961 = (word32) v116_1960;
									x21_4711 = SEQ(x21_32_32_2989, w21_1959);
									x21_4715 = SEQ(x21_32_32_2989, w21_1959);
									if ((w8_1961 & 0x01) == 0x00)
										goto l000000000001E914;
									goto l000000000001E8B4;
								}
								struct Eq_2626 ** x8_1963 = g_ptr70D68;
								struct Eq_3738 * v71_1964 = (struct Eq_3738 *) ((char *) &sp_1955->t0088 + 8);
								v71_1964->qw0000 = 0x00;
								v71_1964->qw0008 = 0x00;
								sp_1955->t0088.u1 = 0x00;
								struct Eq_2626 * x21_1968 = (struct Eq_2626 *) *x8_1963;
								Eq_14 x0_1970 = strlen(x21_1968);
								Eq_3762 sp_1971 = (Eq_3762) ((word32) x0_1970 + 16);
								if (x0_1970 < ~0x0F)
								{
									Eq_14 x22_2811 = x0_1970;
									word32 w22_2857 = (word32) x0_1970;
									void * x23_2859;
									void * x23_2851;
									Eq_3762 sp_2819;
									Eq_14 x22_2826;
									if (x0_1970 < 0x17)
									{
										x23_2859 = (word32) x0_1970 + 0x0098 | 0x01;
										((word32) x0_1970 + 0x0098)->u1 = (byte) w22_2857 << 0x01;
										if (x0_1970 == 0x00)
											goto l000000000001E8F4;
									}
									else
									{
										ui64 x24_2815 = (word32) x0_1970 + 16 & ~0x0F;
										void * x0_2834 = _Znwm(x24_2815);
										x23_2851 = x0_2834;
										sp_2819->t0090.u1 = (size_t) x22_2826;
										sp_2819->ptr0098 = x0_2834;
										ui64 x24_2824;
										sp_2819->qw0088 = x24_2824 | 0x01;
									}
									Eq_3762 sp_2872 = ϕ(sp_1971, sp_2819);
									Eq_14 x22_2865 = ϕ(x22_2811, x22_2826);
									struct Eq_2626 * x21_2863 = ϕ(x21_1968, x21_2827);
									void * x23_2861 = ϕ(x23_2859, x23_2851);
									memcpy(x23_2861, x21_2863, x22_2865);
l000000000001E8F4:
									Eq_3762 sp_2871 = ϕ(sp_1971, sp_2872);
									Eq_14 x22_2869 = ϕ(x22_2811, x22_2865);
									void * x23_2868 = ϕ(x23_2859, x23_2861);
									*(x23_2868 + x22_2869) = (word64) 0x00;
									word64 x0_2873 = &sp_2871->qw0088;
									word64 x0_2916 = _ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(x0_2873);
									word32 w0_2934 = (word32) x0_2916;
									word32 x21_32_32_2988 = SLICE(x21_2909, word32, 32);
									Eq_3748 v74_2932;
									Eq_3350 sp_2901;
									v74_2932.u0 = sp_2901->t0088.u0;
									ui32 w8_2933 = (word32) v74_2932;
									word32 w21_2935 = w0_2934;
									word64 x21_4709;
									word64 x21_4714;
									Eq_3350 sp_2941;
									word128 q0_2925;
									char * x1_2917;
									word64 x21_4710;
									if ((w8_2933 & 0x01) != 0x00)
									{
										Eq_3380 v75_2939;
										v75_2939.u1 = sp_2901->t00A8.u1;
										ui32 w8_2940 = (word32) v75_2939;
										x21_4709 = SEQ(x21_32_32_2988, w21_2935);
										word64 x21_4713 = SEQ(x21_32_32_2988, w21_2935);
										if ((w8_2940 & 0x01) != 0x00)
										{
l000000000001E914:
											word64 x21_4716 = ϕ(x21_4713, x21_4714, x21_4715);
											Eq_3350 sp_2960 = ϕ(sp_2901, sp_2901, sp_1955);
											<unknown> ϕ;
											Mem2952 = ϕ(Mem2870, Mem2870, Mem1954);
											ui32 w21_2949 = (word32) x21_4716;
											if ((w21_2949 & 0x01) == 0x00)
												goto l000000000001E974;
l000000000001E918:
											Eq_3350 sp_2959 = ϕ(sp_2960, sp_2941);
											<unknown> ϕ;
											Mem2951 = ϕ(Mem2952, Mem2942);
											struct Eq_2626 ** x8_2953 = g_ptr70D68;
											struct Eq_2626 * x1_2954 = (struct Eq_2626 *) *x8_2953;
											word64 x0_2961 = (char *) &sp_2959->ptr00B8 + 296;
											_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_(x0_2961, x1_2954, 0x00071000, &g_dw71198, 0x00052000, 337390, 0x00);
											fn000000000001BB30();
											goto l000000000001E96C;
										}
									}
									else
									{
										int64 x0_2936 = sp_2901->qw0098;
										((real64) q0_2925, x0_2936, x1_2917);
										Eq_3380 v91_2937;
										v91_2937.u1 = sp_2901->t00A8.u1;
										ui32 w8_2938 = (word32) v91_2937;
										x21_4714 = SEQ(x21_32_32_2988, w21_2935);
										if ((w8_2938 & 0x01) == 0x00)
											goto l000000000001E914;
										x21_4710 = SEQ(x21_32_32_2988, w21_2935);
									}
l000000000001E8B4:
									word64 x21_4712 = ϕ(x21_4709, x21_4710, x21_4711);
									ui32 w21_2948 = (word32) x21_4712;
									char * x1_2947 = ϕ(x1_2917, x1_2917, x1_2013);
									word128 q0_2944 = ϕ(q0_2925, q0_2925, q0_2945);
									<unknown> ϕ;
									Mem2942 = ϕ(Mem2870, Mem2870, Mem1954);
									<unknown> ϕ;
									sp_2941 = ϕ(sp_2901, sp_2901, sp_1955);
									void * x0_2943 = sp_2941->ptr00B8;
									((real64) q0_2944, x0_2943, x1_2947);
									if ((w21_2948 & 0x01) == 0x00)
										goto l000000000001E974;
									goto l000000000001E918;
								}
							}
							else
								fn000000000001B2D0();
							<unknown> ϕ;
							Mem2022 = ϕ(Mem1967, Mem1890);
							fn000000000001B2D0();
							LogCapture::~LogCapture();
							__cxa_end_catch();
l000000000001E2CC:
							<unknown> ϕ;
							Mem2073 = ϕ(Mem2022, Mem2311, Mem2535);
							ptr64 x20_2054 = ϕ(x20_2032, x20_2146, x20_2545);
							_Unwind_Resume(x20_2054);
							int64 x0_2105 = sp_2074->qw0080;
							word128 q0_2098;
							void * x1_2090;
							((real64) q0_2098, x0_2105, x1_2090);
							ptr64 x0_2122 = _Unwind_Resume(x20_2083);
							w21_2140 = (word32) x1_2123;
							x20_2139 = x0_2122;
						} while (w21_2140 == 0x02);
					}
					Eq_14 x21_4708 = ϕ(x1_1666, x1_2123);
					<unknown> ϕ;
					Mem2311 = ϕ(Mem1713, Mem2073);
					<unknown> ϕ;
					x20_2146 = ϕ(x20_1674, x20_2139);
					word32 w21_2143 = (word32) x21_4708;
					if (w21_2143 == 0x01)
					{
						struct Eq_5823 ** x0_2327 = __cxa_begin_catch(x20_2146);
						struct Eq_5823 * x8_2343 = (struct Eq_5823 *) *x0_2327;
						<anonymous> * x8_2344 = x8_2343->ptr0010;
						x8_2344();
						char * x0_2360;
						strlen(x0_2360);
						char * x1_2382 = x0_2360;
						fn000000000001B8B0();
						Eq_1004 v118_2389;
						v118_2389.u0 = g_t711A0.u0;
						ui32 w9_2390 = (word32) v118_2389;
						word64 x11_2391 = g_qw711B0;
						word32 w10_2392 = g_dw71198;
						char * x22_2397 = (w9_2390 & 0x01) == 0x00 ? 0x000711A1 : x11_2391;
						struct Eq_5850 * sp_2345;
						sp_2345->dw00D8 = w10_2392;
						sp_2345->qw00E8 = 0x00;
						sp_2345->qw00F0 = 0x00;
						sp_2345->qw00E0 = 0x00;
						Eq_14 x0_2404 = strlen(x22_2397);
						Eq_5872 sp_2405 = (Eq_5872) ((word32) x0_2404 + 16);
						if (x0_2404 >= ~0x0F)
						{
							fn000000000001B2D0();
							goto l000000000001E500;
						}
						Eq_14 x21_2411 = x0_2404;
						word32 w21_2454 = (word32) x0_2404;
						void * x23_2456;
						void * x23_2449;
						Eq_5872 sp_2417;
						Eq_14 x21_2425;
						if (x0_2404 < 0x17)
						{
							x23_2456 = (void *) ((char *) &sp_2345->qw00E0 + 1);
							((word32) x0_2404 + 0x00F0)->u1 = (byte) w21_2454 << 0x01;
							if (x0_2404 == 0x00)
								goto l000000000001E3C4;
						}
						else
						{
							ui64 x24_2415 = (word32) x0_2404 + 16 & ~0x0F;
							void * x0_2432 = _Znwm(x24_2415);
							x23_2449 = x0_2432;
							sp_2417->t00E8.u1 = (size_t) x21_2425;
							sp_2417->ptr00F0 = x0_2432;
							ui64 x24_2422;
							sp_2417->t00E0.u0 = (ui64) (x24_2422 | 0x01);
						}
						word128 q0_2702 = ϕ(q0_2369, q0_2441);
						Eq_5872 sp_2469 = ϕ(sp_2405, sp_2417);
						Eq_14 x21_2462 = ϕ(x21_2411, x21_2425);
						char * x22_2460 = ϕ(x22_2397, x22_2424);
						void * x23_2458 = ϕ(x23_2456, x23_2449);
						char * x1_2461 = x22_2460;
						memcpy(x23_2458, x22_2460, x21_2462);
l000000000001E3C4:
						word128 q0_2701 = ϕ(q0_2369, q0_2702);
						char * x1_2526 = ϕ(x1_2382, x1_2461);
						Eq_5872 sp_2468 = ϕ(sp_2405, sp_2469);
						Eq_14 x21_2466 = ϕ(x21_2411, x21_2462);
						word32 x21_32_32_2745 = SLICE(x21_2466, word32, 32);
						void * x23_2465 = ϕ(x23_2456, x23_2458);
						*(x23_2465 + x21_2466) = (word64) 0x00;
						word64 x0_2470 = &sp_2468->qw00D0 + 1;
						ui32 w0_2471 = (word32) x0_2470;
						((LEVELS) x0_2470);
						word64 x21_4737;
						word64 x21_4741;
						if ((w0_2471 & 0x01) == 0x00)
						{
							word32 w21_2472 = 0x00;
							Eq_5902 v128_2473;
							v128_2473.u1 = sp_2468->t00E0.u1;
							ui32 w8_2474 = (word32) v128_2473;
							x21_4737 = SEQ(x21_32_32_2745, w21_2472);
							x21_4741 = SEQ(x21_32_32_2745, w21_2472);
							if ((w8_2474 & 0x01) == 0x00)
								goto l000000000001E488;
							goto l000000000001E428;
						}
						struct Eq_2626 ** x8_2476 = g_ptr70D68;
						struct Eq_5985 * v120_2477 = (struct Eq_5985 *) ((char *) &sp_2468->t00C0 + 8);
						v120_2477->qw0000 = 0x00;
						v120_2477->qw0008 = 0x00;
						sp_2468->t00C0.u1 = 0x00;
						struct Eq_2626 * x21_2481 = (struct Eq_2626 *) *x8_2476;
						Eq_14 x0_2483 = strlen(x21_2481);
						Eq_6009 sp_2484 = (Eq_6009) ((word32) x0_2483 + 16);
						if (x0_2483 < ~0x0F)
						{
							Eq_14 x22_2567 = x0_2483;
							word32 w22_2613 = (word32) x0_2483;
							void * x23_2615;
							void * x23_2607;
							Eq_6009 sp_2575;
							Eq_14 x22_2582;
							if (x0_2483 < 0x17)
							{
								x23_2615 = (word32) x0_2483 + 0x00D0 | 0x01;
								((word32) x0_2483 + 0x00D0)->u1 = (byte) w22_2613 << 0x01;
								if (x0_2483 == 0x00)
									goto l000000000001E468;
							}
							else
							{
								ui64 x24_2571 = (word32) x0_2483 + 16 & ~0x0F;
								void * x0_2590 = _Znwm(x24_2571);
								x23_2607 = x0_2590;
								sp_2575->t00C8.u1 = (size_t) x22_2582;
								sp_2575->ptr00D0 = x0_2590;
								ui64 x24_2580;
								sp_2575->qw00C0 = x24_2580 | 0x01;
							}
							Eq_6009 sp_2628 = ϕ(sp_2484, sp_2575);
							Eq_14 x22_2621 = ϕ(x22_2567, x22_2582);
							struct Eq_2626 * x21_2619 = ϕ(x21_2481, x21_2583);
							void * x23_2617 = ϕ(x23_2615, x23_2607);
							memcpy(x23_2617, x21_2619, x22_2621);
l000000000001E468:
							Eq_6009 sp_2627 = ϕ(sp_2484, sp_2628);
							Eq_14 x22_2625 = ϕ(x22_2567, x22_2621);
							void * x23_2624 = ϕ(x23_2615, x23_2617);
							*(x23_2624 + x22_2625) = (word64) 0x00;
							word64 x0_2629 = &sp_2627->qw00C0;
							word64 x0_2672 = _ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(x0_2629);
							word32 w0_2690 = (word32) x0_2672;
							word32 x21_32_32_2744 = SLICE(x21_2665, word32, 32);
							Eq_5995 v123_2688;
							Eq_5872 sp_2657;
							v123_2688.u0 = sp_2657->t00C0.u0;
							ui32 w8_2689 = (word32) v123_2688;
							word32 w21_2691 = w0_2690;
							word64 x21_4735;
							word64 x21_4740;
							Eq_5872 sp_2697;
							word128 q0_2681;
							char * x1_2673;
							word64 x21_4736;
							if ((w8_2689 & 0x01) != 0x00)
							{
								Eq_5902 v124_2695;
								v124_2695.u1 = sp_2657->t00E0.u1;
								ui32 w8_2696 = (word32) v124_2695;
								x21_4735 = SEQ(x21_32_32_2744, w21_2691);
								word64 x21_4739 = SEQ(x21_32_32_2744, w21_2691);
								if ((w8_2696 & 0x01) != 0x00)
								{
l000000000001E488:
									word64 x21_4742 = ϕ(x21_4739, x21_4740, x21_4741);
									Eq_5872 sp_2716 = ϕ(sp_2657, sp_2657, sp_2468);
									<unknown> ϕ;
									Mem2708 = ϕ(Mem2626, Mem2626, Mem2467);
									ui32 w21_2705 = (word32) x21_4742;
									if ((w21_2705 & 0x01) == 0x00)
										goto l000000000001E974;
l000000000001E48C:
									Eq_5872 sp_2715 = ϕ(sp_2716, sp_2697);
									<unknown> ϕ;
									Mem2707 = ϕ(Mem2708, Mem2698);
									struct Eq_2626 ** x8_2709 = g_ptr70D68;
									struct Eq_2626 * x1_2710 = (struct Eq_2626 *) *x8_2709;
									word64 x0_2717 = (char *) &sp_2715->ptr00F0 + 0x00F0;
									_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_(x0_2717, x1_2710, 0x00071000, &g_dw71198, 0x00052000, 337390, 0x00);
									fn000000000001BB30();
l000000000001E96C:
									<unknown> ϕ;
									Mem3115 = ϕ(Mem2951, Mem2707);
									LogCapture::~LogCapture();
l000000000001E974:
									<unknown> ϕ;
									Mem3114 = ϕ(Mem2952, Mem2942, Mem2708, Mem3115, Mem2698);
									word64 x0_3131 = __cxa_end_catch();
									x0_32_32_3608 = SLICE(x0_3131, word32, 32);
									goto l000000000001E978;
								}
							}
							else
							{
								int64 x0_2692 = sp_2657->qw00D0;
								((real64) q0_2681, x0_2692, x1_2673);
								Eq_5902 v127_2693;
								v127_2693.u1 = sp_2657->t00E0.u1;
								ui32 w8_2694 = (word32) v127_2693;
								x21_4740 = SEQ(x21_32_32_2744, w21_2691);
								if ((w8_2694 & 0x01) == 0x00)
									goto l000000000001E488;
								x21_4736 = SEQ(x21_32_32_2744, w21_2691);
							}
l000000000001E428:
							word64 x21_4738 = ϕ(x21_4735, x21_4736, x21_4737);
							ui32 w21_2704 = (word32) x21_4738;
							char * x1_2703 = ϕ(x1_2673, x1_2673, x1_2526);
							word128 q0_2700 = ϕ(q0_2681, q0_2681, q0_2701);
							<unknown> ϕ;
							Mem2698 = ϕ(Mem2626, Mem2626, Mem2467);
							<unknown> ϕ;
							sp_2697 = ϕ(sp_2657, sp_2657, sp_2468);
							void * x0_2699 = sp_2697->ptr00F0;
							((real64) q0_2700, x0_2699, x1_2703);
							if ((w21_2704 & 0x01) == 0x00)
								goto l000000000001E974;
							goto l000000000001E48C;
						}
l000000000001E500:
						<unknown> ϕ;
						Mem2535 = ϕ(Mem2480, Mem2403);
						fn000000000001B2D0();
						LogCapture::~LogCapture();
						__cxa_end_catch();
						goto l000000000001E2CC;
					}
					goto l000000000001E2CC;
				}
l000000000001E23C:
				Eq_2346 q0_1688 = ϕ(q0_1689, q0_1692);
				<unknown> ϕ;
				Mem1677 = ϕ(Mem1678, Mem1521);
				Eq_14 x1_1668 = ϕ(x1_1669, x1_1571);
				Eq_2463 sp_1531 = ϕ(sp_1532, sp_1523);
				fn000000000001B2D0();
l000000000001E244:
				<unknown> ϕ;
				q0_1687 = ϕ(q0_358, q0_1688);
				<unknown> ϕ;
				Mem1676 = ϕ(Mem193, Mem1677);
				<unknown> ϕ;
				x1_1667 = ϕ(x1_224, x1_1668);
				<unknown> ϕ;
				sp_1530 = ϕ(sp_197, sp_1531);
				fn000000000001B2D0();
				goto l000000000001E24C;
			}
			word64 x24_579;
			*((word64) sp_574 + 40) = (Eq_2463) (x24_579 + 0x08);
			*((word64) sp_574 + 48) = (Eq_2463) (x24_579 + 0x09);
			word64 x13_617 = g_qw70DC0;
			word32 x10_32_32_3623 = SLICE((word64) sp_574 + 272, word32, 32);
			word32 w10_3627 = (word32) sp_574 + 0x0110;
			Eq_14 x26_619;
			x26_619.u1 = (word64) sp_574 + 368;
			ui64 x8_620 = sp_574 + (struct <anonymous> *) 0x0130 | 0x01;
			Eq_2354 x11_621 = (Eq_2354) (sp_574 + (struct <anonymous> *) 0xF8);
			*((word64) sp_574 + 32) = (Eq_2463) x8_620;
			Eq_2355 x12_624 = (Eq_2355) (sp_574 + (struct <anonymous> *) 0x01E0);
			*((word64) sp_574 + 24) = (Eq_2463) (sp_574 + (struct <anonymous> *) 0x0119);
			ui64 x8_626 = sp_574 + (struct <anonymous> *) 0xF8 | 0x01;
			Eq_14 x19_628;
			x19_628.u0 = 0x00;
			word64 x22_629 = x24_579 + 0x0540;
			Eq_3059 x25_630 = (Eq_3059) (sp_574 + (struct <anonymous> *) 0x0118);
			*((word64) sp_574 + 8) = (Eq_2463) x8_626;
			word64 x20_633 = x13_617 + 0x10;
			*((word64) sp_574 + 16) = (Eq_2463) (sp_574 + (struct <anonymous> *) 488);
			word64 x10_4733 = SEQ(x10_32_32_3623, w10_3627);
l000000000001DAC8:
			word64 x10_4734 = ϕ(x10_4733, x10_3616);
			word64 x5_3719 = ϕ(x5_599, x5_3713);
			word64 x13_3688 = ϕ(x13_617, x13_3682);
			Eq_2355 x12_3667 = ϕ(x12_624, x12_3661);
			Eq_2354 x11_3648 = ϕ(x11_621, x11_3642);
			word32 x10_32_32_3622 = SLICE(x10_4734, word32, 32);
			Eq_2346 q0_1008 = ϕ(q0_598, q0_1470);
			word32 w4_784 = ϕ(w4_593, w4_1589);
			word64 x3_778 = ϕ(x3_592, x3_1584);
			Eq_14 x2_772 = ϕ(x2_591, x2_1574);
			word64 sysreg3_3_13_0_2_763 = ϕ(sysreg3_3_13_0_2_588, sysreg3_3_13_0_2_1570);
			Eq_3047 x30_757 = ϕ(x30_586, x30_1567);
			struct Eq_3051 * x29_751 = ϕ(x29_585, x29_1564);
			Eq_14 x19_745 = ϕ(x19_628, x19_1495);
			word64 x21_734 = ϕ(x21_3568, x21_3574);
			word64 x22_728 = ϕ(x22_629, x22_3566);
			Eq_3059 x25_719 = ϕ(x25_630, x25_1560);
			struct Eq_3067 * x27_710 = ϕ(x27_576, x27_1549);
			Eq_14 x26_673 = ϕ(x26_619, x26_1557);
			word64 x20_645 = ϕ(x20_633, x20_3564);
			<unknown> ϕ;
			Mem641 = ϕ(Mem634, Mem1484);
			size_t sp_635 = ϕ(sp_574, sp_1465);
			ptr64 x0_637 = (word64) sp_635 + 464;
			word32 x0_32_32_702 = SLICE(x0_637, word32, 32);
			fn000000000001BD80();
			struct Eq_5686 * v57_640 = (word64) sp_635 + 0x0188;
			word64 x8_642 = v57_640->qw0000;
			struct Eq_3177 * x28_643 = v57_640->ptr0008;
			struct Eq_5696 * v58_644 = (word64) sp_635 + 336;
			v58_644->qw0000 = x20_645;
			v58_644->qw0008 = x8_642;
			*((word64) sp_635 + 352) = (Eq_2463) x28_643;
			word64 x10_3629 = x10_4734;
			word64 x10_3625;
			if (x28_643 != null)
			{
				Eq_14 w10_656;
				do
				{
					union Eq_3183 * v59_652 = &x28_643->qw0008;
					Eq_14 x9_653 = __load_exclusive<word64>(v59_652);
					union Eq_3192 * v60_655 = &x28_643->qw0008;
					w10_656 = __store_exclusive<word64>(v60_655, (word32) x9_653 + 1);
					x10_3625 = SEQ(x10_32_32_3622, w10_656);
				} while (w10_656 != 0x00);
			}
			word64 x10_3620 = ϕ(x10_3625, x10_3629);
			Eq_14 x1_660;
			x1_660.u1 = (word64) sp_635 + 336;
			fn000000000001B0B0();
			word64 x8_665 = g_qw70DC0;
			*((word64) sp_635 + 336) = (Eq_2463) (x8_665 + 0x10);
			if (x28_643 != null)
				;
			Eq_14 x24_670;
			x24_670.u1 = *((word64) sp_635 + 368);
			Eq_14 x23_688;
			Eq_14 x23_685;
			Eq_14 x28_696;
			Eq_14 x23_675;
			if (x24_670 != 0x00)
			{
				Eq_14 x23_676 = x26_673;
				while (true)
				{
					Eq_14 x24_677;
					Eq_14 x24_691;
					int32 w8_679;
					while (true)
					{
						<unknown> ϕ;
						Eq_14 x23_693;
						x23_688 = ϕ(x23_676, x23_693, x23_685);
						<unknown> ϕ;
						Eq_14 x24_694;
						x24_677 = ϕ(x24_670, x24_694, x24_691);
						w8_679 = (int32) *((word32) x24_677 + 32);
						if (w8_679 < 0x02)
							break;
						Eq_14 x8_692 = *x24_677.u1;
						if (x8_692 == 0x00)
						{
							x28_696 = *x24_677.u1;
							if (x28_696 != 0x00)
								goto l000000000001DC14;
							goto l000000000001DBAC;
						}
						x23_693 = x24_677;
						x24_694 = x8_692;
					}
					if (w8_679 == 0x01)
						break;
					x23_685.u1 = (word32) x24_677 + 8;
					Eq_14 x8_686 = *x23_685.u1;
					if (x8_686 == 0x00)
						break;
					x24_691 = x8_686;
				}
			}
			else
				x23_675 = x26_673;
			Eq_14 x23_687 = ϕ(x23_688, x23_685, x23_675);
			Eq_14 x28_690 = *x23_687.u1;
			if (x28_690 != 0x00)
				goto l000000000001DC14;
l000000000001DBAC:
			Eq_4127 x0_704 = SEQ(x0_32_32_702, 0x40);
			Eq_14 x0_805 = _Znwm(x0_704);
			((word32) x0_805 + 32)->u1 = 0x01;
			((word32) x0_805 + 48)->u0 = 0x00;
			((word32) x0_805 + 56)->u0 = 0x00;
			((word32) x0_805 + 40)->u1 = 0x00;
			x0_805.u1->u1 = 0x00;
			((word32) x0_805 + 8)->u1 = 0x00;
			word64 x24_795;
			((word32) x0_805 + 16)->u1 = x24_795;
			union Eq_14 * x23_796;
			x23_796->u1 = (size_t) x0_805;
			struct Eq_4167 * x8_832 = (struct Eq_4167 *) *((word64) sp_790 + 360);
			Eq_14 x28_833 = x0_805;
			struct Eq_4167 * x8_834 = x8_832->ptr0000;
			Eq_14 x1_837;
			Eq_14 x1_835;
			if (x8_834 != null)
			{
				*((word64) sp_790 + 360) = (Eq_2463) x8_834;
				x1_837.u1 = x23_796->u1;
			}
			else
				x1_835 = x0_805;
			Eq_14 x1_891 = ϕ(x1_837, x1_835);
			<unknown> ϕ;
			Mem839 = ϕ(Mem836, Mem831);
			fn000000000001BD70();
			word64 x8_843 = (word64) *((word64) sp_790 + 376);
			*((word64) sp_790 + 376) = (Eq_2463) (x8_843 + 0x01);
l000000000001DC14:
			word64 x5_3715 = ϕ(x5_3719, x5_815, x5_3719);
			word64 x13_3684 = ϕ(x13_3688, x13_816, x13_3688);
			Eq_2355 x12_3663 = ϕ(x12_3667, x12_817, x12_3667);
			Eq_2354 x11_3644 = ϕ(x11_3648, x11_810, x11_3648);
			word64 x10_3618 = ϕ(x10_3620, x10_811, x10_3620);
			struct Eq_3067 * x27_1551 = ϕ(x27_710, x27_792, x27_710);
			Eq_2346 q0_1004 = ϕ(q0_1008, q0_814, q0_1008);
			word32 w4_896 = ϕ(w4_784, w4_809, w4_784);
			word64 x3_894 = ϕ(x3_778, x3_808, x3_778);
			Eq_14 x2_892 = ϕ(x2_772, x2_807, x2_772);
			word32 x2_32_32_1112 = SLICE(x2_892, word32, 32);
			Eq_14 w2_1576 = x2_892;
			Eq_14 x1_890 = ϕ(x1_660, x1_891, x1_660);
			word64 sysreg3_3_13_0_2_888 = ϕ(sysreg3_3_13_0_2_763, sysreg3_3_13_0_2_804, sysreg3_3_13_0_2_763);
			Eq_3047 x30_886 = ϕ(x30_757, x30_802, x30_757);
			struct Eq_3051 * x29_884 = ϕ(x29_751, x29_801, x29_751);
			Eq_14 x19_882 = ϕ(x19_745, x19_800, x19_745);
			word64 x20_880 = ϕ(x20_645, x20_799, x20_645);
			word64 x21_878 = ϕ(x21_734, x21_798, x21_734);
			word64 x22_876 = ϕ(x22_728, x22_797, x22_728);
			Eq_3059 x25_872 = ϕ(x25_719, x25_794, x25_719);
			Eq_14 x26_870 = ϕ(x26_673, x26_793, x26_673);
			Eq_14 x28_851 = ϕ(x28_696, x28_833, x28_690);
			Eq_2463 sp_846 = ϕ(sp_635, sp_790, sp_635);
			struct Eq_4098 * v92_847 = (word64) sp_846 + 312;
			v92_847->qw0000 = 0x00;
			v92_847->qw0008 = 0x00;
			*((word64) sp_846 + 304) = (Eq_2463) 0x00;
			struct Eq_4113 * x8_854 = (struct Eq_4113 *) ((word32) x28_851 + 40);
			Eq_2346 v93_855;
			v93_855.u1 = x8_854->t0000.u1;
			ui32 w9_856 = (word32) v93_855;
			Eq_2346 q0_950;
			Eq_14 x2_4725;
			if ((w9_856 & 0x01) != 0x00)
			{
				Eq_14 x9_949;
				x9_949.u1 = x8_854->t0010.u1;
				q0_950.u2 = x8_854->t0000.u2;
				*((word64) sp_846 + 320) = (Eq_2463) x9_949;
				*((word64) sp_846 + 304) = (Eq_2463) q0_950;
				x2_4725 = SEQ(x2_32_32_1112, w2_1576);
				goto l000000000001DC9C;
			}
			Eq_14 x23_857 = *((word32) x28_851 + 48);
			word32 w23_936 = (word32) x23_857;
			Eq_2463 sp_858 = (Eq_2463) ((word32) x23_857 + 16);
			if (x23_857 >= ~0x0F)
			{
				fn000000000001B2D0();
				goto l000000000001E224;
			}
			Eq_14 x28_864 = *((word32) x28_851 + 56);
			Eq_14 x24_935;
			Eq_14 x23_943;
			word64 x5_3723;
			word64 x13_3692;
			Eq_2355 x12_3671;
			Eq_2354 x11_3652;
			word64 x10_3633;
			struct Eq_3067 * x27_1554;
			Eq_14 x28_941;
			word32 w4_1125;
			word64 x3_1120;
			word64 sysreg3_3_13_0_2_1107;
			Eq_3047 x30_1102;
			Eq_14 x19_1096;
			word64 x20_1091;
			word64 x21_1086;
			Eq_14 x26_1078;
			Eq_3059 x25_1055;
			Eq_2346 q0_1011;
			struct Eq_3051 * x29_982;
			word64 x22_959;
			Eq_2463 sp_955;
			Eq_14 x24_939;
			Eq_14 x24_930;
			Eq_2463 sp_898;
			Eq_14 x23_904;
			struct Eq_3067 * x27_900;
			if (x23_857 < 0x17)
			{
				x24_935 = *((word32) x23_857 + 48);
				((word32) x23_857 + 320)->u1 = (byte) w23_936 << 0x01;
				if (x23_857 == 0x00)
				{
					Eq_14 x2_4743 = SEQ(x2_32_32_1112, w2_1576);
l000000000001DC98:
					Eq_14 x2_4744 = ϕ(x2_4743, x23_943);
					word64 x5_3722 = ϕ(x5_3715, x5_3723);
					word64 x13_3691 = ϕ(x13_3684, x13_3692);
					Eq_2355 x12_3670 = ϕ(x12_3663, x12_3671);
					Eq_2354 x11_3651 = ϕ(x11_3644, x11_3652);
					word64 x10_3632 = ϕ(x10_3618, x10_3633);
					struct Eq_3067 * x27_1553 = ϕ(x27_1551, x27_1554);
					Eq_14 x28_1546 = ϕ(x28_864, x28_941);
					word32 w4_1124 = ϕ(w4_896, w4_1125);
					word64 x3_1119 = ϕ(x3_894, x3_1120);
					word64 sysreg3_3_13_0_2_1106 = ϕ(sysreg3_3_13_0_2_888, sysreg3_3_13_0_2_1107);
					Eq_3047 x30_1101 = ϕ(x30_886, x30_1102);
					Eq_14 x19_1095 = ϕ(x19_882, x19_1096);
					word64 x20_1090 = ϕ(x20_880, x20_1091);
					word64 x21_1085 = ϕ(x21_878, x21_1086);
					Eq_14 x26_1077 = ϕ(x26_870, x26_1078);
					Eq_3059 x25_1054 = ϕ(x25_872, x25_1055);
					Eq_2346 q0_1003 = ϕ(q0_1004, q0_1011);
					struct Eq_3051 * x29_981 = ϕ(x29_884, x29_982);
					word64 x22_958 = ϕ(x22_876, x22_959);
					Eq_2463 sp_954 = ϕ(sp_858, sp_955);
					Eq_14 x23_947 = ϕ(x23_857, x23_943);
					Eq_14 x24_946 = ϕ(x24_935, x24_939);
					*(x24_946 + x23_947) = (word64) 0x00;
					Eq_14 x2_4726 = x2_4744;
l000000000001DC9C:
					Eq_14 x2_4727 = ϕ(x2_4725, x2_4726);
					word64 x5_3714 = ϕ(x5_3715, x5_3722);
					word64 x13_3683 = ϕ(x13_3684, x13_3691);
					Eq_2355 x12_3662 = ϕ(x12_3663, x12_3670);
					Eq_2354 x11_3643 = ϕ(x11_3644, x11_3651);
					word64 x10_3617 = ϕ(x10_3618, x10_3632);
					struct Eq_3067 * x27_1550 = ϕ(x27_1551, x27_1553);
					Eq_14 x28_1545 = ϕ(x28_851, x28_1546);
					word32 w4_1123 = ϕ(w4_896, w4_1124);
					word64 x3_1118 = ϕ(x3_894, x3_1119);
					word32 x2_32_32_1111 = SLICE(x2_4727, word32, 32);
					word64 sysreg3_3_13_0_2_1105 = ϕ(sysreg3_3_13_0_2_888, sysreg3_3_13_0_2_1106);
					Eq_3047 x30_1100 = ϕ(x30_886, x30_1101);
					Eq_14 x19_1094 = ϕ(x19_882, x19_1095);
					word64 x20_1089 = ϕ(x20_880, x20_1090);
					word64 x21_1084 = ϕ(x21_878, x21_1085);
					Eq_14 x26_1076 = ϕ(x26_870, x26_1077);
					Eq_3059 x25_1053 = ϕ(x25_872, x25_1054);
					Eq_2346 q0_1002 = ϕ(q0_950, q0_1003);
					struct Eq_3051 * x29_980 = ϕ(x29_884, x29_981);
					<unknown> ϕ;
					Mem976 = ϕ(Mem952, Mem948);
					word64 x22_957 = ϕ(x22_876, x22_958);
					size_t sp_953 = ϕ(sp_846, sp_954);
					Eq_14 x1_956;
					x1_956.u1 = (word64) sp_953 + 304;
					fn000000000001AD90();
					Eq_14 x2_1579 = x2_4727;
					word64 x21_1401;
					word64 x5_3725;
					word64 x13_3694;
					Eq_2355 x12_3673;
					Eq_2354 x11_3654;
					Eq_2354 x11_1451;
					word64 x10_3635;
					word64 x10_1447;
					word64 x22_1399;
					word64 x20_1403;
					word32 w4_1591;
					word64 x3_1586;
					Eq_14 x2_1581;
					Eq_14 x2_1458;
					word64 sysreg3_3_13_0_2_1411;
					Eq_3047 x30_1409;
					struct Eq_3051 * x29_1407;
					Eq_3059 x25_1390;
					Eq_14 x26_1388;
					struct Eq_3067 * x27_1386;
					Eq_14 x28_1383;
					Eq_14 x19_1405;
					Eq_14 x1_1367;
					Eq_14 x1_1459;
					Eq_2346 q0_1363;
					size_t sp_1355;
					Eq_2463 sp_1464;
					if (x22_957 != 0x00)
					{
l000000000001DF20:
						word64 x21_4728 = ϕ(x21_1084, x21_1401, x21_1420);
						<unknown> ϕ;
						word64 x5_1437;
						x5_3713 = ϕ(x5_3714, x5_3725, x5_1437);
						<unknown> ϕ;
						word64 x13_1438;
						x13_3682 = ϕ(x13_3683, x13_3694, x13_1438);
						<unknown> ϕ;
						Eq_2355 x12_1439;
						x12_3661 = ϕ(x12_3662, x12_3673, x12_1439);
						<unknown> ϕ;
						x11_3642 = ϕ(x11_3643, x11_3654, x11_1451);
						<unknown> ϕ;
						x10_3616 = ϕ(x10_3617, x10_3635, x10_1447);
						<unknown> ϕ;
						word64 x22_1419;
						x22_3566 = ϕ(x22_957, x22_1399, x22_1419);
						<unknown> ϕ;
						word64 x20_1421;
						x20_3564 = ϕ(x20_1089, x20_1403, x20_1421);
						<unknown> ϕ;
						word32 w4_1431;
						w4_1589 = ϕ(w4_1123, w4_1591, w4_1431);
						<unknown> ϕ;
						word64 x3_1430;
						x3_1584 = ϕ(x3_1118, x3_1586, x3_1430);
						<unknown> ϕ;
						x2_1574 = ϕ(x2_1579, x2_1581, x2_1458);
						<unknown> ϕ;
						word64 sysreg3_3_13_0_2_1426;
						sysreg3_3_13_0_2_1570 = ϕ(sysreg3_3_13_0_2_1105, sysreg3_3_13_0_2_1411, sysreg3_3_13_0_2_1426);
						<unknown> ϕ;
						Eq_3047 x30_1424;
						x30_1567 = ϕ(x30_1100, x30_1409, x30_1424);
						<unknown> ϕ;
						struct Eq_3051 * x29_1423;
						x29_1564 = ϕ(x29_980, x29_1407, x29_1423);
						<unknown> ϕ;
						Eq_3059 x25_1416;
						x25_1560 = ϕ(x25_1053, x25_1390, x25_1416);
						<unknown> ϕ;
						Eq_14 x26_1415;
						x26_1557 = ϕ(x26_1076, x26_1388, x26_1415);
						<unknown> ϕ;
						struct Eq_3067 * x27_1414;
						x27_1549 = ϕ(x27_1550, x27_1386, x27_1414);
						<unknown> ϕ;
						Eq_14 x28_1413;
						x28_1544 = ϕ(x28_1545, x28_1383, x28_1413);
						word32 w21_1489 = (word32) x21_4728;
						Eq_14 x19_1486 = ϕ(x19_1094, x19_1405, x19_1422);
						Eq_14 x1_1472 = ϕ(x1_956, x1_1367, x1_1459);
						<unknown> ϕ;
						Eq_2346 q0_1436;
						q0_1470 = ϕ(q0_1002, q0_1363, q0_1436);
						<unknown> ϕ;
						Mem1466 = ϕ(Mem976, Mem1361, Mem1361);
						<unknown> ϕ;
						sp_1465 = ϕ(sp_953, sp_1355, sp_1464);
						Eq_2346 v105_1467 = *((word64) sp_1465 + 304);
						ui32 w8_1468 = (word32) v105_1467;
						if ((w8_1468 & 0x01) != 0x00)
						{
							Eq_14 x0_1469;
							x0_1469.u1 = *((word64) sp_1465 + 320);
							((real64) q0_1470, x0_1469, x1_1472);
						}
						ptr64 x0_1477 = (word64) sp_1465 + 360;
						x0_32_32_3607 = SLICE(x0_1477, word32, 32);
						fn000000000001B760();
						word64 x8_1481 = g_qw70DC0;
						x23_1482 = (ui64) *((word64) sp_1465 + 400);
						*((word64) sp_1465 + 384) = (Eq_2463) (x8_1481 + 0x10);
						if (x23_1482 != 0x00)
							;
						x1_1487.u1 = (word32) x19_1486 + 1;
						word32 w1_1493 = (word32) x1_1487;
						x19_1495 = __bfm<word64>(x19_1486, x1_1487, 0, 31);
						x21_3574 = x21_4728;
						if (w21_1489 == w1_1493)
							goto l000000000001DF94;
						goto l000000000001DAC8;
					}
					fn000000000001C140();
					struct Eq_4841 * x0_970 = (word64) sp_953 + 480;
					Eq_14 x1_972;
					x1_972.u0 = 0x00050709;
					fn000000000001B1B0();
					word64 x8_977 = x0_970->qw0008;
					byte * x24_978 = x0_970->ptr0010;
					word64 x9_979 = x0_970->qw0001;
					struct Eq_4859 * x10_983 = x29_980 - 0x78;
					Eq_4863 v96_984;
					v96_984.u0 = x0_970->t0000.u0;
					word32 w23_985 = (word32) v96_984;
					x10_983->qw0007 = x8_977;
					x29_980->qwFFFFFF88 = x9_979;
					x0_970->t0000.u1 = 0x00;
					x0_970->qw0008 = 0x00;
					union Eq_4891 * x9_991 = (union Eq_4891 *) *((word64) sp_953 + 40);
					x0_970->ptr0010 = null;
					Eq_4891 v98_993;
					v98_993.u0 = x9_991->u0;
					ui32 w8_994 = (word32) v98_993;
					Eq_14 x2_1115 = SEQ(x2_32_32_1111, 11);
					struct Eq_3067 * x27_1013;
					struct Eq_3067 * x27_995;
					if ((w8_994 & 0x01) != 0x00)
					{
						x27_1013 = (struct Eq_3067 *) *((word64) sp_953 + 56);
						x9_991->u1 = 0x00;
					}
					else
					{
						x27_995 = (struct Eq_3067 *) *((word64) sp_953 + 56);
						byte * x8_996 = x27_995->ptr0018;
						*x8_996 = 0x00;
						Eq_4916 v104_998;
						v104_998.u0 = x27_995->t0008.u0;
						ui32 w8_999 = (word32) v104_998;
						x27_995->qw0010 = 0x00;
						if ((w8_999 & 0x01) != 0x00)
						{
							byte * x0_1001 = x27_995->ptr0018;
							((real64) q0_1002, x0_1001, 0x00050709);
							x27_995->t0008.u1 = 0x00;
						}
					}
					struct Eq_3067 * x27_1016 = ϕ(x27_1013, x27_995, x27_995);
					x27_1016->t0008.u0 = (byte) (byte) w23_985;
					struct Eq_4943 * x10_1019 = x29_980 - 0x78;
					word64 x8_1020 = x10_1019->qw0007;
					word64 x9_1021 = x29_980->qwFFFFFF88;
					struct Eq_3099 * x11_1023 = (struct Eq_3099 *) *((word64) sp_953 + 48);
					x11_1023->qw0007 = x8_1020;
					x11_1023->qw0000 = x9_1021;
					x27_1016->ptr0018 = x24_978;
					byte v100_1028 = (byte) *((word64) sp_953 + 480);
					ui32 w8_1029 = (word32) v100_1028;
					x10_1019->qw0007 = 0x00;
					x29_980->qwFFFFFF88 = 0x00;
					if ((w8_1029 & 0x01) != 0x00)
					{
						int64 x0_1032 = (int64) *((word64) sp_953 + 496);
						((real64) q0_1002, x0_1032, 0x00050709);
					}
					Eq_1004 v102_1039;
					v102_1039.u0 = g_t711A0.u0;
					ui32 w9_1040 = (word32) v102_1039;
					word64 x10_1041 = g_qw711B0;
					word32 w8_1042 = g_dw71198;
					Eq_2354 x11_1043 = 0x000711A1;
					Eq_14 x28_1047;
					x28_1047.u1 = (w9_1040 & 0x01) == 0x00 ? 0x000711A1 : x10_1041;
					*((word64) sp_953 + 272) = (Eq_2463) w8_1042;
					x25_1053->qw0000 = 0x00;
					x25_1053->qw0008 = 0x00;
					x25_1053->t0010 = null;
					Eq_14 x0_1060 = strlen(x28_1047);
					Eq_2463 sp_1061 = (Eq_2463) ((word32) x0_1060 + 16);
					Eq_2346 q0_1691;
					Eq_14 x1_1671;
					Eq_2463 sp_1195;
					if (x0_1060 < ~0x0F)
					{
						Eq_14 x23_1068 = x0_1060;
						word32 w23_1164 = (word32) x0_1060;
						void * x24_1163;
						void * x24_1158;
						Eq_2463 sp_1126;
						Eq_14 x23_1132;
						struct Eq_3067 * x27_1128;
						if (x0_1060 < 0x17)
						{
							x24_1163 = (void *) *((word32) x0_1060 + 40);
							((word32) x0_1060 + 296)->u1 = (byte) w23_1164 << 0x01;
							if (x0_1060 == 0x00)
								goto l000000000001DDF8;
						}
						else
						{
							ui64 x27_1072 = (word32) x0_1060 + 16 & ~0x0F;
							void * x0_1141 = _Znwm(x27_1072);
							x24_1158 = x0_1141;
							*((word64) sp_1126 + 288) = (Eq_2463) x23_1132;
							*((word64) sp_1126 + 296) = (Eq_2463) x0_1141;
							*((word64) sp_1126 + 0x0118) = (Eq_2463) (x27_1128 | 0x01);
						}
						word64 x5_3729 = ϕ(x5_3714, x5_1151);
						word64 x13_3698 = ϕ(x13_3683, x13_1152);
						Eq_2355 x12_3677 = ϕ(x12_3662, x12_1153);
						Eq_2354 x11_3656 = ϕ(x11_1043, x11_1146);
						word64 x10_3637 = ϕ(x10_1041, x10_1147);
						Eq_2346 q0_1366 = ϕ(q0_1002, q0_1150);
						struct Eq_3067 * x27_1292 = ϕ(x27_1016, x27_1128);
						word32 w4_1234 = ϕ(w4_1123, w4_1145);
						word64 x3_1232 = ϕ(x3_1118, x3_1144);
						word64 sysreg3_3_13_0_2_1228 = ϕ(sysreg3_3_13_0_2_1105, sysreg3_3_13_0_2_1140);
						Eq_3047 x30_1226 = ϕ(x30_1100, x30_1138);
						struct Eq_3051 * x29_1224 = ϕ(x29_980, x29_1137);
						Eq_14 x19_1222 = ϕ(x19_1094, x19_1136);
						word64 x20_1220 = ϕ(x20_1089, x20_1135);
						word64 x21_1218 = ϕ(x21_1084, x21_1134);
						Eq_3059 x25_1216 = ϕ(x25_1053, x25_1130);
						Eq_14 x26_1214 = ϕ(x26_1076, x26_1129);
						word64 x22_1202 = ϕ(x22_957, x22_1133);
						Eq_2463 sp_1178 = ϕ(sp_1061, sp_1126);
						Eq_14 x23_1171 = ϕ(x23_1068, x23_1132);
						Eq_14 x28_1169 = ϕ(x28_1047, x28_1127);
						void * x24_1167 = ϕ(x24_1163, x24_1158);
						Eq_14 x1_1170 = x28_1169;
						Eq_14 x2_1172 = x23_1171;
						memcpy(x24_1167, x28_1169, x23_1171);
l000000000001DDF8:
						word64 x5_3726 = ϕ(x5_3714, x5_3729);
						word64 x13_3695 = ϕ(x13_3683, x13_3698);
						Eq_2355 x12_3674 = ϕ(x12_3662, x12_3677);
						Eq_2354 x11_3655 = ϕ(x11_1043, x11_3656);
						word64 x10_3636 = ϕ(x10_1041, x10_3637);
						Eq_14 x28_1384 = ϕ(x28_1047, x28_1169);
						Eq_2346 q0_1364 = ϕ(q0_1002, q0_1366);
						struct Eq_3067 * x27_1290 = ϕ(x27_1016, x27_1292);
						word32 w4_1233 = ϕ(w4_1123, w4_1234);
						word64 x3_1231 = ϕ(x3_1118, x3_1232);
						Eq_14 x2_1230 = ϕ(x2_1115, x2_1172);
						Eq_14 x1_1229 = ϕ(x1_972, x1_1170);
						word64 sysreg3_3_13_0_2_1227 = ϕ(sysreg3_3_13_0_2_1105, sysreg3_3_13_0_2_1228);
						Eq_3047 x30_1225 = ϕ(x30_1100, x30_1226);
						struct Eq_3051 * x29_1223 = ϕ(x29_980, x29_1224);
						Eq_14 x19_1221 = ϕ(x19_1094, x19_1222);
						word64 x20_1219 = ϕ(x20_1089, x20_1220);
						word64 x21_1217 = ϕ(x21_1084, x21_1218);
						Eq_3059 x25_1215 = ϕ(x25_1053, x25_1216);
						Eq_14 x26_1213 = ϕ(x26_1076, x26_1214);
						word64 x22_1201 = ϕ(x22_957, x22_1202);
						Eq_2463 sp_1177 = ϕ(sp_1061, sp_1178);
						Eq_14 x23_1175 = ϕ(x23_1068, x23_1171);
						word32 x23_32_32_1396 = SLICE(x23_1175, word32, 32);
						void * x24_1174 = ϕ(x24_1163, x24_1167);
						*(x24_1174 + x23_1175) = (word64) 0x00;
						word64 x0_1179 = (word64) sp_1177 + 272;
						ui32 w0_1180 = (word32) x0_1179;
						((LEVELS) x0_1179);
						word64 x23_4731;
						if ((w0_1180 & 0x01) == 0x00)
						{
							word32 w23_1181 = 0x00;
							x23_4731 = SEQ(x23_32_32_1396, w23_1181);
							goto l000000000001DEA4;
						}
						struct Eq_2626 ** x8_1183 = g_ptr70D68;
						struct Eq_5416 * v106_1184 = (word64) sp_1177 + 0x0100;
						v106_1184->qw0000 = 0x00;
						v106_1184->qw0008 = 0x00;
						*((word64) sp_1177 + 0x00F8) = (Eq_2463) 0x00;
						struct Eq_2626 * x23_1188 = (struct Eq_2626 *) *x8_1183;
						Eq_14 x0_1190 = strlen(x23_1188);
						Eq_2463 sp_1191 = (Eq_2463) ((word32) x0_1190 + 16);
						if (x0_1190 < ~0x0F)
						{
							Eq_14 x28_1207 = x0_1190;
							word32 w28_1273 = (word32) x0_1190;
							void * x24_1272;
							void * x24_1267;
							Eq_2463 sp_1235;
							Eq_14 x28_1236;
							if (x0_1190 < 0x17)
							{
								x24_1272 = (void *) *((word32) x0_1190 + 24);
								((word32) x0_1190 + 264)->u1 = (byte) w28_1273 << 0x01;
								if (x0_1190 == 0x00)
									goto l000000000001DE84;
							}
							else
							{
								ui64 x27_1211 = (word32) x0_1190 + 16 & ~0x0F;
								void * x0_1250 = _Znwm(x27_1211);
								x24_1267 = x0_1250;
								*((word64) sp_1235 + 0x0100) = (Eq_2463) x28_1236;
								*((word64) sp_1235 + 264) = (Eq_2463) x0_1250;
								ui64 x27_1237;
								*((word64) sp_1235 + 0x00F8) = (Eq_2463) (x27_1237 | 0x01);
							}
							Eq_2463 sp_1287 = ϕ(sp_1191, sp_1235);
							Eq_14 x28_1280 = ϕ(x28_1207, x28_1236);
							struct Eq_2626 * x23_1278 = ϕ(x23_1188, x23_1241);
							void * x24_1276 = ϕ(x24_1272, x24_1267);
							memcpy(x24_1276, x23_1278, x28_1280);
l000000000001DE84:
							size_t sp_1286 = ϕ(sp_1191, sp_1287);
							Eq_14 x28_1284 = ϕ(x28_1207, x28_1280);
							void * x24_1283 = ϕ(x24_1272, x24_1276);
							*(x24_1283 + x28_1284) = (word64) 0x00;
							word64 x0_1288 = (word64) sp_1286 + 0x00F8;
							word64 x0_1334 = _ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(x0_1288);
							word32 w0_1352 = (word32) x0_1334;
							word32 x23_32_32_1395 = SLICE(x23_1325, word32, 32);
							Eq_5426 v108_1350 = *((word64) sp_1319 + 0x00F8);
							ui32 w8_1351 = (word32) v108_1350;
							word32 w23_1353 = w0_1352;
							word64 x23_4729 = SEQ(x23_32_32_1395, w23_1353);
							Eq_2346 q0_1343;
							Eq_14 x1_1335;
							word64 x23_4730;
							if ((w8_1351 & 0x01) != 0x00)
							{
								void * x0_1354 = (void *) *((word64) sp_1319 + 264);
								((real64) q0_1343, x0_1354, x1_1335);
								x23_4730 = SEQ(x23_32_32_1395, w23_1353);
							}
l000000000001DEA4:
							word64 x23_4732 = ϕ(x23_4729, x23_4730, x23_4731);
							<unknown> ϕ;
							word64 x5_1344;
							x5_3725 = ϕ(x5_1344, x5_1344, x5_3726);
							<unknown> ϕ;
							word64 x13_1345;
							x13_3694 = ϕ(x13_1345, x13_1345, x13_3695);
							<unknown> ϕ;
							Eq_2355 x12_1346;
							x12_3673 = ϕ(x12_1346, x12_1346, x12_3674);
							<unknown> ϕ;
							Eq_2354 x11_1339;
							x11_3654 = ϕ(x11_1339, x11_1339, x11_3655);
							<unknown> ϕ;
							word64 x10_1340;
							x10_3635 = ϕ(x10_1340, x10_1340, x10_3636);
							<unknown> ϕ;
							word32 w4_1338;
							w4_1591 = ϕ(w4_1338, w4_1338, w4_1233);
							<unknown> ϕ;
							word64 x3_1337;
							x3_1586 = ϕ(x3_1337, x3_1337, x3_1231);
							<unknown> ϕ;
							Eq_14 x2_1336;
							x2_1581 = ϕ(x2_1336, x2_1336, x2_1230);
							<unknown> ϕ;
							word64 sysreg3_3_13_0_2_1333;
							sysreg3_3_13_0_2_1411 = ϕ(sysreg3_3_13_0_2_1333, sysreg3_3_13_0_2_1333, sysreg3_3_13_0_2_1227);
							<unknown> ϕ;
							Eq_3047 x30_1331;
							x30_1409 = ϕ(x30_1331, x30_1331, x30_1225);
							<unknown> ϕ;
							struct Eq_3051 * x29_1330;
							x29_1407 = ϕ(x29_1330, x29_1330, x29_1223);
							<unknown> ϕ;
							Eq_14 x19_1329;
							x19_1405 = ϕ(x19_1329, x19_1329, x19_1221);
							<unknown> ϕ;
							word64 x20_1328;
							x20_1403 = ϕ(x20_1328, x20_1328, x20_1219);
							<unknown> ϕ;
							word64 x21_1327;
							x21_1401 = ϕ(x21_1327, x21_1327, x21_1217);
							<unknown> ϕ;
							word64 x22_1326;
							x22_1399 = ϕ(x22_1326, x22_1326, x22_1201);
							<unknown> ϕ;
							Eq_3059 x25_1323;
							x25_1390 = ϕ(x25_1323, x25_1323, x25_1215);
							<unknown> ϕ;
							Eq_14 x26_1322;
							x26_1388 = ϕ(x26_1322, x26_1322, x26_1213);
							<unknown> ϕ;
							struct Eq_3067 * x27_1321;
							x27_1386 = ϕ(x27_1321, x27_1321, x27_1290);
							<unknown> ϕ;
							Eq_14 x28_1320;
							x28_1383 = ϕ(x28_1320, x28_1320, x28_1384);
							ui32 w23_1369 = (word32) x23_4732;
							<unknown> ϕ;
							x1_1367 = ϕ(x1_1335, x1_1335, x1_1229);
							<unknown> ϕ;
							q0_1363 = ϕ(q0_1343, q0_1343, q0_1364);
							<unknown> ϕ;
							Mem1356 = ϕ(Mem1285, Mem1285, Mem1176);
							<unknown> ϕ;
							sp_1355 = ϕ(sp_1319, sp_1319, sp_1177);
							word32 w9_1357 = (word32) *((word64) sp_1355 + 0x0044);
							Eq_5213 v110_1358 = *((word64) sp_1355 + 0x0118);
							ui32 w8_1359 = (word32) v110_1358;
							*((word64) sp_1355 + 0x0044) = (Eq_2463) (w9_1357 - 0x01);
							if ((w8_1359 & 0x01) != 0x00)
							{
								void * x0_1362 = (void *) *((word64) sp_1355 + 296);
								((real64) q0_1363, x0_1362, x1_1367);
							}
							if ((w23_1369 & 0x01) != 0x00)
							{
								struct Eq_2626 ** x8_1372 = g_ptr70D68;
								struct Eq_2626 * x1_1373 = (struct Eq_2626 *) *x8_1372;
								ptr64 x0_1377 = (word64) sp_1355 + 480;
								_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_(x0_1377, x1_1373, 0x00071000, &g_dw71198, 0x00052000, 337390, 0x00);
								word32 x8_32_32_1449 = SLICE(x8_1425, word32, 32);
								struct Eq_5728 * x10_1443 = sp_1412->ptr0038;
								byte v112_1444 = x10_1443->b0008;
								ui32 w8_1445 = (word32) v112_1444;
								x10_1447 = x10_1443->qw0010;
								word64 x9_1448 = x10_1443->qw0018;
								uint64 x8_1450 = SEQ(x8_32_32_1449, w8_1445);
								x11_1451 = x8_1450 >> 1;
								word64 x8_1456 = sp_1412->qw0030;
								x2_1458.u1 = (w8_1445 & 0x01) == 0x00 ? x8_1450 >> 1 : x10_1447;
								x1_1459.u1 = (w8_1445 & 0x01) == 0x00 ? x8_1456 : x9_1448;
								fn000000000001BB30();
								LogCapture::~LogCapture();
								sp_1464 = (Eq_2463) ((char *) sp_1412 + 8);
							}
							goto l000000000001DF20;
						}
l000000000001E22C:
						<unknown> ϕ;
						q0_1690 = ϕ(q0_1364, q0_1691);
						<unknown> ϕ;
						Mem1679 = ϕ(Mem1187, Mem1680);
						<unknown> ϕ;
						x1_1670 = ϕ(x1_1229, x1_1671);
						<unknown> ϕ;
						sp_1194 = ϕ(sp_1191, sp_1195);
						fn000000000001B2D0();
						goto l000000000001E234;
					}
l000000000001E224:
					<unknown> ϕ;
					q0_1691 = ϕ(q0_1002, q0_1004);
					<unknown> ϕ;
					Mem1680 = ϕ(Mem1059, Mem850);
					<unknown> ϕ;
					x1_1671 = ϕ(x1_972, x1_890);
					<unknown> ϕ;
					sp_1195 = ϕ(sp_1061, sp_858);
					fn000000000001B2D0();
					goto l000000000001E22C;
				}
			}
			else
			{
				ui64 x27_868 = (word32) x23_857 + 16 & ~0x0F;
				Eq_14 x0_913 = _Znwm(x27_868);
				x24_930 = x0_913;
				*((word64) sp_898 + 312) = (Eq_2463) x23_904;
				*((word64) sp_898 + 320) = (Eq_2463) x0_913;
				*((word64) sp_898 + 304) = (Eq_2463) (x27_900 | 0x01);
			}
			<unknown> ϕ;
			word64 x5_923;
			x5_3723 = ϕ(x5_3715, x5_923);
			<unknown> ϕ;
			word64 x13_924;
			x13_3692 = ϕ(x13_3684, x13_924);
			<unknown> ϕ;
			Eq_2355 x12_925;
			x12_3671 = ϕ(x12_3663, x12_925);
			<unknown> ϕ;
			Eq_2354 x11_918;
			x11_3652 = ϕ(x11_3644, x11_918);
			<unknown> ϕ;
			word64 x10_919;
			x10_3633 = ϕ(x10_3618, x10_919);
			<unknown> ϕ;
			x27_1554 = ϕ(x27_1551, x27_900);
			<unknown> ϕ;
			word32 w4_917;
			w4_1125 = ϕ(w4_896, w4_917);
			<unknown> ϕ;
			word64 x3_916;
			x3_1120 = ϕ(x3_894, x3_916);
			<unknown> ϕ;
			word64 sysreg3_3_13_0_2_912;
			sysreg3_3_13_0_2_1107 = ϕ(sysreg3_3_13_0_2_888, sysreg3_3_13_0_2_912);
			<unknown> ϕ;
			Eq_3047 x30_910;
			x30_1102 = ϕ(x30_886, x30_910);
			<unknown> ϕ;
			Eq_14 x19_908;
			x19_1096 = ϕ(x19_882, x19_908);
			<unknown> ϕ;
			word64 x20_907;
			x20_1091 = ϕ(x20_880, x20_907);
			<unknown> ϕ;
			word64 x21_906;
			x21_1086 = ϕ(x21_878, x21_906);
			<unknown> ϕ;
			Eq_14 x26_901;
			x26_1078 = ϕ(x26_870, x26_901);
			<unknown> ϕ;
			Eq_3059 x25_902;
			x25_1055 = ϕ(x25_872, x25_902);
			<unknown> ϕ;
			Eq_2346 q0_922;
			q0_1011 = ϕ(q0_1004, q0_922);
			<unknown> ϕ;
			struct Eq_3051 * x29_909;
			x29_982 = ϕ(x29_884, x29_909);
			<unknown> ϕ;
			word64 x22_905;
			x22_959 = ϕ(x22_876, x22_905);
			<unknown> ϕ;
			sp_955 = ϕ(sp_858, sp_898);
			<unknown> ϕ;
			x23_943 = ϕ(x23_857, x23_904);
			<unknown> ϕ;
			Eq_14 x28_899;
			x28_941 = ϕ(x28_864, x28_899);
			<unknown> ϕ;
			x24_939 = ϕ(x24_935, x24_930);
			memcpy(x24_939, x28_941, x23_943);
			goto l000000000001DC98;
		}
	}
	else
	{
		void * x0_349 = (void *) *((word64) sp_314 + 424);
		((real64) q0_338, x0_349, x1_330);
		byte v130_350 = (byte) *((word64) sp_314 + 440);
		ui32 w8_351 = (word32) v130_350;
		x20_4705 = SEQ(x20_32_32_405, w20_348);
		if ((w8_351 & 0x01) == 0x00)
			goto l000000000001D9AC;
		x20_4701 = SEQ(x20_32_32_405, w20_348);
	}
l000000000001D94C:
	word64 x20_4703 = ϕ(x20_4700, x20_4701, x20_4702);
	ui32 w20_361 = (word32) x20_4703;
	Eq_14 x1_360 = ϕ(x1_330, x1_330, x1_224);
	Eq_2346 q0_357 = ϕ(q0_338, q0_338, q0_358);
	<unknown> ϕ;
	Mem355 = ϕ(Mem281, Mem281, Mem180);
	<unknown> ϕ;
	sp_354 = ϕ(sp_314, sp_314, sp_181);
	int64 x0_356 = (int64) *((word64) sp_354 + 456);
	((real64) q0_357, x0_356, x1_360);
	if ((w20_361 & 0x01) == 0x00)
		goto l000000000001DA28;
	goto l000000000001D9B0;
}

// 000000000001EA84: void (Register (ptr32 word64) x0)
void (word64 * x0)
{
	ptr64 fp;
	Eq_1720 sysreg3_3_13_0_2;
	ptr64 fp;
	Eq_1720 sysreg3_3_13_0_2;
	word64 * x0;
	struct Eq_6220 * x22_23 = __mrs(sysreg3_3_13_0_2);
	word64 x9_24 = x22_23->qw0028;
	word64 x0_32 = *x0;
	word64 x0_45 = rs2_query_devices_ex(x0_32, fp - 0x50, 0x00, x9_24);
	word32 x0_32_32_48 = SLICE(x0_45, word32, 32);
	Eq_6241 x0_49 = SEQ(x0_32_32_48, 0x28);
	struct Eq_6245 * x0_62 = _Znwm(x0_49);
	x0_62->qw0010 = 0x00;
	word64 x8_65 = g_qw70D18;
	word64 x9_69 = g_qw70F70;
	x0_62->qw0008 = 0x00;
	x0_62->qw0000 = x8_65 + 0x10;
	word64 x20_54;
	x0_62->qw0018 = x20_54;
	x0_62->qw0020 = x9_69;
	fn000000000001ADF0();
	Eq_14 w9_86;
	do
	{
		union Eq_3183 * v21_82 = &x0_62->qw0008;
		Eq_14 x8_83 = __load_exclusive<word64>(v21_82);
		union Eq_3192 * v22_85 = &x0_62->qw0008;
		w9_86 = __store_exclusive<word64>(v22_85, (word32) x8_83 + 1);
	} while (w9_86 != 0x00);
	struct Eq_6292 * x21_53;
	x21_53->qw0000 = x20_54;
	x21_53->ptr0008 = x0_62;
}

// 000000000001EBC0: define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEj
define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEj
{
	struct Eq_6318 * x25_318;
	struct Eq_6318 * x25_287;
	<unknown> ϕ;
	struct Eq_6328 ** x19_324;
	struct Eq_6328 ** x19_293;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_327;
	Eq_1720 sysreg3_3_13_0_2_296;
	<unknown> ϕ;
	word32 w10_331;
	word32 w10_300;
	<unknown> ϕ;
	word32 w3_334;
	word32 w3_303;
	word32 w3;
	<unknown> ϕ;
	word32 w4_335;
	word32 w4_304;
	word32 w4;
	<unknown> ϕ;
	word64 x1_332;
	word64 x1_301;
	<unknown> ϕ;
	word64 x2_336;
	word64 x2_305;
	word64 x2;
	<unknown> ϕ;
	struct Eq_6499 ** x21_241;
	struct Eq_6499 ** x21_124;
	<unknown> ϕ;
	word64 x23_239;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_6478 x25_237;
	Eq_6478 x25_120;
	<unknown> ϕ;
	word64 x24_121;
	<unknown> ϕ;
	struct Eq_6430 ** x19_243;
	<unknown> ϕ;
	Eq_6467 x29_244;
	Eq_6467 x29_127;
	<unknown> ϕ;
	Eq_6463 x30_245;
	Eq_6463 x30_128;
	<unknown> ϕ;
	word64 x20_242;
	word64 x20_125;
	<unknown> ϕ;
	word64 x1_251;
	word64 sp_155;
	struct Eq_6430 ** x19_126;
	<unknown> ϕ;
	word64 x1;
	struct Eq_6328 ** x0;
	Eq_1720 sysreg3_3_13_0_2;
	word64 x1;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_6328 ** x0;
	word32 w3;
	word32 w4;
	word64 x2;
	struct Eq_6318 * x25_28 = __mrs(sysreg3_3_13_0_2);
	word64 x8_29 = x25_28->qw0028;
	struct Eq_6328 ** x19_31 = x0;
	struct Eq_6328 * x8_35 = (struct Eq_6328 *) *x0;
	int64 * x8_36 = &x8_35->qwFFFFFFE8;
	int64 x9_37 = x8_35->qwFFFFFFE8;
	struct Eq_6336 * x9_38 = (struct Eq_6336 *) ((char *) x0 + x9_37);
	word32 w10_39 = x9_38->dw0020;
	word64 x1_391 = x1;
	if (w10_39 == 0x00)
	{
		word64 x0_40 = x9_38->qw0088;
		int64 * x8_46;
		if (x0_40 != 0x00)
		{
			fn000000000001B260();
			struct Eq_6328 * x8_45 = (struct Eq_6328 *) *x0;
			x8_46 = x8_45 - 0x18;
		}
		int64 * x8_50 = ϕ(x8_36, x8_46);
		int64 x8_51 = *x8_50;
		ptr64 x0_53 = (char *) x0 + x8_51;
		_ZNKSt6__ndk18ios_base6getlocEv(x0_53, 0x01);
		word64 x1_91 = g_qw70E68;
		word64 sp_67;
		_ZNKSt6__ndk16locale9use_facetERNS0_2idE(sp_67 + 0x10, 0x00070000, x1_91);
		word64 sp_93;
		_ZNSt6__ndk16localeD1Ev(sp_93 + 0x10);
		struct Eq_6430 * x8_142 = (struct Eq_6430 *) *x19_126;
		int64 x8_143 = x8_142->qwFFFFFFE8;
		struct Eq_6436 * x22_144 = (struct Eq_6436 *) ((char *) x19_126 + x8_143);
		ui32 w3_145 = x22_144->dw0090;
		word64 x23_146 = x22_144->qw0028;
		word64 x24_238;
		struct Eq_6436 * x22_240;
		if (w3_145 == ~0x00)
		{
			_ZNKSt6__ndk18ios_base6getlocEv(x22_144);
			word64 x1_179 = g_qw70D90;
			struct Eq_6524 ** x0_193 = _ZNKSt6__ndk16locale9use_facetERNS0_2idE(sp_155 + 0x10, 0x00070000, x1_179);
			struct Eq_6524 * x8_204 = (struct Eq_6524 *) *x0_193;
			<anonymous> * x8_205 = x8_204->ptr0038;
			x8_205();
			word64 sp_207;
			_ZNSt6__ndk16localeD1Ev(sp_207 + 0x10);
			ui32 w24_259 = (word32) x24_238;
			word32 x1_32_32_395 = SLICE(x1_251, word32, 32);
			x22_240->dw0090 = w24_259 & 0xFF;
		}
		word64 x20_428 = ϕ(x20_125, x20_242);
		Eq_6463 x30_283 = ϕ(x30_128, x30_245);
		Eq_6467 x29_282 = ϕ(x29_127, x29_244);
		struct Eq_6430 ** x19_281 = ϕ(x19_126, x19_243);
		word64 x24_276 = ϕ(x24_121, x24_238);
		Eq_6478 x25_275 = ϕ(x25_120, x25_237);
		struct Eq_6436 * x22_273 = ϕ(x22_144, x22_240);
		word64 x23_271 = ϕ(x23_146, x23_239);
		word32 w20_265 = (word32) x20_428;
		<unknown> ϕ;
		Mem263 = ϕ(Mem49, Mem261);
		struct Eq_6499 ** x21_262 = ϕ(x21_124, x21_241);
		struct Eq_6499 * x8_264 = (struct Eq_6499 *) *x21_262;
		<anonymous> * x8_269 = x8_264->ptr0030;
		word64 x20_280 = x20_428;
		x8_269();
		word64 x0_298;
		if (x0_298 == 0x00)
			_ZNSt6__ndk18ios_base5clearEj();
	}
	word64 x2_392 = ϕ(x2, x2_305, x2_336);
	word64 x1_389 = ϕ(x1_391, x1_301, x1_332);
	word32 w4_387 = ϕ(w4, w4_304, w4_335);
	word32 w3_385 = ϕ(w3, w3_303, w3_334);
	word32 w10_384 = ϕ(w10_39, w10_300, w10_331);
	Eq_1720 sysreg3_3_13_0_2_382 = ϕ(sysreg3_3_13_0_2, sysreg3_3_13_0_2_296, sysreg3_3_13_0_2_327);
	struct Eq_6328 ** x19_351 = ϕ(x19_31, x19_293, x19_324);
	<unknown> ϕ;
	Mem345 = ϕ(Mem34, Mem263, Mem263);
	struct Eq_6318 * x25_344 = ϕ(x25_28, x25_287, x25_318);
	fn000000000001BCE0();
	word64 x8_346 = x25_344->qw0028;
	word64 x9_347 = x8_29;
	word64 x31_348 = x8_346 - x8_29;
	Eq_6385 NZCV_349;
	NZCV_349.u0 = cond(x31_348);
	bool Z_350 = SLICE(NZCV_349, bool, 30);
	bool C_380 = SLICE(NZCV_349, bool, 29);
	bool N_381 = SLICE(NZCV_349, bool, 31);
	bool V_383 = SLICE(NZCV_349, bool, 28);
	if (x31_348 != 0x00)
		__stack_chk_fail();
	else
	{
		struct Eq_6328 ** x0_352 = x19_351;
	}
}

// 000000000001ED8C: void (Register Eq_6549 x0)
void (Eq_6549 x0)
{
	<unknown> ϕ;
	word32 w31_907;
	word32 w29_921;
	word32 w26_920;
	word32 w25_919;
	word32 w24_918;
	word32 w23_917;
	word32 w22_916;
	word32 w21_915;
	word32 w20_914;
	word32 w19_912;
	word64 x31_894;
	word64 x29_887;
	word64 x26_879;
	word64 x25_880;
	word64 x24_881;
	word64 x23_882;
	word64 x22_883;
	word64 x21_884;
	word64 x20_885;
	word64 x19_886;
	word128 q0_898;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x16_2071;
	<unknown> ϕ;
	word64 x17_2072;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x20_1999;
	<unknown> ϕ;
	word64 sp_1990;
	<unknown> ϕ;
	struct Eq_6728 * x29_2001;
	<unknown> ϕ;
	byte b0_2012;
	<unknown> ϕ;
	word120 q0_120_8_2013;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_2004;
	<unknown> ϕ;
	word32 w4_2015;
	<unknown> ϕ;
	word64 x3_2014;
	<unknown> ϕ;
	word64 x5_2016;
	<unknown> ϕ;
	struct Eq_10340 * x27_1992;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_8866 * x8_1907;
	<unknown> ϕ;
	struct Eq_8866 * x25_2152;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x20_1803;
	<unknown> ϕ;
	struct Eq_8866 * x19_1804;
	<unknown> ϕ;
	Eq_9056 x28_1795;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_9048 x26_1797;
	<unknown> ϕ;
	Eq_9044 x24_1799;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_6728 * x29_1805;
	<unknown> ϕ;
	Eq_9036 x30_1806;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_1808;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 sp_1794;
	<unknown> ϕ;
	struct Eq_8866 * x25_1798;
	<unknown> ϕ;
	word32 w4_1819;
	<unknown> ϕ;
	word64 x3_1818;
	<unknown> ϕ;
	word64 x5_1820;
	<unknown> ϕ;
	byte b0_1816;
	word120 q0_120_8_1817;
	struct Eq_9052 * x27_1796;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x20_1618;
	<unknown> ϕ;
	struct Eq_8866 * x19_1619;
	<unknown> ϕ;
	struct Eq_8866 * x25_1613;
	<unknown> ϕ;
	Eq_9056 x28_1610;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_9048 x26_1612;
	<unknown> ϕ;
	Eq_9044 x24_1614;
	<unknown> ϕ;
	struct Eq_6728 * x29_1620;
	<unknown> ϕ;
	Eq_9036 x30_1621;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_1623;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 sp_1609;
	<unknown> ϕ;
	word32 w4_1634;
	<unknown> ϕ;
	word64 x3_1633;
	<unknown> ϕ;
	word64 x5_1635;
	<unknown> ϕ;
	byte b0_1631;
	word120 q0_120_8_1632;
	struct Eq_9052 * x27_1611;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x20_1433;
	<unknown> ϕ;
	struct Eq_8866 * x19_1434;
	<unknown> ϕ;
	struct Eq_8866 * x25_1428;
	<unknown> ϕ;
	Eq_9056 x28_1425;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_9048 x26_1427;
	<unknown> ϕ;
	Eq_9044 x24_1429;
	<unknown> ϕ;
	struct Eq_6728 * x29_1435;
	<unknown> ϕ;
	Eq_9036 x30_1436;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_1438;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 sp_1424;
	<unknown> ϕ;
	word32 w4_1449;
	<unknown> ϕ;
	word64 x3_1448;
	<unknown> ϕ;
	word64 x5_1450;
	<unknown> ϕ;
	byte b0_1446;
	word120 q0_120_8_1447;
	struct Eq_9052 * x27_1426;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x20_1249;
	<unknown> ϕ;
	struct Eq_8866 * x19_1250;
	<unknown> ϕ;
	struct Eq_8866 * x25_1244;
	<unknown> ϕ;
	Eq_9056 x28_1241;
	Eq_9056 x28_1128;
	<unknown> ϕ;
	struct Eq_9052 * x27_1129;
	<unknown> ϕ;
	Eq_9048 x26_1243;
	Eq_9048 x26_1130;
	<unknown> ϕ;
	Eq_9044 x24_1245;
	Eq_9044 x24_1132;
	<unknown> ϕ;
	struct Eq_6728 * x29_1251;
	struct Eq_6728 * x29_1138;
	<unknown> ϕ;
	Eq_9036 x30_1252;
	Eq_9036 x30_1139;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_1254;
	Eq_1720 sysreg3_3_13_0_2_1141;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 sp_1240;
	word64 sp_1127;
	<unknown> ϕ;
	word32 w4_1265;
	word32 w4_1152;
	<unknown> ϕ;
	word64 x3_1264;
	word64 x3_1151;
	<unknown> ϕ;
	word64 x5_1266;
	word64 x5_1153;
	<unknown> ϕ;
	byte b0_1262;
	word120 q0_120_8_1263;
	struct Eq_9052 * x27_1242;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	byte b0_1149;
	word120 q0_120_8_1150;
	struct Eq_8866 * x19_1137;
	word64 x20_1136;
	struct Eq_8866 * x8_1140;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	byte b0_1048;
	word120 q0_120_8_1049;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x20_951;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x28_943;
	<unknown> ϕ;
	struct Eq_6733 * x27_944;
	<unknown> ϕ;
	struct Eq_6592 * x26_945;
	<unknown> ϕ;
	struct Eq_6592 * x25_946;
	<unknown> ϕ;
	struct Eq_6592 * x24_947;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_6592 * x19_952;
	<unknown> ϕ;
	struct Eq_6728 * x29_953;
	<unknown> ϕ;
	word64 x30_954;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_956;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x21_765;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_6733 * x27_759;
	<unknown> ϕ;
	struct Eq_2626 * x28_758;
	<unknown> ϕ;
	struct Eq_6592 * x26_760;
	<unknown> ϕ;
	struct Eq_6592 * x25_761;
	<unknown> ϕ;
	struct Eq_6592 * x24_762;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_6592 * x19_767;
	<unknown> ϕ;
	struct Eq_6728 * x29_768;
	<unknown> ϕ;
	word64 x30_769;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_771;
	<unknown> ϕ;
	word128 q0_779;
	<unknown> ϕ;
	word32 w4_781;
	<unknown> ϕ;
	word64 x10_774;
	<unknown> ϕ;
	ptr64 x11_772;
	<unknown> ϕ;
	Eq_2439 x12_783;
	<unknown> ϕ;
	word64 x16_784;
	word64 x16_693;
	<unknown> ϕ;
	word64 x17_785;
	word64 x17_694;
	<unknown> ϕ;
	word64 x3_780;
	<unknown> ϕ;
	word64 x5_782;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word32 w4_652;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x3_651;
	<unknown> ϕ;
	word64 x5_653;
	<unknown> ϕ;
	struct Eq_6733 * x27_630;
	word64 x10_645;
	word64 x21_636;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_6797 sp_434;
	word64 x10_451;
	struct Eq_6592 * x8_447;
	word64 x22_441;
	word64 x1_453;
	word64 x21_442;
	Eq_6797 sp_714;
	<unknown> ϕ;
	struct Eq_2626 * x20_2110;
	<unknown> ϕ;
	struct Eq_2626 * x28_738;
	<unknown> ϕ;
	struct Eq_6733 * x27_740;
	<unknown> ϕ;
	struct Eq_6592 * x26_741;
	<unknown> ϕ;
	struct Eq_6592 * x25_743;
	<unknown> ϕ;
	struct Eq_6592 * x24_745;
	<unknown> ϕ;
	void * x23_688;
	<unknown> ϕ;
	struct Eq_2626 * x22_683;
	<unknown> ϕ;
	word32 x21_32_32_2125;
	<unknown> ϕ;
	struct Eq_6592 * x19_747;
	<unknown> ϕ;
	struct Eq_6728 * x29_749;
	<unknown> ϕ;
	word64 x30_751;
	<unknown> ϕ;
	struct Eq_6592 * x8_2142;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_753;
	<unknown> ϕ;
	word128 q0_755;
	<unknown> ϕ;
	word64 x1_32_32_w21_3065;
	<unknown> ϕ;
	struct Eq_6733 * x27_364;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x20_371;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_6592 * x26_365;
	<unknown> ϕ;
	struct Eq_6592 * x24_367;
	<unknown> ϕ;
	void * x23_368;
	<unknown> ϕ;
	struct Eq_2626 * x22_369;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_6728 * x29_373;
	<unknown> ϕ;
	word64 x30_374;
	<unknown> ϕ;
	struct Eq_6592 * x8_375;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_376;
	<unknown> ϕ;
	word128 q0_384;
	<unknown> ϕ;
	word64 sp_362;
	word64 x19_372;
	word64 x21_370;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x8_268;
	struct Eq_2626 * x1_274;
	word64 x21_263;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x21_181;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x28_174;
	<unknown> ϕ;
	struct Eq_6733 * x27_175;
	<unknown> ϕ;
	struct Eq_6592 * x26_176;
	<unknown> ϕ;
	struct Eq_6592 * x25_177;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x20_182;
	<unknown> ϕ;
	struct Eq_6592 * x19_183;
	<unknown> ϕ;
	struct Eq_6728 * x29_184;
	<unknown> ϕ;
	word64 x30_185;
	<unknown> ϕ;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_187;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x22_83;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x28_77;
	<unknown> ϕ;
	struct Eq_6733 * x27_78;
	<unknown> ϕ;
	struct Eq_6592 * x26_79;
	<unknown> ϕ;
	struct Eq_6592 * x25_80;
	<unknown> ϕ;
	struct Eq_2626 * x20_85;
	<unknown> ϕ;
	struct Eq_6592 * x19_86;
	<unknown> ϕ;
	struct Eq_6728 * x29_87;
	<unknown> ϕ;
	word64 x30_88;
	<unknown> ϕ;
	Eq_1720 sysreg3_3_13_0_2_90;
	<unknown> ϕ;
	<unknown> ϕ;
	word128 q0_98;
	word128 q0;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_2626 * x1;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_6733 * x8;
	word64 x30;
	word64 x29;
	struct Eq_6592 * x19;
	word64 x20;
	word64 x21;
	word64 x22;
	word64 x23;
	struct Eq_6592 * x24;
	struct Eq_6592 * x25;
	struct Eq_6592 * x26;
	word64 x27;
	struct Eq_2626 * x28;
	ptr64 fp;
	ptr64 fp;
	struct Eq_2626 * x28;
	word64 x27;
	struct Eq_6592 * x26;
	struct Eq_6592 * x25;
	struct Eq_6592 * x24;
	word64 x23;
	word64 x22;
	word64 x21;
	word64 x20;
	struct Eq_6592 * x19;
	word64 x29;
	word64 x30;
	struct Eq_6733 * x8;
	Eq_1720 sysreg3_3_13_0_2;
	struct Eq_2626 * x1;
	word128 q0;
	ptr64 sp_2 = fp;
	ptr64 sp_3 = fp + -96;
	struct Eq_2626 * qwLoc60_2153 = x28;
	word64 qwLoc58_2154 = x27;
	ptr64 v8_8 = fp + -80;
	struct Eq_6592 * qwLoc50_2155 = x26;
	struct Eq_6592 * qwLoc48_2156 = x25;
	ptr64 v11_13 = fp + -64;
	struct Eq_6592 * qwLoc40_2157 = x24;
	word64 qwLoc38_2158 = x23;
	ptr64 v14_18 = fp + -48;
	word64 qwLoc30_2159 = x22;
	word64 qwLoc28_2160 = x21;
	ptr64 v17_23 = fp + -32;
	word64 qwLoc20_2161 = x20;
	struct Eq_6592 * qwLoc18_2162 = x19;
	ptr64 v20_28 = fp + -16;
	word64 qwLoc10_2163 = x29;
	word64 qwLoc08_2164 = x30;
	struct Eq_6728 * x29_33 = fp + ~0x0F;
	ptr64 sp_34 = fp - 0x0230;
	struct Eq_6733 * x27_36 = x8;
	struct Eq_6738 * x8_38 = __mrs(sysreg3_3_13_0_2);
	struct Eq_6738 * qwLoc0230_2165 = x8_38;
	word64 x8_40 = x8_38->qw0028;
	Eq_14 x11_41;
	x11_41.u0 = 0x00071000;
	word32 * x11_42 = &g_dw71118;
	ptr64 x9_43 = fp - 0x01D8;
	word64 qwLoc70_2166 = x8_40;
	word32 w8_45 = g_dw71118;
	ptr64 x23_46 = fp - 464;
	Eq_916 v27_47;
	v27_47.u0 = g_t71120.u0;
	ui32 w9_48 = (word32) v27_47;
	Eq_2439 x10_49 = (char *) &g_t71120 + 1;
	word32 dwLoc01D8_2167 = w8_45;
	ptr64 x8_51 = g_ptr71130;
	word32 x8_32_32_2134 = SLICE(x8_51, word32, 32);
	ui32 w31_52 = w9_48 & 0x01;
	Eq_6770 NZ_53;
	NZ_53.u0 = cond(w9_48 & 0x01);
	bool Z_59 = SLICE(NZ_53, bool, 30);
	struct Eq_2626 * x20_55 = x1;
	ptr64 v34_56 = fp - 0x01C8;
	word64 qwLoc01C8_2168 = 0x00;
	word64 qwLoc01C0_2169 = 0x00;
	struct Eq_2626 * x22_60 = (w9_48 & 0x01) == 0x00 ? (char *) &g_t71120 + 1 : x8_51;
	struct Eq_2626 * x0_61 = x22_60;
	word64 qwLoc01D0_2170 = 0x00;
	Eq_14 x0_63 = strlen(x22_60);
	Eq_6797 sp_64 = (Eq_6797) ((word32) x0_63 + 16);
	Eq_6800 NZCV_65;
	NZCV_65.u0 = cond((word32) x0_63 + 16);
	bool C_66 = SLICE(NZCV_65, bool, 29);
	if (x0_63 >= ~0x0F)
	{
		ptr64 x0_67 = fp - 464;
		fn000000000001B2D0();
		goto l000000000001F7AC;
	}
	Eq_14 x21_70 = x0_63;
	ui32 w21_112 = (word32) x0_63;
	Eq_6814 NZCV_71;
	NZCV_71.u0 = cond(x0_63 - 0x17);
	bool C_72 = SLICE(NZCV_71, bool, 29);
	void * x23_114;
	struct Eq_6592 * x24_81;
	word32 x8_32_32_2136;
	void * x23_107;
	Eq_6797 sp_76;
	Eq_14 x21_84;
	if (x0_63 < 0x17)
	{
		ui32 w8_113 = w21_112 << 1;
		x23_114 = fp - 0x01CF;
		((word32) x0_63 + 112)->u1 = (byte) w21_112 << 0x01;
		if (x0_63 == 0x00)
			goto l000000000001EE58;
	}
	else
	{
		Eq_6820 x8_73 = (Eq_6820) ((word32) x0_63 + 16);
		ui64 x24_74 = (word32) x0_63 + 16 & ~0x0F;
		ui64 x0_75 = x24_74;
		void * x0_96 = _Znwm(x24_74);
		ui64 x8_106 = x24_81 | 0x01;
		x8_32_32_2136 = SLICE(x24_81, word32, 32);
		x23_107 = x0_96;
		word64 v97_108 = &sp_76->t0068.u0;
		sp_76->t0068.u1 = (size_t) x21_84;
		sp_76->ptr0070 = x0_96;
		sp_76->t0060.u0 = (ui64) (x24_81 | 0x01);
	}
	word32 x8_32_32_2135 = ϕ(x8_32_32_2134, x8_32_32_2136);
	word128 q0_300 = ϕ(q0, q0_98);
	struct Eq_6592 * x24_237 = ϕ(x24, x24_81);
	Eq_1720 sysreg3_3_13_0_2_171 = ϕ(sysreg3_3_13_0_2, sysreg3_3_13_0_2_90);
	word64 x30_169 = ϕ(x30, x30_88);
	struct Eq_6728 * x29_167 = ϕ(x29_33, x29_87);
	struct Eq_6592 * x19_165 = ϕ(x19, x19_86);
	struct Eq_2626 * x20_163 = ϕ(x20_55, x20_85);
	struct Eq_6592 * x25_161 = ϕ(x25, x25_80);
	struct Eq_6592 * x26_159 = ϕ(x26, x26_79);
	struct Eq_6733 * x27_157 = ϕ(x27_36, x27_78);
	struct Eq_2626 * x28_155 = ϕ(x28, x28_77);
	Eq_6797 sp_127 = ϕ(sp_64, sp_76);
	Eq_14 x21_120 = ϕ(x21_70, x21_84);
	struct Eq_2626 * x22_118 = ϕ(x22_60, x22_83);
	void * x23_116 = ϕ(x23_114, x23_107);
	void * x0_117 = x23_116;
	struct Eq_2626 * x1_119 = x22_118;
	Eq_14 x2_121 = x21_120;
	void * x0_122 = memcpy(x23_116, x22_118, x21_120);
l000000000001EE58:
	word32 x8_32_32_2133 = ϕ(x8_32_32_2134, x8_32_32_2135);
	struct Eq_2626 * x22_339 = ϕ(x22_60, x22_118);
	word128 q0_298 = ϕ(q0, q0_300);
	struct Eq_6592 * x24_236 = ϕ(x24, x24_237);
	struct Eq_2626 * x1_172 = ϕ(x1, x1_119);
	word32 x1_32_32_2114 = SLICE(x1_172, word32, 32);
	Eq_1720 sysreg3_3_13_0_2_170 = ϕ(sysreg3_3_13_0_2, sysreg3_3_13_0_2_171);
	word64 x30_168 = ϕ(x30, x30_169);
	struct Eq_6728 * x29_166 = ϕ(x29_33, x29_167);
	struct Eq_6592 * x19_164 = ϕ(x19, x19_165);
	struct Eq_2626 * x20_162 = ϕ(x20_55, x20_163);
	struct Eq_6592 * x25_160 = ϕ(x25, x25_161);
	struct Eq_6592 * x26_158 = ϕ(x26, x26_159);
	struct Eq_6733 * x27_156 = ϕ(x27_36, x27_157);
	struct Eq_2626 * x28_154 = ϕ(x28, x28_155);
	Eq_6797 sp_126 = ϕ(sp_64, sp_127);
	Eq_14 x21_124 = ϕ(x21_70, x21_120);
	word32 x21_32_32_343 = SLICE(x21_124, word32, 32);
	void * x23_123 = ϕ(x23_114, x23_116);
	*(x23_123 + x21_124) = (word64) 0x00;
	word64 x0_128 = &sp_126->qw0050 + 1;
	ui32 w0_129 = (word32) x0_128;
	((LEVELS) x0_128);
	struct Eq_6592 * x8_2137;
	word64 x21_3055;
	word64 x21_3059;
	if ((w0_129 & 0x01) == 0x00)
	{
		word32 w21_130 = 0x00;
		Eq_6848 v43_131;
		v43_131.u1 = sp_126->t0060.u1;
		ui32 w8_132 = (word32) v43_131;
		x8_2137 = SEQ(x8_32_32_2133, w8_132);
		x21_3055 = SEQ(x21_32_32_343, w21_130);
		if ((w8_132 & 0x01) == 0x00)
			goto l000000000001EF10;
		x21_3059 = SEQ(x21_32_32_343, w21_130);
		goto l000000000001EF28;
	}
	Eq_14 x8_133;
	x8_133.u0 = 0x00070000;
	struct Eq_2626 ** x8_134 = g_ptr70D68;
	word32 x8_32_32_249 = SLICE(x8_134, word32, 32);
	struct Eq_6997 * v40_135 = (struct Eq_6997 *) ((char *) &sp_126->t0040 + 8);
	v40_135->qw0000 = 0x00;
	v40_135->qw0008 = 0x00;
	sp_126->t0040.u1 = 0x00;
	struct Eq_2626 * x21_139 = (struct Eq_2626 *) *x8_134;
	struct Eq_2626 * x0_140 = x21_139;
	Eq_14 x0_141 = strlen(x21_139);
	Eq_7022 sp_142 = (Eq_7022) ((word32) x0_141 + 16);
	Eq_7025 NZCV_143;
	NZCV_143.u0 = cond((word32) x0_141 + 16);
	bool C_144 = SLICE(NZCV_143, bool, 29);
	if (x0_141 >= ~0x0F)
	{
		Eq_7032 x0_145 = (Eq_7032) ((word32) x0_141 + 80);
		fn000000000001B2D0();
		goto l000000000001F7C0;
	}
	Eq_14 x22_148 = x0_141;
	ui32 w22_210 = (word32) x0_141;
	Eq_7040 NZCV_149;
	NZCV_149.u0 = cond(x0_141 - 0x17);
	bool C_150 = SLICE(NZCV_149, bool, 29);
	void * x23_212;
	ui64 x8_250;
	ui64 x8_203;
	struct Eq_6592 * x24_178;
	void * x23_204;
	Eq_7022 sp_173;
	Eq_14 x22_180;
	if (x0_141 < 0x17)
	{
		Eq_7077 x9_209 = (Eq_7077) ((word32) x0_141 + 80);
		ui32 w8_211 = w22_210 << 1;
		x23_212 = (word32) x0_141 + 80 | 0x01;
		((word32) x0_141 + 80)->u1 = (byte) w22_210 << 0x01;
		x8_250 = SEQ(x8_32_32_249, w22_210 << 1);
		if (x0_141 == 0x00)
			goto l000000000001EEF0;
	}
	else
	{
		Eq_7046 x8_151 = (Eq_7046) ((word32) x0_141 + 16);
		ui64 x24_152 = (word32) x0_141 + 16 & ~0x0F;
		ui64 x0_153 = x24_152;
		void * x0_193 = _Znwm(x24_152);
		x8_203 = x24_178 | 0x01;
		x23_204 = x0_193;
		word64 v44_205 = (char *) &sp_173->ptr0018 + 48;
		*((char *) &sp_173->ptr0018 + 48) = (Eq_7022) x22_180;
		*((char *) &sp_173->ptr0018 + 56) = (Eq_7022) x0_193;
		*((char *) &sp_173->ptr0018 + 40) = (Eq_7022) (x24_178 | 0x01);
	}
	Eq_1720 sysreg3_3_13_0_2_253 = ϕ(sysreg3_3_13_0_2_170, sysreg3_3_13_0_2_187);
	ui64 x8_251 = ϕ(x8_250, x8_203);
	word64 x30_247 = ϕ(x30_168, x30_185);
	struct Eq_6728 * x29_245 = ϕ(x29_166, x29_184);
	struct Eq_6592 * x19_243 = ϕ(x19_164, x19_183);
	struct Eq_2626 * x20_241 = ϕ(x20_162, x20_182);
	struct Eq_6592 * x24_238 = ϕ(x24_236, x24_178);
	struct Eq_6592 * x25_234 = ϕ(x25_160, x25_177);
	struct Eq_6592 * x26_232 = ϕ(x26_158, x26_176);
	struct Eq_6733 * x27_230 = ϕ(x27_156, x27_175);
	struct Eq_2626 * x28_228 = ϕ(x28_154, x28_174);
	Eq_7022 sp_225 = ϕ(sp_142, sp_173);
	Eq_14 x22_218 = ϕ(x22_148, x22_180);
	struct Eq_2626 * x21_216 = ϕ(x21_139, x21_181);
	void * x23_214 = ϕ(x23_212, x23_204);
	void * x0_215 = x23_214;
	struct Eq_2626 * x1_217 = x21_216;
	Eq_14 x2_219 = x22_218;
	void * x0_220 = memcpy(x23_214, x21_216, x22_218);
l000000000001EEF0:
	struct Eq_2626 * x1_254 = ϕ(x1_172, x1_217);
	Eq_1720 sysreg3_3_13_0_2_252 = ϕ(sysreg3_3_13_0_2_170, sysreg3_3_13_0_2_253);
	ui64 x8_248 = ϕ(x8_250, x8_251);
	word64 x30_246 = ϕ(x30_168, x30_247);
	struct Eq_6728 * x29_244 = ϕ(x29_166, x29_245);
	struct Eq_6592 * x19_242 = ϕ(x19_164, x19_243);
	struct Eq_2626 * x20_240 = ϕ(x20_162, x20_241);
	struct Eq_2626 * x21_239 = ϕ(x21_139, x21_216);
	struct Eq_6592 * x24_235 = ϕ(x24_236, x24_238);
	struct Eq_6592 * x25_233 = ϕ(x25_160, x25_234);
	struct Eq_6592 * x26_231 = ϕ(x26_158, x26_232);
	struct Eq_6733 * x27_229 = ϕ(x27_156, x27_230);
	struct Eq_2626 * x28_227 = ϕ(x28_154, x28_228);
	Eq_7022 sp_224 = ϕ(sp_142, sp_225);
	Eq_14 x22_222 = ϕ(x22_148, x22_218);
	void * x23_221 = ϕ(x23_212, x23_214);
	*(x23_221 + x22_222) = (word64) 0x00;
	word64 x0_226 = (char *) &sp_224->ptr0018 + 40;
	word64 x0_275 = _ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(x0_226);
	word32 w0_287 = (word32) x0_275;
	word32 x21_32_32_344 = SLICE(x21_263, word32, 32);
	word32 x1_32_32_2115 = SLICE(x1_274, word32, 32);
	word32 x8_32_32_2138 = SLICE(x8_268, word32, 32);
	Eq_7007 v45_285;
	Eq_6797 sp_255;
	v45_285.u0 = sp_255->t0040.u0;
	ui32 w8_286 = (word32) v45_285;
	word32 w21_288 = w0_287;
	struct Eq_6592 * x8_2139;
	word64 x21_3060;
	word64 x21_3057;
	struct Eq_6592 * x8_2132;
	struct Eq_6592 * x8_2140;
	word32 x1_32_32_2113;
	word128 q0_361;
	word128 q0_277;
	Eq_1720 sysreg3_3_13_0_2_358;
	Eq_1720 sysreg3_3_13_0_2_269;
	word64 x30_355;
	word64 x30_267;
	struct Eq_6728 * x29_352;
	struct Eq_6728 * x29_266;
	struct Eq_2626 * x20_349;
	struct Eq_2626 * x20_264;
	word32 x21_32_32_342;
	struct Eq_2626 * x22_338;
	struct Eq_2626 * x22_262;
	void * x23_335;
	void * x23_261;
	struct Eq_6592 * x24_332;
	struct Eq_6592 * x24_260;
	struct Eq_6592 * x25_329;
	struct Eq_6592 * x25_259;
	struct Eq_6592 * x26_326;
	struct Eq_6592 * x26_258;
	struct Eq_6733 * x27_323;
	struct Eq_6733 * x27_257;
	struct Eq_2626 * x28_320;
	struct Eq_2626 * x28_256;
	Eq_6797 sp_314;
	word64 x21_345;
	word64 x21_3061;
	if ((w8_286 & 0x01) != 0x00)
	{
		Eq_6848 v46_292;
		v46_292.u1 = sp_255->t0060.u1;
		ui32 w8_293 = (word32) v46_292;
		x8_2139 = SEQ(x8_32_32_2138, w8_293);
		word64 x21_3056 = SEQ(x21_32_32_344, w21_288);
		x21_3060 = SEQ(x21_32_32_344, w21_288);
		if ((w8_293 & 0x01) != 0x00)
		{
l000000000001EF10:
			word64 x21_3058 = ϕ(x21_3055, x21_3056, x21_3057);
			<unknown> ϕ;
			x8_2132 = ϕ(x8_2137, x8_2139, x8_2140);
			<unknown> ϕ;
			x1_32_32_2113 = ϕ(x1_32_32_2114, x1_32_32_2115, x1_32_32_2115);
			<unknown> ϕ;
			q0_361 = ϕ(q0_298, q0_277, q0_277);
			<unknown> ϕ;
			sysreg3_3_13_0_2_358 = ϕ(sysreg3_3_13_0_2_170, sysreg3_3_13_0_2_269, sysreg3_3_13_0_2_269);
			<unknown> ϕ;
			x30_355 = ϕ(x30_168, x30_267, x30_267);
			<unknown> ϕ;
			x29_352 = ϕ(x29_166, x29_266, x29_266);
			<unknown> ϕ;
			x20_349 = ϕ(x20_162, x20_264, x20_264);
			x21_32_32_342 = SLICE(x21_3058, word32, 32);
			<unknown> ϕ;
			x22_338 = ϕ(x22_339, x22_262, x22_262);
			<unknown> ϕ;
			x23_335 = ϕ(x23_123, x23_261, x23_261);
			<unknown> ϕ;
			x24_332 = ϕ(x24_236, x24_260, x24_260);
			<unknown> ϕ;
			x25_329 = ϕ(x25_160, x25_259, x25_259);
			<unknown> ϕ;
			x26_326 = ϕ(x26_158, x26_258, x26_258);
			<unknown> ϕ;
			x27_323 = ϕ(x27_156, x27_257, x27_257);
			<unknown> ϕ;
			x28_320 = ϕ(x28_154, x28_256, x28_256);
			<unknown> ϕ;
			sp_314 = ϕ(sp_126, sp_255, sp_255);
			<unknown> ϕ;
			Mem306 = ϕ(Mem125, Mem223, Mem223);
			ui32 w21_303 = (word32) x21_3058;
			x21_345 = x21_3058;
			if ((w21_303 & 0x01) != 0x00)
				goto l000000000001EF80;
			goto l000000000001EF34;
		}
	}
	else
	{
		int64 x0_289 = sp_255->qw0050;
		((real64) q0_277, x0_289, x1_274);
		Eq_6848 v54_290;
		v54_290.u1 = sp_255->t0060.u1;
		ui32 w8_291 = (word32) v54_290;
		x8_2140 = SEQ(x8_32_32_2138, w8_291);
		x21_3057 = SEQ(x21_32_32_344, w21_288);
		x21_3061 = SEQ(x21_32_32_344, w21_288);
		if ((w8_291 & 0x01) == 0x00)
			goto l000000000001EF10;
	}
l000000000001EF28:
	word64 x21_3062 = ϕ(x21_3059, x21_3060, x21_3061);
	struct Eq_6592 * x8_2141 = ϕ(x8_2137, x8_2139, x8_2140);
	Eq_1720 sysreg3_3_13_0_2_359 = ϕ(sysreg3_3_13_0_2_170, sysreg3_3_13_0_2_269, sysreg3_3_13_0_2_269);
	word64 x30_356 = ϕ(x30_168, x30_267, x30_267);
	struct Eq_6728 * x29_353 = ϕ(x29_166, x29_266, x29_266);
	struct Eq_2626 * x20_350 = ϕ(x20_162, x20_264, x20_264);
	word32 x21_32_32_346 = SLICE(x21_3062, word32, 32);
	struct Eq_2626 * x22_340 = ϕ(x22_339, x22_262, x22_262);
	void * x23_336 = ϕ(x23_123, x23_261, x23_261);
	struct Eq_6592 * x24_333 = ϕ(x24_236, x24_260, x24_260);
	struct Eq_6592 * x25_330 = ϕ(x25_160, x25_259, x25_259);
	struct Eq_6592 * x26_327 = ϕ(x26_158, x26_258, x26_258);
	struct Eq_6733 * x27_324 = ϕ(x27_156, x27_257, x27_257);
	struct Eq_2626 * x28_321 = ϕ(x28_154, x28_256, x28_256);
	ui32 w21_302 = (word32) x21_3062;
	struct Eq_2626 * x1_301 = ϕ(x1_172, x1_274, x1_274);
	word32 x1_32_32_2116 = SLICE(x1_301, word32, 32);
	word128 q0_297 = ϕ(q0_298, q0_277, q0_277);
	<unknown> ϕ;
	Mem295 = ϕ(Mem125, Mem223, Mem223);
	Eq_6797 sp_294 = ϕ(sp_126, sp_255, sp_255);
	void * x0_296 = sp_294->ptr0070;
	((real64) q0_297, x0_296, x1_301);
	word64 x21_347 = x21_3062;
	if ((w21_302 & 0x01) == 0x00)
		goto l000000000001EF80;
l000000000001EF34:
	word128 q0_360 = ϕ(q0_361, q0_297);
	Eq_1720 sysreg3_3_13_0_2_357 = ϕ(sysreg3_3_13_0_2_358, sysreg3_3_13_0_2_359);
	word64 x30_354 = ϕ(x30_355, x30_356);
	struct Eq_6728 * x29_351 = ϕ(x29_352, x29_353);
	struct Eq_2626 * x20_348 = ϕ(x20_349, x20_350);
	word64 x21_341 = ϕ(x21_345, x21_347);
	struct Eq_2626 * x22_337 = ϕ(x22_338, x22_340);
	void * x23_334 = ϕ(x23_335, x23_336);
	struct Eq_6592 * x24_331 = ϕ(x24_332, x24_333);
	struct Eq_6592 * x25_328 = ϕ(x25_329, x25_330);
	struct Eq_6592 * x26_325 = ϕ(x26_326, x26_327);
	struct Eq_6733 * x27_322 = ϕ(x27_323, x27_324);
	struct Eq_2626 * x28_319 = ϕ(x28_320, x28_321);
	Eq_6797 sp_313 = ϕ(sp_314, sp_294);
	<unknown> ϕ;
	Mem305 = ϕ(Mem306, Mem295);
	Eq_14 x8_304;
	x8_304.u0 = 0x00070000;
	struct Eq_2626 ** x8_307 = g_ptr70D68;
	Eq_14 x2_308;
	x2_308.u0 = 0x00071000;
	Eq_14 x3_309;
	x3_309.u0 = 0x00052000;
	word32 * x2_310 = &g_dw71118;
	struct Eq_2626 * x1_311 = (struct Eq_2626 *) *x8_307;
	Eq_14 x3_312;
	x3_312.u0 = 337390;
	word64 x0_315 = &sp_313->qw0078;
	word32 w4_316 = 0x06;
	word64 x5_317 = 0x00;
	word64 x19_318 = &sp_313->qw0078;
	_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_(x0_315, x1_311, 0x00071000, &g_dw71118, 0x00052000, 337390, 0x00);
	word32 x21_32_32_2124 = SLICE(x21_370, word32, 32);
	word64 x0_392 = x19_372 + 0x08;
	Eq_14 x1_393;
	x1_393.u0 = 0x00052000;
	ptr64 x1_394 = &g_t52153;
	word32 x1_32_32_2117 = SLICE(&g_t52153, word32, 32);
	word32 w2_395 = 0x0D;
	fn000000000001BB30();
	word64 x0_398 = sp_362 + 0x78;
	LogCapture::~LogCapture();
	Eq_6797 sp_399 = sp_362 + 0x08;
l000000000001EF80:
	word128 q0_2144 = ϕ(q0_361, q0_297, q0_384);
	Eq_1720 sysreg3_3_13_0_2_2143 = ϕ(sysreg3_3_13_0_2_358, sysreg3_3_13_0_2_359, sysreg3_3_13_0_2_376);
	struct Eq_6592 * x8_2131 = ϕ(x8_2132, x8_2141, x8_375);
	word64 x30_2130 = ϕ(x30_355, x30_356, x30_374);
	struct Eq_6728 * x29_2129 = ϕ(x29_352, x29_353, x29_373);
	word32 x21_32_32_2123 = ϕ(x21_32_32_342, x21_32_32_346, x21_32_32_2124);
	struct Eq_2626 * x22_2122 = ϕ(x22_338, x22_340, x22_369);
	void * x23_2121 = ϕ(x23_335, x23_336, x23_368);
	struct Eq_6592 * x24_2120 = ϕ(x24_332, x24_333, x24_367);
	struct Eq_6592 * x26_2119 = ϕ(x26_326, x26_327, x26_365);
	word32 x1_32_32_2112 = ϕ(x1_32_32_2113, x1_32_32_2116, x1_32_32_2117);
	struct Eq_2626 * x20_2109 = ϕ(x20_349, x20_350, x20_371);
	Eq_6797 sp_2108 = ϕ(sp_314, sp_294, sp_399);
	struct Eq_6733 * x27_400 = ϕ(x27_323, x27_324, x27_364);
	struct Eq_6733 * x25_401 = x27_400;
	struct Eq_6592 * x25_402 = (struct Eq_6592 *) &x27_400->qw0008;
	x25_402->ptr0000 = null;
	Eq_14 x28_404;
	x28_404.u0 = 0x00052000;
	word32 w21_405 = 0x00;
	struct Eq_6592 * x19_406 = x25_402;
	struct Eq_2626 * x28_407 = (struct Eq_2626 *) &g_t520F7;
	x27_400->qw0010 = 0x00;
	x27_400->ptr0000 = x25_402;
	word64 x1_32_32_w21_3064 = SEQ(x1_32_32_2112, w21_405);
l000000000001EFA0:
	word64 x1_32_32_w21_3066 = ϕ(x1_32_32_w21_3064, x1_32_32_w21_3065);
	word128 q0_433 = ϕ(q0_2144, q0_755);
	Eq_1720 sysreg3_3_13_0_2_432 = ϕ(sysreg3_3_13_0_2_2143, sysreg3_3_13_0_2_753);
	struct Eq_6592 * x8_431 = ϕ(x8_2131, x8_2142);
	word64 x30_430 = ϕ(x30_2130, x30_751);
	struct Eq_6728 * x29_429 = ϕ(x29_2129, x29_749);
	struct Eq_6592 * x19_428 = ϕ(x19_406, x19_747);
	word32 x21_32_32_426 = ϕ(x21_32_32_2123, x21_32_32_2125);
	struct Eq_2626 * x22_425 = ϕ(x22_2122, x22_683);
	void * x23_424 = ϕ(x23_2121, x23_688);
	struct Eq_6592 * x24_423 = ϕ(x24_2120, x24_745);
	struct Eq_6592 * x25_422 = ϕ(x25_402, x25_743);
	struct Eq_6592 * x26_421 = ϕ(x26_2119, x26_741);
	struct Eq_6733 * x27_420 = ϕ(x27_400, x27_740);
	struct Eq_2626 * x28_419 = ϕ(x28_407, x28_738);
	word32 x1_32_32_417 = SLICE(x1_32_32_w21_3066, word32, 64);
	word32 w21_415 = (word32) x1_32_32_w21_3066;
	struct Eq_2626 * x20_412 = ϕ(x20_2109, x20_2110);
	Eq_6797 sp_410 = ϕ(sp_2108, sp_714);
	word64 v228_3054 = 0x00;
	word64 x0_413 = x20_412->qw0008;
	word64 x2_414 = &sp_410->qw0078;
	word32 w1_416 = w21_415;
	word64 x1_418 = x1_32_32_w21_3066;
	word64 x21_427 = SEQ(x21_32_32_426, w21_415);
	word64 x0_454 = rs2_supports_device_info(x0_413, x1_418, x2_414, 0x00);
	int32 w0_464 = (word32) x0_454;
	word32 w21_476 = (word32) x21_442;
	word32 x1_32_32_478 = SLICE(x1_453, word32, 32);
	word32 x22_32_32_480 = SLICE(x22_441, word32, 32);
	word32 x21_32_32_572 = SLICE(x21_442, word32, 32);
	word32 x8_32_32_603 = SLICE(x8_447, word32, 32);
	word32 x10_32_32_2263 = SLICE(x10_451, word32, 32);
	int32 w22_465 = w0_464;
	word64 x0_466 = sp_434->qw0078;
	fn000000000001ADF0();
	Eq_8036 NZCV_469;
	NZCV_469.u0 = cond(w0_464 - 0x01);
	Eq_8038 NV_470;
	NV_470.u0 = SLICE(NZCV_469, bool, 31);
	word64 x22_481 = SEQ(x22_32_32_480, w0_464);
	struct Eq_2626 * x20_443;
	word64 x21_490;
	struct Eq_6592 * x8_495;
	word32 x10_32_32_2262;
	struct Eq_2626 * x22_512;
	Eq_6797 sp_482;
	struct Eq_6592 * x19_492;
	word64 x5_507;
	word64 x5_459;
	word64 x3_505;
	word64 x3_457;
	word32 w4_506;
	word32 w4_458;
	struct Eq_6592 * x26_472;
	word128 q0_504;
	word128 q0_456;
	word64 x1_501;
	Eq_1720 sysreg3_3_13_0_2_496;
	Eq_1720 sysreg3_3_13_0_2_448;
	word64 x30_494;
	word64 x30_446;
	struct Eq_6728 * x29_493;
	struct Eq_6728 * x29_445;
	struct Eq_6592 * x19_444;
	struct Eq_2626 * x20_491;
	struct Eq_2626 * x22_471;
	struct Eq_6733 * x27_484;
	struct Eq_6733 * x27_436;
	struct Eq_2626 * x28_483;
	struct Eq_2626 * x28_435;
	struct Eq_6592 * x25_486;
	struct Eq_6592 * x25_438;
	word64 x5_2375;
	word64 x3_2338;
	word32 x10_32_32_2267;
	word32 w4_2225;
	Eq_6797 sp_626;
	word128 q0_621;
	word64 x1_616;
	Eq_1720 sysreg3_3_13_0_2_611;
	struct Eq_6592 * x8_599;
	word64 x30_596;
	struct Eq_6728 * x29_591;
	struct Eq_6592 * x19_517;
	struct Eq_2626 * x20_582;
	word64 x21_575;
	struct Eq_2626 * x22_567;
	struct Eq_6592 * x25_560;
	struct Eq_6592 * x26_518;
	struct Eq_6733 * x27_554;
	struct Eq_2626 * x28_549;
	struct Eq_6592 * x24_519;
	if (w0_464 >= 0x01)
	{
		word64 v227_3053 = 0x00;
		word64 x0_474 = x20_443->qw0008;
		word64 x2_475 = &sp_434->qw0078;
		word32 w1_477 = w21_476;
		word64 x1_479 = SEQ(x1_32_32_478, w21_476);
		struct Eq_2626 * x0_502 = rs2_get_device_info(x0_474, x1_479, &sp_434->qw0078, 0x00);
		word32 x21_32_32_571 = SLICE(x21_490, word32, 32);
		word32 x8_32_32_602 = SLICE(x8_495, word32, 32);
		word32 w21_2148 = (word32) x21_490;
		word64 x10_499;
		x10_32_32_2262 = SLICE(x10_499, word32, 32);
		x22_512 = x0_502;
		word64 x0_513 = sp_482->qw0078;
		fn000000000001ADF0();
		struct Eq_6592 * x26_516 = x19_492->ptr0000;
		if (x26_516 != null)
		{
l000000000001EFF0:
			word64 x21_3063 = ϕ(x21_490, x21_442);
			word64 x5_2372 = ϕ(x5_507, x5_459);
			word64 x3_2335 = ϕ(x3_505, x3_457);
			word32 x10_32_32_2261 = ϕ(x10_32_32_2262, x10_32_32_2263);
			word32 w4_2222 = ϕ(w4_506, w4_458);
			int32 w21_2147 = (word32) x21_3063;
			<unknown> ϕ;
			Mem2146 = ϕ(Mem473, Mem411);
			struct Eq_6592 * x26_2145 = ϕ(x26_516, x26_472);
			Eq_6797 sp_624 = ϕ(sp_482, sp_434);
			word128 q0_619 = ϕ(q0_504, q0_456);
			word64 x1_614 = ϕ(x1_501, x1_453);
			Eq_1720 sysreg3_3_13_0_2_609 = ϕ(sysreg3_3_13_0_2_496, sysreg3_3_13_0_2_448);
			word32 x8_32_32_601 = ϕ(x8_32_32_602, x8_32_32_603);
			word64 x30_594 = ϕ(x30_494, x30_446);
			struct Eq_6728 * x29_589 = ϕ(x29_493, x29_445);
			struct Eq_6592 * x19_585 = ϕ(x19_492, x19_444);
			struct Eq_2626 * x20_580 = ϕ(x20_491, x20_443);
			word32 x21_32_32_570 = SLICE(x21_3063, word32, 32);
			struct Eq_2626 * x22_565 = ϕ(x22_512, x22_471);
			struct Eq_6733 * x27_552 = ϕ(x27_484, x27_436);
			struct Eq_2626 * x28_547 = ϕ(x28_483, x28_435);
			struct Eq_6592 * x25_520 = ϕ(x25_486, x25_438);
			struct Eq_6592 * x24_521 = x25_520;
			struct Eq_6592 * x24_534;
			struct Eq_6592 * x24_531;
			struct Eq_6592 * x26_522;
			word64 x21_573;
			struct Eq_6592 * x8_539;
			struct Eq_6592 * x24_542;
			struct Eq_6592 * x23_543;
			word64 x21_576;
			struct Eq_6592 * x8_606;
			struct Eq_6592 * x8_532;
			word64 x21_577;
			while (true)
			{
				word32 x8_32_32_600;
				word32 x8_32_32_605;
				struct Eq_6592 * x26_538;
				int32 w8_524;
				while (true)
				{
					<unknown> ϕ;
					word32 x8_32_32_604;
					x8_32_32_600 = ϕ(x8_32_32_601, x8_32_32_604, x8_32_32_605);
					<unknown> ϕ;
					struct Eq_6592 * x24_540;
					x24_534 = ϕ(x24_521, x24_540, x24_531);
					<unknown> ϕ;
					struct Eq_6592 * x26_541;
					x26_522 = ϕ(x26_2145, x26_541, x26_538);
					w8_524 = x26_522->dw0020;
					Eq_7698 NZCV_526;
					NZCV_526.u0 = cond(w21_2147 - w8_524);
					Eq_7700 NZV_527;
					NZV_527.u0 = SLICE(NZCV_526, bool, 31);
					x21_573 = x21_3063;
					if (w21_2147 >= w8_524)
						break;
					x8_539 = x26_522->ptr0000;
					x8_32_32_604 = SLICE(x8_539, word32, 32);
					if (x8_539 == null)
					{
						x24_542 = x26_522;
						x23_543 = x26_522->ptr0000;
						if (x23_543 != null)
							goto l000000000001F0B4;
						goto l000000000001F050;
					}
					x24_540 = x26_522;
					x26_541 = x8_539;
				}
				Eq_7705 NZCV_528;
				NZCV_528.u0 = cond(w8_524 - w21_2147);
				Eq_7707 NZV_529;
				NZV_529.u0 = SLICE(NZCV_528, bool, 31);
				x21_576 = x21_3063;
				x8_606 = SEQ(x8_32_32_600, w8_524);
				if (w8_524 >= w21_2147)
					break;
				struct Eq_6592 * x24_530 = x26_522;
				x24_531 = (struct Eq_6592 *) &x26_522->qw0008;
				x8_532 = x24_531->ptr0000;
				x21_577 = x21_3063;
				x8_32_32_605 = SLICE(x8_532, word32, 32);
				if (x8_532 == null)
					break;
				x26_538 = x8_532;
			}
l000000000001F048:
			word64 x5_2374 = ϕ(x5_2375, x5_2372, x5_2372);
			word64 x3_2337 = ϕ(x3_2338, x3_2335, x3_2335);
			word32 x10_32_32_2266 = ϕ(x10_32_32_2267, x10_32_32_2261, x10_32_32_2261);
			word32 w4_2224 = ϕ(w4_2225, w4_2222, w4_2222);
			Eq_6797 sp_625 = ϕ(sp_626, sp_624, sp_624);
			word128 q0_620 = ϕ(q0_621, q0_619, q0_619);
			word64 x1_615 = ϕ(x1_616, x1_614, x1_614);
			Eq_1720 sysreg3_3_13_0_2_610 = ϕ(sysreg3_3_13_0_2_611, sysreg3_3_13_0_2_609, sysreg3_3_13_0_2_609);
			struct Eq_6592 * x8_598 = ϕ(x8_599, x8_606, x8_532);
			word64 x30_595 = ϕ(x30_596, x30_594, x30_594);
			struct Eq_6728 * x29_590 = ϕ(x29_591, x29_589, x29_589);
			struct Eq_6592 * x19_586 = ϕ(x19_517, x19_585, x19_585);
			struct Eq_2626 * x20_581 = ϕ(x20_582, x20_580, x20_580);
			word64 x21_574 = ϕ(x21_575, x21_576, x21_577);
			int32 w21_697 = (word32) x21_574;
			word32 x21_32_32_2128 = SLICE(x21_574, word32, 32);
			struct Eq_2626 * x22_566 = ϕ(x22_567, x22_565, x22_565);
			struct Eq_6592 * x25_559 = ϕ(x25_560, x25_520, x25_520);
			struct Eq_6592 * x26_556 = ϕ(x26_518, x26_522, x26_522);
			struct Eq_6733 * x27_553 = ϕ(x27_554, x27_552, x27_552);
			struct Eq_2626 * x28_548 = ϕ(x28_549, x28_547, x28_547);
			<unknown> ϕ;
			Mem535 = ϕ(Mem536, Mem2146, Mem2146);
			struct Eq_6592 * x24_533 = ϕ(x24_519, x24_534, x24_531);
			struct Eq_6592 * x23_537 = x24_533->ptr0000;
			if (x23_537 != null)
				goto l000000000001F0B4;
l000000000001F050:
			<unknown> ϕ;
			Mem627 = ϕ(Mem2146, Mem535);
			Eq_6797 sp_622 = ϕ(sp_624, sp_625);
			word128 q0_617 = ϕ(q0_619, q0_620);
			word64 x1_612 = ϕ(x1_614, x1_615);
			Eq_1720 sysreg3_3_13_0_2_607 = ϕ(sysreg3_3_13_0_2_609, sysreg3_3_13_0_2_610);
			struct Eq_6592 * x8_597 = ϕ(x8_539, x8_598);
			word64 x30_592 = ϕ(x30_594, x30_595);
			struct Eq_6728 * x29_587 = ϕ(x29_589, x29_590);
			struct Eq_6592 * x19_583 = ϕ(x19_585, x19_586);
			struct Eq_2626 * x20_578 = ϕ(x20_580, x20_581);
			word64 x21_568 = ϕ(x21_573, x21_574);
			struct Eq_2626 * x22_563 = ϕ(x22_565, x22_566);
			struct Eq_6592 * x23_562 = ϕ(x23_543, x23_537);
			struct Eq_6592 * x24_561 = ϕ(x24_542, x24_533);
			struct Eq_6592 * x25_557 = ϕ(x25_520, x25_559);
			struct Eq_6592 * x26_555 = ϕ(x26_522, x26_556);
			struct Eq_6733 * x27_550 = ϕ(x27_552, x27_553);
			struct Eq_2626 * x28_545 = ϕ(x28_547, x28_548);
			word32 w0_544 = 0x40;
			struct Eq_6592 * x0_648 = _Znwm();
			int32 w21_658 = (word32) x21_636;
			word32 x21_32_32_2127 = SLICE(x21_636, word32, 32);
			word32 x10_32_32_2265 = SLICE(x10_645, word32, 32);
			x0_648->dw0020 = w21_658;
			ptr64 v56_660 = &x0_648->qw0030;
			x0_648->qw0030 = 0x00;
			x0_648->qw0038 = 0x00;
			x0_648->qw0028 = 0x00;
			struct Eq_6592 * v57_664 = x0_648;
			x0_648->ptr0000 = null;
			x0_648->qw0008 = 0x00;
			struct Eq_6592 * x26_631;
			x0_648->ptr0010 = x26_631;
			struct Eq_6592 * x24_633;
			x24_633->ptr0000 = x0_648;
			struct Eq_6592 * x8_669 = x27_630->ptr0000;
			struct Eq_6592 * x23_670 = x0_648;
			struct Eq_6592 * x8_671 = x8_669->ptr0000;
			if (x8_671 != null)
			{
				x27_630->ptr0000 = x8_671;
				struct Eq_6592 * x1_674 = x24_633->ptr0000;
			}
			else
			{
				struct Eq_6592 * x1_672 = x0_648;
			}
			<unknown> ϕ;
			Mem676 = ϕ(Mem673, Mem668);
			word64 x0_677 = x27_630->qw0008;
			fn000000000001BD70();
			word64 x8_680 = x27_630->qw0010;
			struct Eq_6592 * x8_681 = x8_680 + 0x01;
			x27_630->qw0010 = x8_680 + 0x01;
l000000000001F0B4:
			word64 x5_2370 = ϕ(x5_2372, x5_653, x5_2374);
			word64 x3_2333 = ϕ(x3_2335, x3_651, x3_2337);
			word32 x10_32_32_2259 = ϕ(x10_32_32_2261, x10_32_32_2265, x10_32_32_2266);
			word32 w4_2220 = ϕ(w4_2222, w4_652, w4_2224);
			<unknown> ϕ;
			x8_2142 = ϕ(x8_539, x8_681, x8_598);
			<unknown> ϕ;
			x21_32_32_2125 = ϕ(x21_32_32_570, x21_32_32_2127, x21_32_32_2128);
			<unknown> ϕ;
			struct Eq_2626 * x20_637;
			x20_2110 = ϕ(x20_580, x20_637, x20_581);
			<unknown> ϕ;
			word128 q0_650;
			q0_755 = ϕ(q0_619, q0_650, q0_620);
			<unknown> ϕ;
			Eq_1720 sysreg3_3_13_0_2_642;
			sysreg3_3_13_0_2_753 = ϕ(sysreg3_3_13_0_2_609, sysreg3_3_13_0_2_642, sysreg3_3_13_0_2_610);
			<unknown> ϕ;
			word64 x30_640;
			x30_751 = ϕ(x30_594, x30_640, x30_595);
			<unknown> ϕ;
			struct Eq_6728 * x29_639;
			x29_749 = ϕ(x29_589, x29_639, x29_590);
			<unknown> ϕ;
			struct Eq_6592 * x19_638;
			x19_747 = ϕ(x19_585, x19_638, x19_586);
			<unknown> ϕ;
			x24_745 = ϕ(x24_542, x24_633, x24_533);
			<unknown> ϕ;
			struct Eq_6592 * x25_632;
			x25_743 = ϕ(x25_520, x25_632, x25_559);
			<unknown> ϕ;
			x26_741 = ϕ(x26_522, x26_631, x26_556);
			<unknown> ϕ;
			x27_740 = ϕ(x27_552, x27_630, x27_553);
			<unknown> ϕ;
			struct Eq_2626 * x28_629;
			x28_738 = ϕ(x28_547, x28_629, x28_548);
			<unknown> ϕ;
			Eq_6797 sp_628;
			sp_714 = ϕ(sp_624, sp_628, sp_625);
			<unknown> ϕ;
			Mem704 = ϕ(Mem2146, Mem682, Mem535);
			int32 w21_695 = ϕ(w21_2147, w21_658, w21_697);
			struct Eq_6592 * x23_686 = ϕ(x23_543, x23_670, x23_537);
			<unknown> ϕ;
			struct Eq_2626 * x22_635;
			x22_683 = ϕ(x22_565, x22_635, x22_566);
			struct Eq_2626 * x0_685 = x22_683;
			x23_688 = (void *) &x23_686->qw0028;
			Eq_14 x0_689 = strlen(x22_683);
			Eq_14 x2_690 = x0_689;
			void * x0_691 = x23_688;
			struct Eq_2626 * x1_692 = x22_683;
			word32 x1_32_32_2118 = SLICE(x22_683, word32, 32);
			fn000000000001B8B0();
			up32 w21_698 = w21_695 + 0x01;
			Eq_7835 NZCV_699;
			NZCV_699.u0 = cond(w21_698 - 0x0D);
			bool C_700 = SLICE(NZCV_699, bool, 29);
			x1_32_32_w21_3065 = SEQ(x1_32_32_2118, w21_698);
			if (w21_698 >= 0x0D)
			{
				Eq_14 x8_701;
				x8_701.u0 = 0x00071000;
				word32 * x8_702 = &g_dw71118;
				word32 * x12_703 = &g_dw71118;
				Eq_916 v60_705;
				v60_705.u0 = g_t71120.u0;
				ui32 w10_706 = (word32) v60_705;
				ptr64 x11_707 = g_ptr71130;
				word32 w8_708 = g_dw71118;
				Eq_2439 x12_709 = (char *) &g_t71120 + 1;
				ui32 w31_710 = w10_706 & 0x01;
				Eq_8059 NZ_711;
				NZ_711.u0 = cond(w10_706 & 0x01);
				bool Z_712 = SLICE(NZ_711, bool, 30);
				struct Eq_2626 * x21_713 = (w10_706 & 0x01) == 0x00 ? (char *) &g_t71120 + 1 : x11_707;
				word64 x9_716 = &sp_714->dw0020;
				struct Eq_2626 * x0_717 = x21_713;
				struct Eq_2626 * x22_718 = x9_716 + 0x08;
				sp_714->dw0020 = w8_708;
				struct Eq_8079 * v61_720 = (struct Eq_8079 *) (&sp_714->qw0028 + 1);
				v61_720->qw0000 = 0x00;
				v61_720->qw0008 = 0x00;
				sp_714->qw0028 = 0x00;
				Eq_14 x0_724 = strlen(x21_713);
				Eq_8099 sp_725 = (Eq_8099) ((word32) x0_724 + 16);
				Eq_8102 NZCV_726;
				NZCV_726.u0 = cond((word32) x0_724 + 16);
				bool C_727 = SLICE(NZCV_726, bool, 29);
				word64 x10_2268 = SEQ(x10_32_32_2259, w10_706);
				if (x0_724 < ~0x0F)
				{
					Eq_14 x20_732 = x0_724;
					ui32 w20_793 = (word32) x0_724;
					Eq_8119 NZCV_733;
					NZCV_733.u0 = cond(x0_724 - 0x17);
					bool C_734 = SLICE(NZCV_733, bool, 29);
					struct Eq_2626 * x22_795;
					void * x23_763;
					struct Eq_2626 * x22_788;
					Eq_8099 sp_757;
					Eq_14 x20_766;
					if (x0_724 < 0x17)
					{
						ui32 w8_794 = w20_793 << 1;
						x22_795 = x9_716 + 0x09;
						((word32) x0_724 + 56)->u1 = (byte) w20_793 << 0x01;
						if (x0_724 == 0x00)
							goto l000000000001F174;
					}
					else
					{
						Eq_8125 x8_735 = (Eq_8125) ((word32) x0_724 + 16);
						ui64 x23_736 = (word32) x0_724 + 16 & ~0x0F;
						ui64 x0_737 = x23_736;
						struct Eq_2626 * x0_777 = _Znwm(x23_736);
						ui64 x8_787 = x23_763 | 0x01;
						x22_788 = x0_777;
						word64 v88_789 = &sp_757->t0030.u0;
						sp_757->t0030.u1 = (size_t) x20_766;
						sp_757->ptr0038 = x0_777;
						sp_757->t0028.u0 = (ui64) (x23_763 | 0x01);
					}
					word64 x5_2376 = ϕ(x5_2370, x5_782);
					word64 x3_2339 = ϕ(x3_2333, x3_780);
					word64 x17_2293 = ϕ(x17_694, x17_785);
					word64 x16_2287 = ϕ(x16_693, x16_784);
					Eq_2439 x12_2281 = ϕ(x12_709, x12_783);
					ptr64 x11_2275 = ϕ(x11_707, x11_772);
					word64 x10_2269 = ϕ(x10_2268, x10_774);
					word32 w4_2226 = ϕ(w4_2220, w4_781);
					word128 q0_875 = ϕ(q0_755, q0_779);
					Eq_1720 sysreg3_3_13_0_2_872 = ϕ(sysreg3_3_13_0_2_753, sysreg3_3_13_0_2_771);
					word64 x30_868 = ϕ(x30_751, x30_769);
					struct Eq_6728 * x29_865 = ϕ(x29_749, x29_768);
					struct Eq_6592 * x19_862 = ϕ(x19_747, x19_767);
					void * x23_856 = ϕ(x23_688, x23_763);
					struct Eq_6592 * x24_853 = ϕ(x24_745, x24_762);
					struct Eq_6592 * x25_850 = ϕ(x25_743, x25_761);
					struct Eq_6592 * x26_847 = ϕ(x26_741, x26_760);
					struct Eq_2626 * x28_844 = ϕ(x28_738, x28_758);
					struct Eq_6733 * x27_835 = ϕ(x27_740, x27_759);
					Eq_8099 sp_808 = ϕ(sp_725, sp_757);
					Eq_14 x20_801 = ϕ(x20_732, x20_766);
					struct Eq_2626 * x21_799 = ϕ(x21_713, x21_765);
					struct Eq_2626 * x22_797 = ϕ(x22_795, x22_788);
					struct Eq_2626 * x0_798 = x22_797;
					struct Eq_2626 * x1_800 = x21_799;
					Eq_14 x2_802 = x20_801;
					void * x0_803 = memcpy(x22_797, x21_799, x20_801);
l000000000001F174:
					word64 x5_2369 = ϕ(x5_2370, x5_2376);
					word64 x3_2332 = ϕ(x3_2333, x3_2339);
					Eq_14 x2_2301 = ϕ(x2_690, x2_802);
					word64 x17_2292 = ϕ(x17_694, x17_2293);
					word64 x16_2286 = ϕ(x16_693, x16_2287);
					Eq_2439 x12_2280 = ϕ(x12_709, x12_2281);
					ptr64 x11_2274 = ϕ(x11_707, x11_2275);
					word64 x10_2258 = ϕ(x10_2268, x10_2269);
					word32 w4_2219 = ϕ(w4_2220, w4_2226);
					struct Eq_2626 * x1_941 = ϕ(x1_692, x1_800);
					word128 q0_874 = ϕ(q0_755, q0_875);
					word120 q0_120_8_1024 = SLICE(q0_874, word120, 8);
					Eq_1720 sysreg3_3_13_0_2_871 = ϕ(sysreg3_3_13_0_2_753, sysreg3_3_13_0_2_872);
					word64 x30_867 = ϕ(x30_751, x30_868);
					struct Eq_6728 * x29_864 = ϕ(x29_749, x29_865);
					struct Eq_6592 * x19_861 = ϕ(x19_747, x19_862);
					struct Eq_2626 * x21_859 = ϕ(x21_713, x21_799);
					void * x23_855 = ϕ(x23_688, x23_856);
					struct Eq_6592 * x24_852 = ϕ(x24_745, x24_853);
					struct Eq_6592 * x25_849 = ϕ(x25_743, x25_850);
					struct Eq_6592 * x26_846 = ϕ(x26_741, x26_847);
					struct Eq_2626 * x28_843 = ϕ(x28_738, x28_844);
					struct Eq_6733 * x27_834 = ϕ(x27_740, x27_835);
					Eq_8099 sp_807 = ϕ(sp_725, sp_808);
					Eq_14 x20_805 = ϕ(x20_732, x20_801);
					struct Eq_2626 * x22_804 = ϕ(x22_795, x22_797);
					*(x22_804 + x20_805) = (word64) 0x00;
					struct Eq_2626 * x0_809 = (struct Eq_2626 *) ((char *) &sp_807->ptr0018 + 8);
					ui32 w0_810 = (word32) x0_809;
					((LEVELS) x0_809);
					ui32 w20_811;
					if ((w0_810 & 0x01) == 0x00)
					{
						w20_811 = 0x00;
						Eq_8151 v64_812;
						v64_812.u1 = sp_807->t0028.u1;
						ui32 w8_813 = (word32) v64_812;
						if ((w8_813 & 0x01) == 0x00)
							goto l000000000001F22C;
						goto l000000000001F244;
					}
					Eq_14 x8_814;
					x8_814.u0 = 0x00070000;
					struct Eq_2626 ** x8_815 = g_ptr70D68;
					word32 x8_32_32_1016 = SLICE(x8_815, word32, 32);
					struct Eq_8372 * v63_816 = (struct Eq_8372 *) ((char *) &sp_807->t0008 + 8);
					v63_816->qw0000 = 0x00;
					v63_816->qw0008 = 0x00;
					sp_807->t0008.u1 = 0x00;
					struct Eq_2626 * x20_820 = (struct Eq_2626 *) *x8_815;
					struct Eq_2626 * x0_821 = x20_820;
					Eq_14 x0_822 = strlen(x20_820);
					Eq_7022 sp_823 = (Eq_7022) ((word32) x0_822 + 16);
					Eq_8400 NZCV_824;
					NZCV_824.u0 = cond((word32) x0_822 + 16);
					bool C_825 = SLICE(NZCV_824, bool, 29);
					if (x0_822 < ~0x0F)
					{
						Eq_14 x21_935 = x0_822;
						ui32 w21_979 = (word32) x0_822;
						Eq_8449 NZCV_936;
						NZCV_936.u0 = cond(x0_822 - 0x17);
						bool C_937 = SLICE(NZCV_936, bool, 29);
						void * x22_981;
						ui64 x8_1017;
						ui64 x8_972;
						void * x23_948;
						void * x22_973;
						Eq_7022 sp_942;
						Eq_14 x21_950;
						word128 q0_1025;
						if (x0_822 < 0x17)
						{
							Eq_8489 x9_978 = (Eq_8489) ((word32) x0_822 + 24);
							ui32 w8_980 = w21_979 << 1;
							x22_981 = (word32) x0_822 + 24 | 0x01;
							((word32) x0_822 + 24)->u1 = (byte) w21_979 << 0x01;
							x8_1017 = SEQ(x8_32_32_1016, w21_979 << 1);
							if (x0_822 == 0x00)
								goto l000000000001F20C;
						}
						else
						{
							Eq_8455 x8_938 = (Eq_8455) ((word32) x0_822 + 16);
							ui64 x23_939 = (word32) x0_822 + 16 & ~0x0F;
							ui64 x0_940 = x23_939;
							void * x0_962 = _Znwm(x23_939);
							x8_972 = x23_948 | 0x01;
							x22_973 = x0_962;
							word64 v67_974 = &sp_942->t0010.u0;
							sp_942->t0010.u1 = (size_t) x21_950;
							sp_942->ptr0018 = x0_962;
							sp_942->qw0008 = x23_948 | 0x01;
							byte b0_964;
							q0_1025 = SEQ(q0_120_8_1024, b0_964);
						}
						word128 q0_1023 = ϕ(q0_874, q0_1025);
						Eq_1720 sysreg3_3_13_0_2_1020 = ϕ(sysreg3_3_13_0_2_871, sysreg3_3_13_0_2_956);
						ui64 x8_1018 = ϕ(x8_1017, x8_972);
						word64 x30_1014 = ϕ(x30_867, x30_954);
						struct Eq_6728 * x29_1012 = ϕ(x29_864, x29_953);
						struct Eq_6592 * x19_1010 = ϕ(x19_861, x19_952);
						void * x23_1007 = ϕ(x23_855, x23_948);
						struct Eq_6592 * x24_1005 = ϕ(x24_852, x24_947);
						struct Eq_6592 * x25_1003 = ϕ(x25_849, x25_946);
						struct Eq_6592 * x26_1001 = ϕ(x26_846, x26_945);
						struct Eq_6733 * x27_999 = ϕ(x27_834, x27_944);
						struct Eq_2626 * x28_997 = ϕ(x28_843, x28_943);
						Eq_7022 sp_994 = ϕ(sp_823, sp_942);
						Eq_14 x21_987 = ϕ(x21_935, x21_950);
						struct Eq_2626 * x20_985 = ϕ(x20_820, x20_951);
						void * x22_983 = ϕ(x22_981, x22_973);
						void * x0_984 = x22_983;
						struct Eq_2626 * x1_986 = x20_985;
						Eq_14 x2_988 = x21_987;
						void * x0_989 = memcpy(x22_983, x20_985, x21_987);
l000000000001F20C:
						word128 q0_1022 = ϕ(q0_874, q0_1023);
						struct Eq_2626 * x1_1021 = ϕ(x1_941, x1_986);
						Eq_1720 sysreg3_3_13_0_2_1019 = ϕ(sysreg3_3_13_0_2_871, sysreg3_3_13_0_2_1020);
						ui64 x8_1015 = ϕ(x8_1017, x8_1018);
						word64 x30_1013 = ϕ(x30_867, x30_1014);
						struct Eq_6728 * x29_1011 = ϕ(x29_864, x29_1012);
						struct Eq_6592 * x19_1009 = ϕ(x19_861, x19_1010);
						struct Eq_2626 * x20_1008 = ϕ(x20_820, x20_985);
						void * x23_1006 = ϕ(x23_855, x23_1007);
						struct Eq_6592 * x24_1004 = ϕ(x24_852, x24_1005);
						struct Eq_6592 * x25_1002 = ϕ(x25_849, x25_1003);
						struct Eq_6592 * x26_1000 = ϕ(x26_846, x26_1001);
						struct Eq_6733 * x27_998 = ϕ(x27_834, x27_999);
						struct Eq_2626 * x28_996 = ϕ(x28_843, x28_997);
						Eq_7022 sp_993 = ϕ(sp_823, sp_994);
						Eq_14 x21_991 = ϕ(x21_935, x21_987);
						void * x22_990 = ϕ(x22_981, x22_983);
						*(x22_990 + x21_991) = (word64) 0x00;
						word64 x0_995 = &sp_993->qw0008;
						struct Eq_2626 * x0_1046 = _ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(x0_995);
						ui32 w0_1059 = (word32) x0_1046;
						Eq_8382 v65_1057;
						Eq_8099 sp_1026;
						v65_1057.u0 = sp_1026->t0008.u0;
						ui32 w8_1058 = (word32) v65_1057;
						ui32 w20_1060 = w0_1059;
						word128 q0_1062 = SEQ(q0_120_8_1049, b0_1048);
						word64 x5_2368;
						word64 x5_1052;
						word64 x3_2331;
						word64 x3_1050;
						Eq_14 x2_2300;
						Eq_14 x2_1047;
						word64 x17_2291;
						word64 x17_1055;
						word64 x16_2285;
						word64 x16_1054;
						Eq_2439 x12_2279;
						Eq_2439 x12_1053;
						ptr64 x11_2273;
						ptr64 x11_1041;
						word64 x10_2257;
						word64 x10_1043;
						struct Eq_2626 * x1_2254;
						struct Eq_2626 * x1_1045;
						struct Eq_2626 * x0_2251;
						struct Eq_2626 * x0_1061;
						word32 w4_2218;
						word32 w4_1051;
						word128 q0_1126;
						byte b0_2192;
						word120 q0_120_8_2203;
						Eq_1720 sysreg3_3_13_0_2_1123;
						Eq_1720 sysreg3_3_13_0_2_1040;
						word64 x30_1120;
						word64 x30_1038;
						struct Eq_6728 * x29_1117;
						struct Eq_6728 * x29_1037;
						struct Eq_6592 * x19_1114;
						struct Eq_6592 * x19_1036;
						struct Eq_2626 * x21_1111;
						struct Eq_2626 * x21_1034;
						struct Eq_2626 * x22_1108;
						struct Eq_2626 * x22_1033;
						void * x23_1105;
						void * x23_1032;
						struct Eq_6592 * x24_1102;
						struct Eq_6592 * x24_1031;
						struct Eq_6592 * x25_1099;
						struct Eq_6592 * x25_1030;
						struct Eq_6592 * x26_1096;
						struct Eq_6592 * x26_1029;
						struct Eq_6733 * x27_1093;
						struct Eq_6733 * x27_1028;
						struct Eq_2626 * x28_1090;
						struct Eq_2626 * x28_1027;
						Eq_8099 sp_1084;
						if ((w8_1058 & 0x01) != 0x00)
						{
							Eq_8151 v66_1065;
							v66_1065.u1 = sp_1026->t0028.u1;
							ui32 w8_1066 = (word32) v66_1065;
							if ((w8_1066 & 0x01) != 0x00)
							{
l000000000001F22C:
								<unknown> ϕ;
								x5_2368 = ϕ(x5_2369, x5_1052, x5_1052);
								<unknown> ϕ;
								x3_2331 = ϕ(x3_2332, x3_1050, x3_1050);
								<unknown> ϕ;
								x2_2300 = ϕ(x2_2301, x2_1047, x2_1047);
								<unknown> ϕ;
								x17_2291 = ϕ(x17_2292, x17_1055, x17_1055);
								<unknown> ϕ;
								x16_2285 = ϕ(x16_2286, x16_1054, x16_1054);
								<unknown> ϕ;
								x12_2279 = ϕ(x12_2280, x12_1053, x12_1053);
								<unknown> ϕ;
								x11_2273 = ϕ(x11_2274, x11_1041, x11_1041);
								<unknown> ϕ;
								x10_2257 = ϕ(x10_2258, x10_1043, x10_1043);
								<unknown> ϕ;
								x1_2254 = ϕ(x1_941, x1_1045, x1_1045);
								<unknown> ϕ;
								x0_2251 = ϕ(x0_809, x0_1046, x0_1061);
								<unknown> ϕ;
								w4_2218 = ϕ(w4_2219, w4_1051, w4_1051);
								<unknown> ϕ;
								q0_1126 = ϕ(q0_874, q0_1062, q0_1062);
								b0_2192 = (byte) q0_1126;
								q0_120_8_2203 = SLICE(q0_1126, word120, 8);
								<unknown> ϕ;
								sysreg3_3_13_0_2_1123 = ϕ(sysreg3_3_13_0_2_871, sysreg3_3_13_0_2_1040, sysreg3_3_13_0_2_1040);
								<unknown> ϕ;
								x30_1120 = ϕ(x30_867, x30_1038, x30_1038);
								<unknown> ϕ;
								x29_1117 = ϕ(x29_864, x29_1037, x29_1037);
								<unknown> ϕ;
								x19_1114 = ϕ(x19_861, x19_1036, x19_1036);
								<unknown> ϕ;
								x21_1111 = ϕ(x21_859, x21_1034, x21_1034);
								<unknown> ϕ;
								x22_1108 = ϕ(x22_804, x22_1033, x22_1033);
								<unknown> ϕ;
								x23_1105 = ϕ(x23_855, x23_1032, x23_1032);
								<unknown> ϕ;
								x24_1102 = ϕ(x24_852, x24_1031, x24_1031);
								<unknown> ϕ;
								x25_1099 = ϕ(x25_849, x25_1030, x25_1030);
								<unknown> ϕ;
								x26_1096 = ϕ(x26_846, x26_1029, x26_1029);
								<unknown> ϕ;
								x27_1093 = ϕ(x27_834, x27_1028, x27_1028);
								<unknown> ϕ;
								x28_1090 = ϕ(x28_843, x28_1027, x28_1027);
								<unknown> ϕ;
								sp_1084 = ϕ(sp_807, sp_1026, sp_1026);
								<unknown> ϕ;
								Mem1076 = ϕ(Mem806, Mem992, Mem992);
								ui32 w20_1073 = ϕ(w20_811, w20_1060, w20_1060);
								if ((w20_1073 & 0x01) != 0x00)
									goto l000000000001F770;
								goto l000000000001F250;
							}
						}
						else
						{
							x0_1061 = sp_1026->ptr0018;
							((real64) q0_1062, x0_1061, x1_1045);
							Eq_8151 v75_1063;
							v75_1063.u1 = sp_1026->t0028.u1;
							ui32 w8_1064 = (word32) v75_1063;
							if ((w8_1064 & 0x01) == 0x00)
								goto l000000000001F22C;
						}
l000000000001F244:
						word64 x5_2377 = ϕ(x5_2369, x5_1052, x5_1052);
						word64 x3_2340 = ϕ(x3_2332, x3_1050, x3_1050);
						Eq_14 x2_2302 = ϕ(x2_2301, x2_1047, x2_1047);
						word64 x17_2294 = ϕ(x17_2292, x17_1055, x17_1055);
						word64 x16_2288 = ϕ(x16_2286, x16_1054, x16_1054);
						Eq_2439 x12_2282 = ϕ(x12_2280, x12_1053, x12_1053);
						ptr64 x11_2276 = ϕ(x11_2274, x11_1041, x11_1041);
						word64 x10_2270 = ϕ(x10_2258, x10_1043, x10_1043);
						word32 w4_2227 = ϕ(w4_2219, w4_1051, w4_1051);
						Eq_1720 sysreg3_3_13_0_2_1124 = ϕ(sysreg3_3_13_0_2_871, sysreg3_3_13_0_2_1040, sysreg3_3_13_0_2_1040);
						word64 x30_1121 = ϕ(x30_867, x30_1038, x30_1038);
						struct Eq_6728 * x29_1118 = ϕ(x29_864, x29_1037, x29_1037);
						struct Eq_6592 * x19_1115 = ϕ(x19_861, x19_1036, x19_1036);
						struct Eq_2626 * x21_1112 = ϕ(x21_859, x21_1034, x21_1034);
						struct Eq_2626 * x22_1109 = ϕ(x22_804, x22_1033, x22_1033);
						void * x23_1106 = ϕ(x23_855, x23_1032, x23_1032);
						struct Eq_6592 * x24_1103 = ϕ(x24_852, x24_1031, x24_1031);
						struct Eq_6592 * x25_1100 = ϕ(x25_849, x25_1030, x25_1030);
						struct Eq_6592 * x26_1097 = ϕ(x26_846, x26_1029, x26_1029);
						struct Eq_6733 * x27_1094 = ϕ(x27_834, x27_1028, x27_1028);
						struct Eq_2626 * x28_1091 = ϕ(x28_843, x28_1027, x28_1027);
						ui32 w20_1072 = ϕ(w20_811, w20_1060, w20_1060);
						struct Eq_2626 * x1_1071 = ϕ(x1_941, x1_1045, x1_1045);
						word128 q0_1070 = ϕ(q0_874, q0_1062, q0_1062);
						byte b0_2193 = (byte) q0_1070;
						word120 q0_120_8_2204 = SLICE(q0_1070, word120, 8);
						<unknown> ϕ;
						Mem1068 = ϕ(Mem806, Mem992, Mem992);
						Eq_8099 sp_1067 = ϕ(sp_807, sp_1026, sp_1026);
						struct Eq_2626 * x0_1069 = sp_1067->ptr0038;
						((real64) q0_1070, x0_1069, x1_1071);
						if ((w20_1072 & 0x01) == 0x00)
							goto l000000000001F770;
l000000000001F250:
						word128 q0_1125 = ϕ(q0_1126, q0_1070);
						Eq_1720 sysreg3_3_13_0_2_1122 = ϕ(sysreg3_3_13_0_2_1123, sysreg3_3_13_0_2_1124);
						word64 x30_1119 = ϕ(x30_1120, x30_1121);
						struct Eq_6728 * x29_1116 = ϕ(x29_1117, x29_1118);
						struct Eq_6592 * x19_1113 = ϕ(x19_1114, x19_1115);
						struct Eq_2626 * x21_1110 = ϕ(x21_1111, x21_1112);
						struct Eq_2626 * x22_1107 = ϕ(x22_1108, x22_1109);
						void * x23_1104 = ϕ(x23_1105, x23_1106);
						struct Eq_6592 * x24_1101 = ϕ(x24_1102, x24_1103);
						struct Eq_6592 * x25_1098 = ϕ(x25_1099, x25_1100);
						struct Eq_6592 * x26_1095 = ϕ(x26_1096, x26_1097);
						struct Eq_6733 * x27_1092 = ϕ(x27_1093, x27_1094);
						struct Eq_2626 * x28_1089 = ϕ(x28_1090, x28_1091);
						Eq_8099 sp_1083 = ϕ(sp_1084, sp_1067);
						<unknown> ϕ;
						Mem1075 = ϕ(Mem1076, Mem1068);
						Eq_14 x8_1074;
						x8_1074.u0 = 0x00070000;
						struct Eq_2626 ** x8_1077 = g_ptr70D68;
						struct Eq_2626 * x1_1078 = (struct Eq_2626 *) *x8_1077;
						Eq_14 x2_1079;
						x2_1079.u0 = 0x00071000;
						Eq_14 x3_1080;
						x3_1080.u0 = 0x00052000;
						word32 * x2_1081 = &g_dw71118;
						Eq_14 x3_1082;
						x3_1082.u0 = 337390;
						word64 x0_1085 = (char *) &sp_1083->ptr0038 + 64;
						word32 w4_1086 = 0x06;
						word64 x5_1087 = 0x00;
						word64 x20_1088 = (char *) &sp_1083->ptr0038 + 64;
						_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_(x0_1085, x1_1078, 0x00071000, &g_dw71118, 0x00052000, 337390, 0x00);
						word32 x8_32_32_1222 = SLICE(x8_1140, word32, 32);
						word64 x0_1158 = x20_1136 + 0x08;
						Eq_14 x1_1159;
						x1_1159.u0 = 0x00052000;
						ptr64 x1_1160 = &g_t520F7.qw0008;
						word32 w2_1161 = 0x06;
						fn000000000001BB30();
						struct Eq_8866 * x23_1164 = x19_1137->ptr0000;
						word64 x20_1165 = x20_1136 + 0x08;
						word128 q0_1234 = SEQ(q0_120_8_1150, b0_1149);
						struct Eq_8866 * x25_1131;
						word32 x8_32_32_1223;
						struct Eq_8866 * x22_1178;
						struct Eq_8866 * x22_1175;
						struct Eq_8866 * x23_1169;
						struct Eq_8866 * x8_1182;
						struct Eq_8866 * x22_1185;
						struct Eq_8866 * x21_1186;
						struct Eq_8866 * x8_1225;
						struct Eq_8866 * x8_1176;
						struct Eq_8866 * x23_1166;
						struct Eq_8866 * x22_1167;
						if (x23_1164 != null)
						{
							struct Eq_8866 * x22_1168 = x25_1131;
							while (true)
							{
								word32 x8_32_32_1221;
								word32 x8_32_32_1224;
								struct Eq_8866 * x23_1181;
								int32 w8_1171;
								while (true)
								{
									<unknown> ϕ;
									x8_32_32_1221 = ϕ(x8_32_32_1222, x8_32_32_1223, x8_32_32_1224);
									<unknown> ϕ;
									struct Eq_8866 * x22_1183;
									x22_1178 = ϕ(x22_1168, x22_1183, x22_1175);
									<unknown> ϕ;
									struct Eq_8866 * x23_1184;
									x23_1169 = ϕ(x23_1164, x23_1184, x23_1181);
									w8_1171 = x23_1169->dw0020;
									Eq_8967 NZCV_1172;
									NZCV_1172.u0 = cond(w8_1171 - 0x01);
									Eq_8969 NV_1173;
									NV_1173.u0 = SLICE(NZCV_1172, bool, 31);
									if (w8_1171 < 0x01)
										break;
									x8_1182 = x23_1169->ptr0000;
									x8_32_32_1223 = SLICE(x8_1182, word32, 32);
									if (x8_1182 == null)
									{
										x22_1185 = x23_1169;
										x21_1186 = x23_1169->ptr0000;
										if (x21_1186 != null)
											goto l000000000001F354;
										goto l000000000001F300;
									}
									x22_1183 = x23_1169;
									x23_1184 = x8_1182;
								}
								x8_1225 = SEQ(x8_32_32_1221, w8_1171);
								if (true)
									break;
								struct Eq_8866 * x22_1174 = x23_1169;
								x22_1175 = (struct Eq_8866 *) &x23_1169->qw0008;
								x8_1176 = x22_1175->ptr0000;
								x8_32_32_1224 = SLICE(x8_1176, word32, 32);
								if (x8_1176 == null)
									break;
								x23_1181 = x8_1176;
							}
						}
						else
						{
							x23_1166 = x19_1137;
							x22_1167 = x19_1137;
						}
						struct Eq_8866 * x8_1220 = ϕ(x8_1140, x8_1225, x8_1176);
						word32 x8_32_32_1310 = SLICE(x8_1220, word32, 32);
						struct Eq_8866 * x23_1204 = ϕ(x23_1166, x23_1169, x23_1169);
						struct Eq_8866 * x22_1177 = ϕ(x22_1167, x22_1178, x22_1175);
						struct Eq_8866 * x21_1180 = x22_1177->ptr0000;
						if (x21_1180 != null)
							goto l000000000001F354;
l000000000001F300:
						struct Eq_8866 * x8_1219 = ϕ(x8_1220, x8_1182);
						struct Eq_8866 * x21_1206 = ϕ(x21_1180, x21_1186);
						struct Eq_8866 * x22_1205 = ϕ(x22_1177, x22_1185);
						struct Eq_8866 * x23_1203 = ϕ(x23_1204, x23_1169);
						word32 w0_1187 = 0x40;
						struct Eq_8866 * x0_1260 = _Znwm();
						x0_1260->dw0020 = 0x00;
						ptr64 v76_1272 = &x0_1260->qw0030;
						x0_1260->qw0030 = 0x00;
						x0_1260->qw0038 = 0x00;
						x0_1260->t0028.u1 = 0x00;
						struct Eq_8866 * v77_1276 = x0_1260;
						x0_1260->ptr0000 = null;
						x0_1260->qw0008 = 0x00;
						struct Eq_8866 * x23_1246;
						x0_1260->ptr0010 = x23_1246;
						struct Eq_8866 ** x22_1247;
						*x22_1247 = (struct Eq_8866 **) x0_1260;
						struct Eq_9197 * x8_1281 = x27_1242->ptr0000;
						struct Eq_8866 * x21_1282 = x0_1260;
						struct Eq_9197 * x8_1283 = x8_1281->ptr0000;
						word128 q0_1416 = SEQ(q0_120_8_1263, b0_1262);
						if (x8_1283 != null)
						{
							x27_1242->ptr0000 = x8_1283;
							struct Eq_8866 * x1_1286 = (struct Eq_8866 *) *x22_1247;
						}
						else
						{
							struct Eq_8866 * x1_1284 = x0_1260;
						}
						<unknown> ϕ;
						Mem1288 = ϕ(Mem1285, Mem1280);
						word64 x0_1289 = x27_1242->qw0008;
						fn000000000001BD70();
						word64 x8_1292 = x27_1242->qw0010;
						word64 x8_1293 = x8_1292 + 0x01;
						word32 x8_32_32_1309 = SLICE(x8_1292 + 0x01, word32, 32);
						x27_1242->qw0010 = x8_1292 + 0x01;
l000000000001F354:
						word64 x5_2385 = ϕ(x5_1153, x5_1266, x5_1153);
						word64 x3_2348 = ϕ(x3_1151, x3_1264, x3_1151);
						word32 w4_2235 = ϕ(w4_1152, w4_1265, w4_1152);
						word64 sp_1420 = ϕ(sp_1127, sp_1240, sp_1127);
						word128 q0_1414 = ϕ(q0_1234, q0_1416, q0_1234);
						Eq_1720 sysreg3_3_13_0_2_1406 = ϕ(sysreg3_3_13_0_2_1141, sysreg3_3_13_0_2_1254, sysreg3_3_13_0_2_1141);
						Eq_9036 x30_1395 = ϕ(x30_1139, x30_1252, x30_1139);
						struct Eq_6728 * x29_1390 = ϕ(x29_1138, x29_1251, x29_1138);
						Eq_9044 x24_1375 = ϕ(x24_1132, x24_1245, x24_1132);
						Eq_9048 x26_1367 = ϕ(x26_1130, x26_1243, x26_1130);
						struct Eq_9052 * x27_1363 = ϕ(x27_1129, x27_1242, x27_1129);
						Eq_9056 x28_1358 = ϕ(x28_1128, x28_1241, x28_1128);
						struct Eq_8866 * x25_1332 = ϕ(x25_1131, x25_1244, x25_1131);
						struct Eq_8866 * x19_1326 = ϕ(x19_1137, x19_1250, x19_1137);
						word64 x20_1316 = ϕ(x20_1165, x20_1249, x20_1165);
						word32 x8_32_32_1308 = ϕ(x8_32_32_1223, x8_32_32_1309, x8_32_32_1310);
						<unknown> ϕ;
						Mem1297 = ϕ(Mem1075, Mem1294, Mem1075);
						struct Eq_8866 * x21_1295 = ϕ(x21_1186, x21_1282, x21_1180);
						Eq_9082 v78_1298;
						v78_1298.u0 = x21_1295->t0028.u0;
						ui32 w8_1299 = (word32) v78_1298;
						struct Eq_9087 * v79_1300 = (struct Eq_9087 *) &x21_1295->qw0030;
						word64 x9_1301 = v79_1300->qw0000;
						word64 x10_1302 = v79_1300->qw0008;
						ptr64 x11_1303 = (char *) &x21_1295->t0028 + 1;
						ui32 w31_1304 = w8_1299 & 0x01;
						Eq_9104 NZ_1305;
						NZ_1305.u0 = cond(w8_1299 & 0x01);
						bool Z_1313 = SLICE(NZ_1305, bool, 30);
						bool C_1306 = false;
						bool V_1307 = false;
						struct Eq_8866 * x8_1311 = SEQ(x8_32_32_1308, w8_1299);
						uint64 x12_1312 = x8_1311 >> 1;
						word64 x1_1314 = (w8_1299 & 0x01) == 0x00 ? x11_1303 : x10_1302;
						word64 x2_1315 = (w8_1299 & 0x01) == 0x00 ? x8_1311 >> 1 : x9_1301;
						word64 x0_1318 = x20_1316;
						fn000000000001BB30();
						Eq_14 x1_1321;
						x1_1321.u0 = 0x00052000;
						ptr64 x1_1322 = (char *) &g_t520F7.qw0008 + 7;
						word32 w2_1323 = 0x11;
						fn000000000001BB30();
						struct Eq_8866 * x23_1328 = x19_1326->ptr0000;
						word64 x20_1329 = x20_1316;
						word32 x8_32_32_1401;
						struct Eq_8866 * x22_1346;
						struct Eq_8866 * x22_1343;
						struct Eq_8866 * x23_1335;
						struct Eq_8866 * x8_1350;
						struct Eq_8866 * x22_1353;
						struct Eq_8866 * x21_1354;
						struct Eq_8866 * x8_1403;
						struct Eq_8866 * x8_1344;
						struct Eq_8866 * x23_1330;
						struct Eq_8866 * x22_1331;
						if (x23_1328 != null)
						{
							struct Eq_8866 * x22_1334 = x25_1332;
							while (true)
							{
								word32 x8_32_32_1400;
								word32 x8_32_32_1402;
								struct Eq_8866 * x23_1349;
								int32 w8_1337;
								while (true)
								{
									<unknown> ϕ;
									x8_32_32_1400 = ϕ(x8_32_32_1308, x8_32_32_1401, x8_32_32_1402);
									<unknown> ϕ;
									struct Eq_8866 * x22_1351;
									x22_1346 = ϕ(x22_1334, x22_1351, x22_1343);
									<unknown> ϕ;
									struct Eq_8866 * x23_1352;
									x23_1335 = ϕ(x23_1328, x23_1352, x23_1349);
									w8_1337 = x23_1335->dw0020;
									Eq_9259 NZCV_1338;
									NZCV_1338.u0 = cond(w8_1337 - 0x02);
									Eq_9261 NV_1339;
									NV_1339.u0 = SLICE(NZCV_1338, bool, 31);
									if (w8_1337 < 0x02)
										break;
									x8_1350 = x23_1335->ptr0000;
									x8_32_32_1401 = SLICE(x8_1350, word32, 32);
									if (x8_1350 == null)
									{
										x22_1353 = x23_1335;
										x21_1354 = x23_1335->ptr0000;
										if (x21_1354 != null)
											goto l000000000001F450;
										goto l000000000001F3E8;
									}
									x22_1351 = x23_1335;
									x23_1352 = x8_1350;
								}
								Eq_9295 NZCV_1340;
								NZCV_1340.u0 = cond(w8_1337 - 0x01);
								bool Z_1341 = SLICE(NZCV_1340, bool, 30);
								x8_1403 = SEQ(x8_32_32_1400, w8_1337);
								if (w8_1337 == 0x01)
									break;
								struct Eq_8866 * x22_1342 = x23_1335;
								x22_1343 = (struct Eq_8866 *) &x23_1335->qw0008;
								x8_1344 = x22_1343->ptr0000;
								x8_32_32_1402 = SLICE(x8_1344, word32, 32);
								if (x8_1344 == null)
									break;
								x23_1349 = x8_1344;
							}
						}
						else
						{
							x23_1330 = x19_1326;
							x22_1331 = x19_1326;
						}
						struct Eq_8866 * x8_1399 = ϕ(x8_1403, x8_1344, x8_1311);
						word32 x8_32_32_1494 = SLICE(x8_1399, word32, 32);
						struct Eq_8866 * x23_1379 = ϕ(x23_1335, x23_1335, x23_1330);
						struct Eq_8866 * x22_1345 = ϕ(x22_1346, x22_1343, x22_1331);
						struct Eq_8866 * x21_1348 = x22_1345->ptr0000;
						if (x21_1348 != null)
							goto l000000000001F450;
l000000000001F3E8:
						struct Eq_8866 * x8_1398 = ϕ(x8_1350, x8_1399);
						struct Eq_8866 * x21_1381 = ϕ(x21_1354, x21_1348);
						struct Eq_8866 * x22_1380 = ϕ(x22_1353, x22_1345);
						struct Eq_8866 * x23_1378 = ϕ(x23_1335, x23_1379);
						word32 w0_1355 = 0x40;
						struct Eq_8866 * x0_1444 = _Znwm();
						word32 w8_1455 = 0x01;
						word64 v80_1456 = &x0_1444->qw0030;
						x0_1444->qw0030 = 0x00;
						x0_1444->qw0038 = 0x00;
						x0_1444->t0028.u1 = 0x00;
						struct Eq_8866 * v81_1460 = x0_1444;
						x0_1444->ptr0000 = null;
						x0_1444->qw0008 = 0x00;
						struct Eq_8866 * x23_1430;
						x0_1444->ptr0010 = x23_1430;
						x0_1444->dw0020 = 0x01;
						struct Eq_8866 ** x22_1431;
						*x22_1431 = (struct Eq_8866 **) x0_1444;
						struct Eq_9197 * x8_1466 = x27_1426->ptr0000;
						struct Eq_8866 * x21_1467 = x0_1444;
						struct Eq_9197 * x8_1468 = x8_1466->ptr0000;
						word128 q0_1601 = SEQ(q0_120_8_1447, b0_1446);
						if (x8_1468 != null)
						{
							x27_1426->ptr0000 = x8_1468;
							struct Eq_8866 * x1_1471 = (struct Eq_8866 *) *x22_1431;
						}
						else
						{
							struct Eq_8866 * x1_1469 = x0_1444;
						}
						<unknown> ϕ;
						Mem1473 = ϕ(Mem1470, Mem1465);
						word64 x0_1474 = x27_1426->qw0008;
						fn000000000001BD70();
						word64 x8_1477 = x27_1426->qw0010;
						word64 x8_1478 = x8_1477 + 0x01;
						word32 x8_32_32_1495 = SLICE(x8_1477 + 0x01, word32, 32);
						x27_1426->qw0010 = x8_1477 + 0x01;
l000000000001F450:
						word64 x5_2383 = ϕ(x5_2385, x5_2385, x5_1450);
						word64 x3_2346 = ϕ(x3_2348, x3_2348, x3_1448);
						word32 w4_2233 = ϕ(w4_2235, w4_2235, w4_1449);
						word64 sp_1605 = ϕ(sp_1420, sp_1420, sp_1424);
						word128 q0_1599 = ϕ(q0_1414, q0_1414, q0_1601);
						Eq_1720 sysreg3_3_13_0_2_1591 = ϕ(sysreg3_3_13_0_2_1406, sysreg3_3_13_0_2_1406, sysreg3_3_13_0_2_1438);
						Eq_9036 x30_1580 = ϕ(x30_1395, x30_1395, x30_1436);
						struct Eq_6728 * x29_1575 = ϕ(x29_1390, x29_1390, x29_1435);
						Eq_9044 x24_1560 = ϕ(x24_1375, x24_1375, x24_1429);
						Eq_9048 x26_1552 = ϕ(x26_1367, x26_1367, x26_1427);
						struct Eq_9052 * x27_1548 = ϕ(x27_1363, x27_1363, x27_1426);
						Eq_9056 x28_1543 = ϕ(x28_1358, x28_1358, x28_1425);
						struct Eq_8866 * x25_1517 = ϕ(x25_1332, x25_1332, x25_1428);
						struct Eq_8866 * x19_1511 = ϕ(x19_1326, x19_1326, x19_1434);
						word64 x20_1501 = ϕ(x20_1329, x20_1329, x20_1433);
						word32 x8_32_32_1493 = ϕ(x8_32_32_1401, x8_32_32_1494, x8_32_32_1495);
						<unknown> ϕ;
						Mem1482 = ϕ(Mem1297, Mem1297, Mem1479);
						struct Eq_8866 * x21_1480 = ϕ(x21_1354, x21_1348, x21_1467);
						Eq_9082 v82_1483;
						v82_1483.u0 = x21_1480->t0028.u0;
						ui32 w8_1484 = (word32) v82_1483;
						struct Eq_9423 * v83_1485 = (struct Eq_9423 *) &x21_1480->qw0030;
						word64 x9_1486 = v83_1485->qw0000;
						word64 x10_1487 = v83_1485->qw0008;
						ptr64 x11_1488 = (char *) &x21_1480->t0028 + 1;
						ui32 w31_1489 = w8_1484 & 0x01;
						Eq_9440 NZ_1490;
						NZ_1490.u0 = cond(w8_1484 & 0x01);
						bool Z_1498 = SLICE(NZ_1490, bool, 30);
						bool C_1491 = false;
						bool V_1492 = false;
						struct Eq_8866 * x8_1496 = SEQ(x8_32_32_1493, w8_1484);
						uint64 x12_1497 = x8_1496 >> 1;
						word64 x1_1499 = (w8_1484 & 0x01) == 0x00 ? x11_1488 : x10_1487;
						word64 x2_1500 = (w8_1484 & 0x01) == 0x00 ? x8_1496 >> 1 : x9_1486;
						word64 x0_1503 = x20_1501;
						fn000000000001BB30();
						Eq_14 x1_1506;
						x1_1506.u0 = 0x00052000;
						ptr64 x1_1507 = &g_t52118;
						word32 w2_1508 = 0x18;
						fn000000000001BB30();
						struct Eq_8866 * x23_1513 = x19_1511->ptr0000;
						word64 x20_1514 = x20_1501;
						word32 x8_32_32_1587;
						struct Eq_8866 * x22_1531;
						struct Eq_8866 * x22_1528;
						struct Eq_8866 * x23_1520;
						struct Eq_8866 * x8_1535;
						struct Eq_8866 * x22_1538;
						struct Eq_8866 * x21_1539;
						struct Eq_8866 * x8_1588;
						struct Eq_8866 * x8_1529;
						struct Eq_8866 * x23_1515;
						struct Eq_8866 * x22_1516;
						if (x23_1513 != null)
						{
							struct Eq_8866 * x22_1519 = x25_1517;
							while (true)
							{
								word32 x8_32_32_1585;
								word32 x8_32_32_1586;
								struct Eq_8866 * x23_1534;
								int32 w8_1522;
								while (true)
								{
									<unknown> ϕ;
									x8_32_32_1585 = ϕ(x8_32_32_1493, x8_32_32_1586, x8_32_32_1587);
									<unknown> ϕ;
									struct Eq_8866 * x22_1536;
									x22_1531 = ϕ(x22_1519, x22_1528, x22_1536);
									<unknown> ϕ;
									struct Eq_8866 * x23_1537;
									x23_1520 = ϕ(x23_1513, x23_1534, x23_1537);
									w8_1522 = x23_1520->dw0020;
									Eq_9638 NZCV_1523;
									NZCV_1523.u0 = cond(w8_1522 - 0x0D);
									Eq_9640 NV_1524;
									NV_1524.u0 = SLICE(NZCV_1523, bool, 31);
									if (w8_1522 < 0x0D)
										break;
									x8_1535 = x23_1520->ptr0000;
									x8_32_32_1587 = SLICE(x8_1535, word32, 32);
									if (x8_1535 == null)
									{
										x22_1538 = x23_1520;
										x21_1539 = x23_1520->ptr0000;
										if (x21_1539 != null)
											goto l000000000001F54C;
										goto l000000000001F4E4;
									}
									x22_1536 = x23_1520;
									x23_1537 = x8_1535;
								}
								Eq_9645 NZCV_1525;
								NZCV_1525.u0 = cond(w8_1522 - 0x0C);
								bool Z_1526 = SLICE(NZCV_1525, bool, 30);
								x8_1588 = SEQ(x8_32_32_1585, w8_1522);
								if (w8_1522 == 0x0C)
									break;
								struct Eq_8866 * x22_1527 = x23_1520;
								x22_1528 = (struct Eq_8866 *) &x23_1520->qw0008;
								x8_1529 = x22_1528->ptr0000;
								x8_32_32_1586 = SLICE(x8_1529, word32, 32);
								if (x8_1529 == null)
									break;
								x23_1534 = x8_1529;
							}
						}
						else
						{
							x23_1515 = x19_1511;
							x22_1516 = x19_1511;
						}
						struct Eq_8866 * x8_1584 = ϕ(x8_1496, x8_1588, x8_1529);
						word32 x8_32_32_1679 = SLICE(x8_1584, word32, 32);
						struct Eq_8866 * x23_1564 = ϕ(x23_1515, x23_1520, x23_1520);
						struct Eq_8866 * x22_1530 = ϕ(x22_1516, x22_1531, x22_1528);
						struct Eq_8866 * x21_1533 = x22_1530->ptr0000;
						if (x21_1533 != null)
							goto l000000000001F54C;
l000000000001F4E4:
						struct Eq_8866 * x8_1583 = ϕ(x8_1584, x8_1535);
						struct Eq_8866 * x21_1566 = ϕ(x21_1533, x21_1539);
						struct Eq_8866 * x22_1565 = ϕ(x22_1530, x22_1538);
						struct Eq_8866 * x23_1563 = ϕ(x23_1564, x23_1520);
						word32 w0_1540 = 0x40;
						struct Eq_8866 * x0_1629 = _Znwm();
						word32 w8_1640 = 0x0C;
						word64 v84_1641 = &x0_1629->qw0030;
						x0_1629->qw0030 = 0x00;
						x0_1629->qw0038 = 0x00;
						x0_1629->t0028.u1 = 0x00;
						struct Eq_8866 * v85_1645 = x0_1629;
						x0_1629->ptr0000 = null;
						x0_1629->qw0008 = 0x00;
						struct Eq_8866 * x23_1615;
						x0_1629->ptr0010 = x23_1615;
						x0_1629->dw0020 = 0x0C;
						struct Eq_8866 ** x22_1616;
						*x22_1616 = (struct Eq_8866 **) x0_1629;
						struct Eq_9197 * x8_1651 = x27_1611->ptr0000;
						struct Eq_8866 * x21_1652 = x0_1629;
						struct Eq_9197 * x8_1653 = x8_1651->ptr0000;
						word128 q0_1786 = SEQ(q0_120_8_1632, b0_1631);
						if (x8_1653 != null)
						{
							x27_1611->ptr0000 = x8_1653;
							struct Eq_8866 * x1_1656 = (struct Eq_8866 *) *x22_1616;
						}
						else
						{
							struct Eq_8866 * x1_1654 = x0_1629;
						}
						<unknown> ϕ;
						Mem1658 = ϕ(Mem1655, Mem1650);
						word64 x0_1659 = x27_1611->qw0008;
						fn000000000001BD70();
						word64 x8_1662 = x27_1611->qw0010;
						word64 x8_1663 = x8_1662 + 0x01;
						word32 x8_32_32_1680 = SLICE(x8_1662 + 0x01, word32, 32);
						x27_1611->qw0010 = x8_1662 + 0x01;
l000000000001F54C:
						word64 x5_2381 = ϕ(x5_2383, x5_2383, x5_1635);
						word64 x3_2344 = ϕ(x3_2346, x3_2346, x3_1633);
						word32 w4_2231 = ϕ(w4_2233, w4_2233, w4_1634);
						word64 sp_1790 = ϕ(sp_1605, sp_1605, sp_1609);
						word128 q0_1784 = ϕ(q0_1599, q0_1599, q0_1786);
						Eq_1720 sysreg3_3_13_0_2_1776 = ϕ(sysreg3_3_13_0_2_1591, sysreg3_3_13_0_2_1591, sysreg3_3_13_0_2_1623);
						Eq_9036 x30_1765 = ϕ(x30_1580, x30_1580, x30_1621);
						struct Eq_6728 * x29_1760 = ϕ(x29_1575, x29_1575, x29_1620);
						Eq_9044 x24_1745 = ϕ(x24_1560, x24_1560, x24_1614);
						Eq_9048 x26_1737 = ϕ(x26_1552, x26_1552, x26_1612);
						struct Eq_9052 * x27_1733 = ϕ(x27_1548, x27_1548, x27_1611);
						Eq_9056 x28_1728 = ϕ(x28_1543, x28_1543, x28_1610);
						struct Eq_8866 * x25_1702 = ϕ(x25_1517, x25_1517, x25_1613);
						struct Eq_8866 * x19_1696 = ϕ(x19_1511, x19_1511, x19_1619);
						word64 x20_1686 = ϕ(x20_1514, x20_1514, x20_1618);
						word32 x8_32_32_1678 = ϕ(x8_32_32_1679, x8_32_32_1587, x8_32_32_1680);
						<unknown> ϕ;
						Mem1667 = ϕ(Mem1482, Mem1482, Mem1664);
						struct Eq_8866 * x21_1665 = ϕ(x21_1533, x21_1539, x21_1652);
						Eq_9082 v86_1668;
						v86_1668.u0 = x21_1665->t0028.u0;
						ui32 w8_1669 = (word32) v86_1668;
						struct Eq_9729 * v87_1670 = (struct Eq_9729 *) &x21_1665->qw0030;
						word64 x9_1671 = v87_1670->qw0000;
						word64 x10_1672 = v87_1670->qw0008;
						ptr64 x11_1673 = (char *) &x21_1665->t0028 + 1;
						ui32 w31_1674 = w8_1669 & 0x01;
						Eq_9746 NZ_1675;
						NZ_1675.u0 = cond(w8_1669 & 0x01);
						bool Z_1683 = SLICE(NZ_1675, bool, 30);
						bool C_1676 = false;
						bool V_1677 = false;
						struct Eq_8866 * x8_1681 = SEQ(x8_32_32_1678, w8_1669);
						uint64 x12_1682 = x8_1681 >> 1;
						word64 x1_1684 = (w8_1669 & 0x01) == 0x00 ? x11_1673 : x10_1672;
						word64 x2_1685 = (w8_1669 & 0x01) == 0x00 ? x8_1681 >> 1 : x9_1671;
						word64 x0_1688 = x20_1686;
						fn000000000001BB30();
						Eq_14 x1_1691;
						x1_1691.u0 = 0x00052000;
						ptr64 x1_1692 = &g_t52131;
						word32 w2_1693 = 0x14;
						fn000000000001BB30();
						struct Eq_8866 * x23_1698 = x19_1696->ptr0000;
						word64 x20_1699 = x20_1686;
						word32 x8_32_32_1771;
						struct Eq_8866 * x22_1716;
						struct Eq_8866 * x22_1713;
						struct Eq_8866 * x23_1705;
						struct Eq_8866 * x8_1720;
						struct Eq_8866 * x22_1723;
						struct Eq_8866 * x21_1724;
						struct Eq_8866 * x8_1773;
						struct Eq_8866 * x8_1714;
						struct Eq_8866 * x23_1700;
						struct Eq_8866 * x22_1701;
						if (x23_1698 != null)
						{
							struct Eq_8866 * x22_1704 = x25_1702;
							while (true)
							{
								word32 x8_32_32_1770;
								word32 x8_32_32_1772;
								struct Eq_8866 * x23_1719;
								int32 w8_1707;
								while (true)
								{
									<unknown> ϕ;
									x8_32_32_1770 = ϕ(x8_32_32_1678, x8_32_32_1771, x8_32_32_1772);
									<unknown> ϕ;
									struct Eq_8866 * x22_1721;
									x22_1716 = ϕ(x22_1704, x22_1721, x22_1713);
									<unknown> ϕ;
									struct Eq_8866 * x23_1722;
									x23_1705 = ϕ(x23_1698, x23_1722, x23_1719);
									w8_1707 = x23_1705->dw0020;
									Eq_9922 NZCV_1708;
									NZCV_1708.u0 = cond(w8_1707 - 0x03);
									Eq_9924 NV_1709;
									NV_1709.u0 = SLICE(NZCV_1708, bool, 31);
									if (w8_1707 < 0x03)
										break;
									x8_1720 = x23_1705->ptr0000;
									x8_32_32_1771 = SLICE(x8_1720, word32, 32);
									if (x8_1720 == null)
									{
										x22_1723 = x23_1705;
										x21_1724 = x23_1705->ptr0000;
										if (x21_1724 != null)
											goto l000000000001F648;
										goto l000000000001F5E0;
									}
									x22_1721 = x23_1705;
									x23_1722 = x8_1720;
								}
								Eq_9929 NZCV_1710;
								NZCV_1710.u0 = cond(w8_1707 - 0x02);
								bool Z_1711 = SLICE(NZCV_1710, bool, 30);
								x8_1773 = SEQ(x8_32_32_1770, w8_1707);
								if (w8_1707 == 0x02)
									break;
								struct Eq_8866 * x22_1712 = x23_1705;
								x22_1713 = (struct Eq_8866 *) &x23_1705->qw0008;
								x8_1714 = x22_1713->ptr0000;
								x8_32_32_1772 = SLICE(x8_1714, word32, 32);
								if (x8_1714 == null)
									break;
								x23_1719 = x8_1714;
							}
						}
						else
						{
							x23_1700 = x19_1696;
							x22_1701 = x19_1696;
						}
						struct Eq_8866 * x8_1769 = ϕ(x8_1681, x8_1773, x8_1714);
						word32 x8_32_32_1865 = SLICE(x8_1769, word32, 32);
						struct Eq_8866 * x23_1749 = ϕ(x23_1700, x23_1705, x23_1705);
						struct Eq_8866 * x22_1715 = ϕ(x22_1701, x22_1716, x22_1713);
						struct Eq_8866 * x21_1718 = x22_1715->ptr0000;
						if (x21_1718 != null)
							goto l000000000001F648;
l000000000001F5E0:
						struct Eq_8866 * x8_1768 = ϕ(x8_1720, x8_1769);
						struct Eq_8866 * x21_1751 = ϕ(x21_1724, x21_1718);
						struct Eq_8866 * x22_1750 = ϕ(x22_1723, x22_1715);
						struct Eq_8866 * x23_1748 = ϕ(x23_1705, x23_1749);
						word32 w0_1725 = 0x40;
						struct Eq_8866 * x0_1814 = _Znwm();
						word32 w8_1825 = 0x02;
						word64 v89_1826 = &x0_1814->qw0030;
						x0_1814->qw0030 = 0x00;
						x0_1814->qw0038 = 0x00;
						x0_1814->t0028.u1 = 0x00;
						struct Eq_8866 * v90_1830 = x0_1814;
						x0_1814->ptr0000 = null;
						x0_1814->qw0008 = 0x00;
						struct Eq_8866 * x23_1800;
						x0_1814->ptr0010 = x23_1800;
						x0_1814->dw0020 = 0x02;
						struct Eq_8866 * x22_1801;
						x22_1801->ptr0000 = x0_1814;
						struct Eq_9197 * x8_1836 = x27_1796->ptr0000;
						struct Eq_8866 * x21_1837 = x0_1814;
						struct Eq_9197 * x8_1838 = x8_1836->ptr0000;
						word128 q0_1979 = SEQ(q0_120_8_1817, b0_1816);
						if (x8_1838 != null)
						{
							x27_1796->ptr0000 = x8_1838;
							struct Eq_8866 * x1_1841 = x22_1801->ptr0000;
						}
						else
						{
							struct Eq_8866 * x1_1839 = x0_1814;
						}
						<unknown> ϕ;
						Mem1843 = ϕ(Mem1840, Mem1835);
						word64 x0_1844 = x27_1796->qw0008;
						fn000000000001BD70();
						word64 x8_1847 = x27_1796->qw0010;
						word64 x8_1848 = x8_1847 + 0x01;
						word32 x8_32_32_1864 = SLICE(x8_1847 + 0x01, word32, 32);
						x27_1796->qw0010 = x8_1847 + 0x01;
l000000000001F648:
						word64 x5_2379 = ϕ(x5_2381, x5_1820, x5_2381);
						word64 x3_2342 = ϕ(x3_2344, x3_1818, x3_2344);
						word32 w4_2229 = ϕ(w4_2231, w4_1819, w4_2231);
						struct Eq_8866 * x25_2150 = ϕ(x25_1702, x25_1798, x25_1702);
						word64 sp_1984 = ϕ(sp_1790, sp_1794, sp_1790);
						word128 q0_1977 = ϕ(q0_1784, q0_1979, q0_1784);
						byte b0_2195 = (byte) q0_1977;
						word120 q0_120_8_2206 = SLICE(q0_1977, word120, 8);
						Eq_1720 sysreg3_3_13_0_2_1967 = ϕ(sysreg3_3_13_0_2_1776, sysreg3_3_13_0_2_1808, sysreg3_3_13_0_2_1776);
						Eq_9036 x30_1960 = ϕ(x30_1765, x30_1806, x30_1765);
						struct Eq_6728 * x29_1954 = ϕ(x29_1760, x29_1805, x29_1760);
						struct Eq_8866 * x22_1942 = ϕ(x22_1723, x22_1801, x22_1715);
						struct Eq_8866 * x23_1936 = ϕ(x23_1705, x23_1800, x23_1749);
						Eq_9044 x24_1930 = ϕ(x24_1745, x24_1799, x24_1745);
						Eq_9048 x26_1923 = ϕ(x26_1737, x26_1797, x26_1737);
						struct Eq_9052 * x27_1918 = ϕ(x27_1733, x27_1796, x27_1733);
						Eq_9056 x28_1912 = ϕ(x28_1728, x28_1795, x28_1728);
						struct Eq_8866 * x19_1881 = ϕ(x19_1696, x19_1804, x19_1696);
						word64 x20_1871 = ϕ(x20_1699, x20_1803, x20_1699);
						word32 x8_32_32_1863 = ϕ(x8_32_32_1771, x8_32_32_1864, x8_32_32_1865);
						<unknown> ϕ;
						Mem1852 = ϕ(Mem1667, Mem1849, Mem1667);
						struct Eq_8866 * x21_1850 = ϕ(x21_1724, x21_1837, x21_1718);
						Eq_9082 v91_1853;
						v91_1853.u0 = x21_1850->t0028.u0;
						ui32 w8_1854 = (word32) v91_1853;
						struct Eq_10025 * v92_1855 = (struct Eq_10025 *) &x21_1850->qw0030;
						word64 x9_1856 = v92_1855->qw0000;
						word64 x10_1857 = v92_1855->qw0008;
						ptr64 x11_1858 = (char *) &x21_1850->t0028 + 1;
						ui32 w31_1859 = w8_1854 & 0x01;
						Eq_10042 NZ_1860;
						NZ_1860.u0 = cond(w8_1854 & 0x01);
						bool Z_1868 = SLICE(NZ_1860, bool, 30);
						bool C_1861 = false;
						bool V_1862 = false;
						uint64 x8_1866 = SEQ(x8_32_32_1863, w8_1854);
						uint64 x12_1867 = x8_1866 >> 1;
						word64 x1_1869 = (w8_1854 & 0x01) == 0x00 ? x11_1858 : x10_1857;
						word64 x2_1870 = (w8_1854 & 0x01) == 0x00 ? x8_1866 >> 1 : x9_1856;
						word64 x0_1873 = x20_1871;
						fn000000000001BB30();
						Eq_14 x1_1876;
						x1_1876.u0 = 0x00052000;
						ptr64 x1_1877 = &g_t52146;
						word32 w2_1878 = 0x0C;
						fn000000000001BB30();
						struct Eq_8866 * x8_1883 = x19_1881->ptr0000;
						word32 x8_32_32_2060 = SLICE(x8_1883, word32, 32);
						word64 x20_1884 = x20_1871;
						struct Eq_8866 * x25_1908;
						struct Eq_8866 * x21_1909;
						if (x8_1883 == null)
						{
							x25_1908 = x19_1881;
							x21_1909 = x19_1881->ptr0000;
							if (x21_1909 != null)
								goto l000000000001F744;
							goto l000000000001F6EC;
						}
l000000000001F69C:
						struct Eq_8866 * x25_1898 = ϕ(x25_2150, x25_2152);
						struct Eq_8866 * x8_1885 = ϕ(x8_1883, x8_1907);
						word32 x8_32_32_2062 = SLICE(x8_1885, word32, 32);
						int32 w9_1887 = x8_1885->dw0020;
						Eq_10190 NZCV_1888;
						NZCV_1888.u0 = cond(w9_1887 - 0x0A);
						Eq_10192 NV_1889;
						NV_1889.u0 = SLICE(NZCV_1888, bool, 31);
						struct Eq_8866 * x9_1901;
						struct Eq_8866 * x25_1905;
						struct Eq_8866 * x19_1902;
						struct Eq_8866 * x25_1903;
						struct Eq_8866 * x21_1904;
						struct Eq_8866 * x25_1897;
						struct Eq_8866 * x19_1896;
						struct Eq_8866 * x21_1900;
						if (w9_1887 >= 0x0A)
						{
							x9_1901 = x8_1885->ptr0000;
							if (x9_1901 != null)
							{
								x25_1905 = x8_1885;
								goto l000000000001F698;
							}
							x19_1902 = x8_1885;
							x25_1903 = x8_1885;
							x21_1904 = x8_1885->ptr0000;
							if (x21_1904 != null)
								goto l000000000001F744;
						}
						else
						{
							Eq_10402 NZCV_1890;
							NZCV_1890.u0 = cond(w9_1887 - 0x09);
							bool Z_1891 = SLICE(NZCV_1890, bool, 30);
							struct Eq_8866 * x25_1893;
							if (w9_1887 != 0x09)
							{
								struct Eq_8866 * x25_1892 = x8_1885;
								x25_1893 = (struct Eq_8866 *) &x8_1885->qw0008;
								struct Eq_8866 * x9_1894 = x25_1893->ptr0000;
								if (x9_1894 != null)
								{
l000000000001F698:
									<unknown> ϕ;
									x25_2152 = ϕ(x25_1905, x25_1893);
									struct Eq_8866 * x9_1906 = ϕ(x9_1901, x9_1894);
									x8_1907 = x9_1906;
									goto l000000000001F69C;
								}
							}
							<unknown> ϕ;
							x25_1897 = ϕ(x25_1898, x25_1893);
							x19_1896 = x8_1885;
							x21_1900 = x25_1897->ptr0000;
							if (x21_1900 != null)
								goto l000000000001F744;
						}
l000000000001F6EC:
						struct Eq_8866 * x8_1965 = ϕ(x8_1883, x8_1885, x8_1885);
						struct Eq_8866 * x19_1952 = ϕ(x19_1881, x19_1902, x19_1896);
						struct Eq_8866 * x21_1947 = ϕ(x21_1909, x21_1904, x21_1900);
						struct Eq_8866 * x25_1928 = ϕ(x25_1908, x25_1903, x25_1897);
						word32 w0_1910 = 0x40;
						struct Eq_8866 * x0_2010 = _Znwm();
						word32 w8_2021 = 0x09;
						word64 v93_2022 = &x0_2010->qw0030;
						x0_2010->qw0030 = 0x00;
						x0_2010->qw0038 = 0x00;
						x0_2010->t0028.u1 = 0x00;
						struct Eq_8866 * v94_2026 = x0_2010;
						x0_2010->ptr0000 = null;
						x0_2010->qw0008 = 0x00;
						struct Eq_8866 * x19_2000;
						x0_2010->ptr0010 = x19_2000;
						x0_2010->dw0020 = 0x09;
						struct Eq_8866 ** x25_1994;
						*x25_1994 = (struct Eq_8866 **) x0_2010;
						struct Eq_10343 * x8_2032 = x27_1992->ptr0000;
						struct Eq_8866 * x21_2033 = x0_2010;
						struct Eq_10343 * x8_2034 = x8_2032->ptr0000;
						if (x8_2034 != null)
						{
							x27_1992->ptr0000 = x8_2034;
							struct Eq_8866 * x1_2037 = (struct Eq_8866 *) *x25_1994;
						}
						else
						{
							struct Eq_8866 * x1_2035 = x0_2010;
						}
						<unknown> ϕ;
						Mem2039 = ϕ(Mem2036, Mem2031);
						word64 x0_2040 = x27_1992->qw0008;
						fn000000000001BD70();
						word64 x8_2043 = x27_1992->qw0010;
						word64 x8_2044 = x8_2043 + 0x01;
						word32 x8_32_32_2061 = SLICE(x8_2043 + 0x01, word32, 32);
						x27_1992->qw0010 = x8_2043 + 0x01;
l000000000001F744:
						word64 x5_2378 = ϕ(x5_2379, x5_2016, x5_2379, x5_2379);
						word64 x3_2341 = ϕ(x3_2342, x3_2014, x3_2342, x3_2342);
						word32 w4_2228 = ϕ(w4_2229, w4_2015, w4_2229, w4_2229);
						Eq_1720 sysreg3_3_13_0_2_2212 = ϕ(sysreg3_3_13_0_2_1967, sysreg3_3_13_0_2_2004, sysreg3_3_13_0_2_1967, sysreg3_3_13_0_2_1967);
						word120 q0_120_8_2205 = ϕ(q0_120_8_2206, q0_120_8_2013, q0_120_8_2206, q0_120_8_2206);
						byte b0_2194 = ϕ(b0_2195, b0_2012, b0_2195, b0_2195);
						struct Eq_6728 * x29_2082 = ϕ(x29_1954, x29_2001, x29_1954, x29_1954);
						word64 sp_2073 = ϕ(sp_1984, sp_1990, sp_1984, sp_1984);
						word64 x20_2068 = ϕ(x20_1884, x20_1999, x20_1884, x20_1884);
						word32 x8_32_32_2059 = ϕ(x8_32_32_2060, x8_32_32_2061, x8_32_32_2062, x8_32_32_2062);
						<unknown> ϕ;
						Mem2048 = ϕ(Mem1852, Mem2045, Mem1852, Mem1852);
						struct Eq_8866 * x21_2046 = ϕ(x21_1909, x21_2033, x21_1904, x21_1900);
						Eq_9082 v95_2049;
						v95_2049.u0 = x21_2046->t0028.u0;
						ui32 w8_2050 = (word32) v95_2049;
						struct Eq_10239 * v96_2051 = (struct Eq_10239 *) &x21_2046->qw0030;
						word64 x9_2052 = v96_2051->qw0000;
						word64 x10_2053 = v96_2051->qw0008;
						ptr64 x11_2054 = (char *) &x21_2046->t0028 + 1;
						ui32 w31_2055 = w8_2050 & 0x01;
						Eq_10254 NZ_2056;
						NZ_2056.u0 = cond(w8_2050 & 0x01);
						bool Z_2065 = SLICE(NZ_2056, bool, 30);
						bool C_2057 = false;
						bool V_2058 = false;
						uint64 x8_2063 = SEQ(x8_32_32_2059, w8_2050);
						Eq_2439 x12_2064 = x8_2063 >> 1;
						struct Eq_2626 * x1_2066 = (w8_2050 & 0x01) == 0x00 ? x11_2054 : x10_2053;
						Eq_14 x2_2067;
						x2_2067.u1 = (w8_2050 & 0x01) == 0x00 ? x8_2063 >> 1 : x9_2052;
						word64 x0_2070 = x20_2068;
						fn000000000001BB30();
						struct Eq_2626 * x0_2075 = sp_2073 + 0x78;
						LogCapture::~LogCapture();
						word64 sp_2076 = sp_2073 + 0x08;
l000000000001F770:
						word64 x5_2367 = ϕ(x5_2368, x5_2377, x5_2378);
						word64 x3_2330 = ϕ(x3_2331, x3_2340, x3_2341);
						Eq_14 x2_2299 = ϕ(x2_2300, x2_2302, x2_2067);
						word64 x17_2290 = ϕ(x17_2291, x17_2294, x17_2072);
						word64 x16_2284 = ϕ(x16_2285, x16_2288, x16_2071);
						Eq_2439 x12_2278 = ϕ(x12_2279, x12_2282, x12_2064);
						ptr64 x11_2272 = ϕ(x11_2273, x11_2276, x11_2054);
						word64 x10_2256 = ϕ(x10_2257, x10_2270, x10_2053);
						struct Eq_2626 * x1_2253 = ϕ(x1_2254, x1_1071, x1_2066);
						struct Eq_2626 * x0_2250 = ϕ(x0_2251, x0_1069, x0_2075);
						word32 w4_2217 = ϕ(w4_2218, w4_2227, w4_2228);
						Eq_1720 sysreg3_3_13_0_2_2211 = ϕ(sysreg3_3_13_0_2_1123, sysreg3_3_13_0_2_1124, sysreg3_3_13_0_2_2212);
						word120 q0_120_8_2202 = ϕ(q0_120_8_2203, q0_120_8_2204, q0_120_8_2205);
						byte b0_2191 = ϕ(b0_2192, b0_2193, b0_2194);
						struct Eq_6728 * x29_2081 = ϕ(x29_1117, x29_1118, x29_2082);
						<unknown> ϕ;
						Mem2078 = ϕ(Mem1076, Mem1068, Mem2048);
						ptr64 sp_2077 = fp - 560;
						struct Eq_6738 * x8_2079 = x8_38;
						word64 x8_2080 = x8_38->qw0028;
						word64 x9_2084 = x29_2081->qwFFFFFFA0;
						word64 x31_2085 = x8_2080 - x9_2084;
						Eq_8937 NZCV_2086;
						NZCV_2086.u0 = cond(x31_2085);
						bool Z_2087 = SLICE(NZCV_2086, bool, 30);
						bool C_2198 = SLICE(NZCV_2086, bool, 29);
						bool N_2200 = SLICE(NZCV_2086, bool, 31);
						bool V_2215 = SLICE(NZCV_2086, bool, 28);
						if (x31_2085 == 0x00)
						{
							ptr64 sp_2088 = fp - 96;
							ptr64 v69_2089 = fp - 16;
							word64 x29_2090 = x29;
							word64 x30_2091 = x30;
							ptr64 v70_2092 = fp - 32;
							word64 x20_2093 = x20;
							struct Eq_6592 * x19_2094 = x19;
							ptr64 v71_2095 = fp - 48;
							word64 x22_2096 = x22;
							word64 x21_2097 = x21;
							ptr64 v72_2098 = fp - 64;
							struct Eq_6592 * x24_2099 = x24;
							word64 x23_2100 = x23;
							ptr64 v73_2101 = fp - 80;
							struct Eq_6592 * x26_2102 = x26;
							struct Eq_6592 * x25_2103 = x25;
							ptr64 v74_2104 = fp - 96;
							struct Eq_2626 * x28_2105 = x28;
							word64 x27_2106 = x27;
							ptr64 sp_2107 = fp;
							return;
						}
l000000000001F7B4:
						__stack_chk_fail();
					}
l000000000001F7C0:
					word128 q0_873 = ϕ(q0_874, q0_298);
					Eq_1720 sysreg3_3_13_0_2_870 = ϕ(sysreg3_3_13_0_2_871, sysreg3_3_13_0_2_170);
					struct Eq_2626 ** x8_869 = ϕ(x8_815, x8_134);
					word64 x30_866 = ϕ(x30_867, x30_168);
					struct Eq_6728 * x29_863 = ϕ(x29_864, x29_166);
					struct Eq_6592 * x19_860 = ϕ(x19_861, x19_164);
					struct Eq_2626 * x21_858 = ϕ(x21_859, x21_139);
					struct Eq_2626 * x22_857 = ϕ(x22_804, x22_339);
					void * x23_854 = ϕ(x23_855, x23_123);
					struct Eq_6592 * x24_851 = ϕ(x24_852, x24_236);
					struct Eq_6592 * x25_848 = ϕ(x25_849, x25_160);
					struct Eq_6592 * x26_845 = ϕ(x26_846, x26_158);
					struct Eq_2626 * x28_842 = ϕ(x28_843, x28_154);
					<unknown> ϕ;
					Mem836 = ϕ(Mem819, Mem138);
					struct Eq_6733 * x27_833 = ϕ(x27_834, x27_156);
					Eq_7022 sp_826 = ϕ(sp_823, sp_142);
					word64 x0_827 = &sp_826->qw0008;
					fn000000000001B2D0();
					word64 x20_830 = x0_827;
					word64 x0_831 = (char *) &sp_826->ptr0018 + 96;
					LogCapture::~LogCapture();
					word64 sp_832 = &sp_826->qw0008;
					word64 x1_837 = x27_833->qw0008;
					struct Eq_6733 * x0_838 = x27_833;
					fn000000000001B760();
					word64 x0_841 = x0_827;
					word64 x0_896 = _Unwind_Resume(x0_827);
					ptr64 sp_876 = fp;
					word120 q0_120_8_2208 = SLICE(q0_898, word120, 8);
					word32 x19_32_32_2296 = SLICE(x19_886, word32, 32);
					word32 x20_32_32_2304 = SLICE(x20_885, word32, 32);
					word32 x21_32_32_2307 = SLICE(x21_884, word32, 32);
					word32 x22_32_32_2310 = SLICE(x22_883, word32, 32);
					word32 x23_32_32_2313 = SLICE(x23_882, word32, 32);
					word32 x24_32_32_2316 = SLICE(x24_881, word32, 32);
					word32 x25_32_32_2319 = SLICE(x25_880, word32, 32);
					word32 x26_32_32_2322 = SLICE(x26_879, word32, 32);
					word32 x29_32_32_2327 = SLICE(x29_887, word32, 32);
					word32 x31_32_32_2364 = SLICE(x31_894, word32, 32);
					_ZNSt6__ndk1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_();
					struct Eq_6592 * x19_2297 = SEQ(x19_32_32_2296, w19_912);
					word64 x20_2305 = SEQ(x20_32_32_2304, w20_914);
					word64 x21_2308 = SEQ(x21_32_32_2307, w21_915);
					word64 x22_2311 = SEQ(x22_32_32_2310, w22_916);
					word64 x23_2314 = SEQ(x23_32_32_2313, w23_917);
					struct Eq_6592 * x24_2317 = SEQ(x24_32_32_2316, w24_918);
					struct Eq_6592 * x25_2320 = SEQ(x25_32_32_2319, w25_919);
					struct Eq_6592 * x26_2323 = SEQ(x26_32_32_2322, w26_920);
					word64 x29_2328 = SEQ(x29_32_32_2327, w29_921);
					word64 x31_2365 = SEQ(x31_32_32_2364, w31_907);
					return;
				}
l000000000001F7AC:
				struct Eq_2626 * x22_728 = ϕ(x22_60, x22_718);
				struct Eq_2626 * x0_729 = x22_728;
				fn000000000001B2D0();
				goto l000000000001F7B4;
			}
			goto l000000000001EFA0;
		}
	}
	else
	{
		x22_471 = x28_435;
		x26_472 = x19_444->ptr0000;
		if (x26_472 != null)
			goto l000000000001EFF0;
	}
	<unknown> ϕ;
	x5_2375 = ϕ(x5_507, x5_459);
	<unknown> ϕ;
	x3_2338 = ϕ(x3_505, x3_457);
	<unknown> ϕ;
	x10_32_32_2267 = ϕ(x10_32_32_2262, x10_32_32_2263);
	<unknown> ϕ;
	w4_2225 = ϕ(w4_506, w4_458);
	<unknown> ϕ;
	sp_626 = ϕ(sp_482, sp_434);
	<unknown> ϕ;
	q0_621 = ϕ(q0_504, q0_456);
	<unknown> ϕ;
	x1_616 = ϕ(x1_501, x1_453);
	<unknown> ϕ;
	sysreg3_3_13_0_2_611 = ϕ(sysreg3_3_13_0_2_496, sysreg3_3_13_0_2_448);
	<unknown> ϕ;
	x8_599 = ϕ(x8_495, x8_447);
	<unknown> ϕ;
	x30_596 = ϕ(x30_494, x30_446);
	<unknown> ϕ;
	x29_591 = ϕ(x29_493, x29_445);
	<unknown> ϕ;
	x20_582 = ϕ(x20_491, x20_443);
	<unknown> ϕ;
	x21_575 = ϕ(x21_490, x21_442);
	<unknown> ϕ;
	x22_567 = ϕ(x22_512, x22_471);
	<unknown> ϕ;
	x25_560 = ϕ(x25_486, x25_438);
	<unknown> ϕ;
	x27_554 = ϕ(x27_484, x27_436);
	<unknown> ϕ;
	x28_549 = ϕ(x28_483, x28_435);
	<unknown> ϕ;
	Mem536 = ϕ(Mem473, Mem411);
	<unknown> ϕ;
	x19_517 = ϕ(x19_492, x19_444);
	x26_518 = x19_517;
	x24_519 = x19_517;
	goto l000000000001F048;
}

// 000000000001F894: define _ZNSt6__ndk1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_
// Called from:
//      
define _ZNSt6__ndk1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_
{
	word64 x30;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	char * x21_114;
	<unknown> ϕ;
	<unknown> ϕ;
	struct Eq_10493 * x20_115;
	<unknown> ϕ;
	<unknown> ϕ;
	<unknown> ϕ;
	word64 x22_113;
	<unknown> ϕ;
	uint64 x9_122;
	<unknown> ϕ;
	word32 w30_101;
	word64 x30_90;
	word32 NZCV_100;
	struct Eq_10473 * x8;
	char * x0;
	struct Eq_10493 * x1;
	word64 x26;
	word64 x26;
	word32 x26_32_32_43 = SLICE(x26, word32, 32);
	word64 x30;
	struct Eq_10493 * x1;
	char * x0;
	struct Eq_10473 * x8;
	word128 q0;
	struct Eq_10493 * x20_30 = x1;
	char * x21_32 = x0;
	struct Eq_10473 * x19_34 = x8;
	x8->t0000.u1 = (ui64) 0x00;
	x8->t0008.u1 = (size_t) 0x00;
	x8->ptr0010 = null;
	Eq_14 x0_39 = strlen(x0);
	byte v23_40 = x1->b0000;
	ui32 w26_41 = (word32) v23_40;
	word64 x8_42 = x1->qw0008;
	uint64 x26_44 = SEQ(x26_32_32_43, w26_41);
	uint64 x9_45 = x26_44 >> 1;
	word64 x22_49 = (w26_41 & 0x01) == 0x00 ? x26_44 >> 1 : x8_42;
	up64 x8_50 = (char *) x0_39.u1 + x22_49;
	if (x8_50 >= ~0x0F)
	{
		fn000000000001B2D0();
		Eq_10499 v35_57;
		v35_57.u0 = x8->t0000.u0;
		ui32 w8_58 = (word32) v35_57;
		if ((w8_58 & 0x01) != 0x00)
		{
			void * x0_60 = x8->ptr0010;
			word128 q0;
			((real64) q0, x0_60, x1);
		}
		struct Eq_10473 * x0_92 = _Unwind_Resume(x8);
		bool C_199 = SLICE(NZCV_100, bool, 29);
		bool N_201 = SLICE(NZCV_100, bool, 31);
		bool V_208 = SLICE(NZCV_100, bool, 28);
		word32 x30_32_32_225 = SLICE(x30_90, word32, 32);
		bool Z_232 = SLICE(NZCV_100, bool, 30);
		fn000000000001F990();
		word64 x30_226 = SEQ(x30_32_32_225, w30_101);
		return;
	}
	Eq_14 x23_102 = x0_39;
	word32 w23_135 = (word32) x0_39;
	void * x24_139;
	ui32 w26_155;
	void * x24_129;
	struct Eq_10473 * x19_116;
	Eq_14 x23_112;
	if (x8_50 <= 22)
	{
		x8->t0000.u0 = (ui8) ((byte) w23_135 << 0x01);
		x24_139 = (void *) ((char *) &x8->t0000 + 1);
		if (x0_39 == 0x00)
			goto l000000000001F910;
	}
	else
	{
		ui64 x25_106 = x8_50 + 0x10 & ~0x0F;
		void * x0_120 = _Znwm(x25_106);
		word64 x26_109;
		w26_155 = (word32) x26_109;
		x24_129 = x0_120;
		x19_116->t0008.u1 = (size_t) x23_112;
		x19_116->ptr0010 = x0_120;
		ui64 x25_110;
		x19_116->t0000.u1 = (ui64) (x25_110 | 0x01);
		if (x23_112 == 0x00)
			goto l000000000001F910;
	}
	uint64 x9_230 = ϕ(x9_45, x9_122);
	word64 x22_166 = ϕ(x22_49, x22_113);
	struct Eq_10473 * x19_163 = ϕ(x19_34, x19_116);
	ui32 w26_154 = ϕ(w26_41, w26_155);
	struct Eq_10493 * x20_151 = ϕ(x20_30, x20_115);
	Eq_14 x23_144 = ϕ(x23_102, x23_112);
	char * x21_142 = ϕ(x21_32, x21_114);
	void * x24_140 = ϕ(x24_139, x24_129);
	memcpy(x24_140, x21_142, x23_144);
l000000000001F910:
	uint64 x9_229 = ϕ(x9_45, x9_230, x9_122);
	word64 x22_165 = ϕ(x22_49, x22_166, x22_113);
	struct Eq_10473 * x19_162 = ϕ(x19_34, x19_163, x19_116);
	ui32 w26_153 = ϕ(w26_41, w26_154, w26_155);
	struct Eq_10493 * x20_150 = ϕ(x20_30, x20_151, x20_115);
	Eq_14 x23_148 = ϕ(x23_102, x23_144, x23_112);
	void * x24_147 = ϕ(x24_139, x24_140, x24_129);
	*(x24_147 + x23_148) = (word64) 0x00;
	word64 x8_152 = x20_150->qw0010;
	ui32 w31_156 = w26_153 & 0x01;
	Eq_10629 NZ_157;
	NZ_157.u0 = cond(w31_156);
	bool Z_160 = SLICE(NZ_157, bool, 30);
	bool N_202 = SLICE(NZ_157, bool, 31);
	bool C_158 = false;
	bool V_159 = false;
	word64 x1_161 = w31_156 != 0x00 ? x8_152 : &x20_150->b0000 + 1;
	struct Eq_10473 * x0_164 = x19_162;
	word64 x2_167 = x22_165;
	fn000000000001B1B0();
	word64 x30_174 = x30;
}

// 000000000001F990: define fn000000000001F990
// Called from:
//      _ZNSt6__ndk1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_
//      
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      
define fn000000000001F990
{
	__cxa_begin_catch();
	std::terminate();
	();
}

// 000000000001F99C: void ()
// Called from:
//      fn000000000001F990
void ()
{
	ptr64 fp;
	word64 x21;
	word64 x19;
	word64 x20;
	word64 x30;
	word64 x29;
	struct Eq_10747 * x21_51;
	Eq_1720 sysreg3_3_13_0_2;
	word64 x0;
	ptr64 fp;
	word64 x21;
	word64 x20;
	word64 x19;
	word64 x29;
	word64 x30;
	Eq_1720 sysreg3_3_13_0_2;
	word64 x0;
	word32 x0_32_32_26 = SLICE(x0, word32, 32);
	struct Eq_10720 * x21_18 = __mrs(sysreg3_3_13_0_2);
	word64 x8_19 = x21_18->qw0028;
	word64 x0_27 = SEQ(x0_32_32_26, 0x10);
	struct Eq_10731 * x0_36 = _Znwm(x0_27);
	x0_36->ptr0000 = &g_t6F980;
	word64 x19_31;
	x0_36->qw0008 = x19_31;
	word64 x20_30;
	word64 sp_28;
	rs2_set_devices_changed_callback_cpp(x20_30, x0_36, sp_28);
	word64 x0_64 = 0x00;
	fn000000000001ADF0();
	word64 x8_67 = x21_51->qw0028;
	word64 x9_68 = x8_19;
	word64 x31_69 = x8_67 - x8_19;
	Eq_10752 NZCV_70;
	NZCV_70.u0 = cond(x31_69);
	bool Z_71 = SLICE(NZCV_70, bool, 30);
	bool C_91 = SLICE(NZCV_70, bool, 29);
	bool N_92 = SLICE(NZCV_70, bool, 31);
	bool V_93 = SLICE(NZCV_70, bool, 28);
	if (x31_69 != 0x00)
		__stack_chk_fail();
	else
	{
		word64 x29_73 = x29;
		word64 x30_74 = x30;
		word64 x20_76 = x20;
		word64 x19_77 = x19;
		word64 x21_78 = x21;
		ptr64 sp_79 = fp;
	}
}

// 000000000001FA1C: void ()
void ()
{
	Eq_10769 fp;
	Eq_10769 sp = fp;
	sp.u0 = (word32) sp - 96;
	Eq_14 x28;
	sp.u0->t0000.u1 = (size_t) x28;
	struct Eq_10778 * v7 = (struct Eq_10778 *) ((word32) sp + 16);
	Eq_10780 x26;
	v7->t0000.u0 = (void *) x26;
	struct Eq_10784 * x25;
	v7->ptr0008 = x25;
	struct Eq_10789 * v10 = (struct Eq_10789 *) &sp.u0->t0020.u0;
	Eq_14 x24;
	v10->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v10->t0008.u1 = (size_t) x23;
	struct Eq_10800 * v13 = (struct Eq_10800 *) ((word32) sp + 48);
	Eq_14 x22;
	v13->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v13->t0008.u1 = (size_t) x21;
	struct Eq_10811 * v16 = (struct Eq_10811 *) ((word32) sp + 64);
	Eq_14 x20;
	v16->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v16->t0008.u1 = (size_t) x19;
	struct Eq_10822 * v19 = (struct Eq_10822 *) ((word32) sp + 80);
	struct Eq_10824 * x29;
	v19->ptr0000 = x29;
	word64 x30;
	v19->qw0008 = x30;
	x29 = (struct Eq_10824 *) ((word32) sp + 80);
	sp -= 448;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x25->t0028.u1;
	x24.u0 = 0x00071000;
	x24.u1 = (word32) x24 + 0x0118;
	Eq_14 x9;
	x9.u1 = (word32) sp + 80;
	x29->tFFFFFFA8.u1 = (size_t) x8;
	Eq_14 w8 = *x24.u1;
	x22.u1 = (word32) x9 + 8;
	Eq_14 v25 = *((word32) x24 + 8);
	ui32 w9 = (word32) v25;
	Eq_14 x10;
	x10.u1 = (word32) x24 + 9;
	((word32) sp + 80)->u0 = w8;
	x8 = *((word32) x24 + 24);
	ui32 w31 = w9 & 0x01;
	Eq_10876 NZ;
	NZ.u0 = cond(w31);
	Eq_14 x0;
	x19 = x0;
	struct Eq_10880 * v32 = (struct Eq_10880 *) ((word32) sp + 96);
	v32->qw0000 = 0x00;
	v32->qw0008 = 0x00;
	bool Z;
	x21.u1 = Test(EQ,Z) ? x10 : x8;
	x0 = x21;
	((word32) sp + 88)->u0 = 0x00;
	x0 = strlen(x0);
	sp.u0 = (word32) x0 + 16;
	Eq_10903 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x22;
		fn000000000001B2D0();
		goto l000000000001FE90;
	}
	x20 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w20;
	if (Test(ULT,C))
	{
		w8 = w20 << 1;
		x22.u1 = (word32) x22 + 1;
		((word32) sp + 88)->u0 = (byte) w8;
		if (x20 == 0x00)
			goto l000000000001FAE0;
	}
	else
	{
		x8.u1 = (word32) x20 + 16;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		Eq_10921 v69;
		v69.u0 = sp + 96;
		v69.u0->t0000.u1 = (size_t) x20;
		v69.u0->t0008.u1 = (size_t) x0;
		((word32) sp + 88)->u0 = x8;
	}
	x0 = x22;
	Eq_14 x1 = x21;
	Eq_14 x2 = x20;
	x0 = memcpy(x0, x1, x2);
l000000000001FAE0:
	*(x22 + x20) = (word64) 0x00;
	x0.u1 = sp + 0x50;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w20 = 0x00;
		Eq_14 v41;
		v41.u1 = *((word32) sp + 88);
		w8.u1 = (word32) v41;
		if ((w8 & 0x01) == 0x00)
			goto l000000000001FB98;
		goto l000000000001FBB0;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_10980 v37;
	v37.u0 = sp + 64;
	v37.u0->t0000.u1 = (size_t) 0x00;
	v37.u0->t0008.u1 = (size_t) 0x00;
	((word32) sp + 56)->u0 = 0x00;
	x20 = *x8.u1;
	x0 = x20;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
		x0.u1 = sp + 0x38;
		fn000000000001B2D0();
		goto l000000000001FEA4;
	}
	x21 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w21;
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x38;
		w8 = w21 << 1;
		x22 = x9 | 0x01;
		sp.u0->b0038 = (byte) (byte) w8;
		if (x21 == 0x00)
			goto l000000000001FB78;
	}
	else
	{
		x8.u1 = x21 + 0x10;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		Eq_11021 v42;
		v42.u0 = sp + 64;
		v42->u0 = x21;
		((word32) v42 + 8)->u0 = x0;
		((word32) sp + 56)->u0 = x8;
	}
	x0 = x22;
	x1 = x20;
	x2 = x21;
	x0 = memcpy(x0, x1, x2);
l000000000001FB78:
	*(x22 + x21) = (word64) 0x00;
	x0.u1 = sp + 0x38;
	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
	Eq_14 v43;
	v43.u0 = sp.u0->b0038;
	w8.u1 = (word32) v43;
	w20 = w0;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_14 v44;
		v44.u1 = *((word32) sp + 88);
		w8.u1 = (word32) v44;
		if ((w8 & 0x01) != 0x00)
		{
l000000000001FB98:
			if ((w20 & 0x01) != 0x00)
				goto l000000000001FC08;
			goto l000000000001FBBC;
		}
	}
	else
	{
		x0.u1 = *((word32) sp + 72);
		((real64) q0, x0, x1);
		Eq_14 v50;
		v50.u1 = *((word32) sp + 88);
		w8.u1 = (word32) v50;
		if ((w8 & 0x01) == 0x00)
			goto l000000000001FB98;
	}
l000000000001FBB0:
	x0.u1 = *((word32) sp + 0x0068);
	((real64) q0, x0, x1);
	if ((w20 & 0x01) == 0x00)
		goto l000000000001FC08;
l000000000001FBBC:
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	x2.u0 = 0x00071000;
	Eq_14 x3;
	x3.u0 = 0x00052000;
	x2.u1 = (word32) x2 + 0x0118;
	x1 = *x8.u1;
	x3.u1 = (word32) x3 + 0x05EE;
	x0.u1 = sp + 0x70;
	ui32 w4 = 0x00 | 0x06;
	word64 x5 = 0x00;
	x20.u1 = sp + 0x70;
	_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
	x0.u1 = x20 + 0x08;
	x1.u0 = 0x00050000;
	x1.u1 = x1 + 0x074B;
	ui32 w2 = 0x00 | 0x07;
	fn000000000001BB30();
	x0.u1 = sp + 0x70;
	LogCapture::~LogCapture();
	sp.u0 = sp + 0x08;
l000000000001FC08:
	x20 = x19;
	x20.u1 = x20 + 224;
	x21 = *x20.u1;
	x26.u0 = x20 + 0x08;
	while (true)
	{
		Eq_11160 x31 = x21 - x26;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
			break;
		x8 = *((word32) x21 + 80);
		sp.u0->t0070.u1 = (size_t) 0x00;
		x1.u1 = sp + 0x70;
		x0 = *x8.u1;
		rs2_pipeline_stop();
		x0.u1 = sp.u0->t0070.u1;
		fn000000000001ADF0();
		x8 = *((word32) x21 + 8);
		while (x8 != 0x00)
		{
			x21 = x8;
			x8 = *x8.u1;
		}
	}
	Eq_14 v53 = *((word32) x24 + 8);
	ui32 w10 = (word32) v53;
	Eq_14 x11 = *((word32) x24 + 24);
	w8 = *x24.u1;
	ptr64 x12 = (ptr64) ((word32) x24 + 9);
	w31 = w10 & 0x01;
	NZ.u0 = cond(w31);
	x22.u1 = Test(EQ,Z) ? x12 : x11;
	x9.u1 = sp + 0x18;
	x0 = x22;
	x23.u1 = x9 + 0x08;
	((word32) sp + 24)->u0 = w8;
	Eq_11193 v56;
	v56.u0 = sp + 40;
	v56->u0 = 0x00;
	((word32) v56 + 8)->u0 = 0x00;
	sp.u0->t0020.u1 = 0x00;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(ULT,C))
	{
		x21 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			w8 = w21 << 1;
			x23.u1 = x23 + 0x01;
			sp.u0->t0020.u0 = (byte) (byte) w8;
			if (x21 == 0x00)
				goto l000000000001FD14;
		}
		else
		{
			x8.u1 = x21 + 0x10;
			x24 = x8 & ~0x0F;
			x0 = x24;
			_Znwm();
			x8 = x24 | 0x01;
			x23 = x0;
			Eq_11285 v68;
			v68.u0 = sp + 40;
			v68.u0->t0000.u1 = (size_t) x21;
			v68.u0->t0008.u1 = (size_t) x0;
			sp.u0->t0020.u1 = (size_t) x8;
		}
		x0 = x23;
		x1 = x22;
		x2 = x21;
		x0 = memcpy(x0, x1, x2);
l000000000001FD14:
		*(x23 + x21) = (word64) 0x00;
		x0.u1 = sp + 0x18;
		((LEVELS) x0);
		if ((w0 & 0x01) == 0x00)
		{
			w21 = 0x00;
			Eq_14 v67;
			v67.u0 = sp.u0->t0020.u0;
			w8.u1 = (word32) v67;
			if ((w8 & 0x01) == 0x00)
				goto l000000000001FDCC;
			goto l000000000001FDE4;
		}
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		Eq_11356 v57;
		v57.u0 = sp + 8;
		v57.u0->t0000.u1 = (size_t) 0x00;
		v57.u0->t0008.u1 = (size_t) 0x00;
		sp.u0->t0000.u1 = (size_t) 0x00;
		x21 = *x8.u1;
		x0 = x21;
		x0 = strlen(x0);
		sp.u0 = x0 + 0x10;
		NZCV.u0 = cond(sp);
		if (Test(ULT,C))
		{
			x22 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			if (Test(ULT,C))
			{
				x9.u1 = sp + 0x00;
				ui32 w22;
				w8 = w22 << 1;
				x23 = x9 | 0x01;
				sp.u0->t0000.u0 = (byte) (byte) w8;
				if (x22 == 0x00)
					goto l000000000001FDAC;
			}
			else
			{
				x8.u1 = x22 + 0x10;
				x24 = x8 & ~0x0F;
				x0 = x24;
				_Znwm();
				x8 = x24 | 0x01;
				x23 = x0;
				Eq_11397 v66;
				v66.u0 = sp + 8;
				v66->u0 = x22;
				((word32) v66 + 8)->u0 = x0;
				sp.u0->t0000.u1 = (size_t) x8;
			}
			x0 = x23;
			x1 = x21;
			x2 = x22;
			x0 = memcpy(x0, x1, x2);
l000000000001FDAC:
			*(x23 + x22) = (word64) 0x00;
			x0.u1 = sp + 0x00;
			_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
			Eq_14 v61;
			v61.u0 = sp.u0->t0000.u0;
			w8.u1 = (word32) v61;
			w21 = w0;
			if ((w8 & 0x01) != 0x00)
			{
				Eq_14 v62;
				v62.u0 = sp.u0->t0020.u0;
				w8.u1 = (word32) v62;
				if ((w8 & 0x01) != 0x00)
				{
l000000000001FDCC:
					if ((w21 & 0x01) != 0x00)
						goto l000000000001FE3C;
l000000000001FDF0:
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					x2.u0 = 0x00071000;
					x3.u0 = 0x00052000;
					x2.u1 = x2 + 0x0118;
					x1 = *x8.u1;
					x3.u1 = (word32) x3 + 0x05EE;
					x0.u1 = sp + 0x70;
					w4 = 0x00 | 0x06;
					x5 = 0x00;
					x21.u1 = sp + 0x70;
					_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
					x0.u1 = x21 + 0x08;
					x1.u0 = 0x00050000;
					x1.u1 = x1 + 0x0753;
					w2 = 0x19;
					fn000000000001BB30();
					x0.u1 = sp + 0x70;
					LogCapture::~LogCapture();
					sp.u0 = sp + 0x08;
l000000000001FE3C:
					x1 = *((word32) x19 + 232);
					x0 = x20;
					fn000000000001C2D0();
					x8.u1 = x19 + 424;
					Eq_11570 v64;
					v64.u0 = x19 + 232;
					v64.u0->t0000.u1 = (size_t) 0x00;
					v64.u0->t0008.u1 = (size_t) 0x00;
					((word32) x19 + 224)->u1 = x26;
				}
			}
			else
			{
				x0.u1 = *((word32) sp + 16);
				((real64) q0, x0, x1);
				Eq_14 v65;
				v65.u0 = sp.u0->t0020.u0;
				w8.u1 = (word32) v65;
				if ((w8 & 0x01) == 0x00)
					goto l000000000001FDCC;
			}
l000000000001FDE4:
			x0.u1 = *((word32) sp + 48);
			((real64) q0, x0, x1);
			if ((w21 & 0x01) == 0x00)
				goto l000000000001FE3C;
			goto l000000000001FDF0;
		}
l000000000001FEA4:
		x0.u1 = sp + 0x00;
		fn000000000001B2D0();
		x19 = x0;
		LogCapture::~LogCapture();
		sp.u0 = sp + 0x08;
		x0 = x19;
		_Unwind_Resume();
		byte v59 = sp.u0->b0038;
		w8.u1 = (word32) v59;
		x19 = x0;
		if ((w8 & 0x01) != 0x00)
		{
			x0.u1 = *((word32) sp + 72);
			((real64) q0, x0, x1);
			byte v60 = (byte) *((word32) sp + 88);
			w8.u1 = (word32) v60;
			if ((w8 & 0x01) != 0x00)
				goto l000000000001FF2C;
		}
		else
		{
			byte v63 = (byte) *((word32) sp + 88);
			w8.u1 = (word32) v63;
			if ((w8 & 0x01) == 0x00)
				goto l000000000001FF2C;
		}
		x0.u1 = *((word32) sp + 0x0068);
		((real64) q0, x0, x1);
l000000000001FF2C:
		x0 = x19;
		_Unwind_Resume();
		();
		return;
	}
l000000000001FE90:
	x0 = x23;
	fn000000000001B2D0();
	__stack_chk_fail();
}

// 000000000001FF34: void ()
// Called from:
//      
void ()
{
	word64 x0;
	word64 * fp;
	word64 * sp = fp;
	sp += -0x0C;
	word64 x28;
	*sp = x28;
	struct Eq_11595 * v7 = (struct Eq_11595 *) (sp + 2);
	word64 x26;
	v7->qw0000 = x26;
	struct Eq_11601 * x25;
	v7->ptr0008 = x25;
	struct Eq_11606 * v10 = (struct Eq_11606 *) (sp + 4);
	word64 x24;
	v10->qw0000 = x24;
	word64 x23;
	v10->qw0008 = x23;
	struct Eq_11617 * v13 = (struct Eq_11617 *) (sp + 6);
	word64 x22;
	v13->qw0000 = x22;
	word64 x21;
	v13->qw0008 = x21;
	struct Eq_11628 * v16 = (struct Eq_11628 *) (sp + 8);
	word64 x20;
	v16->qw0000 = x20;
	word64 x19;
	v16->qw0008 = x19;
	struct Eq_11639 * v19 = (struct Eq_11639 *) (sp + 0x0A);
	struct Eq_11641 * x29;
	v19->ptr0000 = x29;
	word64 x30;
	v19->qw0008 = x30;
	x29 = (struct Eq_11641 *) (sp + 0x0A);
	sp -= 448;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	word64 x9 = x25->qw0028;
	word64 x8 = x0 + 0x01AA;
	ui32 w10 = 0x00 | 0x01;
	x29->qwFFFFFFA8 = x9;
}

// 0000000000020414: void ()
void ()
{
	struct Eq_11672 * fp;
	struct Eq_11672 * sp = fp;
	sp = (struct Eq_11672 *) ((char *) sp - 96);
	word64 x28;
	sp->qw0000 = x28;
	word64 x27;
	sp->qw0008 = x27;
	struct Eq_11685 * v8 = (struct Eq_11685 *) (&sp->qw0008 + 1);
	struct Eq_11687 * x26;
	v8->ptr0000 = x26;
	word64 x25;
	v8->qw0008 = x25;
	struct Eq_11696 * v11 = (struct Eq_11696 *) (&sp->qw0008 + 3);
	word64 x24;
	v11->qw0000 = x24;
	word64 x23;
	v11->qw0008 = x23;
	struct Eq_11707 * v14 = (struct Eq_11707 *) (&sp->qw0008 + 5);
	word64 x22;
	v14->qw0000 = x22;
	word64 x21;
	v14->qw0008 = x21;
	struct Eq_11718 * v17 = (struct Eq_11718 *) (&sp->qw0008 + 7);
	word64 x20;
	v17->qw0000 = x20;
	word64 x19;
	v17->qw0008 = x19;
	struct Eq_11729 * v20 = (struct Eq_11729 *) (&sp->qw0008 + 9);
	struct Eq_11731 * x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (struct Eq_11731 *) (&sp->qw0008 + 9);
	sp -= 0x0280;
	Eq_1720 sysreg3_3_13_0_2;
	x26 = __mrs(sysreg3_3_13_0_2);
	word64 x8 = x26->qw0028;
	word64 x0;
	x19 = x0 + 288;
	x20 = x0;
	x27 = x0 + 0x01AB;
	ui32 w21 = 0x00 | 0x01;
	x0 = x19;
	x29->qwFFFFFFA0 = x8;
}

// 0000000000020EF8: void ()
void ()
{
	struct Eq_11763 * fp;
	struct Eq_11763 * sp = fp;
	sp -= 0x50;
	Eq_14 x23;
	sp->t0010.u1 = (size_t) x23;
	struct Eq_11772 * v7 = (struct Eq_11772 *) ((char *) &sp->t0010 + 16);
	struct Eq_11774 * x22;
	v7->ptr0000 = x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_11783 * v10 = (struct Eq_11783 *) ((char *) &sp->t0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_11794 * v13 = (struct Eq_11794 *) ((char *) &sp->t0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->t0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u1 = x22->t0028.u1;
	ptr64 x1 = &sp->t0000.u0;
	Eq_14 x8;
	x21 = x8;
	sp->t0008.u1 = (size_t) x9;
	sp->t0000.u1 = (size_t) 0x00;
	Eq_14 x0 = *x0.u1;
	rs2_query_devices();
	x20 = x0;
	word32 w0 = 0x28;
	_Znwm();
	((word32) x0 + 16)->u0 = 0x00;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3352);
	x9.u0 = 0x00070000;
	x19 = x0;
	x23 = x0;
	x9 = *((word32) x9 + 0x0F70);
	x0.u1 = sp->t0000.u1;
	x23.u1 = (word32) x23 + 8;
	x23.u1->u0 = 0x00;
	x8.u1 = (word32) x8 + 16;
	*x19.u1 = x8;
	struct Eq_11860 * v20 = (struct Eq_11860 *) ((word32) x19 + 24);
	v20->t0000.u1 = (size_t) x20;
	v20->t0008.u1 = (size_t) x9;
	fn000000000001ADF0();
	Eq_14 w9;
	do
	{
		union Eq_3183 * v21 = &*x23.u1;
		x8 = __load_exclusive<word64>(v21);
		x8.u1 = (word32) x8 + 1;
		union Eq_3192 * v22 = &*x23.u1;
		w9 = __store_exclusive<word64>(v22, x8);
	} while (w9 != 0x00);
	Eq_14 v24 = x21;
	*v24.u1 = x20;
	*((word32) v24 + 8) = x19;
}

// 0000000000021034: void (Register Eq_11895 x0)
void (Eq_11895 x0)
{
	Eq_11896 fp;
	Eq_11896 sp = fp;
	sp.u1 = (word32) sp - 112;
	word64 d8;
	sp.u3.u1->u1 = d8;
	struct Eq_11905 * v7 = (struct Eq_11905 *) ((word32) sp + 16);
	ui64 x28;
	v7->qw0000 = x28;
	struct Eq_11911 * x27;
	v7->ptr0008 = x27;
	struct Eq_11916 * v10 = (struct Eq_11916 *) ((word32) sp + 32);
	Eq_14 x26;
	v10->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v10->t0008.u1 = (size_t) x25;
	struct Eq_11927 * v13 = (struct Eq_11927 *) ((word32) sp + 48);
	Eq_14 x24;
	v13->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v13->t0008.u1 = (size_t) x23;
	struct Eq_11938 * v16 = (struct Eq_11938 *) ((word32) sp + 64);
	Eq_14 x22;
	v16->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v16->t0008.u1 = (size_t) x21;
	struct Eq_11949 * v19 = (struct Eq_11949 *) ((word32) sp + 80);
	Eq_14 x20;
	v19->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v19->t0008.u1 = (size_t) x19;
	struct Eq_11960 * v22 = (struct Eq_11960 *) ((word32) sp + 96);
	ptr64 x29;
	v22->ptr0000 = x29;
	word64 x30;
	v22->qw0008 = x30;
	x29 = (ptr64) ((word32) sp + 96);
	sp -= 0x0590;
	Eq_1720 sysreg3_3_13_0_2;
	x27 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x27->t0028.u1;
	x19 = x0;
	x0.u0 = 0x00050000;
	x0.u1 = (word32) x0 + 0x06BE;
	Eq_14 x1;
	x20 = x1;
	x21.u1 = (word32) sp + 0x0300;
	((word32) sp + 16)->u1 = x8;
	x0 = SEQ(0x00, system(x0));
	word128 q0 = 0;
	struct Eq_12000 * v28 = (struct Eq_12000 *) ((word32) x21 + 16);
	v28->ow0000 = q0;
	v28->ow0010 = q0;
	x21.u1->u1 = q0;
	((word32) sp + 832)->u1 = 0x00;
	((word32) sp + 0x0338)->u1 = 0x00;
	((word32) sp + 840)->u1 = 0x00;
	((word32) sp + 0x0430)->u1 = 0x00;
	x0 = *((word32) x20 + 8);
	ui32 w1 = 0x00 | 0x01;
	Eq_14 x2;
	x2.u1 = (word32) sp + 0x0430;
	rs2_get_device_info();
	x21 = x0;
	x0.u1 = *((word32) sp + 0x0430);
	fn000000000001ADF0();
	x0 = x21;
	((word32) sp + 752)->u1 = 0x00;
	((word32) sp + 744)->u1 = 0x00;
	((word32) sp + 760)->u1 = 0x00;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	Eq_12061 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0.u1 = (word32) sp + 744;
		fn000000000001B2D0();
		goto l0000000000023448;
	}
	x22 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	Eq_14 x9;
	Eq_14 w8;
	ui32 w22;
	if (Test(ULT,C))
	{
		x9.u1 = (word32) sp + 744;
		w8 = w22 << 1;
		x23 = x9 | 0x01;
		((word32) sp + 744)->u1 = (byte) w8;
		if (x22 == 0x00)
			goto l0000000000021128;
	}
	else
	{
		x8.u1 = (word32) x22 + 16;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		((word32) sp + 760)->u1 = x0;
		((word32) sp + 744)->u1 = x8;
		((word32) sp + 752)->u1 = x22;
	}
	x0 = x23;
	x1 = x21;
	x2 = x22;
	x0 = memcpy(x0, x1, x2);
l0000000000021128:
	*(x23 + x22) = (word64) 0x00;
	x8.u1 = (word32) sp + 720;
	x0 = x20;
	fn000000000001C100();
	x0.u1 = *((word32) sp + 728);
	((word32) sp + 0x0430)->u1 = 0x00;
	((word32) sp + 856)->u1 = 0x00;
	x1.u1 = (word32) sp + 856;
	x2.u1 = (word32) sp + 0x0430;
	rs2_is_enabled();
	x0.u1 = *((word32) sp + 0x0430);
	fn000000000001ADF0();
	w8.u1 = *((word32) sp + 856);
	ui32 w31;
	Eq_12181 NZ;
	bool Z;
	ui32 w0;
	ui32 w2;
	Eq_14 w10;
	Eq_14 x11;
	Eq_14 x3;
	Eq_14 w9;
	ui32 w21;
	ui32 w4;
	word64 x5;
	if (w8 != 0x00)
	{
l0000000000021334:
		((word32) sp + 0x0430)->u1 = 0x00;
		x0 = *((word32) x20 + 8);
		w1 = 0x00 | 0x07;
		x2.u1 = (word32) sp + 0x0430;
		rs2_get_device_info();
		x21 = x0;
		x0.u1 = *((word32) sp + 0x0430);
		fn000000000001ADF0();
		x0 = x21;
		x0 = strlen(x0);
		x9.u0 = 0x00071000;
		x9.u1 = (word32) x9 + 760;
		byte v45 = (byte) *x9.u1;
		w8.u1 = (word32) v45;
		x9 = *((word32) x9 + 8);
		Eq_14 x10 = x8 >> 1;
		w31 = w8 & 0x01;
		NZ.u0 = cond(w31);
		x9.u1 = Test(EQ,Z) ? x10 : x9;
		Eq_12186 x31 = x0 - x9;
		NZCV.u0 = cond(x31);
		bool V;
		if (Test(EQ,Z))
		{
			x2 = x0;
			if (x0 == 0x00)
				goto l0000000000021450;
			sp.u1 = (word32) x2 + 1;
			NZCV.u0 = cond(sp);
			if (Test(EQ,Z))
			{
				x0.u0 = 0x00071000;
				x0.u1 = (word32) x0 + 760;
				fn000000000001C380();
				goto l0000000000023498;
			}
			x9.u0 = 0x00071000;
			x9.u1 = (word32) x9 + 761;
			x10 = *((word32) x9 + 0x0F);
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x1 = x21;
			x0.u1 = Test(EQ,Z) ? x9 : x10;
			x0 = SEQ(0x00, memcmp(x0, x1, x2));
			if (w0 == 0x00)
			{
l0000000000021450:
				((word32) sp + 0x0288)->u1 = 0x00;
				((word32) sp + 640)->u1 = 0x00;
				((word32) sp + 656)->u1 = 0x00;
				x1.u0 = 0x00050000;
				x1.u1 = (word32) x1 + 2223;
				x0.u1 = (word32) sp + 640;
				w2 = 2766;
				fn000000000001B8B0();
				goto l0000000000021470;
			}
		}
		((word32) sp + 0x0430)->u1 = 0x00;
		x0 = *((word32) x20 + 8);
		w1 = 0x00 | 0x07;
		x2.u1 = (word32) sp + 0x0430;
		rs2_get_device_info();
		x21 = x0;
		x0.u1 = *((word32) sp + 0x0430);
		fn000000000001ADF0();
		x0 = x21;
		x0 = strlen(x0);
		x9.u0 = 0x00071000;
		x9.u1 = (word32) x9 + 784;
		Eq_14 v49 = *x9.u1;
		w8.u1 = (word32) v49;
		x9 = *((word32) x9 + 8);
		x10 = x8 >> 1;
		w31 = w8 & 0x01;
		NZ.u0 = cond(w31);
		x9.u1 = Test(EQ,Z) ? x10 : x9;
		x31 = x0 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
l000000000002142C:
			((word32) sp + 0x0288)->u1 = 0x00;
			((word32) sp + 640)->u1 = 0x00;
			((word32) sp + 656)->u1 = 0x00;
			x1.u0 = 0x00051000;
			x1.u1 = (word32) x1 + 894;
			x0.u1 = (word32) sp + 640;
			w2 = 0x0B99;
			fn000000000001B8B0();
l0000000000021470:
			Eq_12342 v51 = *((word32) sp + 640);
			w8.u1 = (word32) v51;
			x9.u1 = *((word32) sp + 656);
			x0.u1 = *((word32) sp + 728);
			w10.u1 = *((word32) sp + 0x0288);
			x11.u1 = (word32) sp + 640;
			x11 |= 0x01;
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			Eq_12462 x12 = x8 >> 1;
			x1.u1 = Test(EQ,Z) ? x11 : x9;
			((word32) sp + 0x0430)->u1 = 0x00;
			word32 w12;
			w2 = Test(EQ,Z) ? w12 : w10;
			x3.u1 = (word32) sp + 0x0430;
			rs2_load_json();
			x0.u1 = *((word32) sp + 0x0430);
			fn000000000001ADF0();
			x8.u1 = (word32) sp + 616;
			x0 = x20;
			fn000000000001B490();
			x8.u1 = *((word32) sp + 624);
			((word32) sp + 600)->u1 = 0x00;
			((word32) sp + 608)->u1 = 0x00;
			if (x8 == 0x00)
			{
l00000000000215E4:
				x25.u0 = 0x00071000;
				x25.u1 = (word32) x25 + 0x0118;
				x8.u1 = (word32) sp + 552;
				x23.u1 = (word32) x8 + 8;
				Eq_14 v68 = *((word32) x25 + 8);
				w8.u1 = (word32) v68;
				x10 = *((word32) x25 + 24);
				w9 = *x25.u1;
				x11.u1 = (word32) x25 + 9;
				w31 = w8 & 0x01;
				NZ.u0 = cond(w31);
				x22.u1 = Test(EQ,Z) ? x11 : x10;
				x0 = x22;
				((word32) sp + 552)->u1 = w9;
				((word32) sp + 576)->u1 = 0x00;
				((word32) sp + 568)->u1 = 0x00;
				((word32) sp + 560)->u1 = 0x00;
				x0 = strlen(x0);
				sp.u1 = (word32) x0 + 16;
				NZCV.u0 = cond(sp);
				if (Test(ULT,C))
				{
					x21 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						w8 = w21 << 1;
						x23.u1 = (word32) x23 + 1;
						((word32) sp + 560)->u1 = (byte) w8;
						if (x21 == 0x00)
							goto l0000000000021680;
					}
					else
					{
						x8.u1 = (word32) x21 + 16;
						x24 = x8 & ~0x0F;
						x0 = x24;
						_Znwm();
						x8 = x24 | 0x01;
						x23 = x0;
						((word32) sp + 576)->u1 = x0;
						((word32) sp + 560)->u1 = x8;
						((word32) sp + 568)->u1 = x21;
					}
					x0 = x23;
					x1 = x22;
					x2 = x21;
					x0 = memcpy(x0, x1, x2);
l0000000000021680:
					*(x23 + x21) = (word64) 0x00;
					x0.u1 = (word32) sp + 552;
					((LEVELS) x0);
					if ((w0 & 0x01) == 0x00)
					{
						w21 = 0x00;
						Eq_14 v128;
						v128.u1 = *((word32) sp + 560);
						w8.u1 = (word32) v128;
						if ((w8 & 0x01) == 0x00)
							goto l000000000002174C;
						goto l00000000000216E8;
					}
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					((word32) sp + 544)->u1 = 0x00;
					((word32) sp + 536)->u1 = 0x00;
					((word32) sp + 528)->u1 = 0x00;
					x21 = *x8.u1;
					x0 = x21;
					x0 = strlen(x0);
					sp.u1 = (word32) x0 + 16;
					NZCV.u0 = cond(sp);
					if (Test(ULT,C))
					{
						x22 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							x9.u1 = (word32) sp + 528;
							w8 = w22 << 1;
							x23 = x9 | 0x01;
							((word32) sp + 528)->u1 = (byte) w8;
							if (x22 == 0x00)
								goto l000000000002172C;
						}
						else
						{
							x8.u1 = (word32) x22 + 16;
							x24 = x8 & ~0x0F;
							x0 = x24;
							_Znwm();
							x8 = x24 | 0x01;
							x23 = x0;
							((word32) sp + 544)->u1 = x0;
							((word32) sp + 528)->u1 = x8;
							((word32) sp + 536)->u1 = x22;
						}
						x0 = x23;
						x1 = x21;
						x2 = x22;
						x0 = memcpy(x0, x1, x2);
l000000000002172C:
						*(x23 + x22) = (word64) 0x00;
						x0.u1 = (word32) sp + 528;
						_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
						Eq_14 v70;
						v70.u1 = *((word32) sp + 528);
						w8.u1 = (word32) v70;
						w21 = w0;
						if ((w8 & 0x01) != 0x00)
						{
							Eq_14 v71;
							v71.u1 = *((word32) sp + 560);
							w8.u1 = (word32) v71;
							if ((w8 & 0x01) != 0x00)
							{
l000000000002174C:
								if ((w21 & 0x01) == 0x00)
									goto l0000000000021830;
l0000000000021750:
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 3432);
								x1 = *x8.u1;
								x2.u0 = 0x00071000;
								x3.u0 = 0x00052000;
								x2.u1 = (word32) x2 + 0x0118;
								x3.u1 = (word32) x3 + 0x05EE;
								x0.u1 = (word32) sp + 0x0430;
								w4 = 0x00 | 0x06;
								x5 = 0x00;
								x21.u1 = (word32) sp + 0x0430;
								_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
								x0.u1 = (word32) x21 + 8;
								x1.u0 = 0x00051000;
								x1.u1 = (word32) x1 + 3923;
								w2 = 0x05;
								fn000000000001BB30();
								byte v72 = (byte) *((word32) sp + 744);
								w8.u1 = (word32) v72;
								x9.u1 = *((word32) sp + 760);
								x10.u1 = *((word32) sp + 752);
								x11.u1 = (word32) sp + 744;
								x11 |= 0x01;
								w31 = w8 & 0x01;
								NZ.u0 = cond(w31);
								C = false;
								V = false;
								x12 = x8 >> 1;
								x1.u1 = Test(EQ,Z) ? x11 : x9;
								x2.u1 = Test(EQ,Z) ? x12 : x10;
								fn000000000001BB30();
								x1.u0 = 0x00051000;
								x1.u1 = (word32) x1 + 3886;
								w2 = 0x15;
								fn000000000001BB30();
								x21 = x0;
								x8.u1 = (word32) sp + 856;
								x0.u1 = (word32) sp + 600;
								w1 = ~0x00;
								w2 = 0x00 | 0x20;
								Eq_14 w3;
								w3.u0 = 0x00;
								w4 = 0x00;
								x22.u1 = (word32) sp + 856;
								fn000000000001BD50();
								Eq_14 v74;
								v74.u1 = *((word32) sp + 856);
								w8.u1 = (word32) v74;
								x9.u1 = *((word32) sp + 872);
								x10.u1 = *((word32) sp + 864);
								x11 = x22 | 0x01;
								w31 = w8 & 0x01;
								NZ.u0 = cond(w31);
								C = false;
								V = false;
								x12 = x8 >> 1;
								x1.u1 = Test(EQ,Z) ? x11 : x9;
								x2.u1 = Test(EQ,Z) ? x12 : x10;
								x0 = x21;
								fn000000000001BB30();
								Eq_14 v75;
								v75.u1 = *((word32) sp + 856);
								w8.u1 = (word32) v75;
								if ((w8 & 0x01) != 0x00)
								{
									x0.u1 = *((word32) sp + 872);
									((real64) q0, x0, x1);
								}
								x0.u1 = (word32) sp + 0x0430;
								LogCapture::~LogCapture();
								sp.u1 = (word32) sp + 8;
l0000000000021830:
								Eq_14 v77 = *((word32) x25 + 8);
								w10.u1 = (word32) v77;
								x11 = *((word32) x25 + 24);
								w8 = *x25.u1;
								x12 = (word32) x25 + 9;
								w31 = w10 & 0x01;
								NZ.u0 = cond(w31);
								x22.u1 = Test(EQ,Z) ? x12 : x11;
								x9.u1 = (word32) sp + 496;
								x0 = x22;
								x23.u1 = (word32) x9 + 8;
								((word32) sp + 496)->u1 = w8;
								((word32) sp + 520)->u1 = 0x00;
								Eq_13244 v78;
								v78.u1 = (word32) sp + 504;
								v78->u1 = 0x00;
								((word32) v78 + 8)->u1 = 0x00;
								x0 = strlen(x0);
								sp.u1 = (word32) x0 + 16;
								NZCV.u0 = cond(sp);
								if (Test(ULT,C))
								{
									x21 = x0;
									NZCV.u0 = cond(x0 - 0x17);
									if (Test(ULT,C))
									{
										w8 = w21 << 1;
										x23.u1 = (word32) x23 + 1;
										((word32) sp + 504)->u1 = (byte) w8;
										if (x21 == 0x00)
											goto l00000000000218BC;
									}
									else
									{
										x8.u1 = (word32) x21 + 16;
										x24 = x8 & ~0x0F;
										x0 = x24;
										_Znwm();
										x8 = x24 | 0x01;
										x23 = x0;
										((word32) sp + 520)->u1 = x0;
										Eq_13413 v81;
										v81.u1 = (word32) sp + 504;
										v81->u1 = x8;
										((word32) v81 + 8)->u1 = x21;
									}
									x0 = x23;
									x1 = x22;
									x2 = x21;
									x0 = memcpy(x0, x1, x2);
l00000000000218BC:
									*(x23 + x21) = (word64) 0x00;
									x0.u1 = (word32) sp + 496;
									((LEVELS) x0);
									if ((w0 & 0x01) == 0x00)
									{
										w21 = 0x00;
										byte v126 = (byte) *((word32) sp + 504);
										w8.u1 = (word32) v126;
										if ((w8 & 0x01) == 0x00)
											goto l0000000000021994;
										goto l0000000000021920;
									}
									x8.u0 = 0x00070000;
									x8 = *((word32) x8 + 3432);
									Eq_13488 v80;
									v80.u1 = (word32) sp + 480;
									v80->u1 = 0x00;
									((word32) v80 + 8)->u1 = 0x00;
									((word32) sp + 472)->u1 = 0x00;
									x21 = *x8.u1;
									x0 = x21;
									x0 = strlen(x0);
									sp.u1 = (word32) x0 + 16;
									NZCV.u0 = cond(sp);
									if (Test(ULT,C))
									{
										x22 = x0;
										NZCV.u0 = cond(x0 - 0x17);
										if (Test(ULT,C))
										{
											x9.u1 = (word32) sp + 472;
											w8 = w22 << 1;
											x23 = x9 | 0x01;
											((word32) sp + 472)->u1 = (byte) w8;
											if (x22 == 0x00)
												goto l0000000000021974;
										}
										else
										{
											x8.u1 = (word32) x22 + 16;
											x24 = x8 & ~0x0F;
											x0 = x24;
											_Znwm();
											x8 = x24 | 0x01;
											x23 = x0;
											Eq_13529 v84;
											v84.u1 = (word32) sp + 480;
											v84->u1 = x22;
											((word32) v84 + 8)->u1 = x0;
											((word32) sp + 472)->u1 = x8;
										}
										x0 = x23;
										x1 = x21;
										x2 = x22;
										x0 = memcpy(x0, x1, x2);
l0000000000021974:
										*(x23 + x22) = (word64) 0x00;
										x0.u1 = (word32) sp + 472;
										_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
										Eq_14 v82;
										v82.u1 = *((word32) sp + 472);
										w8.u1 = (word32) v82;
										w21 = w0;
										if ((w8 & 0x01) != 0x00)
										{
											byte v83 = (byte) *((word32) sp + 504);
											w8.u1 = (word32) v83;
											if ((w8 & 0x01) != 0x00)
											{
l0000000000021994:
												if ((w21 & 0x01) == 0x00)
													goto l00000000000219E4;
l0000000000021998:
												x8.u0 = 0x00070000;
												x8 = *((word32) x8 + 3432);
												x1 = *x8.u1;
												x2.u0 = 0x00071000;
												x3.u0 = 0x00052000;
												x2.u1 = (word32) x2 + 0x0118;
												x3.u1 = (word32) x3 + 0x05EE;
												x0.u1 = (word32) sp + 0x0430;
												w4 = 0x00 | 0x06;
												x5 = 0x00;
												x21.u1 = (word32) sp + 0x0430;
												_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
												x0.u1 = (word32) x21 + 8;
												x1.u0 = 0x00051000;
												x1.u1 = (word32) x1 + 0x0F44;
												w2 = 0x05;
												fn000000000001BB30();
												x0.u1 = (word32) sp + 0x0430;
												LogCapture::~LogCapture();
												sp.u1 = (word32) sp + 8;
l00000000000219E4:
												x0.u1 = (word32) sp + 456;
												fn000000000001B8F0();
												((word32) sp + 0x0430)->u1 = 0x00;
												x0 = *((word32) x20 + 8);
												w1 = 0x00 | 0x04;
												x2.u1 = (word32) sp + 0x0430;
												rs2_get_device_info();
												x0.u1 = *((word32) sp + 0x0430);
												fn000000000001ADF0();
												x0.u1 = *((word32) sp + 456);
												Eq_13656 v86;
												v86.u1 = (word32) x19 + 0x00F8;
												w3.u1 = *v86;
												w4 = (ui32) *((word32) v86 + 4);
												word32 w6 = (word32) *((word32) x19 + 0x011C);
												((word32) sp + 0x0430)->u1 = 0x00;
												w1 = 0x00 | 0x01;
												w2 = ~0x00;
												ui32 w5 = 0x00 | 0x01;
												Eq_13681 x7;
												x7.u1 = (word32) sp + 0x0430;
												rs2_config_enable_stream();
												x0.u1 = *((word32) sp + 0x0430);
												fn000000000001ADF0();
												x0.u1 = *((word32) sp + 456);
												Eq_13693 v90;
												v90.u1 = (word32) x19 + 0x00F8;
												w3.u1 = *v90;
												w4 = (ui32) *((word32) v90 + 4);
												w6 = (word32) *((word32) x19 + 0x011C);
												((word32) sp + 0x0430)->u1 = 0x00;
												w1 = 0x00 | 0x03;
												w2 = 0x00 | 0x01;
												w5 = 0x09;
												x7.u1 = (word32) sp + 0x0430;
												rs2_config_enable_stream();
												x0.u1 = *((word32) sp + 0x0430);
												fn000000000001ADF0();
												Eq_14 v91 = *((word32) x25 + 8);
												w10.u1 = (word32) v91;
												x11 = *((word32) x25 + 24);
												w8 = *x25.u1;
												x12 = (word32) x25 + 9;
												w31 = w10 & 0x01;
												NZ.u0 = cond(w31);
												x21.u1 = Test(EQ,Z) ? x12 : x11;
												x9.u1 = (word32) sp + 424;
												x0 = x21;
												x22.u1 = (word32) x9 + 8;
												((word32) sp + 424)->u1 = w8;
												Eq_13749 v92;
												v92.u1 = (word32) sp + 440;
												v92->u1 = 0x00;
												((word32) v92 + 8)->u1 = 0x00;
												((word32) sp + 432)->u1 = 0x00;
												x0 = strlen(x0);
												sp.u1 = (word32) x0 + 16;
												NZCV.u0 = cond(sp);
												if (Test(ULT,C))
												{
													x20 = x0;
													NZCV.u0 = cond(x0 - 0x17);
													ui32 w20;
													if (Test(ULT,C))
													{
														w8 = w20 << 1;
														x22.u1 = (word32) x22 + 1;
														((word32) sp + 432)->u1 = (byte) w8;
														if (x20 == 0x00)
															goto l0000000000021AEC;
													}
													else
													{
														x8.u1 = (word32) x20 + 16;
														x23 = x8 & ~0x0F;
														x0 = x23;
														_Znwm();
														x8 = x23 | 0x01;
														x22 = x0;
														Eq_13839 v124;
														v124.u1 = (word32) sp + 440;
														v124->u1 = x20;
														((word32) v124 + 8)->u1 = x0;
														((word32) sp + 432)->u1 = x8;
													}
													x0 = x22;
													x1 = x21;
													x2 = x20;
													x0 = memcpy(x0, x1, x2);
l0000000000021AEC:
													*(x22 + x20) = (word64) 0x00;
													x0.u1 = (word32) sp + 424;
													((LEVELS) x0);
													if ((w0 & 0x01) == 0x00)
													{
														w20 = 0x00;
														Eq_14 v123;
														v123.u1 = *((word32) sp + 432);
														w8.u1 = (word32) v123;
														if ((w8 & 0x01) == 0x00)
															goto l0000000000021BCC;
														goto l0000000000021B50;
													}
													x8.u0 = 0x00070000;
													x8 = *((word32) x8 + 3432);
													Eq_13906 v95;
													v95.u1 = (word32) sp + 408;
													v95->u1 = 0x00;
													((word32) v95 + 8)->u1 = 0x00;
													((word32) sp + 400)->u1 = 0x00;
													x20 = *x8.u1;
													x0 = x20;
													x0 = strlen(x0);
													sp.u1 = (word32) x0 + 16;
													NZCV.u0 = cond(sp);
													if (Test(ULT,C))
													{
														x21 = x0;
														NZCV.u0 = cond(x0 - 0x17);
														if (Test(ULT,C))
														{
															x9.u1 = (word32) sp + 400;
															w8 = w21 << 1;
															x22 = x9 | 0x01;
															((word32) sp + 400)->u1 = (byte) w8;
															if (x21 == 0x00)
																goto l0000000000021BAC;
														}
														else
														{
															x8.u1 = (word32) x21 + 16;
															x23 = x8 & ~0x0F;
															x0 = x23;
															_Znwm();
															x8 = x23 | 0x01;
															x22 = x0;
															Eq_13947 v102;
															v102.u1 = (word32) sp + 408;
															v102->u1 = x21;
															((word32) v102 + 8)->u1 = x0;
															((word32) sp + 400)->u1 = x8;
														}
														x0 = x22;
														x1 = x20;
														x2 = x21;
														x0 = memcpy(x0, x1, x2);
l0000000000021BAC:
														*(x22 + x21) = (word64) 0x00;
														x0.u1 = (word32) sp + 400;
														_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
														Eq_14 v96;
														v96.u1 = *((word32) sp + 400);
														w8.u1 = (word32) v96;
														w20 = w0;
														if ((w8 & 0x01) != 0x00)
														{
															Eq_14 v97;
															v97.u1 = *((word32) sp + 432);
															w8.u1 = (word32) v97;
															if ((w8 & 0x01) != 0x00)
															{
l0000000000021BCC:
																if ((w20 & 0x01) != 0x00)
																{
l0000000000021BD0:
																	x8.u0 = 0x00070000;
																	x8 = *((word32) x8 + 3432);
																	x1 = *x8.u1;
																	x2.u0 = 0x00071000;
																	x3.u0 = 0x00052000;
																	x2.u1 = (word32) x2 + 0x0118;
																	x3.u1 = (word32) x3 + 0x05EE;
																	x0.u1 = (word32) sp + 0x0430;
																	w4 = 0x00 | 0x06;
																	x5 = 0x00;
																	x20.u1 = (word32) sp + 0x0430;
																	_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
																	x0.u1 = (word32) x20 + 8;
																	x1.u0 = 0x00051000;
																	x1.u1 = (word32) x1 + 0x0F4A;
																	w2 = 0x00 | 0x0E;
																	fn000000000001BB30();
																	byte v98 = (byte) *((word32) sp + 744);
																	w8.u1 = (word32) v98;
																	x9.u1 = *((word32) sp + 760);
																	x10.u1 = *((word32) sp + 752);
																	x11.u1 = (word32) sp + 744;
																	x28 = x11 | 0x01;
																	w31 = w8 & 0x01;
																	NZ.u0 = cond(w31);
																	C = false;
																	V = false;
																	x11 = x8 >> 1;
																	x1.u1 = Test(EQ,Z) ? x28 : x9;
																	x2.u1 = Test(EQ,Z) ? x11 : x10;
																	fn000000000001BB30();
																	x0.u1 = (word32) sp + 0x0430;
																	LogCapture::~LogCapture();
																	sp.u1 = (word32) sp + 8;
l0000000000021C44:
																	byte v99 = (byte) *((word32) sp + 744);
																	w8.u1 = (word32) v99;
																	x9.u1 = *((word32) sp + 760);
																	x0.u1 = *((word32) sp + 456);
																	((word32) sp + 0x0430)->u1 = 0x00;
																	w31 = w8 & 0x01;
																	NZ.u0 = cond(w31);
																	C = false;
																	V = false;
																	x1.u1 = Test(EQ,Z) ? x28 : x9;
																	x2.u1 = (word32) sp + 0x0430;
																	rs2_config_enable_device();
																	x0.u1 = *((word32) sp + 0x0430);
																	fn000000000001ADF0();
																	w0 = 0x00 | 0x10;
																	_Znwm();
																	x8 = *((word32) x19 + 48);
																	x26 = x0;
																	((word32) sp + 0x0430)->u1 = x8;
																	x8 = *((word32) x19 + 56);
																	((word32) sp + 1080)->u1 = x8;
																	if (x8 != 0x00)
																	{
																		x8.u1 = (word32) x8 + 8;
																		do
																		{
																			union Eq_3183 * v100 = &*x8.u1;
																			x9 = __load_exclusive<word64>(v100);
																			x9.u1 = (word32) x9 + 1;
																			union Eq_3192 * v101 = &*x8.u1;
																			w10 = __store_exclusive<word64>(v101, x9);
																		} while (w10 != 0x00);
																	}
																	x1.u1 = (word32) sp + 0x0430;
																	x0 = x26;
																	fn000000000001B150();
																	x21.u1 = *((word32) sp + 1080);
																	if (x21 != 0x00)
																		x8.u1 = (word32) x21 + 8;
																	Eq_14 v103 = *((word32) x25 + 8);
																	w10.u1 = (word32) v103;
																	x11 = *((word32) x25 + 24);
																	w8 = *x25.u1;
																	x12 = (word32) x25 + 9;
																	w31 = w10 & 0x01;
																	NZ.u0 = cond(w31);
																	x22.u1 = Test(EQ,Z) ? x12 : x11;
																	x9.u1 = (word32) sp + 368;
																	x0 = x22;
																	x23.u1 = (word32) x9 + 8;
																	((word32) sp + 368)->u1 = w8;
																	Eq_14159 v104;
																	v104.u1 = (word32) sp + 384;
																	v104->u1 = 0x00;
																	((word32) v104 + 8)->u1 = 0x00;
																	((word32) sp + 376)->u1 = 0x00;
																	x0 = strlen(x0);
																	sp.u1 = (word32) x0 + 16;
																	NZCV.u0 = cond(sp);
																	((word32) sp + 8)->u1 = x26;
																	if (Test(ULT,C))
																	{
																		x21 = x0;
																		NZCV.u0 = cond(x0 - 0x17);
																		if (Test(ULT,C))
																		{
																			w8 = w21 << 1;
																			x23.u1 = (word32) x23 + 1;
																			((word32) sp + 376)->u1 = (byte) w8;
																			if (x21 == 0x00)
																				goto l0000000000021D74;
																		}
																		else
																		{
																			x8.u1 = (word32) x21 + 16;
																			x24 = x8 & ~0x0F;
																			x0 = x24;
																			_Znwm();
																			x8 = x24 | 0x01;
																			x23 = x0;
																			Eq_14207 v106;
																			v106.u1 = (word32) sp + 384;
																			v106->u1 = x21;
																			((word32) v106 + 8)->u1 = x0;
																			((word32) sp + 376)->u1 = x8;
																		}
																		x0 = x23;
																		x1 = x22;
																		x2 = x21;
																		x0 = memcpy(x0, x1, x2);
l0000000000021D74:
																		*(x23 + x21) = (word64) 0x00;
																		x0.u1 = (word32) sp + 368;
																		((LEVELS) x0);
																		if ((w0 & 0x01) == 0x00)
																		{
																			w21 = 0x00;
																			Eq_14 v116;
																			v116.u1 = *((word32) sp + 376);
																			w8.u1 = (word32) v116;
																			if ((w8 & 0x01) == 0x00)
																				goto l0000000000021E4C;
																			goto l0000000000021DD8;
																		}
																		x8.u0 = 0x00070000;
																		x8 = *((word32) x8 + 3432);
																		Eq_14311 v105;
																		v105.u1 = (word32) sp + 352;
																		v105->u1 = 0x00;
																		((word32) v105 + 8)->u1 = 0x00;
																		((word32) sp + 344)->u1 = 0x00;
																		x21 = *x8.u1;
																		x0 = x21;
																		x0 = strlen(x0);
																		sp.u1 = (word32) x0 + 16;
																		NZCV.u0 = cond(sp);
																		if (Test(ULT,C))
																		{
																			x22 = x0;
																			NZCV.u0 = cond(x0 - 0x17);
																			if (Test(ULT,C))
																			{
																				x9.u1 = (word32) sp + 344;
																				w8 = w22 << 1;
																				x23 = x9 | 0x01;
																				((word32) sp + 344)->u1 = (byte) w8;
																				if (x22 == 0x00)
																					goto l0000000000021E2C;
																			}
																			else
																			{
																				x8.u1 = (word32) x22 + 16;
																				x24 = x8 & ~0x0F;
																				x0 = x24;
																				_Znwm();
																				x8 = x24 | 0x01;
																				x23 = x0;
																				Eq_14379 v109;
																				v109.u1 = (word32) sp + 352;
																				v109->u1 = x22;
																				((word32) v109 + 8)->u1 = x0;
																				((word32) sp + 344)->u1 = x8;
																			}
																			x0 = x23;
																			x1 = x21;
																			x2 = x22;
																			x0 = memcpy(x0, x1, x2);
l0000000000021E2C:
																			*(x23 + x22) = (word64) 0x00;
																			x0.u1 = (word32) sp + 344;
																			_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
																			Eq_14 v107;
																			v107.u1 = *((word32) sp + 344);
																			w8.u1 = (word32) v107;
																			w21 = w0;
																			if ((w8 & 0x01) != 0x00)
																			{
																				Eq_14 v108;
																				v108.u1 = *((word32) sp + 376);
																				w8.u1 = (word32) v108;
																				if ((w8 & 0x01) != 0x00)
																				{
l0000000000021E4C:
																					if ((w21 & 0x01) == 0x00)
																						goto l0000000000021E9C;
l0000000000021E50:
																					x8.u0 = 0x00070000;
																					x8 = *((word32) x8 + 3432);
																					x1 = *x8.u1;
																					x2.u0 = 0x00071000;
																					x3.u0 = 0x00052000;
																					x2.u1 = (word32) x2 + 0x0118;
																					x3.u1 = (word32) x3 + 0x05EE;
																					x0.u1 = (word32) sp + 0x0430;
																					w4 = 0x00 | 0x06;
																					x5 = 0x00;
																					x20.u1 = (word32) sp + 0x0430;
																					_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
																					x0.u1 = (word32) x20 + 8;
																					x1.u0 = 0x00051000;
																					x1.u1 = (word32) x1 + 3929;
																					w2 = 0x0D;
																					fn000000000001BB30();
																					x0.u1 = (word32) sp + 0x0430;
																					LogCapture::~LogCapture();
																					sp.u1 = (word32) sp + 8;
l0000000000021E9C:
																					x22 = *x26.u1;
																					Eq_14474 v110;
																					v110.u1 = (word32) sp + 456;
																					x23.u1 = *v110;
																					x21.u1 = *((word32) v110 + 8);
																					((word32) sp + 0x0430)->u1 = 0x00;
																					if (x21 != 0x00)
																					{
																						x8.u1 = (word32) x21 + 8;
																						do
																						{
																							union Eq_3183 * v111 = &*x8.u1;
																							x9 = __load_exclusive<word64>(v111);
																							x9.u1 = (word32) x9 + 1;
																							union Eq_3192 * v112 = &*x8.u1;
																							w10 = __store_exclusive<word64>(v112, x9);
																						} while (w10 != 0x00);
																					}
																					w0 = 0x00 | 0x10;
																					_Znwm();
																					x8.u0 = 0x0006F000;
																					x8.u1 = (word32) x8 + 0x0938;
																					x2 = x0;
																					Eq_14 v113 = x0;
																					*v113.u1 = x8;
																					*((word32) v113 + 8) = x19;
																					x3.u1 = (word32) sp + 0x0430;
																					x0 = x22;
																					x1 = x23;
																					rs2_pipeline_start_with_config_and_callback_cpp();
																					x23 = x0;
																					w0 = 0x28;
																					_Znwm();
																					((word32) x0 + 16)->u1 = 0x00;
																					x8.u0 = 0x00070000;
																					x8 = *((word32) x8 + 0x0DE8);
																					x9.u0 = 0x00070000;
																					x9 = *((word32) x9 + 3384);
																					x20 = x0;
																					x22 = x0;
																					x20.u1 = (word32) x20 + 8;
																					x20.u1->u0 = 0x00;
																					x8.u1 = (word32) x8 + 16;
																					*x0.u1 = x8;
																					Eq_14565 v114;
																					v114.u1 = (word32) x0 + 24;
																					v114->u1 = x23;
																					((word32) v114 + 8)->u1 = x9;
																					if (x21 == 0x00)
																					{
																						x0.u1 = *((word32) sp + 0x0430);
																						fn000000000001ADF0();
																						x26.u1 = (word32) sp + 0x0430;
																						do
																						{
																							union Eq_3183 * v117 = &*x20.u1;
																							x8 = __load_exclusive<word64>(v117);
																							x8.u1 = (word32) x8 + 1;
																							union Eq_3192 * v118 = &*x20.u1;
																							w9 = __store_exclusive<word64>(v118, x8);
																						} while (w9 != 0x00);
																						Eq_14622 v119;
																						v119.u1 = (word32) sp + 328;
																						v119->u1 = x23;
																						((word32) v119 + 8)->u1 = x22;
																						do
																						{
																							union Eq_3183 * v120 = &*x20.u1;
																							x8 = __load_exclusive<word64>(v120);
																							x8.u1 = (word32) x8 + 1;
																							union Eq_3192 * v121 = &*x20.u1;
																							w9 = __store_exclusive<word64>(v121, x8);
																						} while (w9 != 0x00);
																					}
																					else
																						x8.u1 = (word32) x21 + 8;
																				}
																			}
																			else
																			{
																				x0.u1 = *((word32) sp + 360);
																				((real64) q0, x0, x1);
																				Eq_14 v115;
																				v115.u1 = *((word32) sp + 376);
																				w8.u1 = (word32) v115;
																				if ((w8 & 0x01) == 0x00)
																					goto l0000000000021E4C;
																			}
l0000000000021DD8:
																			x0.u1 = *((word32) sp + 0x0188);
																			((real64) q0, x0, x1);
																			if ((w21 & 0x01) == 0x00)
																				goto l0000000000021E9C;
																			goto l0000000000021E50;
																		}
l00000000000234B0:
																		x0.u1 = (word32) sp + 344;
																		fn000000000001B2D0();
																		x0.u1 = (word32) sp + 272;
																		fn000000000001B2D0();
																		x0.u1 = (word32) sp + 0x00D8;
																		fn000000000001B2D0();
																		x0 = x21;
																		fn000000000001B2D0();
																		x0.u1 = (word32) sp + 0x0068;
																		fn000000000001B2D0();
																		x0.u1 = (word32) sp + 80;
																		fn000000000001B2D0();
																		x0 = x21;
																		fn000000000001B2D0();
																		x0.u1 = (word32) sp + 0x0430;
																		fn000000000001B2D0();
																		x0 = x22;
																		fn000000000001B2D0();
																		x0.u1 = (word32) sp + 0x0430;
																		fn000000000001B2D0();
																		x0.u1 = (word32) sp + 24;
																		fn000000000001B2D0();
																		x0.u1 = (word32) sp + 0x0430;
																		fn000000000001B2D0();
l0000000000023510:
																		x0 = x23;
																		fn000000000001B2D0();
																		goto l0000000000023518;
																	}
l0000000000023460:
																	x0 = x23;
																	fn000000000001B2D0();
																	x0 = x23;
																	fn000000000001B2D0();
																	x0 = x24;
																	fn000000000001B2D0();
																	x0 = x23;
																	fn000000000001B2D0();
																	x0 = x22;
																	fn000000000001B2D0();
																	__stack_chk_fail();
																}
l0000000000021B5C:
																x8.u1 = (word32) sp + 744;
																x28 = x8 | 0x01;
																goto l0000000000021C44;
															}
														}
														else
														{
															x0.u1 = *((word32) sp + 416);
															((real64) q0, x0, x1);
															Eq_14 v122;
															v122.u1 = *((word32) sp + 432);
															w8.u1 = (word32) v122;
															if ((w8 & 0x01) == 0x00)
																goto l0000000000021BCC;
														}
l0000000000021B50:
														x0.u1 = *((word32) sp + 448);
														((real64) q0, x0, x1);
														if ((w20 & 0x01) == 0x00)
															goto l0000000000021BD0;
														goto l0000000000021B5C;
													}
l00000000000234A8:
													x0.u1 = (word32) sp + 400;
													fn000000000001B2D0();
													goto l00000000000234B0;
												}
l0000000000023458:
												x0 = x22;
												fn000000000001B2D0();
												goto l0000000000023460;
											}
										}
										else
										{
											x0.u1 = *((word32) sp + 488);
											((real64) q0, x0, x1);
											byte v94 = (byte) *((word32) sp + 504);
											w8.u1 = (word32) v94;
											if ((w8 & 0x01) == 0x00)
												goto l0000000000021994;
										}
l0000000000021920:
										x0.u1 = *((word32) sp + 520);
										((real64) q0, x0, x1);
										if ((w21 & 0x01) == 0x00)
											goto l00000000000219E4;
										goto l0000000000021998;
									}
l00000000000234A0:
									x0.u1 = (word32) sp + 472;
									fn000000000001B2D0();
									goto l00000000000234A8;
								}
l0000000000023450:
								x0 = x23;
								fn000000000001B2D0();
								goto l0000000000023458;
							}
						}
						else
						{
							x0.u1 = *((word32) sp + 544);
							((real64) q0, x0, x1);
							Eq_14 v127;
							v127.u1 = *((word32) sp + 560);
							w8.u1 = (word32) v127;
							if ((w8 & 0x01) == 0x00)
								goto l000000000002174C;
						}
l00000000000216E8:
						x0.u1 = *((word32) sp + 576);
						((real64) q0, x0, x1);
						if ((w21 & 0x01) == 0x00)
							goto l0000000000021830;
						goto l0000000000021750;
					}
l0000000000023498:
					x0.u1 = (word32) sp + 528;
					fn000000000001B2D0();
					goto l00000000000234A0;
				}
l0000000000023448:
				x0 = x23;
				fn000000000001B2D0();
				goto l0000000000023450;
			}
			x8.u1 = (word32) sp + 0x0430;
			x0.u1 = (word32) sp + 616;
			x21.u1 = (word32) sp + 0x0430;
			fn000000000001BF80();
			Eq_14 v55;
			v55.u1 = *((word32) sp + 0x0430);
			w8.u1 = (word32) v55;
			x9.u1 = *((word32) sp + 0x0440);
			x11.u1 = *((word32) sp + 1080);
			x10 = x21 | 0x01;
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x8 >>= 1;
			x21.u1 = Test(EQ,Z) ? x10 : x9;
			x22.u1 = Test(EQ,Z) ? x8 : x11;
			((word32) sp + 864)->u1 = 0x00;
			((word32) sp + 856)->u1 = 0x00;
			if (x22 != 0x00)
			{
				w0 = 0x00 | 0x30;
				_Znwm();
				((word32) x0 + 16)->u1 = 0x00;
				x9.u0 = 0x00070000;
				x10.u0 = 0x00070000;
				x9 = *((word32) x9 + 0x0DB8);
				x10 = *((word32) x10 + 0x0E60);
				x11 = x0;
				x8.u1 = x21 + x22;
				x9.u1 = (word32) x9 + 16;
				x10.u1 = (word32) x10 + 16;
				Eq_14 v56 = x0;
				*v56.u1 = x9;
				((word32) v56 + 8)->u0 = 0x00;
				x11.u1 = (word32) x11 + 24;
				*x11.u1 = x10;
				Eq_12768 v57;
				v57.u1 = (word32) x0 + 32;
				v57->u1 = x21;
				((word32) v57 + 8)->u1 = x8;
				((word32) sp + 856)->u1 = x11;
			}
			else
			{
				w0 = 0x00 | 0x30;
				_Znwm();
				((word32) x0 + 16)->u1 = 0x00;
				x8.u0 = 0x00070000;
				x9.u0 = 0x00070000;
				x8 = *((word32) x8 + 0x0DB8);
				x9 = *((word32) x9 + 0x0E60);
				x10 = x0;
				x8.u1 = (word32) x8 + 16;
				x9.u1 = (word32) x9 + 16;
				Eq_14 v65 = x0;
				*v65.u1 = x8;
				((word32) v65 + 8)->u0 = 0x00;
				x10.u1 = (word32) x10 + 24;
				*x10.u1 = x9;
				Eq_12721 v66;
				v66.u1 = (word32) x0 + 32;
				v66->u1 = 0x00;
				((word32) v66 + 8)->u1 = 0x00;
				((word32) sp + 856)->u1 = x10;
			}
			((word32) sp + 864)->u1 = x0;
			((word32) sp + 0x0420)->u1 = 0x00;
			x8.u1 = (word32) sp + 584;
			x0.u1 = (word32) sp + 856;
			x1.u1 = (word32) sp + 0x0400;
			w2 = 0x00 | 0x01;
			x22.u1 = (word32) sp + 584;
			x21.u1 = (word32) sp + 0x0400;
			fn000000000001AEF0();
			byte v58 = (byte) *((word32) sp + 584);
			w8.u1 = (word32) v58;
			byte v59 = (byte) *((word32) sp + 600);
			w1 = (word32) v59;
			x9.u1 = *((word32) sp + 608);
			x0.u1 = (word32) x22 + 8;
			((word32) sp + 600)->u1 = (byte) w8;
			x8.u1 = *((word32) sp + 592);
			((word32) sp + 584)->u1 = (byte) w1;
			((word32) sp + 592)->u1 = x9;
			((word32) sp + 608)->u1 = x8;
			fn000000000001C590();
			x0.u1 = *((word32) sp + 0x0420);
			x31 = x21 - x0;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
			{
				if (x0 == 0x00)
					goto l00000000000215B4;
				x8 = *x0.u1;
				x8 = *((word32) x8 + 40);
			}
			else
			{
				x8 = *x0.u1;
				x8 = *((word32) x8 + 32);
			}
			x8();
l00000000000215B4:
			x21.u1 = *((word32) sp + 864);
			if (x21 != 0x00)
				x8.u1 = (word32) x21 + 8;
			Eq_14 v67;
			v67.u1 = *((word32) sp + 0x0430);
			w8.u1 = (word32) v67;
			if ((w8 & 0x01) != 0x00)
			{
				x0.u1 = *((word32) sp + 0x0440);
				((real64) q0, x0, x1);
			}
			goto l00000000000215E4;
		}
		x2 = x0;
		if (x0 != 0x00)
		{
			sp.u1 = (word32) x2 + 1;
			NZCV.u0 = cond(sp);
			if (Test(EQ,Z))
			{
l0000000000023518:
				x0.u0 = 0x00071000;
				x0.u1 = (word32) x0 + 784;
				fn000000000001C380();
				goto l0000000000023524;
			}
			x9.u0 = 0x00071000;
			x9.u1 = (word32) x9 + 0x0311;
			x10 = *((word32) x9 + 0x0F);
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x1 = x21;
			x0.u1 = Test(EQ,Z) ? x9 : x10;
			x0 = SEQ(0x00, memcmp(x0, x1, x2));
			if (w0 != 0x00)
				goto l000000000002142C;
		}
		goto l0000000000021450;
	}
	x8.u0 = 0x00071000;
	x8.u1 = (word32) x8 + 0x0118;
	x9.u1 = (word32) sp + 688;
	x23.u1 = (word32) x9 + 8;
	byte v37 = (byte) *((word32) x8 + 8);
	w9.u1 = (word32) v37;
	x11 = *((word32) x8 + 24);
	w10 = *x8.u1;
	x8.u1 = (word32) x8 + 9;
	w31 = w9 & 0x01;
	NZ.u0 = cond(w31);
	x22.u1 = Test(EQ,Z) ? x8 : x11;
	x0 = x22;
	((word32) sp + 688)->u1 = w10;
	((word32) sp + 712)->u1 = 0x00;
	((word32) sp + 704)->u1 = 0x00;
	((word32) sp + 696)->u1 = 0x00;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
		goto l0000000000023510;
	x21 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		w8 = w21 << 1;
		x23.u1 = (word32) x23 + 1;
		((word32) sp + 696)->u1 = (byte) w8;
		if (x21 == 0x00)
			goto l00000000000211FC;
	}
	else
	{
		x8.u1 = (word32) x21 + 16;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		((word32) sp + 712)->u1 = x0;
		((word32) sp + 696)->u1 = x8;
		((word32) sp + 704)->u1 = x21;
	}
	x0 = x23;
	x1 = x22;
	x2 = x21;
	x0 = memcpy(x0, x1, x2);
l00000000000211FC:
	*(x23 + x21) = (word64) 0x00;
	x0.u1 = (word32) sp + 688;
	((LEVELS) x0);
	if ((w0 & 0x01) == 0x00)
	{
		w21 = 0x00;
		byte v129 = (byte) *((word32) sp + 696);
		w8.u1 = (word32) v129;
		if ((w8 & 0x01) == 0x00)
			goto l00000000000212C8;
		goto l0000000000021264;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	((word32) sp + 680)->u1 = 0x00;
	((word32) sp + 672)->u1 = 0x00;
	((word32) sp + 664)->u1 = 0x00;
	x21 = *x8.u1;
	x0 = x21;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
l0000000000023524:
		x0.u1 = (word32) sp + 664;
		fn000000000001B2D0();
		fn000000000001F990();
		sp.u1 = (word32) sp + 8;
		fn000000000001F990();
		sp.u1 = (word32) sp + 8;
		x19 = x0;
		Eq_14 v69;
		v69.u1 = *((word32) sp + 0x0430);
		w8.u1 = (word32) v69;
		if ((w8 & 0x01) == 0x00)
		{
			x0.u1 = *((word32) sp + 0x0440);
			((real64) q0, x0, x1);
		}
		byte v76 = (byte) *((word32) sp + 600);
		w1 = (word32) v76;
		x8.u1 = (word32) sp + 600;
		x0.u1 = (word32) x8 + 8;
		fn000000000001C590();
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 0x0DC0);
		x20.u1 = *((word32) sp + 632);
		x8.u1 = (word32) x8 + 16;
		((word32) sp + 616)->u1 = x8;
		if (x20 == 0x00)
		{
			Eq_12342 v79 = *((word32) sp + 640);
			w8.u1 = (word32) v79;
			if ((w8 & 0x01) != 0x00)
			{
				x0.u1 = *((word32) sp + 656);
				((real64) q0, x0, x1);
			}
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 0x0DC0);
			x20.u1 = *((word32) sp + 736);
			x8.u1 = (word32) x8 + 16;
			((word32) sp + 720)->u1 = x8;
			if (x20 == 0x00)
			{
				byte v85 = (byte) *((word32) sp + 744);
				w8.u1 = (word32) v85;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = *((word32) sp + 760);
					((real64) q0, x0, x1);
				}
				x8.u1 = (word32) sp + 0x0300;
				x0.u1 = (word32) x8 + 64;
				_ZNSt6__ndk16threadD1Ev();
				x20.u1 = *((word32) sp + 808);
				if (x20 == 0x00)
				{
					x20.u1 = *((word32) sp + 792);
					((word32) sp + 792)->u1 = 0x00;
					if (x20 != 0x00)
					{
						x21 = *((word32) x20 + 8);
						if (x21 != 0x00)
							x8.u1 = (word32) x21 + 8;
						x0 = x20;
						((real64) q0, x0, x1);
					}
					byte v125 = (byte) *((word32) sp + 0x0300);
					w8.u1 = (word32) v125;
					if ((w8 & 0x01) != 0x00)
					{
						x0.u1 = *((word32) sp + 784);
						((real64) q0, x0, x1);
					}
					x0 = x19;
					_Unwind_Resume();
					((bool) x0, (int32) x1);
					return;
				}
				else
					x8.u1 = (word32) x20 + 8;
			}
			else
				x8.u1 = (word32) x20 + 8;
		}
		else
			x8.u1 = (word32) x20 + 8;
	}
	x22 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		x9.u1 = (word32) sp + 664;
		w8 = w22 << 1;
		x23 = x9 | 0x01;
		((word32) sp + 664)->u1 = (byte) w8;
		if (x22 == 0x00)
			goto l00000000000212A8;
	}
	else
	{
		x8.u1 = (word32) x22 + 16;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		((word32) sp + 680)->u1 = x0;
		((word32) sp + 664)->u1 = x8;
		((word32) sp + 672)->u1 = x22;
	}
	x0 = x23;
	x1 = x21;
	x2 = x22;
	x0 = memcpy(x0, x1, x2);
l00000000000212A8:
	*(x23 + x22) = (word64) 0x00;
	x0.u1 = (word32) sp + 664;
	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
	Eq_14 v60;
	v60.u1 = *((word32) sp + 664);
	w8.u1 = (word32) v60;
	w21 = w0;
	if ((w8 & 0x01) != 0x00)
	{
		byte v61 = (byte) *((word32) sp + 696);
		w8.u1 = (word32) v61;
		if ((w8 & 0x01) != 0x00)
		{
l00000000000212C8:
			if ((w21 & 0x01) == 0x00)
				goto l0000000000021318;
l00000000000212CC:
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			x1 = *x8.u1;
			x2.u0 = 0x00071000;
			x3.u0 = 0x00052000;
			x2.u1 = (word32) x2 + 0x0118;
			x3.u1 = (word32) x3 + 0x05EE;
			x0.u1 = (word32) sp + 0x0430;
			w4 = 0x00 | 0x06;
			x5 = 0x00;
			x21.u1 = (word32) sp + 0x0430;
			_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
			x0.u1 = (word32) x21 + 8;
			x1.u0 = 0x00051000;
			x1.u1 = (word32) x1 + 0x0F18;
			w2 = 0x15;
			fn000000000001BB30();
			x0.u1 = (word32) sp + 0x0430;
			LogCapture::~LogCapture();
			sp.u1 = (word32) sp + 8;
l0000000000021318:
			x0.u1 = *((word32) sp + 728);
			((word32) sp + 0x0430)->u1 = 0x00;
			w1 = 0x00 | 0x01;
			x2.u1 = (word32) sp + 0x0430;
			rs2_toggle_advanced_mode();
			x0.u1 = *((word32) sp + 0x0430);
			fn000000000001ADF0();
			goto l0000000000021334;
		}
	}
	else
	{
		x0.u1 = *((word32) sp + 680);
		((real64) q0, x0, x1);
		byte v64 = (byte) *((word32) sp + 696);
		w8.u1 = (word32) v64;
		if ((w8 & 0x01) == 0x00)
			goto l00000000000212C8;
	}
l0000000000021264:
	x0.u1 = *((word32) sp + 712);
	((real64) q0, x0, x1);
	if ((w21 & 0x01) == 0x00)
		goto l0000000000021318;
	goto l00000000000212CC;
}

// 0000000000023E6C: void (Register bool x0, Register int32 x1)
// Called from:
//      
void (bool x0, int32 x1)
{
	ui32 w1;
	int32 w2;
	Eq_14692 fp;
	Eq_14692 sp = fp;
	sp.u1 = (word32) sp - 112;
	Eq_14 d9;
	sp->u1 = d9;
	Eq_14 d8;
	sp.u0->t0008.u1 = (size_t) d8;
	struct Eq_14705 * v8 = (struct Eq_14705 *) ((word32) sp + 16);
	Eq_14 x28;
	v8->t0000.u1 = (size_t) x28;
	Eq_14 x27;
	v8->t0008.u1 = (size_t) x27;
	struct Eq_14716 * v11 = (struct Eq_14716 *) ((word32) sp + 32);
	Eq_14 x26;
	v11->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v11->t0008.u1 = (size_t) x25;
	struct Eq_14727 * v14 = (struct Eq_14727 *) ((word32) sp + 48);
	Eq_14 x24;
	v14->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v14->t0008.u1 = (size_t) x23;
	struct Eq_14738 * v17 = (struct Eq_14738 *) ((word32) sp + 64);
	Eq_14 x22;
	v17->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v17->t0008.u1 = (size_t) x21;
	struct Eq_14749 * v20 = (struct Eq_14749 *) ((word32) sp + 80);
	Eq_14 x20;
	v20->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v20->t0008.u1 = (size_t) x19;
	struct Eq_14760 * v23 = (struct Eq_14760 *) ((word32) sp + 96);
	Eq_14 x29;
	v23->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v23->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 96;
	sp -= 0x01B0;
	Eq_1720 sysreg3_3_13_0_2;
	x26 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x26 + 40);
	Eq_14 x9;
	x9.u0 = 0x00071000;
	x9.u1 = (word32) x9 + 0x0118;
	Eq_14 x10;
	x10.u1 = (word32) sp + 56;
	*((word32) x29 - 112) = x8;
	Eq_14 w8 = *x9.u1;
	x24.u1 = (word32) x10 + 8;
	Eq_14 v30 = *((word32) x9 + 8);
	ui32 w10 = (word32) v30;
	x22 = x0;
	((word32) sp + 56)->u1 = w8;
	x8.u1 = (word32) x9 + 9;
	x9 = *((word32) x9 + 24);
	ui32 w31 = w10 & 0x01;
	Eq_14815 NZ;
	NZ.u0 = cond(w31);
	int32 w21 = w2;
	ui32 w19 = w1;
	bool Z;
	x23.u1 = Test(EQ,Z) ? x8 : x9;
	x0 = x23;
	struct Eq_14825 * v41 = (struct Eq_14825 *) ((word32) sp + 72);
	v41->qw0000 = 0x00;
	v41->qw0008 = 0x00;
	((word32) sp + 64)->u1 = 0x00;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	Eq_14845 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x24;
		fn000000000001B2D0();
		goto l0000000000024244;
	}
	x20 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w20;
	if (Test(ULT,C))
	{
		w8 = w20 << 1;
		x24.u1 = (word32) x24 + 1;
		((word32) sp + 64)->u1 = (byte) w8;
		if (x20 == 0x00)
			goto l0000000000023F3C;
	}
	else
	{
		x8.u1 = (word32) x20 + 16;
		x25 = x8 & ~0x0F;
		x0 = x25;
		_Znwm();
		x8 = x25 | 0x01;
		x24 = x0;
		Eq_14863 v74;
		v74.u0 = sp + 72;
		v74.u0->t0000.u1 = (size_t) x20;
		v74.u0->t0008.u1 = (size_t) x0;
		((word32) sp + 64)->u1 = x8;
	}
	x0 = x24;
	x1 = x23;
	Eq_14 x2 = x20;
	x0 = memcpy(x0, x1, x2);
l0000000000023F3C:
	*(x24 + x20) = (word64) 0x00;
	x0.u1 = sp + 0x38;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w20 = 0x00;
		Eq_14 v49;
		v49.u1 = *((word32) sp + 64);
		w8.u1 = (word32) v49;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000024000;
		goto l0000000000023FA0;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_14922 v45;
	v45.u0 = sp + 40;
	v45.u0->t0000.u1 = (size_t) 0x00;
	v45.u0->t0008.u1 = (size_t) 0x00;
	((word32) sp + 32)->u1 = 0x00;
	x20 = *x8.u1;
	x0 = x20;
	x0 = strlen(x0);
	sp.u1 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	word128 q0;
	if (Test(ULT,C))
	{
		x23 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = sp + 0x20;
			ui32 w23;
			w8 = w23 << 1;
			x24 = x9 | 0x01;
			((word32) sp + 32)->u1 = (byte) w8;
			if (x23 == 0x00)
				goto l0000000000023FE0;
		}
		else
		{
			x8.u1 = x23 + 0x10;
			x25 = x8 & ~0x0F;
			x0 = x25;
			_Znwm();
			x8 = x25 | 0x01;
			x24 = x0;
			Eq_14979 v51;
			v51.u0 = sp + 40;
			v51->u0 = x23;
			((word32) v51 + 8)->u0 = x0;
			((word32) sp + 32)->u1 = x8;
		}
		x0 = x24;
		x1 = x20;
		x2 = x23;
		x0 = memcpy(x0, x1, x2);
l0000000000023FE0:
		*(x24 + x23) = (word64) 0x00;
		x0.u1 = sp + 0x20;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v52;
		v52.u1 = *((word32) sp + 32);
		w8.u1 = (word32) v52;
		w20 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v53;
			v53.u1 = *((word32) sp + 64);
			w8.u1 = (word32) v53;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000024000:
				if ((w20 & 0x01) == 0x00)
					goto l0000000000024050;
				goto l0000000000024004;
			}
		}
		else
		{
			x0.u1 = *((word32) sp + 48);
			((real64) q0, x0, x1);
			Eq_14 v57;
			v57.u1 = *((word32) sp + 64);
			w8.u1 = (word32) v57;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000024000;
		}
l0000000000023FA0:
		x0.u1 = *((word32) sp + 80);
		((real64) q0, x0, x1);
		if ((w20 & 0x01) == 0x00)
			goto l0000000000024050;
l0000000000024004:
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		x2.u0 = 0x00071000;
		Eq_14 x3;
		x3.u0 = 0x00052000;
		x2.u1 = (word32) x2 + 0x0118;
		x1 = *x8.u1;
		x3.u1 = (word32) x3 + 0x05EE;
		x0.u1 = sp + 88;
		ui32 w4 = 0x00 | 0x06;
		word64 x5 = 0x00;
		x20.u1 = sp + 88;
		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
		x0.u1 = x20 + 0x08;
		x1.u0 = 0x00050000;
		x1.u1 = x1 + 1989;
		w2 = 11;
		fn000000000001BB30();
		x0.u1 = sp + 88;
		LogCapture::~LogCapture();
		sp.u1 = sp + 0x08;
l0000000000024050:
		x20.u1 = (word32) x22 + 288;
		x0 = x20;
		_ZNSt6__ndk15mutex4lockEv();
		x25 = *((word32) x22 + 224);
		x22.u1 = (word32) x22 + 232;
		Eq_15053 x31 = x25 - x22;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x23.u0 = 0x00070000;
			x24.u0 = 0x00070000;
			x23 = *((word32) x23 + 0x0DC0);
			x24 = *((word32) x24 + 0x0C68);
			real32 s8 = (real32) w21;
			word128 q8 = SEQ(0, s8);
			real32 s9 = 1.0F;
			x27.u1 = x23 + 0x10;
			x28.u1 = x24 + 0x10;
			do
			{
				x0.u1 = x25 + 88;
				x8.u1 = sp + 0x08;
				fn000000000001BBA0();
				x8.u1 = sp + 88;
				x0.u1 = sp + 0x08;
				fn000000000001AE50();
				x21.u1 = sp.u0->t0018.u1;
				sp.u0->t0008.u1 = (size_t) x27;
				if (x21 != 0x00)
					x8.u1 = (word32) x21 + 8;
				if ((w19 & 0x01) != 0x00)
				{
					x0.u1 = *((word32) sp + 96);
					sp.u0->t0008.u1 = (size_t) 0x00;
					w1 = 0x0A;
					x2.u1 = sp + 0x08;
					word128 q9;
					q0 = q9;
					rs2_set_option();
					x0.u1 = sp.u0->t0008.u1;
					fn000000000001ADF0();
				}
				else
				{
					x0.u1 = *((word32) sp + 96);
					sp.u0->t0008.u1 = (size_t) 0x00;
					w1 = 0x0A;
					word32 s0 = 0x00;
					x2.u1 = sp + 0x08;
					rs2_set_option();
					x0.u1 = sp.u0->t0008.u1;
					fn000000000001ADF0();
					x0.u1 = *((word32) sp + 96);
					sp.u0->t0008.u1 = (size_t) 0x00;
					w1 = 0x00 | 0x03;
					x2.u1 = sp + 0x08;
					q0 = q8;
					rs2_set_option();
					x0.u1 = sp.u0->t0008.u1;
					fn000000000001ADF0();
				}
				x21.u1 = *((word32) sp + 112);
				((word32) sp + 88)->u1 = x28;
				if (x21 != 0x00)
					x8.u1 = (word32) x21 + 8;
				x8 = *((word32) x25 + 8);
				while (x8 != 0x00)
				{
					x25 = x8;
					x8 = *x8.u1;
				}
				x31 = x25 - x22;
				NZCV.u0 = cond(x31);
			} while (Test(NE,Z));
		}
		x0 = x20;
		_ZNSt6__ndk15mutex6unlockEv();
		x8 = *((word32) x26 + 40);
		x9 = *((word32) x29 - 112);
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			sp.u1 = sp + 0x01B0;
			Eq_15222 v63;
			v63.u0 = sp + 96;
			x29.u1 = *v63;
			x30.u1 = *((word32) v63 + 8);
			Eq_15231 v64;
			v64.u0 = sp + 80;
			x20.u1 = *v64;
			x19.u1 = *((word32) v64 + 8);
			Eq_15240 v65;
			v65.u0 = sp + 64;
			x22.u1 = *v65;
			x21.u1 = *((word32) v65 + 8);
			Eq_15249 v66;
			v66.u0 = sp + 48;
			x24.u1 = *v66;
			x23.u1 = *((word32) v66 + 8);
			Eq_15258 v67;
			v67.u0 = sp + 32;
			x26.u1 = *v67;
			x25.u1 = *((word32) v67 + 8);
			Eq_15267 v68;
			v68.u0 = sp + 16;
			x28.u1 = *v68;
			x27.u1 = *((word32) v68 + 8);
			Eq_14692 v69 = sp;
			d9.u1 = *v69;
			d8.u1 = v69.u0->t0008.u1;
			sp.u1 = sp + 112;
			return;
		}
l0000000000024244:
		__stack_chk_fail();
	}
	x0.u1 = sp + 0x20;
	fn000000000001B2D0();
	x19 = x0;
	LogCapture::~LogCapture();
	sp.u1 = sp + 0x08;
	x0 = x19;
	_Unwind_Resume();
	Eq_14 v71;
	v71.u1 = *((word32) sp + 32);
	w8.u1 = (word32) v71;
	x19 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = *((word32) sp + 48);
		((real64) q0, x0, x1);
		Eq_14 v72;
		v72.u1 = *((word32) sp + 64);
		w8.u1 = (word32) v72;
		if ((w8 & 0x01) == 0x00)
		{
l000000000002429C:
			x0 = x19;
			_Unwind_Resume();
			x21.u1 = sp.u0->t0018.u1;
			x8.u1 = x23 + 0x10;
			x19 = x0;
			sp.u0->t0008.u1 = (size_t) x8;
			if (x21 == 0x00)
			{
				x0 = x20;
				_ZNSt6__ndk15mutex6unlockEv();
				x0 = x19;
				_Unwind_Resume();
				();
				return;
			}
			else
				x8.u1 = (word32) x21 + 8;
		}
l0000000000024280:
		x0.u1 = *((word32) sp + 80);
		((real64) q0, x0, x1);
		x0 = x19;
		_Unwind_Resume();
		x19 = x0;
	}
	Eq_14 v73;
	v73.u1 = *((word32) sp + 64);
	w8.u1 = (word32) v73;
	if ((w8 & 0x01) != 0x00)
		goto l000000000002429C;
	goto l0000000000024280;
}

// 000000000002432C: void ()
// Called from:
//      
void ()
{
	struct Eq_15408 * fp;
	struct Eq_15408 * sp = fp;
	sp -= 0x50;
	Eq_14 x23;
	sp->t0010.u1 = (size_t) x23;
	struct Eq_15417 * v7 = (struct Eq_15417 *) ((char *) &sp->t0010 + 16);
	struct Eq_15419 * x22;
	v7->ptr0000 = x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_15428 * v10 = (struct Eq_15428 *) ((char *) &sp->t0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_15439 * v13 = (struct Eq_15439 *) ((char *) &sp->t0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->t0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u1 = x22->t0028.u1;
	ptr64 x1 = &sp->t0000.u0;
	Eq_14 x8;
	x21 = x8;
	sp->t0008.u1 = (size_t) x9;
	sp->t0000.u1 = (size_t) 0x00;
	Eq_14 x0 = *x0.u1;
	rs2_pipeline_profile_get_device();
	x20 = x0;
	word32 w0 = 0x28;
	_Znwm();
	((word32) x0 + 16)->u0 = 0x00;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0ED0);
	x9.u0 = 0x00070000;
	x19 = x0;
	x23 = x0;
	x9 = *((word32) x9 + 0x0DF8);
	x0.u1 = sp->t0000.u1;
	x23.u1 = (word32) x23 + 8;
	x23.u1->u0 = 0x00;
	x8.u1 = (word32) x8 + 16;
	*x19.u1 = x8;
	struct Eq_15505 * v20 = (struct Eq_15505 *) ((word32) x19 + 24);
	v20->t0000.u1 = (size_t) x20;
	v20->t0008.u1 = (size_t) x9;
	fn000000000001ADF0();
	Eq_14 w9;
	do
	{
		union Eq_3183 * v21 = &*x23.u1;
		x8 = __load_exclusive<word64>(v21);
		x8.u1 = (word32) x8 + 1;
		union Eq_3192 * v22 = &*x23.u1;
		w9 = __store_exclusive<word64>(v22, x8);
	} while (w9 != 0x00);
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0DC0);
	*((word32) x21 + 16) = x19;
	x8.u1 = (word32) x8 + 16;
	Eq_14 v24 = x21;
	*v24.u1 = x8;
	*((word32) v24 + 8) = x20;
	do
	{
		union Eq_3183 * v25 = &*x23.u1;
		x8 = __load_exclusive<word64>(v25);
		x8.u1 = (word32) x8 + 1;
		union Eq_3192 * v26 = &*x23.u1;
		w9 = __store_exclusive<word64>(v26, x8);
	} while (w9 != 0x00);
}

// 00000000000244B4: define _ZNK3rs26device5firstINS_12depth_sensorEEET_v
define _ZNK3rs26device5firstINS_12depth_sensorEEET_v
{
	struct Eq_15566 * fp;
	struct Eq_15566 * sp = fp;
	sp -= 0x60;
	struct Eq_15571 * v6 = (struct Eq_15571 *) ((char *) &sp->t0018 + 8);
	Eq_14 x24;
	v6->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v6->t0008.u1 = (size_t) x23;
	struct Eq_15582 * v9 = (struct Eq_15582 *) ((char *) &sp->t0018 + 24);
	struct Eq_15584 * x22;
	v9->ptr0000 = x22;
	Eq_14 x21;
	v9->t0008.u1 = (size_t) x21;
	struct Eq_15593 * v12 = (struct Eq_15593 *) ((char *) &sp->t0018 + 40);
	Eq_14 x20;
	v12->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v12->t0008.u1 = (size_t) x19;
	struct Eq_15604 * v15 = (struct Eq_15604 *) ((char *) &sp->t0018 + 56);
	ptr64 x29;
	v15->ptr0000 = x29;
	word64 x30;
	v15->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 56;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x20 = x8;
	x8.u1 = x22->t0028.u1;
	sp->t0018.u1 = (size_t) x8;
	x8.u1 = &sp->t0000.u0;
	fn000000000001BC90();
	struct Eq_15566 * v18 = sp;
	x19.u1 = v18->t0000.u1;
	x23.u1 = v18->t0008.u1;
	Eq_15638 x31 = x19 - x23;
	Eq_15640 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	Eq_14 x0;
	ui32 w21;
	Eq_14 q0;
	Eq_14 x1;
	if (Test(NE,Z))
	{
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 0x0C68);
		x24.u1 = (word32) x8 + 16;
		do
		{
			x8 = x20;
			x0 = x19;
			fn000000000001BB20();
			x8 = *((word32) x20 + 16);
			if (x8 != 0x00)
			{
				w21 = 0x00 | 0x01;
				x19.u1 = sp->t0000.u1;
				if (x19 != 0x00)
					goto l0000000000024580;
				goto l00000000000245B8;
			}
			x21 = *((word32) x20 + 24);
			*x20.u1 = x24;
			if (x21 != 0x00)
				x8.u1 = (word32) x21 + 8;
			x19.u1 = (word32) x19 + 32;
			x31 = x19 - x23;
			NZCV.u0 = cond(x31);
		} while (Test(NE,Z));
		w21 = 0x00 | 0x02;
		x19.u1 = sp->t0000.u1;
		if (x19 == 0x00)
		{
l00000000000245B8:
			NZCV.u0 = cond(w21 - 0x02);
			Eq_14 x9;
			if (Test(NE,Z))
			{
				x8.u1 = x22->t0028.u1;
				x9.u1 = sp->t0018.u1;
				x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				if (Test(EQ,Z))
				{
					struct Eq_15781 * v25 = (struct Eq_15781 *) ((char *) &sp->t0018 + 56);
					x29 = v25->ptr0000;
					x30 = v25->qw0008;
					struct Eq_15790 * v26 = (struct Eq_15790 *) ((char *) &sp->t0018 + 40);
					x20.u1 = v26->t0000.u1;
					x19.u1 = v26->t0008.u1;
					struct Eq_15799 * v27 = (struct Eq_15799 *) ((char *) &sp->t0018 + 24);
					x22 = v27->ptr0000;
					x21.u1 = v27->t0008.u1;
					struct Eq_15808 * v28 = (struct Eq_15808 *) ((char *) &sp->t0018 + 8);
					x24.u1 = v28->t0000.u1;
					x23.u1 = v28->t0008.u1;
					sp = (struct Eq_15566 *) ((char *) &sp->t0018 + 72);
					return;
				}
			}
			else
			{
				ui32 w0 = 0x48;
				__cxa_allocate_exception();
				x19 = x0;
				struct Eq_15566 * v32 = sp;
				v32->t0000.u1 = (size_t) 0x00;
				v32->t0008.u1 = (size_t) 0x00;
				sp->t0010.u1 = (size_t) 0x00;
				w0 = 0x00 | 0x30;
				_Znwm();
				x9.u0 = 0x00052000;
				x8.u0 = 0x00050000;
				x9.u1 = (word32) x9 + 0x0694;
				q0 = *((word32) x8 + 608);
				x8 = *((word32) x9 + 29);
				Eq_14 v35 = x9;
				word128 q1 = (word128) *v35.u1;
				Eq_14 q2 = *((word32) v35 + 16);
				w21 = 0x00 | 0x01;
				sp->t0010.u1 = (size_t) x0;
				((word32) x0 + 37)->u0 = 0x00;
				sp->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
				*((word32) x0 + 29) = x8;
				Eq_14 v36 = x0;
				v36.u1->u1 = q1;
				*((word32) v36 + 16) = q2;
				x1.u1 = &sp->t0000.u0;
				x0 = x19;
				fn000000000001B140();
				x1.u0 = 0x00070000;
				Eq_14 x2;
				x2.u0 = 0x00070000;
				x1 = *((word32) x1 + 0x0FC0);
				x2 = *((word32) x2 + 0x0E38);
				x0 = x19;
				w21 = 0x00;
				__cxa_throw();
			}
			__stack_chk_fail();
		}
	}
	else
	{
		w21 = 0x00 | 0x02;
		if (x19 == 0x00)
			goto l00000000000245B8;
	}
l0000000000024580:
	x20.u1 = sp->t0008.u1;
	x31 = x20 - x19;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
	{
		do
		{
			x20.u1 = (word32) x20 - 32;
			x8 = *x20.u1;
			x8 = *x8.u1;
			x0 = x20;
			x8();
			x31 = x19 - x20;
			NZCV.u0 = cond(x31);
		} while (Test(NE,Z));
		x0.u1 = sp->t0000.u1;
	}
	else
		x0 = x19;
	sp->t0008.u1 = (size_t) x19;
	((real64) q0, x0, x1);
	goto l00000000000245B8;
}

// 00000000000246EC: void sensor::~sensor()
void sensor::~sensor()
{
	word64 * fp;
	word64 * sp = fp;
	sp += -4;
	word64 x19;
	*sp = x19;
	struct Eq_15866 * v7 = (struct Eq_15866 *) (sp + 2);
	ptr64 x29;
	v7->ptr0000 = x29;
	word64 x30;
	v7->qw0008 = x30;
	x29 = sp + 2;
	Eq_14 x8;
	x8.u0 = 0x00070000;
	struct Eq_15879 * x0;
	x19 = x0->qw0018;
	x8 = *((word32) x8 + 0x0C68);
	x8.u1 = (word32) x8 + 16;
	x0->t0000.u1 = (size_t) x8;
	if (x19 == 0x00)
	{
		struct Eq_15894 * v10 = (struct Eq_15894 *) (sp + 2);
		x29 = v10->ptr0000;
		x30 = v10->qw0008;
		x19 = *sp;
		sp += 4;
	}
	else
		x8 = x19 + 0x08;
}

// 0000000000024754: define _ZN4rgbd13RGBDRealSense15setRGBDCallbackERKNSt6__ndk18functionIFviaiiiEEERKNS_12RgbdLocationE
define _ZN4rgbd13RGBDRealSense15setRGBDCallbackERKNSt6__ndk18functionIFviaiiiEEERKNS_12RgbdLocationE
{
	Eq_15909 fp;
	Eq_15909 sp = fp;
	sp.u0 = (word32) sp - 96;
	Eq_14 x28;
	sp.u2->t0000.u1 = (size_t) x28;
	Eq_14 x27;
	sp.u2->t0008.u1 = (size_t) x27;
	struct Eq_15922 * v8 = (struct Eq_15922 *) ((word32) sp + 16);
	Eq_14 x26;
	v8->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_15933 * v11 = (struct Eq_15933 *) ((word32) sp + 32);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_15944 * v14 = (struct Eq_15944 *) ((word32) sp + 48);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_15955 * v17 = (struct Eq_15955 *) ((word32) sp + 64);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_15966 * v20 = (struct Eq_15966 *) ((word32) sp + 80);
	Eq_14 x29;
	v20->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v20->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 80;
	sp -= 0x0210;
	Eq_1720 sysreg3_3_13_0_2;
	x27 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x27 + 40);
	Eq_14 x0;
	x19.u1 = (word32) x0 + 288;
	x22 = x0;
	x0 = x19;
	Eq_14 x2;
	x20 = x2;
	Eq_14 x1;
	x21 = x1;
	*((word32) x29 - 96) = x8;
	_ZNSt6__ndk15mutex4lockEv();
	x28.u0 = 0x00071000;
	x28.u1 = (word32) x28 + 0x0118;
	x8.u1 = (word32) sp + 144;
	x25.u1 = (word32) x8 + 8;
	Eq_14 v27 = *((word32) x28 + 8);
	ui32 w8 = (word32) v27;
	Eq_14 x10 = *((word32) x28 + 24);
	ui32 w9 = (ui32) *x28.u1;
	Eq_14 x11;
	x11.u1 = (word32) x28 + 9;
	ui32 w31 = w8 & 0x01;
	Eq_16024 NZ;
	NZ.u0 = cond(w31);
	bool Z;
	x24.u1 = Test(EQ,Z) ? x11 : x10;
	x0 = x24;
	((word32) sp + 144)->u0 = w9;
	struct Eq_16033 * v36 = (struct Eq_16033 *) ((word32) sp + 0x00A0);
	v36->qw0000 = 0x00;
	v36->qw0008 = 0x00;
	sp.u2->t0098.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u0 = (word32) x0 + 16;
	Eq_16053 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x25;
		fn000000000001B2D0();
		goto l0000000000024EE0;
	}
	x23 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w23;
	if (Test(ULT,C))
	{
		w8 = w23 << 1;
		x25.u1 = (word32) x25 + 1;
		sp.u2->t0098.u0 = (byte) (byte) w8;
		if (x23 == 0x00)
			goto l000000000002482C;
	}
	else
	{
		x8.u1 = (word32) x23 + 16;
		x26 = x8 & ~0x0F;
		x0 = x26;
		_Znwm();
		x8 = x26 | 0x01;
		x25 = x0;
		Eq_16071 v92;
		v92.u0 = sp + 0x00A0;
		v92.u0->t0000.u1 = (size_t) x23;
		v92.u0->t0008.u1 = (size_t) x0;
		sp.u2->t0098.u1 = (size_t) x8;
	}
	x0 = x25;
	x1 = x24;
	x2 = x23;
	x0 = memcpy(x0, x1, x2);
l000000000002482C:
	*(x25 + x23) = (word64) 0x00;
	x0.u1 = sp + 0x90;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w23 = 0x00;
		Eq_14 v43;
		v43.u0 = sp.u2->t0098.u0;
		w8 = (word32) v43;
		if ((w8 & 0x01) == 0x00)
			goto l00000000000248F8;
		goto l0000000000024890;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_16128 v40;
	v40.u0 = sp + 0x0080;
	v40.u0->t0000.u1 = (size_t) 0x00;
	v40.u0->t0008.u1 = (size_t) 0x00;
	((word32) sp + 0x0078)->u0 = 0x00;
	x23 = *x8.u1;
	x0 = x23;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
		goto l0000000000024EEC;
	x24 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	Eq_14 x9;
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x78;
		ui32 w24;
		w8 = w24 << 1;
		x25 = x9 | 0x01;
		((word32) sp + 0x0078)->u0 = (byte) w8;
		if (x24 == 0x00)
			goto l00000000000248D8;
	}
	else
	{
		x8.u1 = x24 + 0x10;
		x26 = x8 & ~0x0F;
		x0 = x26;
		_Znwm();
		x8 = x26 | 0x01;
		x25 = x0;
		Eq_16169 v45;
		v45.u0 = sp + 0x0080;
		v45->u0 = x24;
		((word32) v45 + 8)->u0 = x0;
		((word32) sp + 0x0078)->u0 = x8;
	}
	x0 = x25;
	x1 = x23;
	x2 = x24;
	x0 = memcpy(x0, x1, x2);
l00000000000248D8:
	*(x25 + x24) = (word64) 0x00;
	x0.u1 = sp + 0x78;
	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
	Eq_14 v46;
	v46.u1 = *((word32) sp + 0x0078);
	w8 = (word32) v46;
	w23 = w0;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_14 v47;
		v47.u0 = sp.u2->t0098.u0;
		w8 = (word32) v47;
		if ((w8 & 0x01) != 0x00)
		{
l00000000000248F8:
			if ((w23 & 0x01) != 0x00)
				goto l00000000000248FC;
			goto l000000000002489C;
		}
	}
	else
	{
		x0.u1 = sp.u2->t0088.u1;
		((real64) q0, x0, x1);
		Eq_14 v91;
		v91.u0 = sp.u2->t0098.u0;
		w8 = (word32) v91;
		if ((w8 & 0x01) == 0x00)
			goto l00000000000248F8;
	}
l0000000000024890:
	x0.u1 = *((word32) sp + 0x00A8);
	((real64) q0, x0, x1);
	if ((w23 & 0x01) == 0x00)
	{
l00000000000248FC:
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		x1 = *x8.u1;
		x2.u0 = 0x00071000;
		Eq_14 x3;
		x3.u0 = 0x00052000;
		x2.u1 = (word32) x2 + 0x0118;
		x3.u1 = (word32) x3 + 0x05EE;
		x0.u1 = sp + 0xB8;
		ui32 w4 = 0x00 | 0x06;
		word64 x5 = 0x00;
		x23.u1 = sp + 0xB8;
		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
		x0.u1 = x23 + 0x08;
		x1.u0 = 0x00050000;
		x1.u1 = x1 + 2001;
		word32 w2 = 0x0D;
		fn000000000001BB30();
		Eq_14 v52 = *x20.u1;
		x8.u1 = (int64) v52;
		x23 = x0;
		NZCV.u0 = cond(w8 - 0x03);
		word32 ZC;
		if (Test(ULE,ZC))
		{
			x9.u0 = 0x0006F000;
			x9.u1 = x9 + 2792;
			x24 = *((char *) x9.u1 + x8 *64 0x08);
		}
		else
		{
			x24.u0 = 0x00052000;
			x24.u1 = x24 + 0x0557;
		}
		x0 = x24;
		x0 = strlen(x0);
		x2 = x0;
		x0 = x23;
		x1 = x24;
		fn000000000001BB30();
		x0.u1 = sp + 0xB8;
		LogCapture::~LogCapture();
		sp.u0 = sp + 0x08;
		x8 = *((word32) x22 + 0x0570);
		ui32 w10;
		ui32 w21;
		ui32 w22;
		Eq_16456 x31;
		if (x8 == 0x00)
		{
l0000000000024B10:
			x8.u0 = 0x00071000;
			x8.u1 = x8 + 0x0198;
			x9.u1 = sp + 0x20;
			x23.u1 = x9 + 0x08;
			Eq_14 v54 = *((word32) x8 + 8);
			w9 = (word32) v54;
			x11 = *((word32) x8 + 24);
			w10 = (ui32) *x8.u1;
			x8.u1 = x8 + 0x09;
			w31 = w9 & 0x01;
			NZ.u0 = cond(w31);
			x22.u1 = Test(EQ,Z) ? x8 : x11;
			x0 = x22;
			((word32) sp + 32)->u0 = w10;
			Eq_16324 v56;
			v56.u0 = sp + 48;
			v56->u0 = 0x00;
			((word32) v56 + 8)->u0 = 0x00;
			sp.u2->t0028.u1 = 0x00;
			x0 = strlen(x0);
			sp.u0 = x0 + 0x10;
			NZCV.u0 = cond(sp);
			if (Test(ULT,C))
			{
				x21 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					w8 = w21 << 1;
					x23.u1 = x23 + 0x01;
					sp.u2->t0028.u0 = (byte) (byte) w8;
					if (x21 == 0x00)
						goto l0000000000024BA4;
				}
				else
				{
					x8.u1 = x21 + 0x10;
					x24 = x8 & ~0x0F;
					x0 = x24;
					_Znwm();
					x8 = x24 | 0x01;
					x23 = x0;
					Eq_16412 v90;
					v90.u0 = sp + 48;
					v90.u0->t0000.u1 = (size_t) x21;
					v90.u0->t0008.u1 = (size_t) x0;
					sp.u2->t0028.u1 = (size_t) x8;
				}
				x0 = x23;
				x1 = x22;
				x2 = x21;
				x0 = memcpy(x0, x1, x2);
l0000000000024BA4:
				*(x23 + x21) = (word64) 0x00;
				x0.u1 = sp + 0x20;
				((LEVELS) x0);
				if ((w0 & 0x01) == 0x00)
				{
					w21 = 0x00;
					Eq_14 v89;
					v89.u0 = sp.u2->t0028.u0;
					w8 = (word32) v89;
					if ((w8 & 0x01) == 0x00)
						goto l0000000000024C68;
					goto l0000000000024C08;
				}
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				Eq_16486 v61;
				v61.u0 = sp + 16;
				v61.u0->t0000.u1 = (size_t) 0x00;
				v61.u0->t0008.u1 = (size_t) 0x00;
				sp.u2->t0008.u1 = (size_t) 0x00;
				x21 = *x8.u1;
				x0 = x21;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(ULT,C))
				{
					x22 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						x9.u1 = sp + 0x08;
						w8 = w22 << 1;
						x23 = x9 | 0x01;
						sp.u2->t0008.u0 = (byte) (byte) w8;
						if (x22 == 0x00)
							goto l0000000000024C48;
					}
					else
					{
						x8.u1 = x22 + 0x10;
						x24 = x8 & ~0x0F;
						x0 = x24;
						_Znwm();
						x8 = x24 | 0x01;
						x23 = x0;
						Eq_16527 v88;
						v88.u0 = sp + 16;
						v88->u0 = x22;
						((word32) v88 + 8)->u0 = x0;
						sp.u2->t0008.u1 = (size_t) x8;
					}
					x0 = x23;
					x1 = x21;
					x2 = x22;
					x0 = memcpy(x0, x1, x2);
l0000000000024C48:
					*(x23 + x22) = (word64) 0x00;
					x0.u1 = sp + 0x08;
					_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
					Eq_14 v66;
					v66.u0 = sp.u2->t0008.u0;
					w8 = (word32) v66;
					w21 = w0;
					if ((w8 & 0x01) != 0x00)
					{
						Eq_14 v67;
						v67.u0 = sp.u2->t0028.u0;
						w8 = (word32) v67;
						if ((w8 & 0x01) != 0x00)
						{
l0000000000024C68:
							if ((w21 & 0x01) == 0x00)
								goto l0000000000024D0C;
l0000000000024C6C:
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 3432);
							x1 = *x8.u1;
							x2.u0 = 0x00071000;
							x3.u0 = 0x00052000;
							x2.u1 = x2 + 0x0198;
							x3.u1 = x3 + 0x05EE;
							x0.u1 = sp + 0xB8;
							w4 = 0x00 | 0x06;
							x5 = 0x00;
							x21.u1 = sp + 0xB8;
							_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
							x0.u1 = x21 + 0x08;
							x1.u0 = 0x00050000;
							x1.u1 = x1 + 0x07F5;
							w2 = 0x13;
							fn000000000001BB30();
							Eq_14 v68 = *x20.u1;
							x8.u1 = (int64) v68;
							x21 = x0;
							NZCV.u0 = cond(w8 - 0x03);
							if (Test(ULE,ZC))
							{
								x9.u0 = 0x0006F000;
								x9.u1 = x9 + 2792;
								x20 = *((char *) x9.u1 + x8 *64 0x08);
							}
							else
							{
								x20.u0 = 0x00052000;
								x20.u1 = (word32) x20 + 0x0557;
							}
							x0 = x20;
							x0 = strlen(x0);
							x2 = x0;
							x0 = x21;
							x1 = x20;
							fn000000000001BB30();
l0000000000024D04:
							x0.u1 = sp + 0xB8;
							LogCapture::~LogCapture();
							sp.u0 = sp + 0x08;
l0000000000024D0C:
							x0 = x19;
							_ZNSt6__ndk15mutex6unlockEv();
							x8 = *((word32) x27 + 40);
							x9 = *((word32) x29 - 96);
							x31 = x8 - x9;
							NZCV.u0 = cond(x31);
							if (Test(EQ,Z))
							{
								sp.u0 = sp + 0x0210;
								Eq_17070 v80;
								v80.u0 = sp + 80;
								x29.u1 = *v80;
								x30.u1 = *((word32) v80 + 8);
								Eq_17079 v81;
								v81.u0 = sp + 64;
								x20.u1 = *v81;
								x19.u1 = *((word32) v81 + 8);
								Eq_17088 v82;
								v82.u0 = sp + 48;
								x22.u1 = *v82;
								x21.u1 = *((word32) v82 + 8);
								Eq_17097 v83;
								v83.u0 = sp + 32;
								x24.u1 = *v83;
								x23.u1 = *((word32) v83 + 8);
								Eq_17106 v84;
								v84.u0 = sp + 16;
								x26.u1 = *v84;
								x25.u1 = *((word32) v84 + 8);
								Eq_15909 v85 = sp;
								x28.u1 = v85.u2->t0000.u1;
								x27.u1 = v85.u2->t0008.u1;
								sp.u0 = sp + 96;
								return;
							}
l0000000000024EE0:
							__stack_chk_fail();
						}
					}
					else
					{
						x0.u1 = *((word32) sp + 24);
						((real64) q0, x0, x1);
						Eq_14 v86;
						v86.u0 = sp.u2->t0028.u0;
						w8 = (word32) v86;
						if ((w8 & 0x01) == 0x00)
							goto l0000000000024C68;
					}
l0000000000024C08:
					x0.u1 = *((word32) sp + 56);
					((real64) q0, x0, x1);
					if ((w21 & 0x01) == 0x00)
						goto l0000000000024D0C;
					goto l0000000000024C6C;
				}
l0000000000024EF4:
				x0.u1 = sp + 0x08;
				fn000000000001B2D0();
				goto l0000000000024EFC;
			}
			x0 = x23;
			fn000000000001B2D0();
l0000000000024EEC:
			x0.u1 = sp + 0x78;
			fn000000000001B2D0();
			goto l0000000000024EF4;
		}
l00000000000249A4:
		Eq_14 v58 = *x20.u1;
		x9.u1 = (int64) v58;
		x10 = x8 - 0x01;
		x11 = x10 & x8;
		NZ.u0 = cond(x11);
		C = false;
		bool V = false;
		x23.u1 = (word32) x22 + 0x0568;
		Eq_14 x12;
		if (Test(NE,Z))
		{
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			x12 = x9;
			if (Test(ULE,ZC))
			{
				x12 = x9 /u x8;
				x12 = x9 - x12 *64 x8;
			}
		}
		else
			x12 = x10 & x9;
		Eq_14 x13 = *x23.u1;
		x13 = *((char *) x13.u1 + x12 *64 0x08);
		if (x13 != 0x00)
		{
			do
			{
				x13 = *x13.u1;
				if (x13 == 0x00)
					goto l0000000000024B10;
				Eq_14 x14 = *((word32) x13 + 8);
				x31 = x14 - x9;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					if (x11 == 0x00)
					{
						x14 &= x10;
						x31 = x14 - x12;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l0000000000024B10;
						continue;
					}
					else
					{
						x31 = x14 - x8;
						NZCV.u0 = cond(x31);
						if (Test(UGE,C))
						{
							uint64 x15 = x14 /u x8;
							x14 -= x15 *64 x8;
						}
						x31 = x14 - x12;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l0000000000024B10;
						continue;
					}
				}
				word32 w14 = (word32) *((word32) x13 + 16);
				NZCV.u0 = cond(w14 - w9);
			} while (Test(NE,Z));
			((word32) sp + 0x00B8)->u0 = x20;
			x2.u0 = 0x00053000;
			x2.u1 = x2 + 3181;
			x3.u1 = sp + 0xB8;
			Eq_16603 x4;
			x4.u0 = sp + 0xB0;
			x0 = x23;
			x1 = x20;
			fn000000000001B520();
			x1.u1 = x0 + 0x18;
			x22.u1 = x22 + 0x0540;
			x0 = x22;
			fn000000000001AD90();
			if (x0 != 0x00)
			{
				((word32) sp + 0x00B8)->u0 = x20;
				x2.u0 = 0x00053000;
				x2.u1 = x2 + 3181;
				x3.u1 = sp + 0xB8;
				x4.u0 = sp + 0xB0;
				x0 = x23;
				x1 = x20;
				fn000000000001B520();
				x1.u1 = x0 + 0x18;
				((word32) sp + 0x00B8)->u0 = x1;
				x2.u0 = 0x00053000;
				x2.u1 = x2 + 3181;
				x3.u1 = sp + 0xB8;
				x4.u0 = sp + 0xB0;
				x0 = x22;
				fn000000000001BD40();
				x0.u1 = x0 + 0x30;
				x1 = x21;
				_ZN4rgbd9RGBDParam19setLocationCallbackERKNSt6__ndk18functionIFviaiiiEEE();
				Eq_14 v70 = *((word32) x28 + 8);
				w10 = (word32) v70;
				x11 = *((word32) x28 + 24);
				w8 = (ui32) *x28.u1;
				x12.u1 = (word32) x28 + 9;
				w31 = w10 & 0x01;
				NZ.u0 = cond(w31);
				x22.u1 = Test(EQ,Z) ? x12 : x11;
				x9.u1 = sp + 88;
				x0 = x22;
				x23.u1 = x9 + 0x08;
				((word32) sp + 88)->u0 = w8;
				Eq_16771 v71;
				v71.u0 = sp + 0x0068;
				v71->u0 = 0x00;
				((word32) v71 + 8)->u0 = 0x00;
				((word32) sp + 96)->u0 = 0x00;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(ULT,C))
				{
					x21 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						w8 = w21 << 1;
						x23.u1 = x23 + 0x01;
						((word32) sp + 96)->u0 = (byte) w8;
						if (x21 == 0x00)
							goto l0000000000024D74;
					}
					else
					{
						x8.u1 = x21 + 0x10;
						x24 = x8 & ~0x0F;
						x0 = x24;
						_Znwm();
						x8 = x24 | 0x01;
						x23 = x0;
						Eq_16807 v73;
						v73.u0 = sp + 0x0068;
						v73.u0->t0000.u1 = (size_t) x21;
						v73.u0->t0008.u1 = (size_t) x0;
						((word32) sp + 96)->u0 = x8;
					}
					x0 = x23;
					x1 = x22;
					x2 = x21;
					x0 = memcpy(x0, x1, x2);
l0000000000024D74:
					*(x23 + x21) = (word64) 0x00;
					x0.u1 = sp + 88;
					((LEVELS) x0);
					if ((w0 & 0x01) == 0x00)
					{
						w21 = 0x00;
						Eq_14 v79;
						v79.u1 = *((word32) sp + 96);
						w8 = (word32) v79;
						if ((w8 & 0x01) == 0x00)
							goto l0000000000024E38;
						goto l0000000000024DD8;
					}
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					Eq_16862 v72;
					v72.u0 = sp + 72;
					v72.u0->t0000.u1 = (size_t) 0x00;
					v72.u0->t0008.u1 = (size_t) 0x00;
					((word32) sp + 64)->u0 = 0x00;
					x21 = *x8.u1;
					x0 = x21;
					x0 = strlen(x0);
					sp.u0 = x0 + 0x10;
					NZCV.u0 = cond(sp);
					if (Test(ULT,C))
					{
						x22 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							x9.u1 = sp + 0x40;
							w8 = w22 << 1;
							x23 = x9 | 0x01;
							((word32) sp + 64)->u0 = (byte) w8;
							if (x22 == 0x00)
								goto l0000000000024E18;
						}
						else
						{
							x8.u1 = x22 + 0x10;
							x24 = x8 & ~0x0F;
							x0 = x24;
							_Znwm();
							x8 = x24 | 0x01;
							x23 = x0;
							Eq_16903 v77;
							v77.u0 = sp + 72;
							v77->u0 = x22;
							((word32) v77 + 8)->u0 = x0;
							((word32) sp + 64)->u0 = x8;
						}
						x0 = x23;
						x1 = x21;
						x2 = x22;
						x0 = memcpy(x0, x1, x2);
l0000000000024E18:
						*(x23 + x22) = (word64) 0x00;
						x0.u1 = sp + 0x40;
						_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
						Eq_14 v74;
						v74.u1 = *((word32) sp + 64);
						w8 = (word32) v74;
						w21 = w0;
						if ((w8 & 0x01) != 0x00)
						{
							Eq_14 v75;
							v75.u1 = *((word32) sp + 96);
							w8 = (word32) v75;
							if ((w8 & 0x01) != 0x00)
							{
l0000000000024E38:
								if ((w21 & 0x01) == 0x00)
									goto l0000000000024D0C;
l0000000000024E3C:
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 3432);
								x1 = *x8.u1;
								x2.u0 = 0x00071000;
								x3.u0 = 0x00052000;
								x2.u1 = x2 + 0x0118;
								x3.u1 = x3 + 0x05EE;
								x0.u1 = sp + 0xB8;
								w4 = 0x00 | 0x06;
								x5 = 0x00;
								x21.u1 = sp + 0xB8;
								_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
								x0.u1 = x21 + 0x08;
								x1.u0 = 0x00050000;
								x1.u1 = x1 + 0x07DF;
								w2 = 0x15;
								fn000000000001BB30();
								Eq_14 v76 = *x20.u1;
								x8.u1 = (int64) v76;
								x21 = x0;
								NZCV.u0 = cond(w8 - 0x03);
								if (Test(ULE,ZC))
								{
									x9.u0 = 0x0006F000;
									x9.u1 = x9 + 2792;
									x20 = *((char *) x9.u1 + x8 *64 0x08);
								}
								else
								{
									x20.u0 = 0x00052000;
									x20.u1 = (word32) x20 + 0x0557;
								}
								x0 = x20;
								x0 = strlen(x0);
								x2 = x0;
								x0 = x21;
								x1 = x20;
								fn000000000001BB30();
								goto l0000000000024D04;
							}
						}
						else
						{
							x0.u1 = *((word32) sp + 80);
							((real64) q0, x0, x1);
							Eq_14 v78;
							v78.u1 = *((word32) sp + 96);
							w8 = (word32) v78;
							if ((w8 & 0x01) == 0x00)
								goto l0000000000024E38;
						}
l0000000000024DD8:
						x0.u1 = *((word32) sp + 112);
						((real64) q0, x0, x1);
						if ((w21 & 0x01) == 0x00)
							goto l0000000000024D0C;
						goto l0000000000024E3C;
					}
l0000000000024F04:
					x0.u1 = sp + 0x40;
					fn000000000001B2D0();
					x20 = x0;
					x0.u1 = sp + 0xB8;
					LogCapture::~LogCapture();
					sp.u0 = sp + 0x08;
					x0 = x19;
					_ZNSt6__ndk15mutex6unlockEv();
					x0 = x20;
					_Unwind_Resume();
					((rgbd::RgbdVersion) x0);
					return;
				}
l0000000000024EFC:
				x0 = x23;
				fn000000000001B2D0();
				goto l0000000000024F04;
			}
		}
		goto l0000000000024B10;
	}
l000000000002489C:
	x8 = *((word32) x22 + 0x0570);
	if (x8 == 0x00)
		goto l0000000000024B10;
	goto l00000000000249A4;
}

// 0000000000024FF4: void (Register Eq_17061 x0)
// Called from:
//      _ZN4rgbd13RGBDRealSense15setRGBDCallbackERKNSt6__ndk18functionIFviaiiiEEERKNS_12RgbdLocationE
void (Eq_17061 x0)
{
	bool Z;
	Eq_17138 fp;
	Eq_17138 sp = fp;
	sp -= 0x01E0;
	word64 x28;
	((word32) sp + 400)->u0 = x28;
	struct Eq_17147 * v7 = (struct Eq_17147 *) ((word32) sp + 416);
	struct Eq_17149 * x24;
	v7->ptr0000 = x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_17158 * v10 = (struct Eq_17158 *) ((word32) sp + 432);
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v10->t0008.u1 = (size_t) x21;
	struct Eq_17169 * v13 = (struct Eq_17169 *) ((word32) sp + 448);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_17180 * v16 = (struct Eq_17180 *) ((word32) sp + 464);
	struct Eq_17182 * x29;
	v16->ptr0000 = x29;
	Eq_14 x30;
	v16->t0008.u1 = (size_t) x30;
	x29 = (struct Eq_17182 *) ((word32) sp + 464);
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x24->t0028.u1;
	Eq_17203 NZCV;
	ui32 w1;
	NZCV.u0 = cond(w1 - 0x04);
	Eq_14 x9;
	x9.u0 = 0x00071000;
	ui32 w10 = (word32) Test(EQ,Z);
	x9.u1 = (word32) x9 + 0x0118;
	x29->tFFFFFFB8.u1 = (size_t) x8;
	((word32) x0 + 1424)->u1 = w10;
	ui32 w8 = (ui32) *x9.u1;
	ptr64 x10 = (ptr64) ((word32) sp + 32);
	x22 = x10 + 0x08;
	Eq_14 v27 = *((word32) x9 + 8);
	w10 = (word32) v27;
	((word32) sp + 32)->u0 = w8;
	x8.u1 = (word32) x9 + 9;
	x9 = *((word32) x9 + 24);
	ui32 w31 = w10 & 0x01;
	Eq_17244 NZ;
	NZ.u0 = cond(w31);
	x19 = x0;
	struct Eq_17247 * v32 = (struct Eq_17247 *) ((word32) sp + 48);
	v32->qw0000 = 0x00;
	v32->qw0008 = 0x00;
	x21.u1 = Test(EQ,Z) ? x8 : x9;
	x0 = x21;
	((word32) sp + 40)->u0 = 0x00;
	x0 = strlen(x0);
	sp.u0 = (word32) x0 + 16;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x22;
		fn000000000001B2D0();
		goto l0000000000025224;
	}
	x20 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w20;
	if (Test(ULT,C))
	{
		w8 = w20 << 1;
		x22.u1 = (word32) x22 + 1;
		((word32) sp + 40)->u0 = (byte) w8;
		if (x20 == 0x00)
			goto l00000000000250C0;
	}
	else
	{
		x8.u1 = (word32) x20 + 16;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		Eq_17286 v56 = (Eq_17286) ((word32) sp + 48);
		v56->b0000 = (char) x20;
		(&v56->b0000)[8] = (char) x0;
		((word32) sp + 40)->u0 = x8;
	}
	x0 = x22;
	Eq_14 x1 = x21;
	Eq_14 x2 = x20;
	x0 = memcpy(x0, x1, x2);
l00000000000250C0:
	*(x22 + x20) = (word64) 0x00;
	x0.u1 = (word32) sp + 32;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w20 = 0x00;
		Eq_14 v39;
		v39.u1 = *((word32) sp + 40);
		w8 = (word32) v39;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000025178;
		goto l0000000000025190;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_17345 v35 = (Eq_17345) ((word32) sp + 16);
	v35->b0000 = (char) 0x00;
	(&v35->b0000)[8] = (char) 0x00;
	((word32) sp + 8)->u0 = 0x00;
	x20 = *x8.u1;
	x0 = x20;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	word128 q0;
	if (Test(ULT,C))
	{
		x21 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = sp + 0x08;
			ui32 w21;
			w8 = w21 << 1;
			x22 = x9 | 0x01;
			((word32) sp + 8)->u0 = (byte) w8;
			if (x21 == 0x00)
				goto l0000000000025158;
		}
		else
		{
			x8.u1 = x21 + 0x10;
			x23 = x8 & ~0x0F;
			x0 = x23;
			_Znwm();
			x8 = x23 | 0x01;
			x22 = x0;
			Eq_17395 v40;
			v40.u0 = sp + 16;
			v40->u0 = x21;
			v40.u1->t0008.u1 = (size_t) x0;
			((word32) sp + 8)->u0 = x8;
		}
		x0 = x22;
		x1 = x20;
		x2 = x21;
		x0 = memcpy(x0, x1, x2);
l0000000000025158:
		*(x22 + x21) = (word64) 0x00;
		x0.u1 = sp + 0x08;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v41;
		v41.u1 = *((word32) sp + 8);
		w8 = (word32) v41;
		w20 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			byte v42 = (byte) *((word32) sp + 40);
			w8 = (word32) v42;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000025178:
				if ((w20 & 0x01) != 0x00)
					goto l00000000000251F0;
				goto l000000000002519C;
			}
		}
		else
		{
			x0.u1 = *((word32) sp + 24);
			((real64) q0, x0, x1);
			byte v53 = (byte) *((word32) sp + 40);
			w8 = (word32) v53;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000025178;
		}
l0000000000025190:
		x0.u1 = *((word32) sp + 56);
		((real64) q0, x0, x1);
		if ((w20 & 0x01) == 0x00)
			goto l00000000000251F0;
l000000000002519C:
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		x2.u0 = 0x00071000;
		Eq_14 x3;
		x3.u0 = 0x00052000;
		x2.u1 = x2 + 0x0118;
		x1 = *x8.u1;
		x3.u1 = (word32) x3 + 0x05EE;
		x0.u1 = sp + 0x40;
		ui32 w4 = 0x00 | 0x06;
		word64 x5 = 0x00;
		x20.u1 = sp + 0x40;
		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
		x0.u1 = x20 + 0x08;
		x1.u0 = 0x00050000;
		x1.u1 = x1 + 0x0809;
		ui32 w2 = 0x00 | 0x10;
		fn000000000001BB30();
		w1 = (ui32) *((word32) x19 + 1424);
		fn000000000001B5B0();
		x0.u1 = sp + 0x40;
		LogCapture::~LogCapture();
		sp.u0 = sp + 0x08;
l00000000000251F0:
		x8.u1 = x24->t0028.u1;
		x9.u1 = x29->tFFFFFFB8.u1;
		Eq_17538 x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			Eq_17546 v49;
			v49.u0 = sp + 464;
			x29 = (struct Eq_17182 *) *v49;
			x30.u1 = v49.u1->t0008.u1;
			Eq_17555 v50;
			v50.u0 = sp + 448;
			x20.u1 = *v50;
			x19.u1 = v50.u1->t0008.u1;
			Eq_17564 v51;
			v51.u0 = sp + 432;
			x22.u1 = *v51;
			x21.u1 = v51.u1->t0008.u1;
			Eq_17573 v52;
			v52.u0 = sp + 416;
			x24 = (struct Eq_17149 *) *v52;
			x23.u1 = v52.u1->t0008.u1;
			x28 = (word64) *((word32) sp + 400);
			sp.u0 = sp + 0x01E0;
			return;
		}
l0000000000025224:
		__stack_chk_fail();
	}
	x0.u1 = sp + 0x08;
	fn000000000001B2D0();
	Eq_17355 v54 = *((word32) sp + 8);
	w8 = (word32) v54;
	x19 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = *((word32) sp + 24);
		((real64) q0, x0, x1);
		byte v55 = (byte) *((word32) sp + 40);
		w8 = (word32) v55;
		if ((w8 & 0x01) != 0x00)
			goto l0000000000025278;
	}
	else
	{
		byte v57 = (byte) *((word32) sp + 40);
		w8 = (word32) v57;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000025278;
	}
	x0 = x19;
	_Unwind_Resume();
l0000000000025278:
	x0.u1 = *((word32) sp + 56);
	((real64) q0, x0, x1);
	x0 = x19;
	_Unwind_Resume();
	_ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEi();
}

// 0000000000025288: define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEi
// Called from:
//      
define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEi
{
	ui32 w0;
	int32 w1;
	struct Eq_17630 * fp;
	struct Eq_17630 * sp = fp;
	sp -= 0x70;
	struct Eq_17635 * v6 = (struct Eq_17635 *) ((char *) &sp->t0018 + 8);
	word64 x26;
	v6->qw0000 = x26;
	struct Eq_17641 * x25;
	v6->ptr0008 = x25;
	struct Eq_17646 * v9 = (struct Eq_17646 *) ((char *) &sp->t0018 + 24);
	word64 x24;
	v9->qw0000 = x24;
	Eq_14 x23;
	v9->t0008.u1 = (size_t) x23;
	struct Eq_17657 * v12 = (struct Eq_17657 *) ((char *) &sp->t0018 + 40);
	struct Eq_17659 * x22;
	v12->ptr0000 = x22;
	struct Eq_17659 * x21;
	v12->ptr0008 = x21;
	struct Eq_17668 * v15 = (struct Eq_17668 *) ((char *) &sp->t0018 + 56);
	word64 x20;
	v15->qw0000 = x20;
	struct Eq_17659 * x19;
	v15->ptr0008 = x19;
	struct Eq_17679 * v18 = (struct Eq_17679 *) ((char *) &sp->t0018 + 72);
	ptr64 x29;
	v18->ptr0000 = x29;
	word64 x30;
	v18->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 72;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	Eq_17697 x8;
	x8.u2 = x25->t0028.u2;
	struct Eq_17659 * x0;
	x19 = x0;
	sp->t0018.u2 = (struct Eq_107521 *) x8;
	sp->b0000 = 0x00;
	sp->ptr0008 = x0;
	x8.u1 = x0->b0000;
	x8.u2 = &x8.u2->tFFFFFFE8.u0;
	Eq_17697 x9;
	x9.u2 = x8.u2->t0000.u2;
	x9.u2 = x0 + x9;
	Eq_17697 w10;
	w10.u0 = x9.u2->t0020.u0;
	Eq_17737 NZCV;
	bool Z;
	if (w10 == 0x00)
	{
		x0 = x9.u2->ptr0088;
		int32 w20 = w1;
		if (x0 != null)
		{
			fn000000000001B260();
			x8.u1 = x19->b0000;
			x8 -= 0x18;
		}
		int32 w9 = 0x00 | 0x01;
		sp->b0000 = (byte) w9;
		x8.u2 = x8.u2->t0000.u2;
		x0 = x19 + x8;
		ui32 w26 = x0->dw0008;
		x8.u2 = (char *) &sp->ptr0008 + 8;
		_ZNKSt6__ndk18ios_base6getlocEv();
		Eq_14 x1;
		x1.u0 = 0x00070000;
		x1 = *((word32) x1 + 3688);
		x0 = (struct Eq_17659 *) ((char *) &sp->ptr0008 + 8);
		_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
		x21 = x0;
		x0 = (struct Eq_17659 *) ((char *) &sp->ptr0008 + 8);
		_ZNSt6__ndk16localeD1Ev();
		x8.u1 = x19->b0000;
		x8.u2 = x8.u2->tFFFFFFE8.u2;
		x22 = x19 + x8;
		ui32 w3 = x22->dw0090;
		x23.u1 = x22->t0028.u1;
		word32 wsp = w3 + 0x01;
		NZCV.u0 = cond(wsp);
		if (Test(EQ,Z))
		{
			x8.u2 = (char *) &sp->ptr0008 + 8;
			x0 = x22;
			_ZNKSt6__ndk18ios_base6getlocEv();
			x1.u0 = 0x00070000;
			x1 = *((word32) x1 + 0x0D90);
			x0 = (struct Eq_17659 *) ((char *) &sp->ptr0008 + 8);
			_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
			x8.u1 = x0->b0000;
			x8.u2 = x8.u2->t0038.u2;
			w1 = 0x00 | 0x20;
			x8();
			ui32 w24 = w0;
			x0 = (struct Eq_17659 *) ((char *) &sp->ptr0008 + 8);
			_ZNSt6__ndk16localeD1Ev();
			w3 = w24 & 0xFF;
			x22->dw0090 = w3;
		}
		x9.u1 = x21->b0000;
		ui32 w8 = 0x4A;
		w8 = w26 & w8;
		NZCV.u0 = cond(w8 - 0x08);
		w10 = 0x00 | 0x40;
		bool v42 = Test(EQ,Z);
		NZCV.u1 = 0x40000000;
		if (!v42)
			NZCV.u0 = cond(w8 - w10);
		x8.u2 = x9.u2->t0020.u2;
		w9 = w20;
		int64 x10 = (int64) w20;
		word64 x4 = Test(EQ,Z) ? x9 : x10;
		x0 = x21;
		x1 = x23;
		struct Eq_17659 * x2 = x22;
		x8();
		if (x0 == null)
		{
			x8.u1 = x19->b0000;
			w9 = 0x05;
			x8.u2 = x8.u2->tFFFFFFE8.u2;
			x0 = x19 + x8;
			w8 = x0->dw0020;
			w1 = w8 | w9;
			_ZNSt6__ndk18ios_base5clearEj();
		}
	}
	x0 = (struct Eq_17659 *) &sp->b0000;
	fn000000000001BCE0();
	x8.u2 = x25->t0028.u2;
	x9.u2 = sp->t0018.u2;
	word64 x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		x0 = x19;
		struct Eq_17809 * v29 = (struct Eq_17809 *) ((char *) &sp->t0018 + 72);
		x29 = v29->ptr0000;
		x30 = v29->qw0008;
		struct Eq_17818 * v30 = (struct Eq_17818 *) ((char *) &sp->t0018 + 56);
		x20 = v30->qw0000;
		x19 = v30->ptr0008;
		struct Eq_17827 * v31 = (struct Eq_17827 *) ((char *) &sp->t0018 + 40);
		x22 = v31->ptr0000;
		x21 = v31->ptr0008;
		struct Eq_17836 * v32 = (struct Eq_17836 *) ((char *) &sp->t0018 + 24);
		x24 = v32->qw0000;
		x23.u1 = v32->t0008.u1;
		struct Eq_17845 * v33 = (struct Eq_17845 *) ((char *) &sp->t0018 + 8);
		x26 = v33->qw0000;
		x25 = v33->ptr0008;
		sp = (struct Eq_17630 *) ((char *) &sp->t0018 + 88);
	}
}

// 0000000000025474: void ()
void ()
{
	word32 w0;
	Eq_17928 fp;
	Eq_17928 sp = fp;
	sp.u0 = (word32) sp - 96;
	Eq_14 x28;
	*sp.u1 = (word64) x28;
	Eq_14 x27;
	sp.u2->t0008.u1 = (size_t) x27;
	struct Eq_17941 * v8 = (struct Eq_17941 *) &sp.u2->t0010.u0;
	struct Eq_17943 * x26;
	v8->ptr0000 = x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_17952 * v11 = (struct Eq_17952 *) ((word32) sp + 32);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_17963 * v14 = (struct Eq_17963 *) ((word32) sp + 48);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	word64 x21;
	v14->qw0008 = x21;
	struct Eq_17974 * v17 = (struct Eq_17974 *) ((word32) sp + 64);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_17985 * v20 = (struct Eq_17985 *) ((word32) sp + 80);
	struct Eq_17987 * x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (struct Eq_17987 *) ((word32) sp + 80);
	sp -= 0x0200;
	Eq_1720 sysreg3_3_13_0_2;
	x26 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x26->t0028.u1;
	x29->tFFFFFFA0.u1 = (size_t) x8;
	Eq_14 x0;
	*sp.u1 = (word64) x0;
	x0.u1 = (word32) x0 + 48;
	Eq_14 v24 = x19;
	v24.u1->u1 = 0x00;
	((word32) v24 + 8)->u0 = 0x00;
	((word32) x19 + 16)->u0 = 0x00;
	x8.u1 = &sp.u2->t0090.u0;
	ui32 w1 = 0x00 | 0x02;
	fn000000000001AF40();
	x0.u1 = sp.u2->t0090.u1;
	sp.u2->t0078.u1 = (size_t) 0x00;
	Eq_14 x1;
	x1.u1 = &sp.u2->t0078.u0;
	rs2_get_device_count();
	word32 w21 = w0;
	x0.u1 = sp.u2->t0078.u1;
	fn000000000001ADF0();
	Eq_14 x9;
	Eq_18078 NZCV;
	Eq_18131 x31;
	bool Z;
	if (w21 != 0x00)
	{
		x9.u0 = 0x00070000;
		x9 = *((word32) x9 + 0x0DC0);
		x8.u1 = &sp.u2->t00A8.u0;
		w1 = 0x00;
		x28.u0 = 0x00;
		x27 = x8 | 0x01;
		x20.u1 = (word32) x9 + 16;
		do
		{
			x8.u1 = &sp.u2->t0078.u0;
			x0.u1 = &sp.u2->t0090.u0;
			fn000000000001BD80();
			x0.u1 = sp.u2->t0080.u1;
			sp.u2->t00A0.u1 = (size_t) 0x00;
			w1 = 0x00 | 0x01;
			Eq_14 x2;
			x2.u1 = &sp.u2->t00A0.u0;
			rs2_get_device_info();
			x22 = x0;
			x0.u1 = sp.u2->t00A0.u1;
			fn000000000001ADF0();
			x0 = x22;
			struct Eq_18308 * v31 = (struct Eq_18308 *) &sp.u2->t00A8.u0;
			v31->ptr0000 = 0x00;
			v31->qw0008 = 0x00;
			sp.u2->t00B8.u1 = (size_t) 0x00;
			x0 = strlen(x0);
			sp.u0 = x0 + 0x10;
			NZCV.u0 = cond(sp);
			bool C;
			if (Test(UGE,C))
			{
				x0.u1 = &sp.u2->t00A8.u0;
				fn000000000001B2D0();
				goto l00000000000256A0;
			}
			x23 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			ui32 w8;
			if (Test(ULT,C))
			{
				ui32 w23;
				w8 = w23 << 1;
				x24 = x27;
				sp.u2->t00A8.u0 = (byte) (byte) w8;
				if (x23 == 0x00)
					goto l0000000000025590;
			}
			else
			{
				x8.u1 = (word32) x23 + 16;
				x25 = x8 & ~0x0F;
				x0 = x25;
				_Znwm();
				x8 = x25 | 0x01;
				x24 = x0;
				struct Eq_18091 * v48 = (struct Eq_18091 *) ((word32) sp + 0x00B0);
				v48->t0000.u1 = (size_t) x23;
				v48->t0008.u1 = (size_t) x0;
				sp.u2->t00A8.u1 = (size_t) x8;
			}
			x0 = x24;
			x1 = x22;
			x2 = x23;
			x0 = memcpy(x0, x1, x2);
l0000000000025590:
			struct Eq_18120 * v36 = (struct Eq_18120 *) ((word32) x19 + 8);
			x8.u1 = v36->t0000.u1;
			x9.u1 = v36->t0008.u1;
			*(x24 + x23) = (word64) 0x00;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			Eq_14 q0;
			if (Test(ULT,C))
			{
				x9.u1 = sp.u2->t00B8.u1;
				q0.u2 = sp.u2->t00A8.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
				*((word32) x8 + 16) = x9;
				*x8.u1 = q0;
				x8 = *((word32) x19 + 8);
				struct Eq_18177 * v39 = (struct Eq_18177 *) ((word32) sp + 0x00B0);
				v39->qw0000 = 0x00;
				v39->qw0008 = 0x00;
				sp.u2->t00A8.u1 = (size_t) 0x00;
				x8.u1 = x8 + 0x18;
				*((word32) x19 + 8) = x8;
			}
			else
			{
				x1.u1 = &sp.u2->t00A8.u0;
				x0 = x19;
				fn000000000001B390();
				Eq_14 v47;
				v47.u0 = sp.u2->t00A8.u0;
				w8 = (word32) v47;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = sp.u2->t00B8.u1;
					((real64) q0, x0, x1);
				}
			}
			x22.u1 = sp.u2->t0088.u1;
			sp.u2->t0078.u1 = (size_t) x20;
			if (x22 != 0x00)
				x8.u1 = (word32) x22 + 8;
			x1.u1 = (word32) x28 + 1;
			NZCV.u0 = cond(w21 - w1);
			x28 = __bfm<word64>(x28, x1, 0, 31);
		} while (Test(NE,Z));
	}
	x19.u1 = sp.u2->t0098.u1;
	if (x19 == 0x00)
	{
		x8.u1 = x26->t0028.u1;
		x9.u1 = x29->tFFFFFFA0.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
l00000000000256A0:
			__stack_chk_fail();
		}
		else
		{
			sp.u0 = (word32) sp + 0x0200;
			struct Eq_18210 * v41 = (struct Eq_18210 *) ((word32) sp + 80);
			x29 = v41->ptr0000;
			x30 = v41->qw0008;
			struct Eq_18219 * v42 = (struct Eq_18219 *) ((word32) sp + 64);
			x20.u1 = v42->t0000.u1;
			x19.u1 = v42->t0008.u1;
			struct Eq_18228 * v43 = (struct Eq_18228 *) ((word32) sp + 48);
			x22.u1 = v43->t0000.u1;
			x21 = v43->qw0008;
			struct Eq_18237 * v44 = (struct Eq_18237 *) ((word32) sp + 32);
			x24.u1 = v44->t0000.u1;
			x23.u1 = v44->t0008.u1;
			struct Eq_18246 * v45 = (struct Eq_18246 *) &sp.u2->t0010.u0;
			x26 = v45->ptr0000;
			x25.u1 = v45->t0008.u1;
			Eq_17928 v46 = sp;
			x28.u1 = *v46.u1;
			x27.u1 = v46.u2->t0008.u1;
			sp.u0 = (word32) sp + 96;
		}
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 0000000000025D64: define _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
define _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
{
	Eq_18330 fp;
	Eq_18330 sp = fp;
	sp.u0 = (word32) sp - 96;
	struct Eq_18334 * x28;
	*sp.u0 = x28;
	Eq_14 x27;
	((word32) sp + 8)->u0 = x27;
	struct Eq_18343 * v8 = (struct Eq_18343 *) ((word32) sp + 16);
	Eq_14 x26;
	v8->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_18354 * v11 = (struct Eq_18354 *) ((word32) sp + 32);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_18365 * v14 = (struct Eq_18365 *) ((word32) sp + 48);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_18376 * v17 = (struct Eq_18376 *) ((word32) sp + 64);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_18387 * v20 = (struct Eq_18387 *) ((word32) sp + 80);
	struct Eq_18389 * x29;
	v20->ptr0000 = x29;
	Eq_14 x30;
	v20->t0008.u1 = (size_t) x30;
	x29 = (struct Eq_18389 *) ((word32) sp + 80);
	sp -= 0x02F0;
	Eq_1720 sysreg3_3_13_0_2;
	x28 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x28->t0028.u1;
	Eq_14 x0;
	x19.u1 = (word32) x0 + 1344;
	Eq_14 x1;
	x23 = x1;
	x21 = x0;
	x0 = x19;
	Eq_14 x2;
	x1 = x2;
	Eq_14 x3;
	x24 = x3;
	x22 = x2;
	x29->tFFFFFFA0.u1 = (size_t) x8;
	fn000000000001AD90();
	Eq_14 x9;
	ui32 w9;
	Eq_14 x11;
	Eq_18452 w10;
	ui32 w31;
	Eq_18459 NZ;
	bool Z;
	Eq_18488 NZCV;
	bool C;
	Eq_18519 w8;
	ui32 w20;
	ui32 w0;
	ui32 w4;
	word64 x5;
	ui32 w2;
	Eq_14 x10;
	bool V;
	Eq_14 q0;
	Eq_18622 x31;
	if (x0 != 0x00)
	{
		x8.u0 = 0x00071000;
		x8.u1 = (word32) x8 + 408;
		x9.u1 = (word32) sp + 0x00A0;
		x24.u1 = (word32) x9 + 8;
		byte v29 = (byte) *((word32) x8 + 8);
		w9 = (word32) v29;
		x11 = *((word32) x8 + 24);
		w10 = *x8.u1;
		x8.u1 = (word32) x8 + 9;
		w31 = w9 & 0x01;
		NZ.u0 = cond(w31);
		x23.u1 = Test(EQ,Z) ? x8 : x11;
		x0 = x23;
		((word32) sp + 0x00A0)->u0 = w10;
		struct Eq_18468 * v37 = (struct Eq_18468 *) ((word32) sp + 0x00B0);
		v37->qw0000 = 0x00;
		v37->qw0008 = 0x00;
		((word32) sp + 0x00A8)->u0 = 0x00;
		x0 = strlen(x0);
		sp.u0 = (word32) x0 + 16;
		NZCV.u0 = cond(sp);
		if (Test(ULT,C))
		{
			x20 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			if (Test(ULT,C))
			{
				w8 = w20 << 1;
				x24.u1 = (word32) x24 + 1;
				((word32) sp + 0x00A8)->u0 = (byte) w8;
				if (x20 == 0x00)
					goto l0000000000025E7C;
			}
			else
			{
				x8.u1 = (word32) x20 + 16;
				x25 = x8 & ~0x0F;
				x0 = x25;
				_Znwm();
				x8 = x25 | 0x01;
				x24 = x0;
				Eq_18506 v114 = (Eq_18506) ((word32) sp + 0x00B0);
				v114->b0000 = (char) x20;
				v114->t0008.u1 = (size_t) x0;
				((word32) sp + 0x00A8)->u0 = x8;
			}
			x0 = x24;
			x1 = x23;
			x2 = x20;
			x0 = memcpy(x0, x1, x2);
l0000000000025E7C:
			*(x24 + x20) = (word64) 0x00;
			x0.u1 = (word32) sp + 0x00A0;
			((LEVELS) x0);
			if ((w0 & 0x01) == 0x00)
			{
				w20 = 0x00;
				Eq_14 v113;
				v113.u1 = *((word32) sp + 0x00A8);
				w8 = (word32) v113;
				if ((w8 & 0x01) == 0x00)
					goto l0000000000026004;
				goto l0000000000025EE0;
			}
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			Eq_18652 v46 = (Eq_18652) (sp + (struct <anonymous> *) 144);
			v46->b0000 = (char) 0x00;
			v46->t0008.u1 = (size_t) 0x00;
			((word32) sp + 0x0088)->u0 = 0x00;
			x20 = *x8.u1;
			x0 = x20;
			x0 = strlen(x0);
			sp.u0 = x0 + (struct <anonymous> *) 0x10;
			NZCV.u0 = cond(sp);
			if (Test(ULT,C))
			{
				x23 = x0;
				NZCV.u0 = cond(x0 - (struct <anonymous> *) 0x17);
				if (Test(ULT,C))
				{
					x9.u1 = sp + (struct <anonymous> *) 0x88;
					ui32 w23;
					w8 = w23 << 1;
					x24 = x9 | 0x01;
					((word32) sp + 0x0088)->u0 = (byte) w8;
					if (x23 == 0x00)
						goto l0000000000025FE4;
				}
				else
				{
					x8.u1 = x23 + (struct <anonymous> *) 0x10;
					x25 = x8 & ~0x0F;
					x0 = x25;
					_Znwm();
					x8 = x25 | 0x01;
					x24 = x0;
					Eq_18693 v112 = (Eq_18693) (sp + (struct <anonymous> *) 144);
					v112->b0000 = (char) x23;
					v112->t0008.u1 = (size_t) x0;
					((word32) sp + 0x0088)->u0 = x8;
				}
				x0 = x24;
				x1 = x20;
				x2 = x23;
				x0 = memcpy(x0, x1, x2);
l0000000000025FE4:
				*(x24 + x23) = (word64) 0x00;
				x0.u1 = sp + (struct <anonymous> *) 0x88;
				_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
				Eq_14 v52;
				v52.u1 = *((word32) sp + 0x0088);
				w8 = (word32) v52;
				w20 = w0;
				if ((w8 & 0x01) != 0x00)
				{
					byte v53 = (byte) *((word32) sp + 0x00A8);
					w8 = (word32) v53;
					if ((w8 & 0x01) != 0x00)
					{
l0000000000026004:
						if ((w20 & 0x01) != 0x00)
						{
l0000000000026008:
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 3432);
							x2.u0 = 0x00071000;
							x3.u0 = 0x00052000;
							x2.u1 = x2 + 0x0198;
							x1 = *x8.u1;
							x3.u1 = (word32) x3 + 0x05EE;
							x0.u1 = sp + (struct <anonymous> *) 400;
							w4 = 0x00 | 0x06;
							x5 = 0x00;
							x20.u1 = sp + (struct <anonymous> *) 400;
							_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
							x0.u1 = x20 + (struct <anonymous> *) 0x08;
							x1.u0 = 0x00050000;
							x1.u1 = x1 + 0x0839;
							w2 = 0x1A;
							fn000000000001BB30();
							byte v57 = (byte) *x22.u1;
							w8 = (word32) v57;
							struct Eq_18898 * v58 = (struct Eq_18898 *) ((word32) x22 + 8);
							x10.u1 = v58->t0000.u1;
							x9.u1 = v58->t0008.u1;
							w31 = w8 & 0x01;
							NZ.u0 = cond(w31);
							C = false;
							V = false;
							x11 = x8 >> 1;
							x1.u1 = Test(NE,Z) ? x9 : (word32) x22 + 1;
							x2.u1 = Test(EQ,Z) ? x11 : x10;
							fn000000000001BB30();
							x0.u1 = sp + (struct <anonymous> *) 400;
							LogCapture::~LogCapture();
							sp.u0 = sp + (struct <anonymous> *) 0x08;
							x8 = *((word32) x21 + 0x0558);
							if (x8 == 0x00)
							{
l0000000000026078:
								x8 = *((word32) x21 + 0x0580);
								if (x8 == 0x00)
									goto l0000000000026080;
								goto l0000000000025F58;
							}
l0000000000025EF4:
							x20 = *((word32) x21 + 0x0550);
							if (x20 != 0x00)
							{
								do
								{
									x22 = *x20.u1;
									x0.u1 = x20 + 0x30;
									fn000000000001B2B0();
									byte v110 = (byte) *((word32) x20 + 16);
									w8 = (word32) v110;
									if ((w8 & 0x01) != 0x00)
									{
										x0 = *((word32) x20 + 32);
										((real64) q0, x0, x1);
									}
									x0 = x20;
									((real64) q0, x0, x1);
									x20 = x22;
								} while (x22 != 0x00);
							}
							x8 = *((word32) x21 + 0x0548);
							((word32) x21 + 0x0550)->u0 = 0x00;
							if (x8 != 0x00)
							{
								x9.u0 = 0x00;
								do
								{
									x10 = *x19.u1;
									*(x10 + x9) = 0x00;
									x9.u1 = x9 + 0x01;
									x31 = x8 - x9;
									NZCV.u0 = cond(x31);
								} while (Test(NE,Z));
							}
							((word32) x21 + 0x0558)->u0 = 0x00;
							x8 = *((word32) x21 + 0x0580);
							if (x8 != 0x00)
							{
l0000000000025F58:
								x19 = *((word32) x21 + 1400);
								if (x19 != 0x00)
								{
									do
									{
										byte v109 = (byte) *((word32) x19 + 24);
										w8 = (word32) v109;
										x20 = *x19.u1;
										if ((w8 & 0x01) != 0x00)
										{
											x0 = *((word32) x19 + 40);
											((real64) q0, x0, x1);
										}
										x0 = x19;
										((real64) q0, x0, x1);
										x19 = x20;
									} while (x20 != 0x00);
								}
								x8 = *((word32) x21 + 0x0570);
								((word32) x21 + 1400)->u0 = 0x00;
								if (x8 != 0x00)
								{
									x9.u0 = 0x00;
									do
									{
										x10 = *((word32) x21 + 0x0568);
										*(x10 + x9) = 0x00;
										x9.u1 = x9 + 0x01;
										x31 = x8 - x9;
										NZCV.u0 = cond(x31);
									} while (Test(NE,Z));
								}
								goto l0000000000025FA8;
							}
							goto l0000000000026080;
						}
l0000000000025EEC:
						x8 = *((word32) x21 + 0x0558);
						if (x8 == 0x00)
							goto l0000000000026078;
						goto l0000000000025EF4;
					}
				}
				else
				{
					x0.u1 = *((word32) sp + 0x0098);
					((real64) q0, x0, x1);
					byte v111 = (byte) *((word32) sp + 0x00A8);
					w8 = (word32) v111;
					if ((w8 & 0x01) == 0x00)
						goto l0000000000026004;
				}
l0000000000025EE0:
				x0.u1 = *((word32) sp + 0x00B8);
				((real64) q0, x0, x1);
				if ((w20 & 0x01) == 0x00)
					goto l0000000000026008;
				goto l0000000000025EEC;
			}
l0000000000026798:
			x0.u1 = sp + (struct <anonymous> *) 0x88;
			fn000000000001B2D0();
			goto l00000000000267A0;
		}
		x0 = x24;
		fn000000000001B2D0();
l0000000000026790:
		x0 = x26;
		fn000000000001B2D0();
		goto l0000000000026798;
	}
	x8 = *((word32) x21 + 0x0570);
	int32 v41 = (int32) *x23.u1;
	x1.u1 = (int64) v41;
	x20.u1 = (word32) x21 + 0x0568;
	Eq_18629 x12;
	word32 w1;
	if (x8 != 0x00)
	{
		x9 = x8 - 0x01;
		x10 = x9 & x8;
		NZ.u0 = cond(x10);
		C = false;
		V = false;
		if (Test(NE,Z))
		{
			x31 = x8 - x1;
			NZCV.u0 = cond(x31);
			x11 = x1;
			word32 ZC;
			if (Test(ULE,ZC))
			{
				x11 = x1 /u x8;
				x11 = x1 - x11 *64 x8;
			}
		}
		else
			x11 = x9 & x1;
		x12.u1 = *x20.u1;
		x12.u1 = *(x12 + x11);
		if (x12 != 0x00)
		{
			do
			{
				x12.u1 = x12.u1->t0000.u1;
				if (x12 == 0x00)
					goto l00000000000260FC;
				uint64 x13 = x12.u1->qw0008;
				x31 = x13 - x1;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					if (x10 == 0x00)
					{
						x13 &= x9;
						x31 = x13 - x11;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l00000000000260FC;
						continue;
					}
					else
					{
						x31 = x13 - x8;
						NZCV.u0 = cond(x31);
						if (Test(UGE,C))
						{
							uint64 x14 = x13 /u x8;
							x13 -= x14 *64 x8;
						}
						x31 = x13 - x11;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
							goto l00000000000260FC;
						continue;
					}
				}
				word32 w13 = x12.u1->dw0010;
				NZCV.u0 = cond(w13 - w1);
			} while (Test(NE,Z));
			x8.u0 = 0x00071000;
			x8.u1 = x8 + 0x0198;
			x9.u1 = sp + (struct <anonymous> *) 0x68;
			x25.u1 = x9 + 0x08;
			byte v59 = (byte) *((word32) x8 + 8);
			w9 = (word32) v59;
			x11 = *((word32) x8 + 24);
			w10 = *x8.u1;
			x8.u1 = x8 + 0x09;
			w31 = w9 & 0x01;
			NZ.u0 = cond(w31);
			x24.u1 = Test(EQ,Z) ? x8 : x11;
			x0 = x24;
			((word32) sp + 0x0068)->u0 = w10;
			Eq_18789 v60 = (Eq_18789) (sp + (struct <anonymous> *) 0x0078);
			v60->b0000 = (char) 0x00;
			v60->t0008.u1 = (size_t) 0x00;
			((word32) sp + 112)->u0 = 0x00;
			x0 = strlen(x0);
			sp.u0 = x0 + (struct <anonymous> *) 0x10;
			NZCV.u0 = cond(sp);
			if (Test(UGE,C))
			{
l00000000000267B4:
				x0 = x25;
				fn000000000001B2D0();
				goto l00000000000267BC;
			}
			x22 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			ui32 w22;
			if (Test(ULT,C))
			{
				w8 = w22 << 1;
				x25.u1 = x25 + 0x01;
				((word32) sp + 112)->u0 = (byte) w8;
				if (x22 == 0x00)
					goto l0000000000026594;
			}
			else
			{
				x8.u1 = x22 + 0x10;
				x26 = x8 & ~0x0F;
				x0 = x26;
				_Znwm();
				x8 = x26 | 0x01;
				x25 = x0;
				Eq_18971 v86 = (Eq_18971) (sp + (struct <anonymous> *) 0x0078);
				v86->b0000 = (char) x22;
				v86->t0008.u1 = (size_t) x0;
				((word32) sp + 112)->u0 = x8;
			}
			x0 = x25;
			x1 = x24;
			x2 = x22;
			x0 = memcpy(x0, x1, x2);
l0000000000026594:
			*(x25 + x22) = (word64) 0x00;
			x0.u1 = sp + (struct <anonymous> *) 0x68;
			((LEVELS) x0);
			if ((w0 & 0x01) == 0x00)
			{
				w22 = 0x00;
				Eq_14 v82;
				v82.u1 = *((word32) sp + 112);
				w8 = (word32) v82;
				if ((w8 & 0x01) == 0x00)
					goto l0000000000026658;
				goto l00000000000265F8;
			}
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			Eq_19100 v69 = (Eq_19100) (sp + (struct <anonymous> *) 88);
			v69->b0000 = (char) 0x00;
			v69->t0008.u1 = (size_t) 0x00;
			((word32) sp + 80)->u0 = 0x00;
			x22 = *x8.u1;
			x0 = x22;
			x0 = strlen(x0);
			sp.u0 = x0 + 0x10;
			NZCV.u0 = cond(sp);
			if (Test(UGE,C))
			{
l00000000000267BC:
				x0.u1 = sp + 0x50;
				fn000000000001B2D0();
				Eq_14 v77;
				v77.u1 = *((word32) sp + 80);
				w8 = (word32) v77;
				x19 = x0;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = *((word32) sp + 96);
					((real64) q0, x0, x1);
					byte v78 = (byte) *((word32) sp + 112);
					w8 = (word32) v78;
					if ((w8 & 0x01) != 0x00)
						goto l00000000000268D0;
				}
				else
				{
					byte v80 = (byte) *((word32) sp + 112);
					w8 = (word32) v80;
					if ((w8 & 0x01) == 0x00)
						goto l00000000000268D0;
				}
				x0.u1 = *((word32) sp + 0x0080);
				((real64) q0, x0, x1);
l00000000000268D0:
				x0 = x19;
				_Unwind_Resume();
				byte v79 = *sp.u2;
				w8 = (word32) v79;
				x19 = x0;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = *((word32) sp + 16);
					((real64) q0, x0, x1);
				}
				x0.u1 = sp + 400;
				LogCapture::~LogCapture();
				sp.u0 = sp + 0x08;
				x0.u1 = sp + 0xC0;
				fn000000000001B2B0();
				x0 = x19;
				_Unwind_Resume();
				_ZN4rgbd13RGBDRealSense13updateRgbdSetERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE();
				return;
			}
			x24 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			if (Test(ULT,C))
			{
				x9.u1 = sp + 0x50;
				ui32 w24;
				w8 = w24 << 1;
				x25 = x9 | 0x01;
				((word32) sp + 80)->u0 = (byte) w8;
				if (x24 == 0x00)
					goto l0000000000026638;
			}
			else
			{
				x8.u1 = x24 + 0x10;
				x26 = x8 & ~0x0F;
				x0 = x26;
				_Znwm();
				x8 = x26 | 0x01;
				x25 = x0;
				Eq_19150 v73;
				v73.u0 = sp + 88;
				*v73.u0 = (word64) x24;
				v73.u2->t0008.u1 = (size_t) x0;
				((word32) sp + 80)->u0 = x8;
			}
			x0 = x25;
			x1 = x22;
			x2 = x24;
			x0 = memcpy(x0, x1, x2);
l0000000000026638:
			*(x25 + x24) = (word64) 0x00;
			x0.u1 = sp + 0x50;
			_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
			Eq_14 v71;
			v71.u1 = *((word32) sp + 80);
			w8 = (word32) v71;
			w22 = w0;
			if ((w8 & 0x01) != 0x00)
			{
				byte v72 = (byte) *((word32) sp + 112);
				w8 = (word32) v72;
				if ((w8 & 0x01) != 0x00)
				{
l0000000000026658:
					if ((w22 & 0x01) == 0x00)
						goto l00000000000266B0;
l000000000002665C:
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					x2.u0 = 0x00071000;
					x3.u0 = 0x00052000;
					x2.u1 = x2 + 0x0198;
					x1 = *x8.u1;
					x3.u1 = (word32) x3 + 0x05EE;
					x0.u1 = sp + 400;
					w4 = 0x00 | 0x06;
					x5 = 0x00;
					x22.u1 = sp + 400;
					_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
					x0.u1 = x22 + 0x08;
					x1.u0 = 0x00050000;
					x1.u1 = x1 + 2132;
					w2 = 0x19;
					fn000000000001BB30();
					w1 = (word32) *x23.u1;
					fn000000000001B5B0();
					x0.u1 = sp + 400;
					LogCapture::~LogCapture();
					sp.u0 = sp + 0x08;
l00000000000266B0:
					x8 = *((word32) x21 + 0x0558);
					if (x8 != 0x00)
					{
						x22 = *((word32) x21 + 0x0550);
						if (x22 != 0x00)
						{
							do
							{
								x23 = *x22.u1;
								x0.u1 = x22 + 0x30;
								fn000000000001B2B0();
								byte v74 = (byte) *((word32) x22 + 16);
								w8 = (word32) v74;
								if ((w8 & 0x01) != 0x00)
								{
									x0 = *((word32) x22 + 32);
									((real64) q0, x0, x1);
								}
								x0 = x22;
								((real64) q0, x0, x1);
								x22 = x23;
							} while (x23 != 0x00);
						}
						x8 = *((word32) x21 + 0x0548);
						((word32) x21 + 0x0550)->u0 = 0x00;
						if (x8 != 0x00)
						{
							x9.u0 = 0x00;
							do
							{
								x10 = *x19.u1;
								*(x10 + x9) = 0x00;
								x9.u1 = x9 + 0x01;
								x31 = x8 - x9;
								NZCV.u0 = cond(x31);
							} while (Test(NE,Z));
						}
						((word32) x21 + 0x0558)->u0 = 0x00;
					}
					x8 = *((word32) x21 + 0x0580);
					if (x8 != 0x00)
					{
						x19 = *((word32) x21 + 1400);
						if (x19 != 0x00)
						{
							do
							{
								Eq_14 v81 = *((word32) x19 + 24);
								w8 = (word32) v81;
								x22 = *x19.u1;
								if ((w8 & 0x01) != 0x00)
								{
									x0 = *((word32) x19 + 40);
									((real64) q0, x0, x1);
								}
								x0 = x19;
								((real64) q0, x0, x1);
								x19 = x22;
							} while (x22 != 0x00);
						}
						x8 = *((word32) x21 + 0x0570);
						((word32) x21 + 1400)->u0 = 0x00;
						if (x8 != 0x00)
						{
							x9.u0 = 0x00;
							do
							{
								x10 = *x20.u1;
								*(x10 + x9) = 0x00;
								x9.u1 = x9 + 0x01;
								x31 = x8 - x9;
								NZCV.u0 = cond(x31);
							} while (Test(NE,Z));
						}
l0000000000025FA8:
						w0 = 0x00;
						((word32) x21 + 0x0580)->u0 = 0x00;
						goto l00000000000264D0;
					}
l0000000000026080:
					w0 = 0x00;
					goto l00000000000264D0;
				}
			}
			else
			{
				x0.u1 = *((word32) sp + 96);
				((real64) q0, x0, x1);
				byte v76 = (byte) *((word32) sp + 112);
				w8 = (word32) v76;
				if ((w8 & 0x01) == 0x00)
					goto l0000000000026658;
			}
l00000000000265F8:
			x0.u1 = *((word32) sp + 0x0080);
			((real64) q0, x0, x1);
			if ((w22 & 0x01) == 0x00)
				goto l00000000000266B0;
			goto l000000000002665C;
		}
	}
l00000000000260FC:
	x0.u1 = (word32) sp + 0x00C0;
	_ZN4rgbd9RGBDParamC1Ea();
	x0.u1 = (word32) sp + 0x00C0;
	x1 = x22;
	_ZN4rgbd9RGBDParam12setSerialNumERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE();
	x0.u1 = (word32) sp + 0x00C0;
	x1 = x24;
	_ZN4rgbd9RGBDParam7setTypeERKa();
	x8.u0 = 0x00071000;
	x8.u1 = x8 + 0x0118;
	x9.u1 = (word32) sp + 48;
	x26.u1 = (word32) x9 + 8;
	byte v83 = (byte) *((word32) x8 + 8);
	w9 = (word32) v83;
	x11 = *((word32) x8 + 24);
	w10 = *x8.u1;
	x8.u1 = x8 + 0x09;
	w31 = w9 & 0x01;
	NZ.u0 = cond(w31);
	x25.u1 = Test(EQ,Z) ? x8 : x11;
	x0 = x25;
	((word32) sp + 48)->u0 = w10;
	Eq_18590 v84 = (Eq_18590) ((word32) sp + 64);
	v84->b0000 = (char) 0x00;
	v84->t0008.u1 = (size_t) 0x00;
	((word32) sp + 56)->u0 = 0x00;
	x0 = strlen(x0);
	sp.u0 = x0 + (struct <anonymous> *) 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
		goto l0000000000026790;
	x21 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w21;
	if (Test(ULT,C))
	{
		w8 = w21 << 1;
		x26.u1 = x26 + 0x01;
		((word32) sp + 56)->u0 = (byte) w8;
		if (x21 == 0x00)
			goto l00000000000261B0;
	}
	else
	{
		x8.u1 = x21 + 0x10;
		x27 = x8 & ~0x0F;
		x0 = x27;
		_Znwm();
		x8 = x27 | 0x01;
		x26 = x0;
		Eq_19486 v103;
		v103.u0 = sp + 64;
		*v103.u0 = (word64) x21;
		v103.u2->t0008.u1 = (size_t) x0;
		((word32) sp + 56)->u0 = x8;
	}
	x0 = x26;
	x1 = x25;
	x2 = x21;
	x0 = memcpy(x0, x1, x2);
l00000000000261B0:
	*(x26 + x21) = (word64) 0x00;
	x0.u1 = sp + 0x30;
	((LEVELS) x0);
	if ((w0 & 0x01) == 0x00)
	{
		w21 = 0x00;
		Eq_14 v101;
		v101.u1 = *((word32) sp + 56);
		w8 = (word32) v101;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000026274;
		goto l0000000000026214;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_19559 v87;
	v87.u0 = sp + 32;
	*v87.u0 = 0x00;
	v87.u2->t0008.u1 = (size_t) 0x00;
	((word32) sp + 24)->u0 = 0x00;
	x21 = *x8.u1;
	x0 = x21;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
l00000000000267A0:
		x0.u1 = sp + 0x18;
		fn000000000001B2D0();
		goto l00000000000267A8;
	}
	x25 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x18;
		ui32 w25;
		w8 = w25 << 1;
		x26 = x9 | 0x01;
		((word32) sp + 24)->u0 = (byte) w8;
		if (x25 == 0x00)
			goto l0000000000026254;
	}
	else
	{
		x8.u1 = x25 + 0x10;
		x27 = x8 & ~0x0F;
		x0 = x27;
		_Znwm();
		x8 = x27 | 0x01;
		x26 = x0;
		Eq_19600 v97;
		v97.u0 = sp + 32;
		*v97.u0 = (word64) x25;
		v97.u2->t0008.u1 = (size_t) x0;
		((word32) sp + 24)->u0 = x8;
	}
	x0 = x26;
	x1 = x21;
	x2 = x25;
	x0 = memcpy(x0, x1, x2);
l0000000000026254:
	*(x26 + x25) = (word64) 0x00;
	x0.u1 = sp + 0x18;
	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
	Eq_14 v89;
	v89.u1 = *((word32) sp + 24);
	w8 = (word32) v89;
	w21 = w0;
	if ((w8 & 0x01) != 0x00)
	{
		byte v90 = (byte) *((word32) sp + 56);
		w8 = (word32) v90;
		if ((w8 & 0x01) != 0x00)
		{
l0000000000026274:
			if ((w21 & 0x01) == 0x00)
				goto l0000000000026338;
l0000000000026278:
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			x1 = *x8.u1;
			x2.u0 = 0x00071000;
			x3.u0 = 0x00052000;
			x2.u1 = x2 + 0x0118;
			x3.u1 = (word32) x3 + 0x05EE;
			x0.u1 = sp + 400;
			w4 = 0x00 | 0x06;
			x5 = 0x00;
			_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
			x21.u1 = sp + 0x00;
			();
			sp.u0 = sp + 0x08;
			byte v91 = *sp.u2;
			w9 = (word32) v91;
			Eq_19757 v92;
			v92.u0 = sp + 8;
			x11.u1 = *v92.u0;
			x10.u1 = v92.u2->t0008.u1;
			x8.u1 = sp + 400;
			x12 = x21 | 0x01;
			w31 = w9 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x0.u1 = x8 + 0x08;
			x8 = x9 >> 1;
			x1.u1 = Test(EQ,Z) ? x12 : x10;
			x2.u1 = Test(EQ,Z) ? x8 : x11;
			fn000000000001BB30();
			x1.u0 = 0x00052000;
			x1.u1 = x1 + 1513;
			w2 = 0x00 | 0x02;
			fn000000000001BB30();
			byte v93 = (byte) *x22.u1;
			w8 = (word32) v93;
			Eq_19795 v94;
			v94.u0 = x22 + 8;
			x10.u1 = *v94.u0;
			x9.u1 = v94.u2->t0008.u1;
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x11 = x8 >> 1;
			x1.u1 = Test(NE,Z) ? x9 : x22 + 0x01;
			x2.u1 = Test(EQ,Z) ? x11 : x10;
			fn000000000001BB30();
			x1.u0 = 0x00053000;
			x1.u1 = x1 + 0x050D;
			w2 = 0x00 | 0x02;
			fn000000000001BB30();
			int8 v95 = (int8) *x24.u1;
			w1 = (word32) v95;
			fn000000000001B5B0();
			byte v96 = *sp.u2;
			w8 = (word32) v96;
			if ((w8 & 0x01) != 0x00)
			{
				x0.u1 = *((word32) sp + 16);
				((real64) q0, x0, x1);
			}
			x0.u1 = sp + 400;
			LogCapture::~LogCapture();
			sp.u0 = sp + 0x08;
l0000000000026338:
			w8 = *x23.u1;
			Eq_19696 v98;
			v98.u0 = sp + 416;
			*v98.u0 = 0x00;
			v98.u2->t0008.u1 = (size_t) 0x00;
			((word32) sp + 408)->u0 = 0x00;
			x9.u1 = sp + 400;
			((word32) sp + 400)->u0 = w8;
			byte v99 = (byte) *x22.u1;
			w8 = (word32) v99;
			x0.u1 = x9 + 0x08;
			if ((w8 & 0x01) != 0x00)
			{
				x8 = *((word32) x22 + 16);
				q0 = *x22.u1;
				*((word32) x0 + 16) = x8;
				*x0.u1 = q0;
				goto l00000000000263E0;
			}
			x21 = *((word32) x22 + 8);
			sp.u0 = x21 + 0x10;
			NZCV.u0 = cond(sp);
			if (Test(UGE,C))
			{
l00000000000267A8:
				fn000000000001B2D0();
				goto l00000000000267AC;
			}
			x23 = *((word32) x22 + 16);
			NZCV.u0 = cond(x21 - 0x17);
			if (Test(ULT,C))
			{
				w8 = w21 << 1;
				x24.u1 = x0 + 0x01;
				((word32) sp + 408)->u0 = (byte) w8;
				if (x21 == 0x00)
					goto l00000000000263DC;
			}
			else
			{
				x8.u1 = x21 + 0x10;
				x25 = x8 & ~0x0F;
				x0 = x25;
				_Znwm();
				x8 = x25 | 0x01;
				x24 = x0;
				Eq_19940 v106;
				v106.u0 = sp + 416;
				*v106.u0 = (word64) x21;
				v106.u2->t0008.u1 = (size_t) x0;
				((word32) sp + 408)->u0 = x8;
			}
			x0 = x24;
			x1 = x23;
			x2 = x21;
			x0 = memcpy(x0, x1, x2);
l00000000000263DC:
			*(x24 + x21) = (word64) 0x00;
l00000000000263E0:
			x1.u1 = sp + 400;
			x2.u1 = sp + 400;
			x0 = x20;
			fn000000000001B2F0();
			Eq_14 v102;
			v102.u1 = *((word32) sp + 408);
			w8 = (word32) v102;
			if ((w8 & 0x01) != 0x00)
			{
				x0.u1 = *((word32) sp + 424);
				((real64) q0, x0, x1);
			}
			Eq_19890 v104;
			v104.u0 = sp + 408;
			*v104.u0 = 0x00;
			v104.u2->t0008.u1 = (size_t) 0x00;
			((word32) sp + 400)->u0 = 0x00;
			byte v105 = (byte) *x22.u1;
			w8 = (word32) v105;
			if ((w8 & 0x01) != 0x00)
			{
				x8 = *((word32) x22 + 16);
				q0 = *x22.u1;
				((word32) sp + 416)->u0 = x8;
				((word32) sp + 400)->u0 = q0;
				goto l0000000000026488;
			}
			x20 = *((word32) x22 + 8);
			sp.u0 = x20 + (struct <anonymous> *) 0x10;
			NZCV.u0 = cond(sp);
			if (Test(UGE,C))
			{
l00000000000267AC:
				x0.u1 = sp + 400;
				fn000000000001B2D0();
				goto l00000000000267B4;
			}
			x21 = *((word32) x22 + 16);
			NZCV.u0 = cond(x20 - 0x17);
			if (Test(ULT,C))
			{
				x9.u1 = sp + 400;
				w8 = w20 << 1;
				x22 = x9 | 0x01;
				((word32) sp + 400)->u0 = (byte) w8;
				if (x20 == 0x00)
					goto l0000000000026484;
			}
			else
			{
				x8.u1 = x20 + 0x10;
				x23 = x8 & ~0x0F;
				x0 = x23;
				_Znwm();
				x8 = x23 | 0x01;
				x22 = x0;
				Eq_20048 v108;
				v108.u0 = sp + 408;
				*v108.u0 = (word64) x20;
				v108.u2->t0008.u1 = (size_t) x0;
				((word32) sp + 400)->u0 = x8;
			}
			x0 = x22;
			x1 = x21;
			x2 = x20;
			x0 = memcpy(x0, x1, x2);
l0000000000026484:
			*(x22 + x20) = (word64) 0x00;
l0000000000026488:
			x8.u1 = sp + 400;
			x20.u1 = x8 + 0x20;
			x1.u1 = sp + 0xC0;
			x0 = x20;
			fn000000000001B7B0();
			x1.u1 = sp + 400;
			x2.u1 = sp + 400;
			x0 = x19;
			fn000000000001B620();
			x0 = x20;
			fn000000000001B2B0();
			Eq_14 v107;
			v107.u1 = *((word32) sp + 400);
			w8 = (word32) v107;
			if ((w8 & 0x01) != 0x00)
			{
				x0.u1 = *((word32) sp + 416);
				((real64) q0, x0, x1);
			}
			x0.u1 = sp + 0xC0;
			fn000000000001B2B0();
			w0 = 0x00 | 0x01;
l00000000000264D0:
			x8.u1 = x28->t0028.u1;
			x9.u1 = x29->tFFFFFFA0.u1;
			x31 = x8 - x9;
			NZCV.u0 = cond(x31);
			if (Test(NE,Z))
				__stack_chk_fail();
			else
			{
				sp.u0 = sp + &g_t02F0;
				Eq_19033 v63 = (Eq_19033) (sp + (struct <anonymous> *) 80);
				x29 = (struct Eq_18389 *) v63->b0000;
				x30.u1 = v63->t0008.u1;
				Eq_19042 v64 = (Eq_19042) (sp + (struct <anonymous> *) 64);
				x20.u1 = v64->b0000;
				x19.u1 = v64->t0008.u1;
				Eq_19051 v65 = (Eq_19051) (sp + (struct <anonymous> *) 48);
				x22.u1 = v65->b0000;
				x21.u1 = v65->t0008.u1;
				Eq_19060 v66 = (Eq_19060) (sp + (struct <anonymous> *) 32);
				x24.u1 = v66->b0000;
				x23.u1 = v66->t0008.u1;
				Eq_19069 v67 = (Eq_19069) (sp + (struct <anonymous> *) 16);
				x26.u1 = v67->b0000;
				x25.u1 = v67->t0008.u1;
				Eq_18330 v68 = sp;
				x28 = *v68.u0;
				x27.u1 = *((word32) v68 + 8);
				sp.u0 = sp + (struct <anonymous> *) 96;
				return;
			}
		}
	}
	else
	{
		x0.u1 = *((word32) sp + 40);
		((real64) q0, x0, x1);
		byte v100 = (byte) *((word32) sp + 56);
		w8 = (word32) v100;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000026274;
	}
l0000000000026214:
	x0.u1 = *((word32) sp + 72);
	((real64) q0, x0, x1);
	if ((w21 & 0x01) == 0x00)
		goto l0000000000026338;
	goto l0000000000026278;
}

// 000000000002690C: define _ZN4rgbd13RGBDRealSense13updateRgbdSetERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
// Called from:
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
define _ZN4rgbd13RGBDRealSense13updateRgbdSetERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
{
	struct Eq_20196 * fp;
	struct Eq_20196 * sp = fp;
	sp -= 0x70;
	Eq_14 x25;
	sp->t0020.u1 = (size_t) x25;
	struct Eq_20205 * v7 = (struct Eq_20205 *) ((char *) &sp->t0020 + 16);
	struct Eq_20207 * x24;
	v7->ptr0000 = x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_20216 * v10 = (struct Eq_20216 *) ((char *) &sp->t0020 + 32);
	word64 x22;
	v10->qw0000 = x22;
	word64 x21;
	v10->qw0008 = x21;
	struct Eq_20227 * v13 = (struct Eq_20227 *) ((char *) &sp->t0020 + 48);
	Eq_14 x20;
	v13->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v13->t0008.u1 = (size_t) x19;
	struct Eq_20238 * v16 = (struct Eq_20238 *) ((char *) &sp->t0020 + 64);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = (char *) &sp->t0020 + 64;
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	uint64 x8 = x24->qw0028;
	word64 x0;
	x21 = x0 + 0x0540;
	Eq_14 x1;
	x19 = x1;
	x22 = x0;
	x0 = x21;
	Eq_14 x2;
	x1 = x2;
	x20 = x2;
	sp->qw0018 = x8;
	fn000000000001AD90();
	word64 x31;
	Eq_20278 NZCV;
	bool Z;
	uint64 x9;
	if (x0 != 0x00)
	{
		x23.u0 = 0x00053000;
		x23.u1 = (word32) x23 + 3181;
		union Eq_14 *** x3 = (union Eq_14 ***) &sp->t0010.u0;
		word32 * x4 = &sp->dw0000;
		x0 = x21;
		x1 = x20;
		x2 = x23;
		sp->t0010.u1 = (size_t) x20;
		x25.u1 = &sp->dw0000;
		fn000000000001BD40();
		x0 += 0x30;
		();
		sp = &sp->dw0000 + 2;
		x22 += 0x0568;
		Eq_14 w0;
		sp->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w0;
		x1.u1 = &sp->t0010.u0;
		x0 = x22;
		fn000000000001C510();
		ui32 w8 = (ui32) *x19.u1;
		x1.u1 = &sp->dw0000;
		x3 = (union Eq_14 ***) &sp->t0010.u0;
		x4 = (word32 *) (&sp->dw0000 + 2);
		x0 = x22;
		x2 = x23;
		sp->t0010.u1 = (size_t) x25;
		sp->dw0000 = w8;
		fn000000000001B970();
		x0 += 0x18;
		x31 = x0 - x20;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			byte v29 = (byte) *x20.u1;
			w8 = (word32) v29;
			struct Eq_20368 * v32 = (struct Eq_20368 *) ((word32) x20 + 8);
			word64 x10 = v32->qw0000;
			x9 = v32->qw0008;
			uint64 x11 = x8 >> 1;
			ui32 w31 = w8 & 0x01;
			Eq_20383 NZ;
			NZ.u0 = cond(w31);
			bool C = false;
			bool V = false;
			x1.u1 = Test(NE,Z) ? x9 : (word32) x20 + 1;
			x2.u1 = Test(EQ,Z) ? x11 : x10;
			fn000000000001B8B0();
		}
		x2.u0 = 0x00053000;
		x2.u1 = (word32) x2 + 3181;
		x3 = (union Eq_14 ***) &sp->t0010.u0;
		x4 = &sp->dw0000;
		x0 = x21;
		x1 = x20;
		sp->t0010.u1 = (size_t) x20;
		fn000000000001BD40();
		w8 = (ui32) *x19.u1;
		x0 += 0x30;
		x1.u1 = &sp->t0010.u0;
		sp->t0010.u0 = (byte) (byte) w8;
		_ZN4rgbd9RGBDParam14changeLocationERKa();
		w0 = 0x00 | 0x01;
	}
	x8 = x24->qw0028;
	x9 = sp->qw0018;
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_20400 * v38 = (struct Eq_20400 *) ((char *) &sp->t0020 + 64);
		x29 = v38->ptr0000;
		x30 = v38->qw0008;
		struct Eq_20409 * v39 = (struct Eq_20409 *) ((char *) &sp->t0020 + 48);
		x20.u1 = v39->t0000.u1;
		x19.u1 = v39->t0008.u1;
		struct Eq_20418 * v40 = (struct Eq_20418 *) ((char *) &sp->t0020 + 32);
		x22 = v40->qw0000;
		x21 = v40->qw0008;
		struct Eq_20427 * v41 = (struct Eq_20427 *) ((char *) &sp->t0020 + 16);
		x24 = v41->ptr0000;
		x23.u1 = v41->t0008.u1;
		x25.u1 = sp->t0020.u1;
		sp = (struct Eq_20196 *) ((char *) &sp->t0020 + 80);
	}
}

// 0000000000026A4C: void (Register bool x0)
void (bool x0)
{
	ui32 w1;
	Eq_20441 fp;
	Eq_20441 sp = fp;
	sp -= 0x01E0;
	struct Eq_20446 * v6 = (struct Eq_20446 *) ((word32) sp + 400);
	Eq_14 x28;
	v6->t0000.u1 = (size_t) x28;
	Eq_14 x25;
	v6->t0008.u1 = (size_t) x25;
	struct Eq_20457 * v9 = (struct Eq_20457 *) ((word32) sp + 416);
	Eq_14 x24;
	v9->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v9->t0008.u1 = (size_t) x23;
	struct Eq_20468 * v12 = (struct Eq_20468 *) ((word32) sp + 432);
	Eq_14 x22;
	v12->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v12->t0008.u1 = (size_t) x21;
	struct Eq_20479 * v15 = (struct Eq_20479 *) ((word32) sp + 448);
	Eq_14 x20;
	v15->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v15->t0008.u1 = (size_t) x19;
	struct Eq_20490 * v18 = (struct Eq_20490 *) ((word32) sp + 464);
	Eq_14 x29;
	v18->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v18->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 464;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x25 + 40);
	Eq_14 x9;
	x9.u0 = 0x00071000;
	x9.u1 = (word32) x9 + 0x0118;
	ptr64 x10 = (ptr64) ((word32) sp + 32);
	*((word32) x29 - 72) = x8;
	Eq_14 w8 = *x9.u1;
	x23 = x10 + 0x08;
	Eq_14 v25 = *((word32) x9 + 8);
	ui32 w10 = (word32) v25;
	x19 = x0;
	((word32) sp + 32)->u1 = w8;
	x8.u1 = (word32) x9 + 9;
	x9 = *((word32) x9 + 24);
	ui32 w31 = w10 & 0x01;
	Eq_20543 NZ;
	NZ.u0 = cond(w31);
	ui32 w20 = w1;
	struct Eq_20548 * v33 = (struct Eq_20548 *) ((word32) sp + 48);
	v33->qw0000 = 0x00;
	v33->qw0008 = 0x00;
	bool Z;
	x22.u1 = Test(EQ,Z) ? x8 : x9;
	x0 = x22;
	sp.u0->t0028.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	Eq_20571 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x23;
		fn000000000001B2D0();
		goto l0000000000026CA8;
	}
	x21 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w21;
	if (Test(ULT,C))
	{
		w8 = w21 << 1;
		x23.u1 = (word32) x23 + 1;
		sp.u0->t0028.u0 = (byte) (byte) w8;
		if (x21 == 0x00)
			goto l0000000000026B10;
	}
	else
	{
		x8.u1 = (word32) x21 + 16;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		Eq_20589 v60;
		v60.u0 = sp + 48;
		v60.u0->t0000.u1 = (size_t) x21;
		v60.u0->t0008.u1 = (size_t) x0;
		sp.u0->t0028.u1 = (size_t) x8;
	}
	x0 = x23;
	Eq_14 x1 = x22;
	Eq_14 x2 = x21;
	x0 = memcpy(x0, x1, x2);
l0000000000026B10:
	*(x23 + x21) = (word64) 0x00;
	x0.u1 = sp + 0x20;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w21 = 0x00;
		Eq_14 v42;
		v42.u0 = sp.u0->t0028.u0;
		w8.u1 = (word32) v42;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000026BC8;
		goto l0000000000026BF8;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_20648 v38;
	v38.u0 = sp + 16;
	v38.u0->t0000.u1 = (size_t) 0x00;
	v38.u0->t0008.u1 = (size_t) 0x00;
	((word32) sp + 8)->u1 = 0x00;
	x21 = *x8.u1;
	x0 = x21;
	x0 = strlen(x0);
	sp.u1 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	word128 q0;
	if (Test(ULT,C))
	{
		x22 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = sp + 0x08;
			ui32 w22;
			w8 = w22 << 1;
			x23 = x9 | 0x01;
			((word32) sp + 8)->u1 = (byte) w8;
			if (x22 == 0x00)
				goto l0000000000026BA8;
		}
		else
		{
			x8.u1 = x22 + 0x10;
			x24 = x8 & ~0x0F;
			x0 = x24;
			_Znwm();
			x8 = x24 | 0x01;
			x23 = x0;
			Eq_20698 v43;
			v43.u0 = sp + 16;
			v43->u0 = x22;
			((word32) v43 + 8)->u0 = x0;
			((word32) sp + 8)->u1 = x8;
		}
		x0 = x23;
		x1 = x21;
		x2 = x22;
		x0 = memcpy(x0, x1, x2);
l0000000000026BA8:
		*(x23 + x22) = (word64) 0x00;
		x0.u1 = sp + 0x08;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v44;
		v44.u1 = *((word32) sp + 8);
		w8.u1 = (word32) v44;
		w21 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v45;
			v45.u0 = sp.u0->t0028.u0;
			w8.u1 = (word32) v45;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000026BC8:
				if ((w21 & 0x01) != 0x00)
					goto l0000000000026BCC;
				goto l0000000000026C04;
			}
		}
		else
		{
			x0.u1 = sp.u0->t0018.u1;
			((real64) q0, x0, x1);
			Eq_14 v57;
			v57.u0 = sp.u0->t0028.u0;
			w8.u1 = (word32) v57;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000026BC8;
		}
l0000000000026BF8:
		x0.u1 = sp.u0->t0038.u1;
		((real64) q0, x0, x1);
		ui32 w2;
		if ((w21 & 0x01) == 0x00)
		{
l0000000000026BCC:
			x0 = x19;
			if ((w20 & 0x01) != 0x00)
			{
l0000000000026BD4:
				fn000000000001C610();
				w2 = 10000;
				x0 = x19;
				w1 = 0x00;
l0000000000026C70:
				fn000000000001C330();
				x8 = *((word32) x25 + 40);
				x9 = *((word32) x29 - 72);
				Eq_20858 x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				if (Test(EQ,Z))
				{
					Eq_20866 v52;
					v52.u0 = sp + 464;
					x29.u1 = *v52;
					x30.u1 = *((word32) v52 + 8);
					Eq_20875 v53;
					v53.u0 = sp + 448;
					x20.u1 = *v53;
					x19.u1 = *((word32) v53 + 8);
					Eq_20884 v54;
					v54.u0 = sp + 432;
					x22.u1 = *v54;
					x21.u1 = *((word32) v54 + 8);
					Eq_20893 v55;
					v55.u0 = sp + 416;
					x24.u1 = *v55;
					x23.u1 = *((word32) v55 + 8);
					Eq_20902 v56;
					v56.u0 = sp + 400;
					x28.u1 = *v56;
					x25.u1 = *((word32) v56 + 8);
					sp.u1 = sp + 0x01E0;
					return;
				}
l0000000000026CA8:
				__stack_chk_fail();
			}
l0000000000026C60:
			fn000000000001B980();
			w1 = 0x00 | 0x01;
			x0 = x19;
			w2 = 0x00;
			goto l0000000000026C70;
		}
l0000000000026C04:
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		x2.u0 = 0x00071000;
		Eq_14 x3;
		x3.u0 = 0x00052000;
		x2.u1 = (word32) x2 + 0x0118;
		x1 = *x8.u1;
		x3.u1 = (word32) x3 + 0x05EE;
		x0.u1 = sp + 0x40;
		ui32 w4 = 0x00 | 0x06;
		word64 x5 = 0x00;
		x21.u1 = sp + 0x40;
		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
		x0.u1 = x21 + 0x08;
		x1.u0 = 0x00050000;
		x1.u1 = x1 + 0x086E;
		w2 = 0x00 | 0x0F;
		fn000000000001BB30();
		w1 = w20 & 0x01;
		fn000000000001B2A0();
		LogCapture::~LogCapture();
		sp.u1 = sp + 0x08;
		x0 = x19;
		if ((w20 & 0x01) == 0x00)
			goto l0000000000026BD4;
		goto l0000000000026C60;
	}
	x0.u1 = sp + 0x08;
	fn000000000001B2D0();
	Eq_14 v58;
	v58.u1 = *((word32) sp + 8);
	w8.u1 = (word32) v58;
	x19 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp.u0->t0018.u1;
		((real64) q0, x0, x1);
		Eq_14 v59;
		v59.u0 = sp.u0->t0028.u0;
		w8.u1 = (word32) v59;
		if ((w8 & 0x01) != 0x00)
			goto l0000000000026CFC;
	}
	else
	{
		Eq_14 v61;
		v61.u0 = sp.u0->t0028.u0;
		w8.u1 = (word32) v61;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000026CFC;
	}
	x0 = x19;
	_Unwind_Resume();
l0000000000026CFC:
	x0.u1 = sp.u0->t0038.u1;
	((real64) q0, x0, x1);
	x0 = x19;
	_Unwind_Resume();
	_ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEb();
}

// 0000000000026D0C: define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEb
// Called from:
//      
define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEb
{
	ui32 w0;
	ui32 w1;
	struct Eq_20956 * fp;
	struct Eq_20956 * sp = fp;
	sp -= 0x70;
	struct Eq_20960 * x25;
	sp->ptr0020 = x25;
	struct Eq_20965 * v7 = (struct Eq_20965 *) ((char *) &sp->ptr0020 + 16);
	word64 x24;
	v7->qw0000 = x24;
	Eq_14 x23;
	v7->t0008.u1 = (size_t) x23;
	struct Eq_20976 * v10 = (struct Eq_20976 *) ((char *) &sp->ptr0020 + 32);
	struct Eq_20978 * x22;
	v10->ptr0000 = x22;
	struct Eq_20978 * x21;
	v10->ptr0008 = x21;
	struct Eq_20987 * v13 = (struct Eq_20987 *) ((char *) &sp->ptr0020 + 48);
	word64 x20;
	v13->qw0000 = x20;
	struct Eq_20978 * x19;
	v13->ptr0008 = x19;
	struct Eq_20998 * v16 = (struct Eq_20998 *) ((char *) &sp->ptr0020 + 64);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = (char *) &sp->ptr0020 + 64;
	Eq_1720 sysreg3_3_13_0_2;
	x25 = __mrs(sysreg3_3_13_0_2);
	Eq_21016 x8;
	x8.u1 = x25->t0028.u1;
	struct Eq_20978 * x0;
	x19 = x0;
	sp->t0018.u1 = (struct Eq_107571 *) x8;
	sp->b0000 = 0x00;
	sp->ptr0008 = x0;
	x8.u0 = x0->b0000;
	x8.u1 = &x8.u1->tFFFFFFE8.u0;
	Eq_21016 x9;
	x9.u1 = x8.u1->t0000.u1;
	x9.u1 = x0 + x9;
	word32 w10 = x9.u1->dw0020;
	Eq_21056 NZCV;
	bool Z;
	if (w10 == 0x00)
	{
		x0 = x9.u1->ptr0088;
		ui32 w20 = w1;
		if (x0 != null)
		{
			fn000000000001B260();
			x8.u0 = x19->b0000;
			x8 -= 0x18;
		}
		ui32 w9 = 0x00 | 0x01;
		sp->b0000 = (byte) w9;
		x8.u1 = x8.u1->t0000.u1;
		x0 = x19 + x8;
		x8.u1 = (char *) &sp->ptr0008 + 8;
		_ZNKSt6__ndk18ios_base6getlocEv();
		Eq_14 x1;
		x1.u0 = 0x00070000;
		x1 = *((word32) x1 + 3688);
		x0 = (struct Eq_20978 *) ((char *) &sp->ptr0008 + 8);
		_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
		x21 = x0;
		x0 = (struct Eq_20978 *) ((char *) &sp->ptr0008 + 8);
		_ZNSt6__ndk16localeD1Ev();
		x8.u0 = x19->b0000;
		x8.u1 = x8.u1->tFFFFFFE8.u1;
		x22 = x19 + x8;
		ui32 w3 = x22->dw0090;
		x23.u1 = x22->t0028.u1;
		word32 wsp = w3 + 0x01;
		NZCV.u0 = cond(wsp);
		if (Test(EQ,Z))
		{
			x8.u1 = (char *) &sp->ptr0008 + 8;
			x0 = x22;
			_ZNKSt6__ndk18ios_base6getlocEv();
			x1.u0 = 0x00070000;
			x1 = *((word32) x1 + 0x0D90);
			x0 = (struct Eq_20978 *) ((char *) &sp->ptr0008 + 8);
			_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
			x8.u0 = x0->b0000;
			x8.u1 = x8.u1->t0038.u1;
			w1 = 0x00 | 0x20;
			x8();
			ui32 w24 = w0;
			x0 = (struct Eq_20978 *) ((char *) &sp->ptr0008 + 8);
			_ZNSt6__ndk16localeD1Ev();
			w3 = w24 & 0xFF;
			x22->dw0090 = w3;
		}
		x8.u0 = x21->b0000;
		x8.u1 = x8.u1->t0018.u1;
		ui32 w4 = w20 & 0x01;
		x0 = x21;
		x1 = x23;
		struct Eq_20978 * x2 = x22;
		x8();
		if (x0 == null)
		{
			x8.u0 = x19->b0000;
			w9 = 0x05;
			x8.u1 = x8.u1->tFFFFFFE8.u1;
			x0 = x19 + x8;
			ui32 w8 = x0->dw0020;
			w1 = w8 | w9;
			_ZNSt6__ndk18ios_base5clearEj();
		}
	}
	x0 = (struct Eq_20978 *) &sp->b0000;
	fn000000000001BCE0();
	x8.u1 = x25->t0028.u1;
	x9.u1 = sp->t0018.u1;
	word64 x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		x0 = x19;
		struct Eq_21124 * v27 = (struct Eq_21124 *) ((char *) &sp->ptr0020 + 64);
		x29 = v27->ptr0000;
		x30 = v27->qw0008;
		struct Eq_21133 * v28 = (struct Eq_21133 *) ((char *) &sp->ptr0020 + 48);
		x20 = v28->qw0000;
		x19 = v28->ptr0008;
		struct Eq_21142 * v29 = (struct Eq_21142 *) ((char *) &sp->ptr0020 + 32);
		x22 = v29->ptr0000;
		x21 = v29->ptr0008;
		struct Eq_21151 * v30 = (struct Eq_21151 *) ((char *) &sp->ptr0020 + 16);
		x24 = v30->qw0000;
		x23.u1 = v30->t0008.u1;
		x25 = sp->ptr0020;
		sp = (struct Eq_20956 *) ((char *) &sp->ptr0020 + 80);
	}
}

// 0000000000026ED8: void ()
void ()
{
	Eq_21222 fp;
	Eq_21222 sp = fp;
	sp.u1 = (word32) sp - 96;
	Eq_14 x28;
	sp->u1 = x28;
	Eq_14 x27;
	sp.u0->t0008.u1 = (size_t) x27;
	struct Eq_21235 * v8 = (struct Eq_21235 *) ((word32) sp + 16);
	Eq_14 x26;
	v8->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_21246 * v11 = (struct Eq_21246 *) ((word32) sp + 32);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_21257 * v14 = (struct Eq_21257 *) ((word32) sp + 48);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_21268 * v17 = (struct Eq_21268 *) ((word32) sp + 64);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_21279 * v20 = (struct Eq_21279 *) ((word32) sp + 80);
	Eq_14 x29;
	v20->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v20->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 80;
	sp -= 0x01B0;
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x24 + 40);
	Eq_14 x9;
	x9.u0 = 0x00071000;
	x9.u1 = (word32) x9 + 0x0118;
	struct Eq_21305 * x10 = (struct Eq_21305 *) ((word32) sp + 56);
	*((word32) x29 - 96) = x8;
	Eq_14 w8 = *x9.u1;
	x22.u1 = &x10->t0008.u0;
	Eq_14 v27 = *((word32) x9 + 8);
	ui32 w10 = (word32) v27;
	Eq_14 x0;
	x20 = x0;
	((word32) sp + 56)->u1 = w8;
	x8.u1 = (word32) x9 + 9;
	x9 = *((word32) x9 + 24);
	ui32 w31 = w10 & 0x01;
	Eq_21334 NZ;
	NZ.u0 = cond(w31);
	struct Eq_21337 * v33 = (struct Eq_21337 *) ((word32) sp + 72);
	v33->qw0000 = 0x00;
	v33->qw0008 = 0x00;
	((word32) sp + 64)->u1 = 0x00;
	bool Z;
	x21.u1 = Test(EQ,Z) ? x8 : x9;
	x0 = x21;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	Eq_21360 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x22;
		fn000000000001B2D0();
		goto l000000000002724C;
	}
	x19 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w19;
	if (Test(ULT,C))
	{
		w8 = w19 << 1;
		x22.u1 = (word32) x22 + 1;
		((word32) sp + 64)->u1 = (byte) w8;
		if (x19 == 0x00)
			goto l0000000000026F9C;
	}
	else
	{
		x8.u1 = (word32) x19 + 16;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		Eq_21378 v64;
		v64.u0 = sp + 72;
		v64.u0->t0000.u1 = (size_t) x19;
		v64.u0->t0008.u1 = (size_t) x0;
		((word32) sp + 64)->u1 = x8;
	}
	x0 = x22;
	Eq_14 x1 = x21;
	Eq_14 x2 = x19;
	x0 = memcpy(x0, x1, x2);
l0000000000026F9C:
	*(x22 + x19) = (word64) 0x00;
	x0.u1 = sp + 0x38;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w19 = 0x00;
		Eq_14 v42;
		v42.u1 = *((word32) sp + 64);
		w8.u1 = (word32) v42;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000027060;
		goto l0000000000027000;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_21437 v38;
	v38.u0 = sp + 40;
	v38.u0->t0000.u1 = (size_t) 0x00;
	v38.u0->t0008.u1 = (size_t) 0x00;
	((word32) sp + 32)->u1 = 0x00;
	x19 = *x8.u1;
	x0 = x19;
	x0 = strlen(x0);
	sp.u1 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	word128 q0;
	if (Test(ULT,C))
	{
		x21 = x0;
		NZCV.u0 = cond(x0 - (struct <anonymous> *) 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = sp + 0x20;
			ui32 w21;
			w8 = w21 << 1;
			x22 = x9 | 0x01;
			((word32) sp + 32)->u1 = (byte) w8;
			if (x21 == 0x00)
				goto l0000000000027040;
		}
		else
		{
			x8.u1 = x21 + (struct <anonymous> *) 0x10;
			x23 = x8 & ~0x0F;
			x0 = x23;
			_Znwm();
			x8 = x23 | 0x01;
			x22 = x0;
			Eq_21494 v44;
			v44.u0 = sp + 40;
			v44->u0 = x21;
			((word32) v44 + 8)->u0 = x0;
			((word32) sp + 32)->u1 = x8;
		}
		x0 = x22;
		x1 = x19;
		x2 = x21;
		x0 = memcpy(x0, x1, x2);
l0000000000027040:
		*(x22 + x21) = (word64) 0x00;
		x0.u1 = sp + 0x20;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v45;
		v45.u1 = *((word32) sp + 32);
		w8.u1 = (word32) v45;
		w19 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v46;
			v46.u1 = *((word32) sp + 64);
			w8.u1 = (word32) v46;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000027060:
				if ((w19 & 0x01) == 0x00)
					goto l00000000000270B0;
				goto l0000000000027064;
			}
		}
		else
		{
			x0.u1 = *((word32) sp + 48);
			((real64) q0, x0, x1);
			Eq_14 v51;
			v51.u1 = *((word32) sp + 64);
			w8.u1 = (word32) v51;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000027060;
		}
l0000000000027000:
		x0.u1 = *((word32) sp + 80);
		((real64) q0, x0, x1);
		if ((w19 & 0x01) == 0x00)
			goto l00000000000270B0;
l0000000000027064:
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		x2.u0 = 0x00071000;
		Eq_14 x3;
		x3.u0 = 0x00052000;
		x2.u1 = (word32) x2 + 0x0118;
		x1 = *x8.u1;
		x3.u1 = (word32) x3 + 0x05EE;
		x0.u1 = sp + 88;
		ui32 w4 = 0x00 | 0x06;
		word64 x5 = 0x00;
		x19.u1 = sp + 88;
		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
		x0.u1 = x19 + 0x08;
		x1.u0 = 0x00050000;
		x1.u1 = x1 + 0x0896;
		ui32 w2 = 0x00 | 0x18;
		fn000000000001BB30();
		x0.u1 = sp + 88;
		LogCapture::~LogCapture();
		sp.u1 = sp + 0x08;
l00000000000270B0:
		x19.u1 = x20 + (struct <anonymous> *) 288;
		x0 = x19;
		_ZNSt6__ndk15mutex4lockEv();
		x27 = *((word32) x20 + 224);
		x21.u1 = x20 + (struct <anonymous> *) 232;
		Eq_21568 x31 = x27 - x21;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x22.u0 = 0x00070000;
			x23.u0 = 0x00070000;
			x22 = *((word32) x22 + 0x0DC0);
			x23 = *((word32) x23 + 0x0C68);
			x25.u1 = x22 + 0x10;
			x26.u1 = (word32) x23 + 16;
			do
			{
				x0.u1 = x27 + 88;
				x8.u1 = sp + 0x08;
				fn000000000001BBA0();
				x8.u1 = sp + 88;
				x0.u1 = sp + 0x08;
				fn000000000001AE50();
				x20.u1 = sp.u0->t0018.u1;
				sp.u0->t0008.u1 = (size_t) x25;
				if (x20 != 0x00)
					x8.u1 = x20 + (struct <anonymous> *) 0x08;
				x0.u1 = *((word32) sp + 96);
				sp.u0->t0008.u1 = (size_t) 0x00;
				word32 w1 = 0x12;
				word32 s0 = 0x00;
				x2.u1 = sp + 0x08;
				rs2_set_option();
				x0.u1 = sp.u0->t0008.u1;
				fn000000000001ADF0();
				x20.u1 = *((word32) sp + 112);
				((word32) sp + 88)->u1 = x26;
				if (x20 != 0x00)
					x8.u1 = x20 + (struct <anonymous> *) 0x08;
				x8 = *((word32) x27 + 8);
				while (x8 != 0x00)
				{
					x27 = x8;
					x8 = *x8.u1;
				}
				x31 = x27 - x21;
				NZCV.u0 = cond(x31);
			} while (Test(NE,Z));
		}
		x0 = x19;
		_ZNSt6__ndk15mutex6unlockEv();
		x8 = *((word32) x24 + 40);
		x9 = *((word32) x29 - 96);
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			sp.u1 = sp + 0x01B0;
			Eq_21702 v55;
			v55.u0 = sp + 80;
			x29.u1 = *v55;
			x30.u1 = *((word32) v55 + 8);
			Eq_21711 v56;
			v56.u0 = sp + 64;
			x20.u1 = *v56;
			x19.u1 = *((word32) v56 + 8);
			Eq_21720 v57;
			v57.u0 = sp + 48;
			x22.u1 = *v57;
			x21.u1 = *((word32) v57 + 8);
			Eq_21729 v58;
			v58.u0 = sp + 32;
			x24.u1 = *v58;
			x23.u1 = *((word32) v58 + 8);
			Eq_21738 v59;
			v59.u0 = sp + 16;
			x26.u1 = *v59;
			x25.u1 = *((word32) v59 + 8);
			Eq_21222 v60 = sp;
			x28.u1 = *v60;
			x27.u1 = v60.u0->t0008.u1;
			sp.u1 = sp + 96;
			return;
		}
l000000000002724C:
		__stack_chk_fail();
	}
	x0.u1 = sp + 0x20;
	fn000000000001B2D0();
	x20 = x0;
	LogCapture::~LogCapture();
	sp.u1 = sp + 0x08;
	x0 = x20;
	_Unwind_Resume();
	Eq_14 v61;
	v61.u1 = *((word32) sp + 32);
	w8.u1 = (word32) v61;
	x20 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = *((word32) sp + 48);
		((real64) q0, x0, x1);
		Eq_14 v62;
		v62.u1 = *((word32) sp + 64);
		w8.u1 = (word32) v62;
		if ((w8 & 0x01) != 0x00)
			goto l0000000000027328;
	}
	else
	{
		Eq_14 v63;
		v63.u1 = *((word32) sp + 64);
		w8.u1 = (word32) v63;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000027328;
	}
	x0.u1 = *((word32) sp + 80);
	((real64) q0, x0, x1);
	x0 = x20;
	_Unwind_Resume();
	x21.u1 = sp.u0->t0018.u1;
	x8.u1 = x22 + 0x10;
	x20 = x0;
	sp.u0->t0008.u1 = (size_t) x8;
	if (x21 != 0x00)
		x8.u1 = x21 + 0x08;
	x0 = x19;
	_ZNSt6__ndk15mutex6unlockEv();
l0000000000027328:
	x0 = x20;
	_Unwind_Resume();
	();
}

// 0000000000027330: void ()
// Called from:
//      
void ()
{
	Eq_21868 fp;
	Eq_21868 sp = fp;
	sp.u1 = (word32) sp - 112;
	Eq_14 d8;
	sp->u1 = d8;
	struct Eq_21877 * v7 = (struct Eq_21877 *) ((word32) sp + 16);
	Eq_14 x28;
	v7->t0000.u1 = (size_t) x28;
	Eq_14 x27;
	v7->t0008.u1 = (size_t) x27;
	struct Eq_21888 * v10 = (struct Eq_21888 *) ((word32) sp + 32);
	Eq_14 x26;
	v10->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v10->t0008.u1 = (size_t) x25;
	struct Eq_21899 * v13 = (struct Eq_21899 *) ((word32) sp + 48);
	Eq_14 x24;
	v13->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v13->t0008.u1 = (size_t) x23;
	struct Eq_21910 * v16 = (struct Eq_21910 *) ((word32) sp + 64);
	Eq_14 x22;
	v16->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v16->t0008.u1 = (size_t) x21;
	struct Eq_21921 * v19 = (struct Eq_21921 *) ((word32) sp + 80);
	Eq_14 x20;
	v19->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v19->t0008.u1 = (size_t) x19;
	struct Eq_21932 * v22 = (struct Eq_21932 *) ((word32) sp + 96);
	Eq_14 x29;
	v22->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v22->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 96;
	sp -= 0x01B0;
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x24 + 40);
	Eq_14 x9;
	x9.u0 = 0x00071000;
	x9.u1 = (word32) x9 + 0x0118;
	Eq_14 x10;
	x10.u1 = (word32) sp + 56;
	*((word32) x29 - 112) = x8;
	Eq_14 w8 = *x9.u1;
	x22.u1 = (word32) x10 + 8;
	Eq_14 v29 = *((word32) x9 + 8);
	ui32 w10 = (word32) v29;
	Eq_14 x0;
	x20 = x0;
	((word32) sp + 56)->u1 = w8;
	x8.u1 = (word32) x9 + 9;
	x9 = *((word32) x9 + 24);
	ui32 w31 = w10 & 0x01;
	Eq_21987 NZ;
	NZ.u0 = cond(w31);
	struct Eq_21990 * v35 = (struct Eq_21990 *) ((word32) sp + 72);
	v35->qw0000 = 0x00;
	v35->qw0008 = 0x00;
	((word32) sp + 64)->u1 = 0x00;
	bool Z;
	x21.u1 = Test(EQ,Z) ? x8 : x9;
	x0 = x21;
	x0 = strlen(x0);
	sp.u1 = (word32) x0 + 16;
	Eq_22013 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x22;
		fn000000000001B2D0();
		goto l00000000000276B0;
	}
	x19 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w19;
	if (Test(ULT,C))
	{
		w8 = w19 << 1;
		x22.u1 = (word32) x22 + 1;
		((word32) sp + 64)->u1 = (byte) w8;
		if (x19 == 0x00)
			goto l00000000000273F8;
	}
	else
	{
		x8.u1 = (word32) x19 + 16;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		Eq_22031 v67;
		v67.u0 = sp + 72;
		v67.u0->t0000.u1 = (size_t) x19;
		v67.u0->t0008.u1 = (size_t) x0;
		((word32) sp + 64)->u1 = x8;
	}
	x0 = x22;
	Eq_14 x1 = x21;
	Eq_14 x2 = x19;
	x0 = memcpy(x0, x1, x2);
l00000000000273F8:
	*(x22 + x19) = (word64) 0x00;
	x0.u1 = sp + 0x38;
	((LEVELS) x0);
	ui32 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w19 = 0x00;
		Eq_14 v44;
		v44.u1 = *((word32) sp + 64);
		w8.u1 = (word32) v44;
		if ((w8 & 0x01) == 0x00)
			goto l00000000000274BC;
		goto l000000000002745C;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_22090 v40;
	v40.u0 = sp + 40;
	v40.u0->t0000.u1 = (size_t) 0x00;
	v40.u0->t0008.u1 = (size_t) 0x00;
	((word32) sp + 32)->u1 = 0x00;
	x19 = *x8.u1;
	x0 = x19;
	x0 = strlen(x0);
	sp.u1 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	word128 q0;
	if (Test(ULT,C))
	{
		x21 = x0;
		NZCV.u0 = cond(x0 - (struct <anonymous> *) 0x17);
		if (Test(ULT,C))
		{
			x9.u1 = sp + 0x20;
			ui32 w21;
			w8 = w21 << 1;
			x22 = x9 | 0x01;
			((word32) sp + 32)->u1 = (byte) w8;
			if (x21 == 0x00)
				goto l000000000002749C;
		}
		else
		{
			x8.u1 = x21 + (struct <anonymous> *) 0x10;
			x23 = x8 & ~0x0F;
			x0 = x23;
			_Znwm();
			x8 = x23 | 0x01;
			x22 = x0;
			Eq_22147 v46;
			v46.u0 = sp + 40;
			v46->u0 = x21;
			((word32) v46 + 8)->u0 = x0;
			((word32) sp + 32)->u1 = x8;
		}
		x0 = x22;
		x1 = x19;
		x2 = x21;
		x0 = memcpy(x0, x1, x2);
l000000000002749C:
		*(x22 + x21) = (word64) 0x00;
		x0.u1 = sp + 0x20;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v47;
		v47.u1 = *((word32) sp + 32);
		w8.u1 = (word32) v47;
		w19 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v48;
			v48.u1 = *((word32) sp + 64);
			w8.u1 = (word32) v48;
			if ((w8 & 0x01) != 0x00)
			{
l00000000000274BC:
				if ((w19 & 0x01) == 0x00)
					goto l000000000002750C;
				goto l00000000000274C0;
			}
		}
		else
		{
			x0.u1 = *((word32) sp + 48);
			((real64) q0, x0, x1);
			Eq_14 v53;
			v53.u1 = *((word32) sp + 64);
			w8.u1 = (word32) v53;
			if ((w8 & 0x01) == 0x00)
				goto l00000000000274BC;
		}
l000000000002745C:
		x0.u1 = *((word32) sp + 80);
		((real64) q0, x0, x1);
		if ((w19 & 0x01) == 0x00)
			goto l000000000002750C;
l00000000000274C0:
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		x2.u0 = 0x00071000;
		Eq_14 x3;
		x3.u0 = 0x00052000;
		x2.u1 = (word32) x2 + 0x0118;
		x1 = *x8.u1;
		x3.u1 = (word32) x3 + 0x05EE;
		x0.u1 = sp + 88;
		ui32 w4 = 0x00 | 0x06;
		word64 x5 = 0x00;
		x19.u1 = sp + 88;
		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
		x0.u1 = x19 + 0x08;
		x1.u0 = 0x00050000;
		x1.u1 = x1 + 0x087E;
		word32 w2 = 0x17;
		fn000000000001BB30();
		x0.u1 = sp + 88;
		LogCapture::~LogCapture();
		sp.u1 = sp + 0x08;
l000000000002750C:
		x19.u1 = x20 + (struct <anonymous> *) 288;
		x0 = x19;
		_ZNSt6__ndk15mutex4lockEv();
		x27 = *((word32) x20 + 224);
		x21.u1 = x20 + (struct <anonymous> *) 232;
		Eq_22221 x31 = x27 - x21;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x22.u0 = 0x00070000;
			x23.u0 = 0x00070000;
			x22 = *((word32) x22 + 0x0DC0);
			x23 = *((word32) x23 + 0x0C68);
			real32 s8 = 1.0F;
			x25.u1 = x22 + 0x10;
			x26.u1 = (word32) x23 + 16;
			do
			{
				x0.u1 = x27 + 88;
				x8.u1 = sp + 0x08;
				fn000000000001BBA0();
				x8.u1 = sp + 88;
				x0.u1 = sp + 0x08;
				fn000000000001AE50();
				x20.u1 = sp.u0->t0018.u1;
				sp.u0->t0008.u1 = (size_t) x25;
				if (x20 != 0x00)
					x8.u1 = x20 + (struct <anonymous> *) 0x08;
				x0.u1 = *((word32) sp + 96);
				sp.u0->t0008.u1 = (size_t) 0x00;
				word32 w1 = 0x12;
				x2.u1 = sp + 0x08;
				word128 q8;
				q0 = q8;
				rs2_set_option();
				x0.u1 = sp.u0->t0008.u1;
				fn000000000001ADF0();
				x20.u1 = *((word32) sp + 112);
				((word32) sp + 88)->u1 = x26;
				if (x20 != 0x00)
					x8.u1 = x20 + (struct <anonymous> *) 0x08;
				x8 = *((word32) x27 + 8);
				while (x8 != 0x00)
				{
					x27 = x8;
					x8 = *x8.u1;
				}
				x31 = x27 - x21;
				NZCV.u0 = cond(x31);
			} while (Test(NE,Z));
		}
		x0 = x19;
		_ZNSt6__ndk15mutex6unlockEv();
		x8 = *((word32) x24 + 40);
		x9 = *((word32) x29 - 112);
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			sp.u1 = sp + 0x01B0;
			Eq_22354 v58;
			v58.u0 = sp + 96;
			x29.u1 = *v58;
			x30.u1 = *((word32) v58 + 8);
			Eq_22363 v59;
			v59.u0 = sp + 80;
			x20.u1 = *v59;
			x19.u1 = *((word32) v59 + 8);
			Eq_22372 v60;
			v60.u0 = sp + 64;
			x22.u1 = *v60;
			x21.u1 = *((word32) v60 + 8);
			Eq_22381 v61;
			v61.u0 = sp + 48;
			x24.u1 = *v61;
			x23.u1 = *((word32) v61 + 8);
			Eq_22390 v62;
			v62.u0 = sp + 32;
			x26.u1 = *v62;
			x25.u1 = *((word32) v62 + 8);
			Eq_22399 v63;
			v63.u0 = sp + 16;
			x28.u1 = *v63;
			x27.u1 = *((word32) v63 + 8);
			x8.u1 = *sp;
			sp.u1 = sp + 112;
			return;
		}
l00000000000276B0:
		__stack_chk_fail();
	}
	x0.u1 = sp + 0x20;
	fn000000000001B2D0();
	x20 = x0;
	LogCapture::~LogCapture();
	sp.u1 = sp + 0x08;
	x0 = x20;
	_Unwind_Resume();
	Eq_14 v64;
	v64.u1 = *((word32) sp + 32);
	w8.u1 = (word32) v64;
	x20 = x0;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = *((word32) sp + 48);
		((real64) q0, x0, x1);
		Eq_14 v65;
		v65.u1 = *((word32) sp + 64);
		w8.u1 = (word32) v65;
		if ((w8 & 0x01) != 0x00)
			goto l000000000002778C;
	}
	else
	{
		Eq_14 v66;
		v66.u1 = *((word32) sp + 64);
		w8.u1 = (word32) v66;
		if ((w8 & 0x01) == 0x00)
			goto l000000000002778C;
	}
	x0.u1 = *((word32) sp + 80);
	((real64) q0, x0, x1);
	x0 = x20;
	_Unwind_Resume();
	x21.u1 = sp.u0->t0018.u1;
	x8.u1 = x22 + 0x10;
	x20 = x0;
	sp.u0->t0008.u1 = (size_t) x8;
	if (x21 != 0x00)
		x8.u1 = x21 + 0x08;
	x0 = x19;
	_ZNSt6__ndk15mutex6unlockEv();
l000000000002778C:
	x0 = x20;
	_Unwind_Resume();
	();
}

// 0000000000027794: void ()
// Called from:
//      
void ()
{
	struct Eq_22533 * x0;
	struct Eq_22533 * x8;
	struct Eq_22525 * fp;
	struct Eq_22525 * sp = fp;
	sp = (struct Eq_22525 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	struct Eq_22533 * x19;
	sp->ptr0008 = x19;
	struct Eq_22538 * v8 = (struct Eq_22538 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	struct Eq_22552 * v10 = (struct Eq_22552 *) (&x8->qw0000 + 1);
	v10->qw0000 = 0x00;
	v10->qw0008 = 0x00;
	x8->qw0000 = 0x00;
	x19 = x8;
	word32 w8 = x0->dw0590;
	Eq_14 x1;
	word32 w2;
	if (w8 != 0x00)
	{
		x1.u0 = 0x00051000;
		x1.u1 = (word32) x1 + 894;
		w2 = 0x0B99;
		x0 = x19;
		fn000000000001B8B0();
	}
	else
	{
		x1.u0 = 0x00050000;
		x1.u1 = (word32) x1 + 2223;
		w2 = 2766;
		x0 = x19;
		fn000000000001B8B0();
	}
	struct Eq_22584 * v15 = (struct Eq_22584 *) ((char *) &sp->ptr0008 + 8);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	struct Eq_22525 * v16 = sp;
	x20 = v16->qw0000;
	x19 = v16->ptr0008;
	sp = (struct Eq_22525 *) ((char *) &sp->ptr0008 + 24);
}

// 0000000000027808: define _ZN4rgbd13RGBDRealSense14getJsonContentERKa
define _ZN4rgbd13RGBDRealSense14getJsonContentERKa
{
	Eq_14 x1;
	word64 * x8;
	struct Eq_22601 * fp;
	struct Eq_22601 * sp = fp;
	sp = (struct Eq_22601 *) ((char *) sp - 32);
	word64 x20;
	sp->qw0000 = x20;
	word64 * x19;
	sp->ptr0008 = x19;
	struct Eq_22614 * v8 = (struct Eq_22614 *) ((char *) &sp->ptr0008 + 8);
	ptr64 x29;
	v8->ptr0000 = x29;
	word64 x30;
	v8->qw0008 = x30;
	x29 = (char *) &sp->ptr0008 + 8;
	struct Eq_22628 * v10 = (struct Eq_22628 *) (x8 + 1);
	v10->qw0000 = 0x00;
	v10->qw0008 = 0x00;
	*x8 = 0x00;
	x19 = x8;
	Eq_14 v13 = *x1.u1;
	word32 w8 = (word32) v13;
	word32 w2;
	word64 * x0;
	if (w8 != 0x00)
	{
		x1.u0 = 0x00051000;
		x1.u1 = (word32) x1 + 894;
		w2 = 0x0B99;
		x0 = x19;
		fn000000000001B8B0();
	}
	else
	{
		x1.u0 = 0x00050000;
		x1.u1 = (word32) x1 + 2223;
		w2 = 2766;
		x0 = x19;
		fn000000000001B8B0();
	}
	struct Eq_22662 * v16 = (struct Eq_22662 *) ((char *) &sp->ptr0008 + 8);
	x29 = v16->ptr0000;
	x30 = v16->qw0008;
	struct Eq_22601 * v17 = sp;
	x20 = v17->qw0000;
	x19 = v17->ptr0008;
	sp = (struct Eq_22601 *) ((char *) &sp->ptr0008 + 24);
}

// 000000000002787C: define _ZNK3rs26device2asIN5rs40013advanced_modeEEET_v
define _ZNK3rs26device2asIN5rs40013advanced_modeEEET_v
{
	Eq_14 x0;
	struct Eq_22679 * fp;
	struct Eq_22679 * sp = fp;
	sp -= 0x40;
	struct Eq_22684 * v6 = (struct Eq_22684 *) ((char *) &sp->t0018 + 8);
	struct Eq_22686 * x20;
	v6->ptr0000 = x20;
	Eq_14 x19;
	v6->t0008.u1 = (size_t) x19;
	struct Eq_22695 * v9 = (struct Eq_22695 *) ((char *) &sp->t0018 + 24);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 24;
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9 = x0;
	Eq_14 x8;
	x0 = x8;
	x8.u1 = x20->t0028.u1;
	x19.u0 = 0x00070000;
	x19 = *((word32) x19 + 0x0DC0);
	sp->t0018.u1 = (size_t) x8;
	x8 = *((word32) x9 + 8);
	Eq_14 x10;
	x10.u1 = (word32) x19 + 16;
	struct Eq_22679 * v15 = sp;
	v15->t0000.u1 = (size_t) x10;
	v15->t0008.u1 = (size_t) x8;
	x8 = *((word32) x9 + 16);
	sp->t0010.u1 = (size_t) x8;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v16 = &*x8.u1;
			x9 = __load_exclusive<word64>(v16);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v17 = &*x8.u1;
			w10 = __store_exclusive<word64>(v17, x9);
		} while (w10 != 0x00);
	}
	ptr64 x1 = &sp->t0000.u0;
	fn000000000001B840();
	x8.u1 = (word32) x19 + 16;
	x19.u1 = sp->t0010.u1;
	sp->t0000.u1 = (size_t) x8;
	if (x19 == 0x00)
	{
		x8.u1 = x20->t0028.u1;
		x9.u1 = sp->t0018.u1;
		int64 x31 = x8 - x9;
		Eq_22788 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_22798 * v23 = (struct Eq_22798 *) ((char *) &sp->t0018 + 24);
			x29 = v23->ptr0000;
			x30 = v23->qw0008;
			struct Eq_22807 * v24 = (struct Eq_22807 *) ((char *) &sp->t0018 + 8);
			x20 = v24->ptr0000;
			x19.u1 = v24->t0008.u1;
			sp = (struct Eq_22679 *) ((char *) &sp->t0018 + 40);
		}
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 000000000002798C: define _ZNK3rs26device2asINS_19serializable_deviceEEET_v
define _ZNK3rs26device2asINS_19serializable_deviceEEET_v
{
	Eq_14 x0;
	struct Eq_22817 * fp;
	struct Eq_22817 * sp = fp;
	sp -= 0x40;
	struct Eq_22822 * v6 = (struct Eq_22822 *) ((char *) &sp->t0018 + 8);
	struct Eq_22824 * x20;
	v6->ptr0000 = x20;
	Eq_14 x19;
	v6->t0008.u1 = (size_t) x19;
	struct Eq_22833 * v9 = (struct Eq_22833 *) ((char *) &sp->t0018 + 24);
	ptr64 x29;
	v9->ptr0000 = x29;
	word64 x30;
	v9->qw0008 = x30;
	x29 = (char *) &sp->t0018 + 24;
	Eq_1720 sysreg3_3_13_0_2;
	x20 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9 = x0;
	Eq_14 x8;
	x0 = x8;
	x8.u1 = x20->t0028.u1;
	x19.u0 = 0x00070000;
	x19 = *((word32) x19 + 0x0DC0);
	sp->t0018.u1 = (size_t) x8;
	x8 = *((word32) x9 + 8);
	Eq_14 x10;
	x10.u1 = (word32) x19 + 16;
	struct Eq_22817 * v15 = sp;
	v15->t0000.u1 = (size_t) x10;
	v15->t0008.u1 = (size_t) x8;
	x8 = *((word32) x9 + 16);
	sp->t0010.u1 = (size_t) x8;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v16 = &*x8.u1;
			x9 = __load_exclusive<word64>(v16);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v17 = &*x8.u1;
			w10 = __store_exclusive<word64>(v17, x9);
		} while (w10 != 0x00);
	}
	ptr64 x1 = &sp->t0000.u0;
	fn000000000001B680();
	x8.u1 = (word32) x19 + 16;
	x19.u1 = sp->t0010.u1;
	sp->t0000.u1 = (size_t) x8;
	if (x19 == 0x00)
	{
		x8.u1 = x20->t0028.u1;
		x9.u1 = sp->t0018.u1;
		int64 x31 = x8 - x9;
		Eq_22926 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_22936 * v23 = (struct Eq_22936 *) ((char *) &sp->t0018 + 24);
			x29 = v23->ptr0000;
			x30 = v23->qw0008;
			struct Eq_22945 * v24 = (struct Eq_22945 *) ((char *) &sp->t0018 + 8);
			x20 = v24->ptr0000;
			x19.u1 = v24->t0008.u1;
			sp = (struct Eq_22817 *) ((char *) &sp->t0018 + 40);
		}
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 0000000000027A9C: define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5parseEONS_6detail13input_adapterENS1_8functionIFbiNSC_6parserISB_E13parse_event_tERSB_EEEb
define _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5parseEONS_6detail13input_adapterENS1_8functionIFbiNSC_6parserISB_E13parse_event_tERSB_EEEb
{
	ui32 w2;
	struct Eq_22955 * fp;
	struct Eq_22955 * sp = fp;
	sp -= 336;
	struct Eq_22960 * v6 = (struct Eq_22960 *) ((char *) &sp->t00D0 + 80);
	word64 x28;
	v6->qw0000 = x28;
	struct Eq_22966 * x21;
	v6->ptr0008 = x21;
	struct Eq_22971 * v9 = (struct Eq_22971 *) ((char *) &sp->t00D0 + 96);
	word64 x20;
	v9->qw0000 = x20;
	Eq_14 x19;
	v9->t0008.u1 = (size_t) x19;
	struct Eq_22982 * v12 = (struct Eq_22982 *) ((char *) &sp->t00D0 + 112);
	struct Eq_22984 * x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (struct Eq_22984 *) ((char *) &sp->t00D0 + 112);
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x21->t0028.u1;
	ui32 w20 = w2;
	x29->tFFFFFFD8.u1 = (size_t) x8;
	x19.u1->u0 = 0x00;
	((word32) x19 + 8)->u0 = 0x00;
	Eq_14 x0;
	x8 = *x0.u1;
	sp->t0000.u1 = (size_t) x8;
	x8 = *((word32) x0 + 8);
	sp->t0008.u1 = (size_t) x8;
	Eq_14 x9;
	if (x8 != 0x00)
	{
		x8.u1 = (word32) x8 + 8;
		Eq_14 w10;
		do
		{
			union Eq_3183 * v19 = &*x8.u1;
			x9 = __load_exclusive<word64>(v19);
			x9.u1 = (word32) x9 + 1;
			union Eq_3192 * v20 = &*x8.u1;
			w10 = __store_exclusive<word64>(v20, x9);
		} while (w10 != 0x00);
	}
	struct Eq_23030 * x1;
	x0.u1 = x1->t0020.u1;
	Eq_23062 x31;
	Eq_23064 NZCV;
	bool Z;
	if (x0 != 0x00)
	{
		x31 = x1 - x0;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x8 = *x0.u1;
			x8 = *((word32) x8 + 16);
			x8();
			sp->t0030.u1 = (size_t) x0;
		}
		else
		{
			x8.u1 = (char *) &sp->t0008 + 8;
			sp->t0030.u1 = (size_t) x8;
			x8 = *x0.u1;
			x8 = *((word32) x8 + 24);
			x1 = (struct Eq_23030 *) ((char *) &sp->t0008 + 8);
			x8();
		}
	}
	else
		sp->t0030.u1 = (size_t) 0x00;
	ui32 w3 = w20 & 0x01;
	x0.u1 = (char *) &sp->t0030 + 16;
	x1 = (struct Eq_23030 *) &sp->t0000.u0;
	Eq_14 x2;
	x2.u1 = (char *) &sp->t0008 + 8;
	fn000000000001C500();
	x0.u1 = (char *) &sp->t0030 + 16;
	ui32 w1 = 0x00 | 0x01;
	x2 = x19;
	fn000000000001B690();
	byte v30 = sp->b00C0;
	ui32 w8 = (word32) v30;
	word128 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x0.u1 = sp->t00D0.u1;
		((real64) q0, x0, x1);
	}
	x0.u1 = sp->t00A8.u1;
	if (x0 != 0x00)
	{
		sp->t00B0.u1 = (size_t) x0;
		((real64) q0, x0, x1);
	}
	x19.u1 = sp->t0080.u1;
	if (x19 != 0x00)
		x8.u1 = (word32) x19 + 8;
	x0.u1 = sp->t0060.u1;
	x8.u1 = (char *) &sp->t0030 + 16;
	x31 = x8 - x0;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
	{
		if (x0 == 0x00)
			goto l0000000000027BE0;
		x8 = *x0.u1;
		x8 = *((word32) x8 + 40);
	}
	else
	{
		x8 = *x0.u1;
		x8 = *((word32) x8 + 32);
	}
	x8();
l0000000000027BE0:
	x0.u1 = sp->t0030.u1;
	x8.u1 = (char *) &sp->t0008 + 8;
	x31 = x8 - x0;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
	{
		if (x0 == 0x00)
			goto l0000000000027C0C;
		x8 = *x0.u1;
		x8 = *((word32) x8 + 40);
	}
	else
	{
		x8 = *x0.u1;
		x8 = *((word32) x8 + 32);
	}
	x8();
l0000000000027C0C:
	x19.u1 = sp->t0008.u1;
	if (x19 == 0x00)
	{
		x8.u1 = x21->t0028.u1;
		x9.u1 = x29->tFFFFFFD8.u1;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			struct Eq_23217 * v32 = (struct Eq_23217 *) ((char *) &sp->t00D0 + 112);
			x29 = v32->ptr0000;
			x30 = v32->qw0008;
			struct Eq_23226 * v33 = (struct Eq_23226 *) ((char *) &sp->t00D0 + 96);
			x20 = v33->qw0000;
			x19.u1 = v33->t0008.u1;
			struct Eq_23235 * v34 = (struct Eq_23235 *) ((char *) &sp->t00D0 + 80);
			x28 = v34->qw0000;
			x21 = v34->ptr0008;
			sp = (struct Eq_22955 *) ((char *) &sp->t00D0 + 0x0080);
		}
	}
	else
		x8.u1 = (word32) x19 + 8;
}

// 0000000000027D84: void ()
void ()
{
	struct Eq_23245 * fp;
	struct Eq_23245 * sp = fp;
	sp -= 0x50;
	struct Eq_23250 * v6 = (struct Eq_23250 *) ((char *) &sp->t0008 + 8);
	Eq_14 x24;
	v6->t0000.u1 = (size_t) x24;
	struct Eq_23256 * x23;
	v6->ptr0008 = x23;
	struct Eq_23261 * v9 = (struct Eq_23261 *) ((char *) &sp->t0008 + 24);
	word64 x22;
	v9->qw0000 = x22;
	Eq_14 x21;
	v9->t0008.u1 = (size_t) x21;
	struct Eq_23272 * v12 = (struct Eq_23272 *) ((char *) &sp->t0008 + 40);
	Eq_14 x20;
	v12->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v12->t0008.u1 = (size_t) x19;
	struct Eq_23283 * v15 = (struct Eq_23283 *) ((char *) &sp->t0008 + 56);
	ptr64 x29;
	v15->ptr0000 = x29;
	word64 x30;
	v15->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 56;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x23->t0028.u1;
	sp->t0008.u1 = (size_t) x8;
	Eq_14 v18 = x19;
	v18.u1->u1 = 0x00;
	((word32) v18 + 8)->u0 = 0x00;
	((word32) x19 + 16)->u0 = 0x00;
	sp->t0000.u1 = (size_t) 0x00;
	Eq_14 x0 = *((word32) x0 + 8);
	union Eq_14 *** x1 = (union Eq_14 ***) &sp->t0000.u0;
	rs2_serialize_json();
	x21 = x0;
	int32 w0 = 0x28;
	_Znwm();
	((word32) x0 + 16)->u0 = 0x00;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0C78);
	Eq_14 x9;
	x9.u0 = 0x00070000;
	x20 = x0;
	x24 = x0;
	x9 = *((word32) x9 + 3288);
	x0.u1 = sp->t0000.u1;
	x24.u1 = (word32) x24 + 8;
	x24.u1->u1 = 0x00;
	x8.u1 = (word32) x8 + 16;
	*x20.u1 = x8;
	struct Eq_23362 * v23 = (struct Eq_23362 *) ((word32) x20 + 24);
	v23->t0000.u1 = (size_t) x21;
	v23->t0008.u1 = (size_t) x9;
	fn000000000001ADF0();
	x1 = (union Eq_14 ***) &sp->t0000.u0;
	x0 = x21;
	rs2_get_raw_data_size();
	int32 w22 = w0;
	x0.u1 = sp->t0000.u1;
	fn000000000001ADF0();
	x1 = (union Eq_14 ***) &sp->t0000.u0;
	x0 = x21;
	rs2_get_raw_data();
	x21 = x0;
	x0.u1 = sp->t0000.u1;
	fn000000000001ADF0();
	x1 = (union Eq_14 ***) ((word32) x19 + 1);
	ptr64 x3 = (char *) x21.u1 + (int64) w22;
	x0 = x19;
	Eq_14 x2 = x21;
	fn000000000001B730();
}

// 0000000000027F24: define _ZNK8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE4dumpEicbNS_6detail15error_handler_tE
define _ZNK8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE4dumpEicbNS_6detail15error_handler_tE
{
	word32 w1;
	word32 w2;
	word32 w3;
	word32 w4;
	struct Eq_23396 * fp;
	struct Eq_23396 * sp = fp;
	sp = (struct Eq_23396 *) ((char *) sp - 96);
	struct Eq_23400 * x28;
	sp->ptr0000 = x28;
	Eq_14 x27;
	sp->t0008.u1 = (size_t) x27;
	struct Eq_23409 * v8 = (struct Eq_23409 *) ((char *) &sp->t0008 + 8);
	struct Eq_23411 * x26;
	v8->ptr0000 = x26;
	ui64 x25;
	v8->qw0008 = x25;
	struct Eq_23420 * v11 = (struct Eq_23420 *) ((char *) &sp->t0008 + 24);
	word64 x24;
	v11->qw0000 = x24;
	word64 x23;
	v11->qw0008 = x23;
	struct Eq_23431 * v14 = (struct Eq_23431 *) ((char *) &sp->t0008 + 40);
	word64 x22;
	v14->qw0000 = x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_23442 * v17 = (struct Eq_23442 *) ((char *) &sp->t0008 + 56);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_23453 * v20 = (struct Eq_23453 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v20->ptr0000 = x29;
	word64 x30;
	v20->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	sp -= 0x02A0;
	Eq_1720 sysreg3_3_13_0_2;
	x26 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x19 = x8;
	x8.u1 = x26->t0028.u1;
	word32 w24 = w4;
	word32 w23 = w3;
	word32 w25 = w2;
	word32 w22 = w1;
	Eq_14 x0;
	x20 = x0;
	sp->t0008.u1 = (size_t) x8;
	Eq_14 v32 = x19;
	v32.u1->u1 = 0x00;
	((word32) v32 + 8)->u0 = 0x00;
	((word32) x19 + 16)->u0 = 0x00;
	word32 w0 = 0x28;
	_Znwm();
	((word32) x0 + 16)->u0 = 0x00;
	Eq_14 x9;
	x9.u0 = 0x00070000;
	Eq_14 x10;
	x10.u0 = 0x00070000;
	x9 = *((word32) x9 + 3736);
	x10 = *((word32) x10 + 0x0E58);
	x27 = x0;
	x8 = x0;
	x9.u1 = (word32) x9 + 16;
	x10.u1 = (word32) x10 + 16;
	x21 = x0;
	x28 = (struct Eq_23400 *) ((char *) &sp->t0008 + 8);
	x27.u1 = (word32) x27 + 8;
	x27.u1->u1 = 0x00;
	*x0.u1 = x9;
	x8.u1 = (word32) x8 + 24;
	*x8.u1 = x10;
	*((word32) x0 + 32) = x19;
	Eq_14 w10;
	do
	{
		union Eq_3183 * v36 = &*x27.u1;
		x9 = __load_exclusive<word64>(v36);
		x9.u1 = (word32) x9 + 1;
		union Eq_3192 * v37 = &*x27.u1;
		w10 = __store_exclusive<word64>(v37, x9);
	} while (w10 != 0x00);
	Eq_14 q0;
	q0.u0 = 0;
	struct Eq_23561 * v40 = (struct Eq_23561 *) ((char *) &sp->t0008 + 8);
	v40->t0000.u1 = (size_t) x8;
	v40->t0008.u1 = (size_t) x21;
	struct Eq_23570 * v41 = (struct Eq_23570 *) ((char *) &sp->t0008 + 56);
	v41->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	v41->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	struct Eq_23579 * v42 = (struct Eq_23579 *) ((char *) &sp->t0008 + 24);
	v42->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	v42->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x0 = localeconv();
	sp->t0060.u1 = (size_t) x0;
	x8 = *((word32) x0 + 8);
	word32 w8;
	if (x8 != 0x00)
	{
		Eq_14 v44 = *x8.u1;
		w8 = (word32) v44;
	}
	sp->b0068 = (byte) w8;
	x8 = *x0.u1;
	if (x8 != 0x00)
	{
		Eq_14 v45 = *x8.u1;
		w8 = (word32) v45;
	}
	sp->b0069 = (byte) w8;
	x8.u1 = (char *) &sp->t0008 + 8;
	q0.u0 = 0;
	x9.u1 = (word32) x8 + 586;
	x10.u1 = (word32) x8 + 570;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 554;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 538;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 522;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 506;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 490;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 474;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 458;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 442;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 0x01AA;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 410;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 394;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 378;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 362;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 346;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 330;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 314;
	*x9.u1 = q0;
	x9.u1 = (word32) x8 + 298;
	*x10.u1 = q0;
	x10.u1 = (word32) x8 + 282;
	x8.u1 = (word32) x8 + 266;
	x28->t00FA.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x28->t00EA.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x28->t00DA.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x28->t00CA.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x28->t00BA.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x28->t00AA.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x28->t009A.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	x28->t008A.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	sp->t008A.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	sp->t007A.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	sp->t006A.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	*x9.u1 = q0;
	*x10.u1 = q0;
	*x8.u1 = q0;
	sp->b026A = (byte) w25;
	sp->t0280.u1 = (size_t) 0x00;
	sp->qw0278 = 0x00;
	sp->t0270.u1 = (size_t) 0x00;
	w0 = 0x0210;
	_Znwm();
	x8.u0 = 0x00050000;
	q0 = *((word32) x8 + 624);
	x9 = x25 & 0xFF;
	x8 = 0x00 | 0x101010101010101;
	x8 = x9 *64 x8;
	Eq_14 q1 = __dup<word64,union <anonymous>[2]>(x8);
	struct Eq_23792 * v47 = (struct Eq_23792 *) ((word32) x0 + 480);
	v47->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v47->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23801 * v48 = (struct Eq_23801 *) ((word32) x0 + 448);
	v48->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v48->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23810 * v49 = (struct Eq_23810 *) ((word32) x0 + 416);
	v49->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v49->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23819 * v50 = (struct Eq_23819 *) ((word32) x0 + 384);
	v50->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v50->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23828 * v51 = (struct Eq_23828 *) ((word32) x0 + 352);
	v51->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v51->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23837 * v52 = (struct Eq_23837 *) ((word32) x0 + 320);
	v52->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v52->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23846 * v53 = (struct Eq_23846 *) ((word32) x0 + 288);
	v53->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v53->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23855 * v54 = (struct Eq_23855 *) ((word32) x0 + 0x0100);
	v54->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v54->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23864 * v55 = (struct Eq_23864 *) ((word32) x0 + 224);
	v55->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v55->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23873 * v56 = (struct Eq_23873 *) ((word32) x0 + 0x00C0);
	v56->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v56->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23882 * v57 = (struct Eq_23882 *) ((word32) x0 + 0x00A0);
	v57->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v57->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23891 * v58 = (struct Eq_23891 *) ((word32) x0 + 0x0080);
	v58->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v58->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23900 * v59 = (struct Eq_23900 *) ((word32) x0 + 96);
	v59->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v59->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23909 * v60 = (struct Eq_23909 *) ((word32) x0 + 64);
	v60->t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	v60->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	struct Eq_23918 * v61 = (struct Eq_23918 *) ((word32) x0 + 32);
	v61->qw0000 = (word64) q1;
	v61->t0010.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q1;
	Eq_14 v62 = x0;
	*v62.u1 = q1;
	*((word32) v62 + 16) = q1;
	sp->t0280.u1 = (size_t) x0;
	((word32) x0 + 0x0200)->u0 = 0x00;
	sp->t0270.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
	sp->dw0288 = w24;
}

// 0000000000028304: void (Register Eq_23951 x0, Register int32 x1)
void (Eq_23951 x0, int32 x1)
{
	word32 w1;
	ui32 w2;
	struct Eq_23953 * fp;
	struct Eq_23953 * sp = fp;
	sp -= 0x60;
	struct Eq_23957 * x23;
	sp->ptr0020 = x23;
	struct Eq_23962 * v7 = (struct Eq_23962 *) ((char *) &sp->ptr0020 + 16);
	struct Eq_23964 * x22;
	v7->ptr0000 = x22;
	struct Eq_23957 * x21;
	v7->ptr0008 = x21;
	struct Eq_23973 * v10 = (struct Eq_23973 *) ((char *) &sp->ptr0020 + 32);
	word64 x20;
	v10->qw0000 = x20;
	struct Eq_23957 * x19;
	v10->ptr0008 = x19;
	struct Eq_23984 * v13 = (struct Eq_23984 *) ((char *) &sp->ptr0020 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->ptr0020 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	struct Eq_23957 * x8;
	x19 = x8;
	x8 = x22->ptr0028;
	ui32 w20 = w2;
	word32 w21 = w1;
	sp->ptr0018 = x8;
	x8 = (struct Eq_23957 *) &sp->ptr0000;
	fn000000000001C020();
	struct Eq_23953 * v21 = sp;
	x23 = v21->ptr0000;
	struct Eq_23957 * x9 = v21->ptr0008;
	struct Eq_24023 * x31 = x23 - x9;
	Eq_24025 NZCV;
	NZCV.u0 = cond(x31);
	bool Z;
	Eq_24046 q0;
	if (Test(NE,Z))
	{
		x8 = x23;
		do
		{
			Eq_24046 w10;
			w10.u2 = x8->t0028.u2;
			NZCV.u0 = cond(w10 - w21);
			if (Test(EQ,Z))
			{
				ui32 wsp = w20 + 0x01;
				NZCV.u0 = cond(wsp);
				if (Test(NE,Z))
				{
					w10.u2 = x8->t0018.u2;
					NZCV.u0 = cond(w10 - w20);
					if (Test(NE,Z))
						goto l000000000002836C;
				}
				q0.u0 = x8->t0000.u0;
				x19->t0000.u0 = (word128) q0;
				x9 = x8->ptr0010;
				x19->ptr0010 = x9;
				if (x9 != null)
				{
					x9 += (struct Eq_24179 *) 0x08;
					Eq_14 w11;
					do
					{
						union Eq_3183 * v36 = &x9->t0000.u1;
						Eq_14 x10 = __load_exclusive<word64>(v36);
						x10.u1 = (word32) x10 + 1;
						union Eq_3192 * v37 = &x9->t0000.u1;
						w11 = __store_exclusive<word64>(v37, x10);
					} while (w11 != 0x00);
				}
				x9 = x8->ptr0025;
				q0.u0 = x8->t0018.u0;
				w20 = 0x00 | 0x01;
				x19->ptr0025 = x9;
				x19->t0018.u0 = (word128) q0;
				if (x23 != null)
					goto l00000000000283C4;
				goto l0000000000028434;
			}
l000000000002836C:
			x8 = (struct Eq_23957 *) ((char *) &x8->t0028 + 8);
			x31 = x9 - x8;
			NZCV.u0 = cond(x31);
		} while (Test(NE,Z));
	}
	w20 = 0x00 | 0x02;
	if (x23 != null)
	{
l00000000000283C4:
		x21 = sp->ptr0008;
		x31 = x21 - x23;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			do
			{
				x19 = x21->ptrFFFFFFE0;
				x21 -= 0x30;
				if (x19 != null)
					x8 = (struct Eq_23957 *) ((char *) &x19->t0000 + 8);
				x31 = x21 - x23;
				NZCV.u0 = cond(x31);
			} while (Test(NE,Z));
			x0 = sp->ptr0000;
		}
		else
			x0 = x23;
		sp->ptr0008 = x23;
		((real64) q0, x0, x1);
	}
l0000000000028434:
	NZCV.u0 = cond(w20 - 0x02);
	if (Test(NE,Z))
	{
		x8 = x22->ptr0028;
		x9 = sp->ptr0018;
		x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		if (Test(EQ,Z))
		{
			struct Eq_24128 * v27 = (struct Eq_24128 *) ((char *) &sp->ptr0020 + 48);
			x29 = v27->ptr0000;
			x30 = v27->qw0008;
			struct Eq_24137 * v28 = (struct Eq_24137 *) ((char *) &sp->ptr0020 + 32);
			x20 = v28->qw0000;
			x19 = v28->ptr0008;
			struct Eq_24146 * v29 = (struct Eq_24146 *) ((char *) &sp->ptr0020 + 16);
			x22 = v29->ptr0000;
			x21 = v29->ptr0008;
			x23 = sp->ptr0020;
			sp = (struct Eq_23953 *) ((char *) &sp->ptr0020 + 64);
			return;
		}
	}
	else
	{
		ui32 w0 = 0x00 | 0x10;
		__cxa_allocate_exception();
		x19 = x0;
		x1.u0 = 0x00052000;
		x1.u1 = (word32) x1 + 0x05AD;
		_ZNSt13runtime_errorC1EPKc();
		x1.u0 = 0x00070000;
		Eq_14 x2;
		x2.u0 = 0x00070000;
		x1 = *((word32) x1 + 3936);
		x2 = *((word32) x2 + 0x0E28);
		x0 = x19;
		__cxa_throw();
	}
	__stack_chk_fail();
}

// 00000000000284AC: define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEf
define _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEf
{
	real32 s8;
	ui32 w0;
	word128 q0;
	struct Eq_24211 * fp;
	struct Eq_24211 * sp = fp;
	sp -= 0x70;
	word64 d8;
	sp->qw0020 = d8;
	struct Eq_24220 * v7 = (struct Eq_24220 *) (&sp->qw0020 + 2);
	struct Eq_24222 * x24;
	v7->ptr0000 = x24;
	word64 x23;
	v7->qw0008 = x23;
	struct Eq_24231 * v10 = (struct Eq_24231 *) (&sp->qw0020 + 4);
	Eq_14 x22;
	v10->t0000.u1 = (size_t) x22;
	struct Eq_24237 * x21;
	v10->ptr0008 = x21;
	struct Eq_24242 * v13 = (struct Eq_24242 *) (&sp->qw0020 + 6);
	struct Eq_24237 * x20;
	v13->ptr0000 = x20;
	struct Eq_24237 * x19;
	v13->ptr0008 = x19;
	struct Eq_24253 * v16 = (struct Eq_24253 *) (&sp->qw0020 + 8);
	ptr64 x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = &sp->qw0020 + 8;
	Eq_1720 sysreg3_3_13_0_2;
	x24 = __mrs(sysreg3_3_13_0_2);
	Eq_24271 x8;
	x8.u1 = x24->t0028.u1;
	struct Eq_24237 * x0;
	x19 = x0;
	sp->t0018.u1 = (struct Eq_107598 *) x8;
	sp->b0000 = 0x00;
	sp->ptr0008 = x0;
	x8.u0 = x0->b0000;
	x8.u1 = &x8.u1->tFFFFFFE8.u0;
	Eq_24271 x9;
	x9.u1 = x8.u1->t0000.u1;
	x9.u1 = x0 + x9;
	word32 w10 = x9.u1->dw0020;
	Eq_24311 NZCV;
	bool Z;
	if (w10 == 0x00)
	{
		x0 = x9.u1->ptr0088;
		word128 q8 = q0;
		if (x0 != null)
		{
			fn000000000001B260();
			x8.u0 = x19->b0000;
			x8 -= 0x18;
		}
		ui32 w9 = 0x00 | 0x01;
		sp->b0000 = (byte) w9;
		x8.u1 = x8.u1->t0000.u1;
		x0 = x19 + x8;
		x8.u1 = (char *) &sp->ptr0008 + 8;
		_ZNKSt6__ndk18ios_base6getlocEv();
		Eq_14 x1;
		x1.u0 = 0x00070000;
		x1 = *((word32) x1 + 3688);
		x0 = (struct Eq_24237 *) ((char *) &sp->ptr0008 + 8);
		_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
		x20 = x0;
		x0 = (struct Eq_24237 *) ((char *) &sp->ptr0008 + 8);
		_ZNSt6__ndk16localeD1Ev();
		x8.u0 = x19->b0000;
		x8.u1 = x8.u1->tFFFFFFE8.u1;
		x21 = x19 + x8;
		ui32 w3 = x21->dw0090;
		x22.u1 = x21->t0028.u1;
		word32 wsp = w3 + 0x01;
		NZCV.u0 = cond(wsp);
		ui32 w1;
		if (Test(EQ,Z))
		{
			x8.u1 = (char *) &sp->ptr0008 + 8;
			x0 = x21;
			_ZNKSt6__ndk18ios_base6getlocEv();
			x1.u0 = 0x00070000;
			x1 = *((word32) x1 + 0x0D90);
			x0 = (struct Eq_24237 *) ((char *) &sp->ptr0008 + 8);
			_ZNKSt6__ndk16locale9use_facetERNS0_2idE();
			x8.u0 = x0->b0000;
			x8.u1 = x8.u1->t0038.u1;
			w1 = 0x00 | 0x20;
			x8();
			ui32 w23 = w0;
			x0 = (struct Eq_24237 *) ((char *) &sp->ptr0008 + 8);
			_ZNSt6__ndk16localeD1Ev();
			w3 = w23 & 0xFF;
			x21->dw0090 = w3;
		}
		x8.u0 = x20->b0000;
		real64 d0 = (real64) s8;
		x8.u1 = x8.u1->t0040.u1;
		x0 = x20;
		x1 = x22;
		struct Eq_24237 * x2 = x21;
		x8();
		if (x0 == null)
		{
			x8.u0 = x19->b0000;
			w9 = 0x05;
			x8.u1 = x8.u1->tFFFFFFE8.u1;
			x0 = x19 + x8;
			ui32 w8 = x0->dw0020;
			w1 = w8 | w9;
			_ZNSt6__ndk18ios_base5clearEj();
		}
	}
	x0 = (struct Eq_24237 *) &sp->b0000;
	fn000000000001BCE0();
	x8.u1 = x24->t0028.u1;
	x9.u1 = sp->t0018.u1;
	word64 x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		x0 = x19;
		struct Eq_24379 * v27 = (struct Eq_24379 *) (&sp->qw0020 + 8);
		x29 = v27->ptr0000;
		x30 = v27->qw0008;
		struct Eq_24388 * v28 = (struct Eq_24388 *) (&sp->qw0020 + 6);
		x20 = v28->ptr0000;
		x19 = v28->ptr0008;
		struct Eq_24397 * v29 = (struct Eq_24397 *) (&sp->qw0020 + 4);
		x22.u1 = v29->t0000.u1;
		x21 = v29->ptr0008;
		struct Eq_24406 * v30 = (struct Eq_24406 *) (&sp->qw0020 + 2);
		x24 = v30->ptr0000;
		x23 = v30->qw0008;
		d8 = sp->qw0020;
		sp = &sp->qw0020 + 0x0A;
	}
}

// 0000000000028678: void ()
void ()
{
	struct Eq_24478 * fp;
	struct Eq_24478 * sp = fp;
	sp -= 0x50;
	Eq_14 x23;
	sp->t0010.u1 = (size_t) x23;
	struct Eq_24487 * v7 = (struct Eq_24487 *) ((char *) &sp->t0010 + 16);
	struct Eq_24489 * x22;
	v7->ptr0000 = x22;
	Eq_14 x21;
	v7->t0008.u1 = (size_t) x21;
	struct Eq_24498 * v10 = (struct Eq_24498 *) ((char *) &sp->t0010 + 32);
	Eq_14 x20;
	v10->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v10->t0008.u1 = (size_t) x19;
	struct Eq_24509 * v13 = (struct Eq_24509 *) ((char *) &sp->t0010 + 48);
	ptr64 x29;
	v13->ptr0000 = x29;
	word64 x30;
	v13->qw0008 = x30;
	x29 = (char *) &sp->t0010 + 48;
	Eq_1720 sysreg3_3_13_0_2;
	x22 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x9;
	x9.u1 = x22->t0028.u1;
	ptr64 x1 = &sp->t0000.u0;
	Eq_14 x8;
	x21 = x8;
	sp->t0008.u1 = (size_t) x9;
	sp->t0000.u1 = (size_t) 0x00;
	Eq_14 x0 = *x0.u1;
	rs2_pipeline_get_active_profile();
	x20 = x0;
	word32 w0 = 0x28;
	_Znwm();
	((word32) x0 + 16)->u0 = 0x00;
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0DE8);
	x9.u0 = 0x00070000;
	x19 = x0;
	x23 = x0;
	x9 = *((word32) x9 + 3384);
	x0.u1 = sp->t0000.u1;
	x23.u1 = (word32) x23 + 8;
	x23.u1->u0 = 0x00;
	x8.u1 = (word32) x8 + 16;
	*x19.u1 = x8;
	struct Eq_24575 * v20 = (struct Eq_24575 *) ((word32) x19 + 24);
	v20->t0000.u1 = (size_t) x20;
	v20->t0008.u1 = (size_t) x9;
	fn000000000001ADF0();
	Eq_14 w9;
	do
	{
		union Eq_3183 * v21 = &*x23.u1;
		x8 = __load_exclusive<word64>(v21);
		x8.u1 = (word32) x8 + 1;
		union Eq_3192 * v22 = &*x23.u1;
		w9 = __store_exclusive<word64>(v22, x8);
	} while (w9 != 0x00);
	Eq_14 v24 = x21;
	*v24.u1 = x20;
	*((word32) v24 + 8) = x19;
	do
	{
		union Eq_3183 * v25 = &*x23.u1;
		x8 = __load_exclusive<word64>(v25);
		x8.u1 = (word32) x8 + 1;
		union Eq_3192 * v26 = &*x23.u1;
		w9 = __store_exclusive<word64>(v26, x8);
	} while (w9 != 0x00);
}

// 00000000000287F0: define _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeENS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEixERSC_
define _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeENS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEixERSC_
{
	struct Eq_24628 * fp;
	struct Eq_24628 * sp = fp;
	sp -= 0x60;
	struct Eq_24633 * v6 = (struct Eq_24633 *) ((char *) &sp->t0008 + 8);
	struct Eq_24635 * x26;
	v6->ptr0000 = x26;
	Eq_14 x25;
	v6->t0008.u1 = (size_t) x25;
	struct Eq_24644 * v9 = (struct Eq_24644 *) ((char *) &sp->t0008 + 24);
	Eq_14 x24;
	v9->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v9->t0008.u1 = (size_t) x23;
	struct Eq_24655 * v12 = (struct Eq_24655 *) ((char *) &sp->t0008 + 40);
	Eq_14 x22;
	v12->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v12->t0008.u1 = (size_t) x21;
	struct Eq_24666 * v15 = (struct Eq_24666 *) ((char *) &sp->t0008 + 56);
	Eq_14 x20;
	v15->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v15->t0008.u1 = (size_t) x19;
	struct Eq_24677 * v18 = (struct Eq_24677 *) ((char *) &sp->t0008 + 72);
	ptr64 x29;
	v18->ptr0000 = x29;
	word64 x30;
	v18->qw0008 = x30;
	x29 = (char *) &sp->t0008 + 72;
	Eq_1720 sysreg3_3_13_0_2;
	x26 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8;
	x8.u1 = x26->t0028.u1;
	Eq_14 x1;
	x23 = x1;
	x1.u1 = &sp->t0000.u0;
	Eq_14 x2 = x23;
	Eq_14 x0;
	x20 = x0;
	sp->t0008.u1 = (size_t) x8;
	fn000000000001B4B0();
	x19 = *x0.u1;
	Eq_24721 NZCV;
	if (x19 != 0x00)
	{
l000000000002890C:
		x8.u1 = x26->t0028.u1;
		Eq_14 x9;
		x9.u1 = sp->t0008.u1;
		word64 x31 = x8 - x9;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			x0.u1 = (word32) x19 + 56;
			struct Eq_24820 * v33 = (struct Eq_24820 *) ((char *) &sp->t0008 + 72);
			x29 = v33->ptr0000;
			x30 = v33->qw0008;
			struct Eq_24829 * v34 = (struct Eq_24829 *) ((char *) &sp->t0008 + 56);
			x20.u1 = v34->t0000.u1;
			x19.u1 = v34->t0008.u1;
			struct Eq_24838 * v35 = (struct Eq_24838 *) ((char *) &sp->t0008 + 40);
			x22.u1 = v35->t0000.u1;
			x21.u1 = v35->t0008.u1;
			struct Eq_24847 * v36 = (struct Eq_24847 *) ((char *) &sp->t0008 + 24);
			x24.u1 = v36->t0000.u1;
			x23.u1 = v36->t0008.u1;
			struct Eq_24856 * v37 = (struct Eq_24856 *) ((char *) &sp->t0008 + 8);
			x26 = v37->ptr0000;
			x25.u1 = v37->t0008.u1;
			sp = (struct Eq_24628 *) ((char *) &sp->t0008 + 88);
			return;
		}
	}
	x21 = x0;
	word32 w0 = 0x48;
	_Znwm();
	x19 = x0;
	x0.u1 = (word32) x0 + 32;
	x0.u1->u0 = 0x00;
	struct Eq_24736 * v25 = (struct Eq_24736 *) ((word32) x19 + 40);
	v25->qw0000 = 0x00;
	v25->qw0008 = 0x00;
	Eq_14 v27 = *x23.u1;
	ui32 w8 = (word32) v27;
	Eq_14 q0;
	if ((w8 & 0x01) != 0x00)
	{
		x8 = *((word32) x23 + 16);
		q0 = *x23.u1;
		*((word32) x0 + 16) = x8;
		*x0.u1 = q0;
		goto l00000000000288C8;
	}
	x22 = *((word32) x23 + 8);
	sp = (struct Eq_24628 *) ((word32) x22 + 16);
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		fn000000000001B2D0();
		x20 = x0;
		x0 = x19;
		((real64) q0, x0, x1);
		x0 = x20;
		_Unwind_Resume();
		_ZNSt6__ndk14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEED2Ev();
		return;
	}
	x23 = *((word32) x23 + 16);
	NZCV.u0 = cond(x22 - 0x17);
	if (Test(ULT,C))
	{
		ui32 w22;
		w8 = w22 << 1;
		x24.u1 = (word32) x19 + 33;
		*((word32) x19 + 32) = (byte) w8;
		if (x22 == 0x00)
			goto l00000000000288C4;
	}
	else
	{
		x8.u1 = (word32) x22 + 16;
		x25 = x8 & ~0x0F;
		x0 = x25;
		_Znwm();
		x8 = x25 | 0x01;
		x24 = x0;
		struct Eq_24910 * v42 = (struct Eq_24910 *) ((word32) x19 + 40);
		v42->t0000.u1 = (size_t) x22;
		v42->t0008.u1 = (size_t) x0;
		*((word32) x19 + 32) = x8;
	}
	x0 = x24;
	x1 = x23;
	x2 = x22;
	x0 = memcpy(x0, x1, x2);
l00000000000288C4:
	*(x24 + x22) = (word64) 0x00;
l00000000000288C8:
	x8.u1 = sp->t0000.u1;
	struct Eq_24781 * v38 = (struct Eq_24781 *) ((word32) x19 + 56);
	v38->qw0000 = 0x00;
	v38->qw0008 = 0x00;
	Eq_14 v39 = x19;
	v39.u1->u0 = 0x00;
	((word32) v39 + 8)->u0 = 0x00;
	*((word32) x19 + 16) = x8;
	*x21.u1 = x19;
	x8 = *x20.u1;
	x8 = *x8.u1;
	if (x8 != 0x00)
	{
		*x20.u1 = x8;
		x1 = *x21.u1;
	}
	else
		x1 = x19;
	x0 = *((word32) x20 + 8);
	fn000000000001BD70();
	x8 = *((word32) x20 + 16);
	x8.u1 = (word32) x8 + 1;
	*((word32) x20 + 16) = x8;
	goto l000000000002890C;
}

// 0000000000028958: define _ZNSt6__ndk14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEED2Ev
// Called from:
//      _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeENS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEixERSC_
define _ZNSt6__ndk14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEED2Ev
{
	word64 * fp;
	word64 * sp = fp;
	sp += -6;
	word64 x21;
	*sp = x21;
	struct Eq_24952 * v7 = (struct Eq_24952 *) (sp + 2);
	struct Eq_24954 * x20;
	v7->ptr0000 = x20;
	struct Eq_24954 * x19;
	v7->ptr0008 = x19;
	struct Eq_24963 * v10 = (struct Eq_24963 *) (sp + 4);
	ptr64 x29;
	v10->ptr0000 = x29;
	word64 x30;
	v10->qw0008 = x30;
	x29 = sp + 4;
	struct Eq_24954 * x0;
	x19 = x0;
	x0 = (struct Eq_24954 *) ((char *) &x0->ptr0040 + 24);
	_ZNSt6__ndk16threadD1Ev();
	x20 = x19->ptr0040;
	word64 x8;
	if (x20 == null)
	{
		x20 = x19->ptr0030;
		x19->ptr0030 = null;
		word128 q0;
		void * x1;
		if (x20 != null)
		{
			x21 = x20->qw0008;
			if (x21 != 0x00)
				x8 = x21 + 0x08;
			x0 = x20;
			((real64) q0, x0, x1);
		}
		byte v14 = x19->b0018;
		ui32 w8 = (word32) v14;
		if ((w8 & 0x01) != 0x00)
		{
			x0 = x19->ptr0028;
			((real64) q0, x0, x1);
		}
		byte v17 = x19->b0000;
		w8 = (word32) v17;
		if ((w8 & 0x01) == 0x00)
		{
			x0 = x19->ptr0010;
			struct Eq_25046 * v20 = (struct Eq_25046 *) (sp + 4);
			x29 = v20->ptr0000;
			x30 = v20->qw0008;
			struct Eq_25055 * v21 = (struct Eq_25055 *) (sp + 2);
			x20 = v21->ptr0000;
			x19 = v21->ptr0008;
			x21 = *sp;
			sp += 6;
			((real64) q0, x0, x1);
		}
		else
		{
			struct Eq_25076 * v18 = (struct Eq_25076 *) (sp + 4);
			x29 = v18->ptr0000;
			x30 = v18->qw0008;
			struct Eq_25085 * v19 = (struct Eq_25085 *) (sp + 2);
			x20 = v19->ptr0000;
			x19 = v19->ptr0008;
			x21 = *sp;
			sp += 6;
		}
	}
	else
		x8 = &x20->qw0008;
}

// 0000000000028A34: define _ZN4rgbd13RGBDRealSense12setSerialNumENSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_
define _ZN4rgbd13RGBDRealSense12setSerialNumENSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_
{
	struct Eq_25098 * fp;
	struct Eq_25098 * sp = fp;
	sp = (struct Eq_25098 *) ((char *) sp - 48);
	word64 x22;
	sp->qw0000 = x22;
	word64 x21;
	sp->qw0008 = x21;
	struct Eq_25111 * v8 = (struct Eq_25111 *) (&sp->qw0008 + 1);
	word64 x20;
	v8->qw0000 = x20;
	word64 x19;
	v8->qw0008 = x19;
	struct Eq_25122 * v11 = (struct Eq_25122 *) (&sp->qw0008 + 3);
	ptr64 x29;
	v11->ptr0000 = x29;
	word64 x30;
	v11->qw0008 = x30;
	x29 = &sp->qw0008 + 3;
	word64 x0;
	x19 = x0 + 288;
	x21 = x0;
	x0 = x19;
	word64 x2;
	x20 = x2;
	word64 x1;
	x22 = x1;
	_ZNSt6__ndk15mutex4lockEv();
	x0 = x21 + 0x0200;
	x1 = x22;
	_ZN4rgbd9RGBDParam12setSerialNumERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE();
	x0 = x21 + 0x02D0;
	x1 = x20;
	_ZN4rgbd9RGBDParam12setSerialNumERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE();
	x0 = x19;
	struct Eq_25150 * v15 = (struct Eq_25150 *) (&sp->qw0008 + 3);
	x29 = v15->ptr0000;
	x30 = v15->qw0008;
	struct Eq_25159 * v16 = (struct Eq_25159 *) (&sp->qw0008 + 1);
	x20 = v16->qw0000;
	x19 = v16->qw0008;
	struct Eq_25098 * v17 = sp;
	x22 = v17->qw0000;
	x21 = v17->qw0008;
	sp = &sp->qw0008 + 5;
	_ZNSt6__ndk15mutex6unlockEv();
}

// 0000000000028A9C: void ()
void ()
{
	Eq_1720 sysreg3_3_13_0_2;
	Eq_25178 fp;
	Eq_25178 sp = fp;
	sp.u0 = (word32) sp - 96;
	Eq_14 x28;
	sp.u0->ptr0000 = (union Eq_14 *) x28;
	Eq_14 x27;
	sp.u0->t0008.u1 = (size_t) x27;
	struct Eq_25191 * v8 = (struct Eq_25191 *) &sp.u0->t0010.u0;
	Eq_14 x26;
	v8->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_25202 * v11 = (struct Eq_25202 *) &sp.u0->t0020.u0;
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_25213 * v14 = (struct Eq_25213 *) &sp.u0->t0030.u0;
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_25224 * v17 = (struct Eq_25224 *) &sp.u0->t0040.u0;
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_25235 * v20 = (struct Eq_25235 *) ((word32) sp + 80);
	Eq_14 x29;
	v20->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v20->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 80;
	sp -= 944;
	Eq_14 x8 = __mrs(sysreg3_3_13_0_2);
	sp.u0->t0030.u1 = (size_t) x8;
	x8 = *((word32) x8 + 40);
	Eq_14 x0;
	x24 = x0;
	x0.u1 = (word32) x0 + 48;
	*((word32) x29 - 96) = x8;
	x8.u1 = &sp.u0->t0248.u0;
	Eq_14 w1 = 0x00 | 0x0E;
	fn000000000001AF40();
	x20.u0 = 0x00071000;
	x20.u1 = (word32) x20 + 0x0118;
	x8.u1 = &sp.u0->t0228.u0;
	x22.u1 = (word32) x8 + 8;
	Eq_14 v26 = *((word32) x20 + 8);
	Eq_14 w8;
	w8.u1 = (word32) v26;
	Eq_14 x10 = *((word32) x20 + 24);
	Eq_14 w9 = *x20.u1;
	Eq_14 x11;
	x11.u1 = (word32) x20 + 9;
	ui32 w31 = w8 & 0x01;
	Eq_25299 NZ;
	NZ.u0 = cond(w31);
	bool Z;
	x19.u1 = Test(EQ,Z) ? x11 : x10;
	x0 = x19;
	sp.u0->t0228.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w9;
	sp.u0->t0240.u1 = (size_t) 0x00;
	sp.u0->t0238.u1 = (size_t) 0x00;
	sp.u0->t0230.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u0 = (word32) x0 + 16;
	Eq_25325 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
		x0 = x22;
		fn000000000001B2D0();
		goto l000000000002980C;
	}
	x21 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	Eq_14 w21;
	if (Test(ULT,C))
	{
		w8 = w21 << 1;
		x22.u1 = (word32) x22 + 1;
		sp.u0->t0230.u0 = (byte) (byte) w8;
		if (x21 == 0x00)
			goto l0000000000028B7C;
	}
	else
	{
		x8.u1 = (word32) x21 + 16;
		x23 = x8 & ~0x0F;
		x0 = x23;
		_Znwm();
		x8 = x23 | 0x01;
		x22 = x0;
		sp.u0->t0240.u1 = (size_t) x0;
		sp.u0->t0230.u1 = (size_t) x8;
		sp.u0->t0238.u1 = (size_t) x21;
	}
	x0 = x22;
	Eq_14 x1 = x19;
	Eq_14 x2 = x21;
	x0 = memcpy(x0, x1, x2);
l0000000000028B7C:
	*(x22 + x21) = (word64) 0x00;
	x0.u1 = sp + 0x0228;
	((LEVELS) x0);
	Eq_14 w0;
	Eq_14 w19;
	if ((w0 & 0x01) == 0x00)
	{
		w19.u0 = 0x00;
		Eq_14 v149;
		v149.u0 = sp.u0->t0230.u0;
		w8.u1 = (word32) v149;
		if ((w8 & 0x01) == 0x00)
			goto l0000000000028C48;
		goto l0000000000028BE4;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	((word32) sp + 544)->u0 = 0x00;
	((word32) sp + 536)->u0 = 0x00;
	((word32) sp + 528)->u0 = 0x00;
	x21 = *x8.u1;
	x0 = x21;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(ULT,C))
	{
		x22 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		Eq_14 x9;
		ui32 w22;
		if (Test(ULT,C))
		{
			x9.u1 = sp + 0x0210;
			w8 = w22 << 1;
			x19 = x9 | 0x01;
			((word32) sp + 528)->u0 = (byte) w8;
			if (x22 == 0x00)
				goto l0000000000028C28;
		}
		else
		{
			x8.u1 = x22 + 0x10;
			x23 = x8 & ~0x0F;
			x0 = x23;
			_Znwm();
			x8 = x23 | 0x01;
			x19 = x0;
			((word32) sp + 544)->u0 = x0;
			((word32) sp + 528)->u0 = x8;
			((word32) sp + 536)->u0 = x22;
		}
		x0 = x19;
		x1 = x21;
		x2 = x22;
		x0 = memcpy(x0, x1, x2);
l0000000000028C28:
		*(x19 + x22) = (word64) 0x00;
		x0.u1 = sp + 0x0210;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v43;
		v43.u1 = *((word32) sp + 528);
		w8.u1 = (word32) v43;
		w19 = w0;
		word128 q0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v45;
			v45.u0 = sp.u0->t0230.u0;
			w8.u1 = (word32) v45;
			if ((w8 & 0x01) != 0x00)
			{
l0000000000028C48:
				if ((w19 & 0x01) == 0x00)
					goto l0000000000028CC4;
l0000000000028C4C:
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				x1 = *x8.u1;
				x2.u0 = 0x00071000;
				Eq_14 x3;
				x3.u0 = 0x00052000;
				x2.u1 = x2 + 0x0118;
				x3.u1 = (word32) x3 + 0x05EE;
				x0.u1 = sp + 600;
				ui32 w4 = 0x00 | 0x06;
				word64 x5 = 0x00;
				x19.u1 = sp + 600;
				_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
				x0.u1 = x19 + 0x08;
				x1.u0 = 0x00051000;
				x1.u1 = x1 + 0x0FE4;
				ui32 w2 = 0x09;
				fn000000000001BB30();
				x19 = x0;
				x0.u1 = sp.u0->t0248.u1;
				sp.u0->t01C0.u1 = (size_t) 0x00;
				x1.u1 = sp + 448;
				rs2_get_device_count();
				w21 = w0;
				x0.u1 = sp.u0->t01C0.u1;
				fn000000000001ADF0();
				x0 = x19;
				w1 = w21;
				fn000000000001B220();
				x0.u1 = sp + 600;
				LogCapture::~LogCapture();
				sp.u0 = sp + 0x08;
l0000000000028CC4:
				x0.u1 = sp.u0->t0248.u1;
				sp.u0->t01C0.u1 = (size_t) 0x00;
				x1.u1 = sp + 448;
				rs2_get_device_count();
				w19 = w0;
				x0.u1 = sp.u0->t01C0.u1;
				fn000000000001ADF0();
				NZCV.u0 = cond(w19 - 0x02);
				Eq_14 w10;
				if (Test(EQ,Z))
				{
					x0.u1 = sp.u0->t0248.u1;
					sp.u0->t01C0.u1 = (size_t) 0x00;
					x1.u1 = sp + 448;
					rs2_get_device_count();
					sp.u0->t0054.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w0;
					x0.u1 = sp.u0->t01C0.u1;
					fn000000000001ADF0();
					w8.u2 = sp.u0->t0054.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
					if (w8 == 0x00)
					{
l0000000000029434:
						w21.u0 = 0x00;
						x19.u1 = sp.u0->t0250.u1;
						if (x19 == 0x00)
							goto l00000000000295C0;
						goto l00000000000295A8;
					}
					x8.u1 = sp + 424;
					x9.u1 = sp + 336;
					sp.u0->t0008.u1 = (size_t) x24;
					x11.u1 = sp + 0x0138;
					Eq_14 x15;
					x15.u0 = 0x00070000;
					x23.u1 = x8 + 0x08;
					x8.u1 = x9 + 0x09;
					Eq_25753 x12;
					x12.u0 = sp + 600;
					x15 = *((word32) x15 + 0x0DC0);
					sp.u0->t0038.u1 = (size_t) x8;
					x8 = x11 | 0x01;
					Eq_25764 x13;
					x13.u0 = sp + 0x0118;
					sp.u0->t0028.u1 = (size_t) x8;
					x8.u1 = x12 + 0x08;
					sp.u0->t0040.u1 = (size_t) x8;
					x8.u1 = x13 + 0x08;
					Eq_25777 x14;
					x14.u0 = sp + 0x0100;
					sp.u0->t0020.u1 = (size_t) x8;
					x8.u1 = x13 + 0x09;
					x10.u1 = sp + 0x0170;
					sp.u0->t0018.u1 = (size_t) x8;
					x8 = x14 | 0x01;
					w1.u0 = 0x00;
					x22.u0 = 0x00;
					ui32 w27 = 0x2E32;
					x24.u1 = x9 + 0x08;
					x21 = x10 | 0x01;
					sp.u0->t0010.u1 = (size_t) x8;
					x8.u1 = (word32) x15 + 16;
					sp.u0->t0048.u1 = (size_t) x8;
l0000000000028D84:
					x8.u1 = sp + 448;
					x0.u1 = sp + 0x0248;
					fn000000000001BD80();
					Eq_27378 v57;
					v57.u0 = sp + 456;
					x8.u1 = *v57;
					x28.u1 = *((word32) v57 + 8);
					x9.u1 = sp.u0->t0048.u1;
					((word32) sp + 416)->u0 = x28;
					Eq_27393 v58;
					v58.u0 = sp + 400;
					v58->u0 = x9;
					((word32) v58 + 8)->u0 = x8;
					if (x28 != 0x00)
					{
						x8.u1 = (word32) x28 + 8;
						do
						{
							union Eq_3183 * v59 = &*x8.u1;
							x9 = __load_exclusive<word64>(v59);
							x9.u1 = x9 + 0x01;
							union Eq_3192 * v60 = &*x8.u1;
							w10 = __store_exclusive<word64>(v60, x9);
						} while (w10 != 0x00);
					}
					x8.u1 = sp + 424;
					x1.u1 = sp + 400;
					fn000000000001B0B0();
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 0x0DC0);
					x8.u1 = x8 + 0x10;
					((word32) sp + 400)->u0 = x8;
					if (x28 != 0x00)
						x8.u1 = (word32) x28 + 8;
					x25.u1 = *((word32) sp + 432);
					word32 NV;
					if (x25 != 0x00)
					{
						x19 = x23;
						while (true)
						{
							while (true)
							{
								w8 = *((word32) x25 + 32);
								NZCV.u0 = cond(w8 - 0x0A);
								if (Test(LT,NV))
									break;
								x8 = *x25.u1;
								if (x8 == 0x00)
								{
									x19 = x25;
									x28 = *x19.u1;
									if (x28 != 0x00)
										goto l0000000000028ED4;
									goto l0000000000028E6C;
								}
								x19 = x25;
								x25 = x8;
							}
							NZCV.u0 = cond(w8 - 0x09);
							if (Test(EQ,Z))
								break;
							x19 = x25;
							x19.u1 = x19 + 8;
							x8 = *x19.u1;
							if (x8 == 0x00)
								break;
							x25 = x8;
						}
					}
					else
					{
						x25 = x23;
						x19 = x23;
					}
					x28 = *x19.u1;
					if (x28 != 0x00)
						goto l0000000000028ED4;
l0000000000028E6C:
					w0 = 0x00 | 0x40;
					_Znwm();
					w8.u0 = 0x09;
					*((word32) x0 + 32) = w8;
					Eq_25920 v63;
					v63.u0 = x0 + 48;
					v63.u0->t0000.u1 = (size_t) 0x00;
					v63.u0->t0008.u1 = (size_t) 0x00;
					((word32) x0 + 40)->u0 = 0x00;
					Eq_14 v64 = x0;
					v64.u1->u0 = 0x00;
					((word32) v64 + 8)->u0 = 0x00;
					*((word32) x0 + 16) = x25;
					*x19.u1 = x0;
					x8.u1 = *((word32) sp + 424);
					x28 = x0;
					x8 = *x8.u1;
					if (x8 != 0x00)
					{
						((word32) sp + 424)->u0 = x8;
						x1 = *x19.u1;
					}
					else
						x1 = x28;
					x0.u1 = *((word32) sp + 432);
					fn000000000001BD70();
					x8.u1 = *((word32) sp + 440);
					x8.u1 = x8 + 0x01;
					((word32) sp + 440)->u0 = x8;
l0000000000028ED4:
					Eq_25885 v89;
					v89.u0 = sp + 376;
					v89.u0->t0000.u1 = (size_t) 0x00;
					v89.u0->t0008.u1 = (size_t) 0x00;
					sp.u0->t0170.u1 = (size_t) 0x00;
					x8 = x28;
					x8.u1 = x8 + 40;
					byte v90 = (byte) *x8.u1;
					w9.u1 = (word32) v90;
					if ((w9 & 0x01) != 0x00)
					{
						x9 = *((word32) x8 + 16);
						q0 = (word128) *x8.u1;
						((word32) sp + 384)->u0 = x9;
						sp.u0->t0170.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) q0;
						goto l0000000000028F5C;
					}
					x19 = *((word32) x28 + 48);
					sp.u0 = x19 + 0x10;
					NZCV.u0 = cond(sp);
					if (Test(UGE,C))
						goto l00000000000297F8;
					x28 = *((word32) x28 + 56);
					NZCV.u0 = cond(x19 - 0x17);
					if (Test(ULT,C))
					{
						w8 = w19 << 1;
						x26 = x21;
						sp.u0->t0170.u0 = (byte) (byte) w8;
						if (x19 == 0x00)
							goto l0000000000028F58;
					}
					else
					{
						x8.u1 = x19 + 0x10;
						x25 = x8 & ~0x0F;
						x0 = x25;
						_Znwm();
						x8 = x25 | 0x01;
						x26 = x0;
						Eq_27905 v138;
						v138.u0 = sp + 376;
						v138.u0->t0000.u1 = (size_t) x19;
						v138.u0->t0008.u1 = (size_t) x0;
						sp.u0->t0170.u1 = (size_t) x8;
					}
					x0 = x26;
					x1 = x28;
					x2 = x19;
					x0 = memcpy(x0, x1, x2);
l0000000000028F58:
					*(x26 + x19) = (word64) 0x00;
l0000000000028F5C:
					Eq_14 v92 = *((word32) x20 + 8);
					w9.u1 = (word32) v92;
					x10 = *((word32) x20 + 24);
					w8 = *x20.u1;
					x11.u1 = x20 + 0x09;
					w31 = w9 & 0x01;
					NZ.u0 = cond(w31);
					x28.u1 = Test(EQ,Z) ? x11 : x10;
					x0 = x28;
					((word32) sp + 336)->u0 = w8;
					Eq_14 v93 = x24;
					v93.u1->u1 = 0x00;
					((word32) v93 + 8)->u0 = 0x00;
					((word32) x24 + 16)->u0 = 0x00;
					x0 = strlen(x0);
					sp.u0 = x0 + 0x10;
					NZCV.u0 = cond(sp);
					if (Test(UGE,C))
					{
						x0 = x24;
						fn000000000001B2D0();
						goto l00000000000297F0;
					}
					x19 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						x26.u1 = sp.u0->t0038.u1;
						w8 = w19 << 1;
						sp.u0->t0158.u0 = (byte) (byte) w8;
						if (x19 == 0x00)
							goto l0000000000028FE0;
					}
					else
					{
						x8.u1 = x19 + 0x10;
						x25 = x8 & ~0x0F;
						x0 = x25;
						_Znwm();
						x8 = x25 | 0x01;
						x26 = x0;
						Eq_26785 v134;
						v134.u0 = sp + 352;
						v134.u0->t0000.u1 = (size_t) x19;
						v134.u0->t0008.u1 = (size_t) x0;
						sp.u0->t0158.u1 = (size_t) x8;
					}
					x0 = x26;
					x1 = x28;
					x2 = x19;
					x0 = memcpy(x0, x1, x2);
l0000000000028FE0:
					*(x26 + x19) = (word64) 0x00;
					x0.u1 = sp + 336;
					((LEVELS) x0);
					if ((w0 & 0x01) == 0x00)
					{
						w19.u0 = 0x00;
						Eq_14 v132;
						v132.u0 = sp.u0->t0158.u0;
						w8.u1 = (word32) v132;
						if ((w8 & 0x01) == 0x00)
							goto l00000000000290A0;
						goto l0000000000029040;
					}
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					Eq_26947 v98;
					v98.u0 = sp + 320;
					v98.u0->t0000.u1 = (size_t) 0x00;
					v98.u0->t0008.u1 = (size_t) 0x00;
					sp.u0->t0138.u1 = (size_t) 0x00;
					x19 = *x8.u1;
					x0 = x19;
					x0 = strlen(x0);
					sp.u0 = x0 + 0x10;
					NZCV.u0 = cond(sp);
					if (Test(ULT,C))
					{
						x28 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						ui32 w28;
						if (Test(ULT,C))
						{
							x26.u1 = sp.u0->t0028.u1;
							w8 = w28 << 1;
							sp.u0->t0138.u0 = (byte) (byte) w8;
							if (x28 == 0x00)
								goto l0000000000029080;
						}
						else
						{
							x8.u1 = x28 + 0x10;
							x25 = x8 & ~0x0F;
							x0 = x25;
							_Znwm();
							x8 = x25 | 0x01;
							x26 = x0;
							Eq_26988 v104;
							v104.u0 = sp + 320;
							v104->u0 = x28;
							((word32) v104 + 8)->u0 = x0;
							sp.u0->t0138.u1 = (size_t) x8;
						}
						x0 = x26;
						x1 = x19;
						x2 = x28;
						x0 = memcpy(x0, x1, x2);
l0000000000029080:
						*(x26 + x28) = (word64) 0x00;
						x0.u1 = sp + 0x0138;
						_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
						Eq_14 v100;
						v100.u0 = sp.u0->t0138.u0;
						w8.u1 = (word32) v100;
						w19 = w0;
						if ((w8 & 0x01) != 0x00)
						{
							Eq_14 v101;
							v101.u0 = sp.u0->t0158.u0;
							w8.u1 = (word32) v101;
							if ((w8 & 0x01) != 0x00)
							{
l00000000000290A0:
								if ((w19 & 0x01) == 0x00)
									goto l0000000000029104;
l00000000000290A4:
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 3432);
								x1 = *x8.u1;
								x3.u0 = 0x00052000;
								x0.u1 = sp + 600;
								w4 = 0x00 | 0x06;
								x2 = x20;
								x3.u1 = (word32) x3 + 0x05EE;
								x5 = 0x00;
								_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
								x0.u1 = sp.u0->t0040.u1;
								x1.u0 = 0x00052000;
								w2 = 0x0A;
								x1.u1 = x1 + 0x03;
								fn000000000001BB30();
								Eq_14 v102;
								v102.u0 = sp.u0->t0170.u0;
								w8.u1 = (word32) v102;
								Eq_27135 v103;
								v103.u0 = sp + 376;
								x10.u1 = *v103;
								x9.u1 = *((word32) v103 + 8);
								w31 = w8 & 0x01;
								NZ.u0 = cond(w31);
								C = false;
								bool V = false;
								x11 = x8 >> 1;
								x1.u1 = Test(EQ,Z) ? x21 : x9;
								x2.u1 = Test(EQ,Z) ? x11 : x10;
								fn000000000001BB30();
								x0.u1 = sp + 600;
								LogCapture::~LogCapture();
								sp.u0 = sp + 0x08;
l0000000000029104:
								Eq_14 v105;
								v105.u0 = sp.u0->t0170.u0;
								w8.u1 = (word32) v105;
								Eq_27085 v106;
								v106.u0 = sp + 376;
								x10.u1 = *v106;
								x9.u1 = *((word32) v106 + 8);
								w31 = w8 & 0x01;
								NZ.u0 = cond(w31);
								x8 >>= 1;
								x8.u1 = Test(EQ,Z) ? x8 : x10;
								x19.u1 = Test(EQ,Z) ? x21 : x9;
								NZCV.u0 = cond(x8 - 0x02);
								Eq_26412 x31;
								ui32 w25;
								if (Test(GE,NV))
								{
									x25.u1 = x19 + x8;
									x0 = x19;
									word32 NZV;
									do
									{
										x2 = x8 - 0x01;
										NZCV.u0 = cond(x2);
										if (Test(EQ,Z))
											break;
										w1.u0 = 0x32;
										x0 = memchr(x0, (int32) x1, x2);
										if (x0 == 0x00)
											break;
										word16 v107 = (word16) *x0.u1;
										w8.u1 = (word32) v107;
										NZCV.u0 = cond(w8 - w27);
										if (Test(EQ,Z))
										{
											x31 = x0 - x25;
											NZCV.u0 = cond(x31);
											w25 = 0x00;
											if (Test(EQ,Z))
												goto l0000000000029160;
											x8 = x0 - x19;
											sp.u0 = x8 + 0x01;
											NZCV.u0 = cond(sp);
											if (Test(EQ,Z))
												goto l0000000000029160;
											x8.u0 = 0x00071000;
											x8.u1 = x8 + 0x0198;
											x11 = x8;
											w8 = *x8.u1;
											Eq_14 v112 = *((word32) x11 + 8);
											w9.u1 = (word32) v112;
											x10 = *((word32) x11 + 24);
											x11.u1 = x11 + 0x09;
											((word32) sp + 0x0118)->u0 = w8;
											x8.u1 = sp.u0->t0020.u1;
											w31 = w9 & 0x01;
											NZ.u0 = cond(w31);
											x28.u1 = Test(EQ,Z) ? x11 : x10;
											x0 = x28;
											Eq_14 v113 = x8;
											v113.u1->u1 = 0x00;
											((word32) v113 + 8)->u0 = 0x00;
											((word32) x8 + 16)->u0 = 0x00;
											x0 = strlen(x0);
											sp.u0 = x0 + 0x10;
											NZCV.u0 = cond(sp);
											if (Test(UGE,C))
												goto l0000000000029824;
											x19 = x0;
											NZCV.u0 = cond(x0 - 0x17);
											if (Test(ULT,C))
											{
												x26.u1 = sp.u0->t0018.u1;
												w8 = w19 << 1;
												sp.u0->b0120 = (byte) (byte) w8;
												if (x19 == 0x00)
													goto l00000000000292A0;
											}
											else
											{
												x8.u1 = x19 + 0x10;
												x25 = x8 & ~0x0F;
												x0 = x25;
												_Znwm();
												x8 = x25 | 0x01;
												x26 = x0;
												Eq_27310 v123;
												v123.u0 = sp + 296;
												v123->u0 = x19;
												((word32) v123 + 8)->u0 = x0;
												((word32) sp + 288)->u0 = x8;
											}
											x0 = x26;
											x1 = x28;
											x2 = x19;
											x0 = memcpy(x0, x1, x2);
l00000000000292A0:
											*(x26 + x19) = (word64) 0x00;
											x0.u1 = sp + 0x0118;
											((LEVELS) x0);
											if ((w0 & 0x01) == 0x00)
											{
												w19.u0 = 0x00;
												Eq_14 v120;
												v120.u0 = sp.u0->b0120;
												w8.u1 = (word32) v120;
												if ((w8 & 0x01) != 0x00)
													goto l0000000000029300;
												goto l0000000000029360;
											}
											x8.u0 = 0x00070000;
											x8 = *((word32) x8 + 3432);
											Eq_27417 v114;
											v114.u0 = sp + 264;
											v114->u0 = 0x00;
											((word32) v114 + 8)->u0 = 0x00;
											sp.u0->t0100.u1 = 0x00;
											x19 = *x8.u1;
											x0 = x19;
											x0 = strlen(x0);
											sp.u0 = x0 + 0x10;
											NZCV.u0 = cond(sp);
											if (Test(UGE,C))
												goto l000000000002982C;
											x28 = x0;
											NZCV.u0 = cond(x0 - 0x17);
											if (Test(ULT,C))
											{
												x26.u1 = sp.u0->t0010.u1;
												w8 = w28 << 1;
												sp.u0->t0100.u0 = (byte) (byte) w8;
												if (x28 == 0x00)
													goto l0000000000029340;
											}
											else
											{
												x8.u1 = x28 + 0x10;
												x25 = x8 & ~0x0F;
												x0 = x25;
												_Znwm();
												x8 = x25 | 0x01;
												x26 = x0;
												Eq_27458 v117;
												v117.u0 = sp + 264;
												v117.u0->t0000.u1 = (size_t) x28;
												v117.u0->t0008.u1 = (size_t) x0;
												sp.u0->t0100.u1 = (size_t) x8;
											}
											x0 = x26;
											x1 = x19;
											x2 = x28;
											x0 = memcpy(x0, x1, x2);
l0000000000029340:
											*(x26 + x28) = (word64) 0x00;
											x0.u1 = sp + 0x0100;
											_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
											Eq_14 v115;
											v115.u0 = sp.u0->t0100.u0;
											w8.u1 = (word32) v115;
											w19 = w0;
											if ((w8 & 0x01) != 0x00)
											{
												byte v116 = sp.u0->b0120;
												w8.u1 = (word32) v116;
												if ((w8 & 0x01) != 0x00)
													goto l0000000000029360;
												goto l0000000000029300;
											}
											x0.u1 = sp.u0->t0110.u1;
											((real64) q0, x0, x1);
											byte v119 = sp.u0->b0120;
											w8.u1 = (word32) v119;
											if ((w8 & 0x01) != 0x00)
											{
l0000000000029300:
												x0.u1 = sp.u0->t0130.u1;
												((real64) q0, x0, x1);
												if ((w19 & 0x01) != 0x00)
													goto l0000000000029364;
											}
											else
											{
l0000000000029360:
												if ((w19 & 0x01) != 0x00)
												{
l0000000000029364:
													x8.u0 = 0x00070000;
													x8 = *((word32) x8 + 3432);
													x1 = *x8.u1;
													x2.u0 = 0x00071000;
													x3.u0 = 0x00052000;
													x0.u1 = sp + 600;
													w4 = 0x00 | 0x06;
													x2.u1 = x2 + 0x0198;
													x3.u1 = (word32) x3 + 0x05EE;
													x5 = 0x00;
													_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
													x0.u1 = sp.u0->t0040.u1;
													x1.u0 = 0x00052000;
													w2 = 0x00 | 0x7C;
													x1.u1 = x1 + 0x11;
													fn000000000001BB30();
													x0.u1 = sp + 600;
													LogCapture::~LogCapture();
													sp.u0 = sp + 0x08;
												}
											}
											w25 = 0x00 | 0x01;
											Eq_14 v118;
											v118.u0 = sp.u0->t0170.u0;
											w8.u1 = (word32) v118;
											if ((w8 & 0x01) != 0x00)
												goto l0000000000029170;
											goto l0000000000029168;
										}
										x0.u1 = x0 + 0x01;
										x8 = x25 - x0;
										NZCV.u0 = cond(x8 - 0x02);
									} while (Test(GE,NZV));
								}
								w25 = 0x00;
l0000000000029160:
								Eq_14 v110;
								v110.u0 = sp.u0->t0170.u0;
								w8.u1 = (word32) v110;
								if ((w8 & 0x01) != 0x00)
								{
l0000000000029168:
									x0.u1 = *((word32) sp + 384);
									((real64) q0, x0, x1);
								}
l0000000000029170:
								x1.u1 = *((word32) sp + 432);
								x0.u1 = sp + 424;
								fn000000000001B760();
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 0x0DC0);
								x19.u1 = *((word32) sp + 464);
								x8.u1 = x8 + 0x10;
								sp.u0->t01C0.u1 = (size_t) x8;
								if (x19 != 0x00)
									x8.u1 = x19 + 0x08;
								if (w25 == 0x00)
								{
									w8.u2 = sp.u0->t0054.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2;
									x1.u1 = x22 + 0x01;
									x22 = __bfm<word64>(x22, x1, 0, 31);
									NZCV.u0 = cond(w8 - w1);
									if (Test(EQ,Z))
										goto l0000000000029434;
									goto l0000000000028D84;
								}
l000000000002959C:
								w21 = 0x00 | 0x01;
								x19.u1 = sp.u0->t0250.u1;
								if (x19 == 0x00)
								{
l00000000000295C0:
									if (w21 != 0x00)
									{
l00000000000295C4:
										w0.u0 = 0x00;
										goto l00000000000297A0;
									}
									Eq_14 v121 = *((word32) x20 + 8);
									w10.u1 = (word32) v121;
									x11 = *((word32) x20 + 24);
									w8 = *x20.u1;
									x12.u0 = x20 + 0x09;
									w31 = w10 & 0x01;
									NZ.u0 = cond(w31);
									x20.u1 = Test(EQ,Z) ? x12 : x11;
									x9.u1 = sp + 0x70;
									x0 = x20;
									x21.u1 = x9 + 0x08;
									sp.u0->t0070.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w8;
									Eq_27624 v122;
									v122.u0 = sp + 0x0080;
									v122.u0->t0000.u1 = (size_t) 0x00;
									v122.u0->t0008.u1 = (size_t) 0x00;
									sp.u0->t0078.u1 = (size_t) 0x00;
									x0 = strlen(x0);
									sp.u0 = x0 + 0x10;
									NZCV.u0 = cond(sp);
									if (Test(ULT,C))
									{
										x19 = x0;
										NZCV.u0 = cond(x0 - 0x17);
										if (Test(ULT,C))
										{
											w8 = w19 << 1;
											x21.u1 = x21 + 0x01;
											sp.u0->t0078.u0 = (byte) (byte) w8;
											if (x19 == 0x00)
												goto l0000000000029674;
										}
										else
										{
											x8.u1 = x19 + 0x10;
											x22 = x8 & ~0x0F;
											x0 = x22;
											_Znwm();
											x8 = x22 | 0x01;
											x21 = x0;
											Eq_27660 v126;
											v126.u0 = sp + 0x0080;
											v126->u0 = x19;
											((word32) v126 + 8)->u0 = x0;
											sp.u0->t0078.u1 = (size_t) x8;
										}
										x0 = x21;
										x1 = x20;
										x2 = x19;
										x0 = memcpy(x0, x1, x2);
l0000000000029674:
										*(x21 + x19) = (word64) 0x00;
										x0.u1 = sp + 0x70;
										((LEVELS) x0);
										if ((w0 & 0x01) == 0x00)
										{
											w19.u0 = 0x00;
											Eq_14 v131;
											v131.u0 = sp.u0->t0078.u0;
											w8.u1 = (word32) v131;
											if ((w8 & 0x01) == 0x00)
												goto l000000000002974C;
											goto l00000000000296D8;
										}
										x8.u0 = 0x00070000;
										x8 = *((word32) x8 + 3432);
										Eq_27715 v124;
										v124.u0 = sp + 96;
										v124->u0 = 0x00;
										((word32) v124 + 8)->u0 = 0x00;
										sp.u0->t0058.u1 = 0x00;
										x19 = *x8.u1;
										x0 = x19;
										x0 = strlen(x0);
										sp.u0 = x0 + 0x10;
										NZCV.u0 = cond(sp);
										if (Test(ULT,C))
										{
											x20 = x0;
											NZCV.u0 = cond(x0 - 0x17);
											if (Test(ULT,C))
											{
												x9.u1 = sp + 88;
												ui32 w20;
												w8 = w20 << 1;
												x21 = x9 | 0x01;
												sp.u0->t0058.u0 = (byte) (byte) w8;
												if (x20 == 0x00)
													goto l000000000002972C;
											}
											else
											{
												x8.u1 = x20 + 0x10;
												x22 = x8 & ~0x0F;
												x0 = x22;
												_Znwm();
												x8 = x22 | 0x01;
												x21 = x0;
												Eq_27756 v129;
												v129.u0 = sp + 96;
												v129.u0->t0000.u1 = (size_t) x20;
												v129.u0->t0008.u1 = (size_t) x0;
												sp.u0->t0058.u1 = (size_t) x8;
											}
											x0 = x21;
											x1 = x19;
											x2 = x20;
											x0 = memcpy(x0, x1, x2);
l000000000002972C:
											*(x21 + x20) = (word64) 0x00;
											x0.u1 = sp + 88;
											_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
											Eq_14 v127;
											v127.u0 = sp.u0->t0058.u0;
											w8.u1 = (word32) v127;
											w19 = w0;
											if ((w8 & 0x01) != 0x00)
											{
												Eq_14 v128;
												v128.u0 = sp.u0->t0078.u0;
												w8.u1 = (word32) v128;
												if ((w8 & 0x01) != 0x00)
												{
l000000000002974C:
													if ((w19 & 0x01) == 0x00)
														goto l000000000002979C;
l0000000000029750:
													x8.u0 = 0x00070000;
													x8 = *((word32) x8 + 3432);
													x2.u0 = 0x00071000;
													x3.u0 = 0x00052000;
													x2.u1 = x2 + 0x0118;
													x1 = *x8.u1;
													x3.u1 = (word32) x3 + 0x05EE;
													x0.u1 = sp + 600;
													w4 = 0x00 | 0x06;
													x5 = 0x00;
													x19.u1 = sp + 600;
													_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
													x0.u1 = x19 + 0x08;
													x1.u0 = 0x00052000;
													x1.u1 = x1 + 0xB7;
													w2 = 0x19;
													fn000000000001BB30();
													x0.u1 = sp + 600;
													LogCapture::~LogCapture();
													sp.u0 = sp + 0x08;
l000000000002979C:
													w0 = 0x00 | 0x01;
l00000000000297A0:
													x8.u1 = sp.u0->t0030.u1;
													x8 = *((word32) x8 + 40);
													x9 = *((word32) x29 - 96);
													x31 = x8 - x9;
													NZCV.u0 = cond(x31);
													if (Test(EQ,Z))
													{
														sp.u0 = sp + 944;
														Eq_26427 v81;
														v81.u0 = sp + 80;
														x29.u1 = v81.u0->t0000.u1;
														x30.u1 = v81.u0->t0008.u1;
														Eq_26436 v82;
														v82.u0 = sp + 64;
														x20.u1 = v82.u0->t0000.u1;
														x19.u1 = v82.u0->t0008.u1;
														Eq_26445 v83;
														v83.u0 = sp + 48;
														x22.u1 = v83.u0->t0000.u1;
														x21.u1 = v83.u0->t0008.u1;
														Eq_26454 v84;
														v84.u0 = sp + 32;
														x24.u1 = v84.u0->t0000.u1;
														x23.u1 = v84.u0->t0008.u1;
														Eq_26463 v85;
														v85.u0 = sp + 16;
														x26.u1 = v85.u0->t0000.u1;
														x25.u1 = v85.u0->t0008.u1;
														Eq_25178 v86 = sp;
														x28.u1 = v86.u0->ptr0000;
														x27.u1 = v86.u0->t0008.u1;
														sp.u0 = sp + 96;
														return;
													}
													goto l0000000000029800;
												}
											}
											else
											{
												x0.u1 = sp.u0->t0068.u1;
												((real64) q0, x0, x1);
												Eq_14 v130;
												v130.u0 = sp.u0->t0078.u0;
												w8.u1 = (word32) v130;
												if ((w8 & 0x01) == 0x00)
													goto l000000000002974C;
											}
l00000000000296D8:
											x0.u1 = sp.u0->t0088.u1;
											((real64) q0, x0, x1);
											if ((w19 & 0x01) != 0x00)
												goto l000000000002979C;
											goto l0000000000029750;
										}
l000000000002983C:
										x0.u1 = sp + 88;
										fn000000000001B2D0();
										x21 = x1;
										x20 = x0;
										byte v41 = sp.u0->b0120;
										w8.u1 = (word32) v41;
										if ((w8 & 0x01) != 0x00)
										{
											x0.u1 = sp.u0->t0130.u1;
											((real64) q0, x0, x1);
										}
										byte v51 = sp.u0->t0170.u0;
										w8.u1 = (word32) v51;
										if ((w8 & 0x01) != 0x00)
										{
											x0.u1 = *((word32) sp + 384);
											((real64) q0, x0, x1);
										}
										x1.u1 = *((word32) sp + 432);
										x0.u1 = sp + 424;
										fn000000000001B760();
										x8.u0 = 0x00070000;
										x8 = *((word32) x8 + 0x0DC0);
										x19.u1 = *((word32) sp + 464);
										x8.u1 = x8 + 0x10;
										sp.u0->t01C0.u1 = (size_t) x8;
										if (x19 == 0x00)
										{
											x19.u1 = sp.u0->t0250.u1;
											while (x19 == 0x00)
											{
												NZCV.u0 = cond(w21 - 0x02);
												if (Test(EQ,Z))
												{
													x0 = x20;
													__cxa_begin_catch();
													x8.u1 = sp.u0->t0008.u1;
													x21 = x0;
													x20.u1 = x8 + 0x08;
													x1.u0 = 0x00052000;
													x1.u1 = x1 + 0x8E;
													w2 = 0x28;
													x0 = x20;
													fn000000000001B8B0();
													Eq_14 v65 = *((word32) x21 + 16);
													w8.u1 = (word32) v65;
													Eq_25996 v66;
													v66.u0 = x21 + 24;
													x9.u1 = v66.u0->t0000.u1;
													x10.u1 = v66.u0->t0008.u1;
													x11.u1 = x21 + 0x11;
													w31 = w8 & 0x01;
													NZ.u0 = cond(w31);
													C = false;
													V = false;
													x12 = x8 >> 1;
													x1.u1 = Test(EQ,Z) ? x11 : x10;
													x2.u1 = Test(EQ,Z) ? x12 : x9;
													x0 = x20;
													fn000000000001B1B0();
													x1.u0 = 0x00050000;
													x1.u1 = x1 + 1848;
													w2 = 0x00 | 0x01;
													x0 = x20;
													fn000000000001B1B0();
													Eq_14 v67 = *((word32) x21 + 40);
													w8.u1 = (word32) v67;
													Eq_26031 v68;
													v68.u0 = x21 + 48;
													x9.u1 = v68.u0->t0000.u1;
													x10.u1 = v68.u0->t0008.u1;
													x11.u1 = x21 + 0x29;
													w31 = w8 & 0x01;
													NZ.u0 = cond(w31);
													C = false;
													V = false;
													x12 = x8 >> 1;
													x1.u1 = Test(EQ,Z) ? x11 : x10;
													x2.u1 = Test(EQ,Z) ? x12 : x9;
													x0 = x20;
													fn000000000001B1B0();
													x1.u0 = 0x00050000;
													x1.u1 = x1 + 0x073A;
													w2 = 0x00 | 0x02;
													x0 = x20;
													fn000000000001B1B0();
													x8 = *x21.u1;
													x0 = x21;
													x8 = *((word32) x8 + 16);
													x8();
													x19 = x0;
													x0 = strlen(x0);
													x2 = x0;
													x0 = x20;
													x1 = x19;
													fn000000000001B1B0();
													x8.u0 = 0x00071000;
													x8.u1 = x8 + 0x0198;
													x9.u1 = sp + 0xA8;
													x22.u1 = x9 + 0x08;
													Eq_14 v69 = *((word32) x8 + 8);
													w9.u1 = (word32) v69;
													x11 = *((word32) x8 + 24);
													w10 = *x8.u1;
													x8.u1 = x8 + 0x09;
													w31 = w9 & 0x01;
													NZ.u0 = cond(w31);
													x19.u1 = Test(EQ,Z) ? x8 : x11;
													x0 = x19;
													((word32) sp + 0x00A8)->u0 = w10;
													Eq_26098 v70;
													v70.u0 = sp + 0x00B8;
													v70.u0->t0000.u1 = (size_t) 0x00;
													v70.u0->t0008.u1 = (size_t) 0x00;
													sp.u0->t00B0.u1 = (size_t) 0x00;
													x0 = strlen(x0);
													sp.u0 = x0 + 0x10;
													NZCV.u0 = cond(sp);
													if (Test(UGE,C))
													{
														x0 = x22;
														fn000000000001B2D0();
l000000000002A068:
														x0.u1 = sp + 0x90;
														fn000000000001B2D0();
														x20 = x0;
														x0.u1 = sp + 600;
														LogCapture::~LogCapture();
														sp.u0 = sp + 0x08;
														__cxa_end_catch();
														goto l000000000002990C;
													}
													x21 = x0;
													NZCV.u0 = cond(x0 - 0x17);
													if (Test(ULT,C))
													{
														w8 = w21 << 1;
														x22.u1 = x22 + 0x01;
														sp.u0->t00B0.u0 = (byte) (byte) w8;
														if (x21 == 0x00)
															goto l0000000000029F20;
													}
													else
													{
														x8.u1 = x21 + 0x10;
														x23 = x8 & ~0x0F;
														x0 = x23;
														_Znwm();
														x8 = x23 | 0x01;
														x22 = x0;
														Eq_26134 v72;
														v72.u0 = sp + 0x00B8;
														v72->u0 = x21;
														((word32) v72 + 8)->u0 = x0;
														sp.u0->t00B0.u1 = (size_t) x8;
													}
													x0 = x22;
													x1 = x19;
													x2 = x21;
													x0 = memcpy(x0, x1, x2);
l0000000000029F20:
													*(x22 + x21) = (word64) 0x00;
													x0.u1 = sp + 0xA8;
													((LEVELS) x0);
													if ((w0 & 0x01) == 0x00)
													{
														w19.u0 = 0x00;
														Eq_14 v79;
														v79.u0 = sp.u0->t00B0.u0;
														w8.u1 = (word32) v79;
														if ((w8 & 0x01) != 0x00)
															goto l0000000000029F84;
														goto l0000000000029FE4;
													}
													x8.u0 = 0x00070000;
													x8 = *((word32) x8 + 3432);
													Eq_26189 v71;
													v71.u0 = sp + 0x0098;
													v71->u0 = 0x00;
													((word32) v71 + 8)->u0 = 0x00;
													sp.u0->t0090.u1 = 0x00;
													x21 = *x8.u1;
													x0 = x21;
													x0 = strlen(x0);
													sp.u0 = x0 + 0x10;
													NZCV.u0 = cond(sp);
													if (Test(UGE,C))
														goto l000000000002A068;
													x22 = x0;
													NZCV.u0 = cond(x0 - 0x17);
													if (Test(ULT,C))
													{
														x9.u1 = sp + 0x90;
														w8 = w22 << 1;
														x19 = x9 | 0x01;
														sp.u0->t0090.u0 = (byte) (byte) w8;
														if (x22 == 0x00)
															goto l0000000000029FC4;
													}
													else
													{
														x8.u1 = x22 + 0x10;
														x23 = x8 & ~0x0F;
														x0 = x23;
														_Znwm();
														x8 = x23 | 0x01;
														x19 = x0;
														Eq_26237 v77;
														v77.u0 = sp + 0x0098;
														v77.u0->t0000.u1 = (size_t) x22;
														v77.u0->t0008.u1 = (size_t) x0;
														sp.u0->t0090.u1 = (size_t) x8;
													}
													x0 = x19;
													x1 = x21;
													x2 = x22;
													x0 = memcpy(x0, x1, x2);
l0000000000029FC4:
													*(x19 + x22) = (word64) 0x00;
													x0.u1 = sp + 0x90;
													_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
													Eq_14 v73;
													v73.u0 = sp.u0->t0090.u0;
													w8.u1 = (word32) v73;
													w19 = w0;
													if ((w8 & 0x01) != 0x00)
													{
														Eq_14 v74;
														v74.u0 = sp.u0->t00B0.u0;
														w8.u1 = (word32) v74;
														if ((w8 & 0x01) != 0x00)
															goto l0000000000029FE4;
														goto l0000000000029F84;
													}
													x0.u1 = sp.u0->t00A0.u1;
													((real64) q0, x0, x1);
													Eq_14 v78;
													v78.u0 = sp.u0->t00B0.u0;
													w8.u1 = (word32) v78;
													if ((w8 & 0x01) != 0x00)
													{
l0000000000029F84:
														x0.u1 = sp.u0->t00C0.u1;
														((real64) q0, x0, x1);
														if ((w19 & 0x01) != 0x00)
															goto l0000000000029FE8;
														goto l000000000002A044;
													}
l0000000000029FE4:
													if ((w19 & 0x01) == 0x00)
														goto l000000000002A044;
l0000000000029FE8:
													x8.u0 = 0x00070000;
													x8 = *((word32) x8 + 3432);
													x1 = *x8.u1;
													x2.u0 = 0x00071000;
													x3.u0 = 0x00052000;
													x2.u1 = x2 + 0x0198;
													x3.u1 = (word32) x3 + 0x05EE;
													x0.u1 = sp + 600;
													w4 = 0x00 | 0x06;
													x5 = 0x00;
													x19.u1 = sp + 600;
													_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
													x10.u1 = sp.u0->t0008.u1;
													x0.u1 = x19 + 0x08;
													Eq_14 v75 = *((word32) x10 + 8);
													w8.u1 = (word32) v75;
													Eq_26361 v76;
													v76.u0 = x10 + 16;
													x9.u1 = v76.u0->t0000.u1;
													x10.u1 = v76.u0->t0008.u1;
													w31 = w8 & 0x01;
													NZ.u0 = cond(w31);
													C = false;
													V = false;
													x11 = x8 >> 1;
													x1.u1 = Test(NE,Z) ? x10 : x20 + 0x01;
													x2.u1 = Test(EQ,Z) ? x11 : x9;
													fn000000000001BB30();
													goto l000000000002A03C;
												}
												NZCV.u0 = cond(w21 - 0x01);
												if (Test(EQ,Z))
												{
													x0 = x20;
													__cxa_begin_catch();
													x8 = *x0.u1;
													x8 = *((word32) x8 + 16);
													x8();
													x8.u1 = sp.u0->t0008.u1;
													x19 = x0;
													x20.u1 = x8 + 0x08;
													x0 = strlen(x0);
													x2 = x0;
													x0 = x20;
													x1 = x19;
													fn000000000001B8B0();
													x8.u0 = 0x00071000;
													x8.u1 = x8 + 0x0198;
													x9.u1 = sp + 0xE0;
													x22.u1 = x9 + 0x08;
													Eq_14 v87 = *((word32) x8 + 8);
													w9.u1 = (word32) v87;
													x11 = *((word32) x8 + 24);
													w10 = *x8.u1;
													x8.u1 = x8 + 0x09;
													w31 = w9 & 0x01;
													NZ.u0 = cond(w31);
													x19.u1 = Test(EQ,Z) ? x8 : x11;
													x0 = x19;
													sp.u0->t00E0.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2.t0000.u2 = (Eq_107457) w10;
													Eq_26526 v88;
													v88.u0 = sp + 0x00F0;
													v88.u0->t0000.u1 = (size_t) 0x00;
													v88.u0->t0008.u1 = (size_t) 0x00;
													sp.u0->t00E8.u1 = (size_t) 0x00;
													x0 = strlen(x0);
													sp.u0 = x0 + 0x10;
													NZCV.u0 = cond(sp);
													if (Test(UGE,C))
													{
														x0 = x22;
														fn000000000001B2D0();
l0000000000029B98:
														x0.u1 = sp + 200;
														fn000000000001B2D0();
														x20 = x0;
														x0.u1 = sp + 600;
														LogCapture::~LogCapture();
														sp.u0 = sp + 0x08;
														__cxa_end_catch();
														goto l000000000002990C;
													}
													x21 = x0;
													NZCV.u0 = cond(x0 - 0x17);
													if (Test(ULT,C))
													{
														w8 = w21 << 1;
														x22.u1 = x22 + 0x01;
														sp.u0->t00E8.u0 = (byte) (byte) w8;
														if (x21 == 0x00)
															goto l0000000000029A5C;
													}
													else
													{
														x8.u1 = x21 + 0x10;
														x23 = x8 & ~0x0F;
														x0 = x23;
														_Znwm();
														x8 = x23 | 0x01;
														x22 = x0;
														Eq_26562 v137;
														v137.u0 = sp + 0x00F0;
														v137->u0 = x21;
														((word32) v137 + 8)->u0 = x0;
														sp.u0->t00E8.u1 = (size_t) x8;
													}
													x0 = x22;
													x1 = x19;
													x2 = x21;
													x0 = memcpy(x0, x1, x2);
l0000000000029A5C:
													*(x22 + x21) = (word64) 0x00;
													x0.u1 = sp + 0xE0;
													((LEVELS) x0);
													if ((w0 & 0x01) == 0x00)
													{
														w19.u0 = 0x00;
														byte v136 = sp.u0->t00E8.u0;
														w8.u1 = (word32) v136;
														if ((w8 & 0x01) != 0x00)
															goto l0000000000029AC0;
														goto l0000000000029B20;
													}
													x8.u0 = 0x00070000;
													x8 = *((word32) x8 + 3432);
													Eq_26678 v91;
													v91.u0 = sp + 0x00D0;
													v91->u0 = 0x00;
													((word32) v91 + 8)->u0 = 0x00;
													sp.u0->t00C8.u1 = 0x00;
													x21 = *x8.u1;
													x0 = x21;
													x0 = strlen(x0);
													sp.u0 = x0 + 0x10;
													NZCV.u0 = cond(sp);
													if (Test(UGE,C))
														goto l0000000000029B98;
													x22 = x0;
													NZCV.u0 = cond(x0 - 0x17);
													if (Test(ULT,C))
													{
														x9.u1 = sp + 200;
														w8 = w22 << 1;
														x19 = x9 | 0x01;
														sp.u0->t00C8.u0 = (byte) (byte) w8;
														if (x22 == 0x00)
															goto l0000000000029B00;
													}
													else
													{
														x8.u1 = x22 + 0x10;
														x23 = x8 & ~0x0F;
														x0 = x23;
														_Znwm();
														x8 = x23 | 0x01;
														x19 = x0;
														Eq_26726 v135;
														v135.u0 = sp + 0x00D0;
														v135.u0->t0000.u1 = (size_t) x22;
														v135.u0->t0008.u1 = (size_t) x0;
														sp.u0->t00C8.u1 = (size_t) x8;
													}
													x0 = x19;
													x1 = x21;
													x2 = x22;
													x0 = memcpy(x0, x1, x2);
l0000000000029B00:
													*(x19 + x22) = (word64) 0x00;
													x0.u1 = sp + 200;
													_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
													Eq_14 v94;
													v94.u0 = sp.u0->t00C8.u0;
													w8.u1 = (word32) v94;
													w19 = w0;
													if ((w8 & 0x01) != 0x00)
													{
														Eq_14 v95;
														v95.u0 = sp.u0->t00E8.u0;
														w8.u1 = (word32) v95;
														if ((w8 & 0x01) != 0x00)
															goto l0000000000029B20;
														goto l0000000000029AC0;
													}
													x0.u1 = sp.u0->t00D8.u1;
													((real64) q0, x0, x1);
													Eq_14 v133;
													v133.u0 = sp.u0->t00E8.u0;
													w8.u1 = (word32) v133;
													if ((w8 & 0x01) != 0x00)
													{
l0000000000029AC0:
														x0.u1 = sp.u0->t00F8.u1;
														((real64) q0, x0, x1);
														if ((w19 & 0x01) != 0x00)
															goto l0000000000029B24;
													}
													else
													{
l0000000000029B20:
														if ((w19 & 0x01) != 0x00)
														{
l0000000000029B24:
															x8.u0 = 0x00070000;
															x8 = *((word32) x8 + 3432);
															x1 = *x8.u1;
															x2.u0 = 0x00071000;
															x3.u0 = 0x00052000;
															x2.u1 = x2 + 0x0198;
															x3.u1 = (word32) x3 + 0x05EE;
															x0.u1 = sp + 600;
															w4 = 0x00 | 0x06;
															x5 = 0x00;
															x19.u1 = sp + 600;
															_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
															x10.u1 = sp.u0->t0008.u1;
															x0.u1 = x19 + 0x08;
															Eq_14 v96 = *((word32) x10 + 8);
															w8.u1 = (word32) v96;
															Eq_26904 v97;
															v97.u0 = x10 + 16;
															x9.u1 = v97.u0->t0000.u1;
															x10.u1 = v97.u0->t0008.u1;
															w31 = w8 & 0x01;
															NZ.u0 = cond(w31);
															C = false;
															V = false;
															x11 = x8 >> 1;
															x1.u1 = Test(NE,Z) ? x10 : x20 + 0x01;
															x2.u1 = Test(EQ,Z) ? x11 : x9;
															fn000000000001BB30();
l000000000002A03C:
															x0.u1 = sp + 600;
															LogCapture::~LogCapture();
															sp.u0 = sp + 0x08;
														}
													}
l000000000002A044:
													__cxa_end_catch();
													goto l00000000000295C4;
												}
l000000000002990C:
												x0 = x20;
												_Unwind_Resume();
												x0.u1 = sp.u0->t0088.u1;
												((real64) q0, x0, x1);
												x0 = x20;
												_Unwind_Resume();
												sp.u0->t0008.u1 = (size_t) x24;
												x21 = x1;
												x20 = x0;
												x19.u1 = sp.u0->t0250.u1;
											}
											x8.u1 = x19 + 0x08;
										}
										else
											x8.u1 = x19 + 0x08;
									}
l000000000002981C:
									x0 = x21;
									fn000000000001B2D0();
l0000000000029824:
									x0.u1 = sp.u0->t0020.u1;
									fn000000000001B2D0();
l000000000002982C:
									x0.u1 = sp + 0x0100;
									fn000000000001B2D0();
l0000000000029834:
									x0.u1 = sp + 0x01D8;
									fn000000000001B2D0();
									goto l000000000002983C;
								}
l00000000000295A8:
								x8.u1 = x19 + 0x08;
							}
						}
						else
						{
							x0.u1 = *((word32) sp + 328);
							((real64) q0, x0, x1);
							Eq_14 v111;
							v111.u0 = sp.u0->t0158.u0;
							w8.u1 = (word32) v111;
							if ((w8 & 0x01) == 0x00)
								goto l00000000000290A0;
						}
l0000000000029040:
						x0.u1 = *((word32) sp + 360);
						((real64) q0, x0, x1);
						if ((w19 & 0x01) == 0x00)
							goto l0000000000029104;
						goto l00000000000290A4;
					}
l00000000000297F0:
					x0.u1 = sp + 0x0138;
					fn000000000001B2D0();
l00000000000297F8:
					x0.u1 = sp + 0x0170;
					fn000000000001B2D0();
l0000000000029800:
					__stack_chk_fail();
				}
				x8.u0 = 0x00071000;
				x8.u1 = x8 + 0x0198;
				x9.u1 = sp + 0x01F0;
				x22.u1 = x9 + 0x08;
				Eq_14 v139 = *((word32) x8 + 8);
				w9.u1 = (word32) v139;
				x11 = *((word32) x8 + 24);
				w10 = *x8.u1;
				x8.u1 = x8 + 0x09;
				w31 = w9 & 0x01;
				NZ.u0 = cond(w31);
				x19.u1 = Test(EQ,Z) ? x8 : x11;
				x0 = x19;
				((word32) sp + 496)->u0 = w10;
				sp.u0->t0208.u1 = 0x00;
				Eq_25691 v140;
				v140.u0 = sp + 504;
				v140->u0 = 0x00;
				((word32) v140 + 8)->u0 = 0x00;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(ULT,C))
				{
					x21 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						w8 = w21 << 1;
						x22.u1 = x22 + 0x01;
						sp.u0->b01F8 = (byte) w8;
						if (x21 == 0x00)
							goto l0000000000029488;
					}
					else
					{
						x8.u1 = x21 + 0x10;
						x23 = x8 & ~0x0F;
						x0 = x23;
						_Znwm();
						x8 = x23 | 0x01;
						x22 = x0;
						sp.u0->t0208.u1 = (size_t) x0;
						Eq_27962 v142;
						v142.u0 = sp + 504;
						v142.u0->t0000.u1 = (size_t) x8;
						v142.u0->t0008.u1 = (size_t) x21;
					}
					x0 = x22;
					x1 = x19;
					x2 = x21;
					x0 = memcpy(x0, x1, x2);
l0000000000029488:
					*(x22 + x21) = (word64) 0x00;
					x0.u1 = sp + 0x01F0;
					((LEVELS) x0);
					if ((w0 & 0x01) == 0x00)
					{
						w19.u0 = 0x00;
						byte v147 = sp.u0->b01F8;
						w8.u1 = (word32) v147;
						if ((w8 & 0x01) == 0x00)
							goto l000000000002954C;
						goto l00000000000294EC;
					}
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					Eq_28014 v141;
					v141.u0 = sp + 480;
					v141.u0->t0000.u1 = (size_t) 0x00;
					v141.u0->t0008.u1 = (size_t) 0x00;
					sp.u0->t01D8.u1 = (size_t) 0x00;
					x21 = *x8.u1;
					x0 = x21;
					x0 = strlen(x0);
					sp.u0 = x0 + 0x10;
					NZCV.u0 = cond(sp);
					if (Test(UGE,C))
						goto l0000000000029834;
					x22 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						x9.u1 = sp + 0x01D8;
						w8 = w22 << 1;
						x19 = x9 | 0x01;
						sp.u0->t01D8.u0 = (byte) (byte) w8;
						if (x22 == 0x00)
							goto l000000000002952C;
					}
					else
					{
						x8.u1 = x22 + 0x10;
						x23 = x8 & ~0x0F;
						x0 = x23;
						_Znwm();
						x8 = x23 | 0x01;
						x19 = x0;
						Eq_28055 v145;
						v145.u0 = sp + 480;
						v145->u0 = x22;
						((word32) v145 + 8)->u0 = x0;
						sp.u0->t01D8.u1 = (size_t) x8;
					}
					x0 = x19;
					x1 = x21;
					x2 = x22;
					x0 = memcpy(x0, x1, x2);
l000000000002952C:
					*(x19 + x22) = (word64) 0x00;
					x0.u1 = sp + 0x01D8;
					_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
					Eq_14 v143;
					v143.u0 = sp.u0->t01D8.u0;
					w8.u1 = (word32) v143;
					w19 = w0;
					if ((w8 & 0x01) != 0x00)
					{
						byte v144 = sp.u0->b01F8;
						w8.u1 = (word32) v144;
						if ((w8 & 0x01) != 0x00)
						{
l000000000002954C:
							if ((w19 & 0x01) == 0x00)
								goto l000000000002959C;
l0000000000029550:
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 3432);
							x1 = *x8.u1;
							x2.u0 = 0x00071000;
							x3.u0 = 0x00052000;
							x2.u1 = x2 + 0x0198;
							x3.u1 = (word32) x3 + 0x05EE;
							x0.u1 = sp + 600;
							w4 = 0x00 | 0x06;
							x5 = 0x00;
							x19.u1 = sp + 600;
							_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
							x0.u1 = x19 + 0x08;
							x1.u0 = 0x00051000;
							x1.u1 = x1 + 0x0FEE;
							w2 = 0x14;
							fn000000000001BB30();
							x0.u1 = sp + 600;
							LogCapture::~LogCapture();
							sp.u0 = sp + 0x08;
							goto l000000000002959C;
						}
					}
					else
					{
						x0.u1 = *((word32) sp + 488);
						((real64) q0, x0, x1);
						byte v146 = sp.u0->b01F8;
						w8.u1 = (word32) v146;
						if ((w8 & 0x01) == 0x00)
							goto l000000000002954C;
					}
l00000000000294EC:
					x0.u1 = sp.u0->t0208.u1;
					((real64) q0, x0, x1);
					if ((w19 & 0x01) == 0x00)
						goto l000000000002959C;
					goto l0000000000029550;
				}
l0000000000029814:
				x0 = x22;
				fn000000000001B2D0();
				goto l000000000002981C;
			}
		}
		else
		{
			x0.u1 = *((word32) sp + 544);
			((real64) q0, x0, x1);
			Eq_14 v148;
			v148.u0 = sp.u0->t0230.u0;
			w8.u1 = (word32) v148;
			if ((w8 & 0x01) == 0x00)
				goto l0000000000028C48;
		}
l0000000000028BE4:
		x0.u1 = sp.u0->t0240.u1;
		((real64) q0, x0, x1);
		if ((w19 & 0x01) == 0x00)
			goto l0000000000028CC4;
		goto l0000000000028C4C;
	}
l000000000002980C:
	x0.u1 = sp + 0x0210;
	fn000000000001B2D0();
	goto l0000000000029814;
}

// 000000000002A0CC: void ()
void ()
{
	word32 w0;
	struct Eq_28179 * fp;
	struct Eq_28179 * sp = fp;
	sp = (struct Eq_28179 *) ((char *) sp - 80);
	word64 x28;
	sp->qw0000 = x28;
	struct Eq_28188 * v7 = (struct Eq_28188 *) (&sp->qw0000 + 2);
	word64 x24;
	v7->qw0000 = x24;
	word64 x23;
	v7->qw0008 = x23;
	struct Eq_28199 * v10 = (struct Eq_28199 *) (&sp->qw0000 + 4);
	word64 x22;
	v10->qw0000 = x22;
	struct Eq_28205 * x21;
	v10->ptr0008 = x21;
	struct Eq_28210 * v13 = (struct Eq_28210 *) (&sp->qw0000 + 6);
	word64 x20;
	v13->qw0000 = x20;
	word64 x19;
	v13->qw0008 = x19;
	struct Eq_28221 * v16 = (struct Eq_28221 *) (&sp->qw0000 + 8);
	struct Eq_28223 * x29;
	v16->ptr0000 = x29;
	word64 x30;
	v16->qw0008 = x30;
	x29 = (struct Eq_28223 *) (&sp->qw0000 + 8);
	sp -= 464;
	Eq_1720 sysreg3_3_13_0_2;
	x21 = __mrs(sysreg3_3_13_0_2);
	Eq_28241 x8;
	x8.u0 = x21->t0028.u0;
	word64 x0;
	x19 = x0;
	x0 += 0x30;
	x29->tFFFFFFB8.u0 = (ui64) x8;
	x8 = &sp->qw0080;
	ui32 w1 = 0x00 | 0x0E;
	fn000000000001AF40();
	x0 = sp->qw0080;
	sp->qw0078 = 0x00;
	word64 * x1 = &sp->qw0078;
	rs2_get_device_count();
	word32 w20 = w0;
	x0 = sp->qw0078;
	fn000000000001ADF0();
	x19 = sp->qw0088;
	if (x19 == 0x00)
	{
		x8.u0 = x21->t0028.u0;
		Eq_28241 x9;
		x9.u0 = x29->tFFFFFFB8.u0;
		ptr64 x31 = x8 - x9;
		Eq_28288 NZCV;
		NZCV.u0 = cond(x31);
		bool Z;
		if (Test(NE,Z))
			__stack_chk_fail();
		else
		{
			w0 = w20;
			sp = &sp->qw0088 + 41;
			struct Eq_28300 * v28 = (struct Eq_28300 *) (&sp->qw0000 + 8);
			x29 = v28->ptr0000;
			x30 = v28->qw0008;
			struct Eq_28309 * v29 = (struct Eq_28309 *) (&sp->qw0000 + 6);
			x20 = v29->qw0000;
			x19 = v29->qw0008;
			struct Eq_28318 * v30 = (struct Eq_28318 *) (&sp->qw0000 + 4);
			x22 = v30->qw0000;
			x21 = v30->ptr0008;
			struct Eq_28327 * v31 = (struct Eq_28327 *) (&sp->qw0000 + 2);
			x24 = v31->qw0000;
			x23 = v31->qw0008;
			x28 = sp->qw0000;
			sp = &sp->qw0000 + 0x0A;
		}
	}
	else
		x8 = x19 + 0x08;
}

// 000000000002A75C: void (Register Eq_6549 x0)
void (Eq_6549 x0)
{
	ui32 w0;
	Eq_28341 fp;
	Eq_28341 sp = fp;
	sp.u0 = (word32) sp - 96;
	word64 x28;
	sp->u0 = x28;
	Eq_14 x27;
	((word32) sp + 8)->u0 = x27;
	struct Eq_28354 * v8 = (struct Eq_28354 *) ((word32) sp + 16);
	Eq_14 x26;
	v8->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_28365 * v11 = (struct Eq_28365 *) ((word32) sp + 32);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_28376 * v14 = (struct Eq_28376 *) ((word32) sp + 48);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_28387 * v17 = (struct Eq_28387 *) ((word32) sp + 64);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_28398 * v20 = (struct Eq_28398 *) ((word32) sp + 80);
	struct Eq_28400 * x29;
	v20->ptr0000 = x29;
	Eq_14 x30;
	v20->t0008.u1 = (size_t) x30;
	x29 = (struct Eq_28400 *) ((word32) sp + 80);
	sp -= 0x01B0;
	Eq_1720 sysreg3_3_13_0_2;
	x23 = __mrs(sysreg3_3_13_0_2);
	Eq_14 x8 = *((word32) x23 + 40);
	Eq_14 x9;
	x9.u1 = (word32) sp + 64;
	x25.u0 = 0x00052000;
	x19 = x0;
	Eq_14 w20;
	w20.u0 = 0x00;
	x24.u1 = (word32) x9 + 8;
	x25.u1 = (word32) x25 + 0x00F7;
	x29->tFFFFFFA0.u1 = (size_t) x8;
	struct Eq_28434 * v26 = (struct Eq_28434 *) ((word32) sp + 72);
	v26->qw0000 = 0x00;
	v26->qw0008 = 0x00;
	((word32) sp + 64)->u0 = x24;
l000000000002A7A8:
	((word32) sp + 88)->u0 = 0x00;
	x0 = *((word32) x19 + 8);
	Eq_14 x2;
	x2.u1 = (word32) sp + 88;
	Eq_14 w1 = w20;
	rs2_supports_device_info();
	ui32 w21 = w0;
	x0.u1 = *((word32) sp + 88);
	fn000000000001ADF0();
	Eq_28479 NZCV;
	NZCV.u0 = cond(w21 - 0x01);
	word32 NV;
	if (Test(GE,NV))
	{
		((word32) sp + 88)->u0 = 0x00;
		x0 = *((word32) x19 + 8);
		x2.u1 = (word32) sp + 88;
		w1 = w20;
		rs2_get_device_info();
		x21 = x0;
		x0.u1 = *((word32) sp + 88);
		fn000000000001ADF0();
		x27.u1 = *((word32) sp + 72);
		if (x27 != 0x00)
		{
l000000000002A7F8:
			x26 = x24;
			Eq_14 w8;
			while (true)
			{
				word32 NZV;
				while (true)
				{
					w8 = *((word32) x27 + 32);
					NZCV.u0 = cond(w20 - w8);
					if (Test(GE,NZV))
						break;
					x8 = *x27.u1;
					if (x8 == 0x00)
					{
						x26 = x27;
						x22 = *x26.u1;
						if (x22 != 0x00)
							goto l000000000002A8BC;
						goto l000000000002A858;
					}
					x26 = x27;
					x27 = x8;
				}
				NZCV.u0 = cond(w8 - w20);
				if (Test(GE,NZV))
					break;
				x26 = x27;
				x26.u1 = (word32) x26 + 8;
				x8 = *x26.u1;
				if (x8 == 0x00)
					break;
				x27 = x8;
			}
l000000000002A850:
			x22 = *x26.u1;
			if (x22 != 0x00)
				goto l000000000002A8BC;
l000000000002A858:
			w0 = 0x00 | 0x40;
			_Znwm();
			*((word32) x0 + 32) = w20;
			Eq_28508 v33;
			v33.u0 = x0 + 48;
			v33->u0 = 0x00;
			((word32) v33 + 8)->u0 = 0x00;
			((word32) x0 + 40)->u0 = 0x00;
			Eq_14 v34 = x0;
			v34.u1->u1 = 0x00;
			((word32) v34 + 8)->u0 = 0x00;
			*((word32) x0 + 16) = x27;
			*x26.u1 = x0;
			x8.u1 = *((word32) sp + 64);
			x22 = x0;
			x8 = *x8.u1;
			Eq_14 x1;
			if (x8 != 0x00)
			{
				((word32) sp + 64)->u0 = x8;
				x1 = *x26.u1;
			}
			else
				x1 = x22;
			x0.u1 = *((word32) sp + 72);
			fn000000000001BD70();
			x8.u1 = *((word32) sp + 80);
			x8.u1 = (word32) x8 + 1;
			((word32) sp + 80)->u0 = x8;
l000000000002A8BC:
			x0 = x21;
			x22.u1 = (word32) x22 + 40;
			x0 = strlen(x0);
			x2 = x0;
			x0 = x22;
			x1 = x21;
			fn000000000001B8B0();
			w20.u1 = (word32) w20 + 1;
			NZCV.u0 = cond(w20 - 0x0D);
			bool C;
			if (Test(UGE,C))
			{
				x8.u0 = 0x00071000;
				x8.u1 = (word32) x8 + 0x0118;
				x9.u1 = (word32) sp + 32;
				x21.u1 = (word32) x9 + 8;
				Eq_14 v40 = *((word32) x8 + 8);
				Eq_14 w9;
				w9.u1 = (word32) v40;
				Eq_14 x11 = *((word32) x8 + 24);
				Eq_14 w10 = *x8.u1;
				x8.u1 = (word32) x8 + 9;
				ui32 w31 = w9 & 0x01;
				Eq_28634 NZ;
				NZ.u0 = cond(w31);
				bool Z;
				x20.u1 = Test(EQ,Z) ? x8 : x11;
				x0 = x20;
				((word32) sp + 32)->u0 = w10;
				struct Eq_28643 * v47 = (struct Eq_28643 *) ((word32) sp + 48);
				v47->qw0000 = 0x00;
				v47->qw0008 = 0x00;
				((word32) sp + 40)->u0 = 0x00;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(UGE,C))
				{
					x0 = x21;
					fn000000000001B2D0();
					goto l000000000002AFC0;
				}
				x19 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				ui32 w19;
				if (Test(ULT,C))
				{
					w8 = w19 << 1;
					x21.u1 = x21 + 0x01;
					((word32) sp + 40)->u0 = (byte) w8;
					if (x19 == 0x00)
						goto l000000000002A978;
				}
				else
				{
					x8.u1 = x19 + 0x10;
					x22 = x8 & ~0x0F;
					x0 = x22;
					_Znwm();
					x8 = x22 | 0x01;
					x21 = x0;
					Eq_28679 v50;
					v50.u0 = sp + 48;
					v50->u0 = x19;
					((word32) v50 + 8)->u0 = x0;
					((word32) sp + 40)->u0 = x8;
				}
				x0 = x21;
				x1 = x20;
				x2 = x19;
				x0 = memcpy(x0, x1, x2);
l000000000002A978:
				*(x21 + x19) = (word64) 0x00;
				x0.u1 = sp + 0x20;
				((LEVELS) x0);
				if ((w0 & 0x01) == 0x00)
				{
					w19 = 0x00;
					Eq_14 v89;
					v89.u1 = *((word32) sp + 40);
					w8.u1 = (word32) v89;
					if ((w8 & 0x01) == 0x00)
						goto l000000000002AA30;
					goto l000000000002AA48;
				}
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				Eq_28735 v49;
				v49.u0 = sp + 16;
				v49->u0 = 0x00;
				((word32) v49 + 8)->u0 = 0x00;
				((word32) sp + 8)->u0 = 0x00;
				x19 = *x8.u1;
				x0 = x19;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(UGE,C))
				{
					x0.u1 = sp + 0x08;
					fn000000000001B2D0();
					x19 = x0;
					x0.u1 = sp + 88;
					LogCapture::~LogCapture();
					sp.u0 = sp + 0x08;
					x1.u1 = *((word32) sp + 72);
					x0.u1 = sp + 0x40;
					fn000000000001B760();
					x0 = x19;
					_Unwind_Resume();
					_ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE();
					return;
				}
				x20 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					x9.u1 = sp + 0x08;
					w8 = w20 << 1;
					x21 = x9 | 0x01;
					((word32) sp + 8)->u0 = (byte) w8;
					if (x20 == 0x00)
						goto l000000000002AA10;
				}
				else
				{
					x8.u1 = x20 + 0x10;
					x22 = x8 & ~0x0F;
					x0 = x22;
					_Znwm();
					x8 = x22 | 0x01;
					x21 = x0;
					Eq_28776 v53;
					v53.u0 = sp + 16;
					v53->u0 = x20;
					((word32) v53 + 8)->u0 = x0;
					((word32) sp + 8)->u0 = x8;
				}
				x0 = x21;
				x1 = x19;
				x2 = x20;
				x0 = memcpy(x0, x1, x2);
l000000000002AA10:
				*(x21 + x20) = (word64) 0x00;
				x0.u1 = sp + 0x08;
				_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
				Eq_14 v51;
				v51.u1 = *((word32) sp + 8);
				w8.u1 = (word32) v51;
				w19 = w0;
				word128 q0;
				if ((w8 & 0x01) != 0x00)
				{
					Eq_14 v52;
					v52.u1 = *((word32) sp + 40);
					w8.u1 = (word32) v52;
					if ((w8 & 0x01) != 0x00)
					{
l000000000002AA30:
						if ((w19 & 0x01) != 0x00)
							goto l000000000002AF7C;
l000000000002AA54:
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						x1 = *x8.u1;
						x2.u0 = 0x00071000;
						Eq_14 x3;
						x3.u0 = 0x00052000;
						x2.u1 = (word32) x2 + 0x0118;
						x3.u1 = (word32) x3 + 0x05EE;
						x0.u1 = sp + 88;
						ui32 w4 = 0x00 | 0x06;
						word64 x5 = 0x00;
						x19.u1 = sp + 88;
						_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
						x0.u1 = x19 + 0x08;
						x1.u0 = 0x00052000;
						x1.u1 = x1 + 0xFF;
						ui32 w2 = 0x00 | 0x06;
						fn000000000001BB30();
						x22.u1 = *((word32) sp + 72);
						x19 = x0;
						if (x22 != 0x00)
						{
							x21 = x24;
							while (true)
							{
								while (true)
								{
									w8 = *((word32) x22 + 32);
									NZCV.u0 = cond(w8 - 0x01);
									if (Test(LT,NV))
										break;
									x8 = *x22.u1;
									if (x8 == 0x00)
									{
										x21 = x22;
										x20 = *x21.u1;
										if (x20 != 0x00)
											goto l000000000002AB58;
										goto l000000000002AB04;
									}
									x21 = x22;
									x22 = x8;
								}
								if ((w8 & 0x00) == 0x00)
									break;
								x21 = x22;
								x21.u1 = x21 + 8;
								x8 = *x21.u1;
								if (x8 == 0x00)
									break;
								x22 = x8;
							}
						}
						else
						{
							x22 = x24;
							x21 = x24;
						}
						x20 = *x21.u1;
						if (x20 != 0x00)
							goto l000000000002AB58;
l000000000002AB04:
						w0 = 0x00 | 0x40;
						_Znwm();
						((word32) x0 + 32)->u0 = 0x00;
						Eq_29051 v66;
						v66.u0 = x0 + 48;
						v66->u0 = 0x00;
						((word32) v66 + 8)->u0 = 0x00;
						((word32) x0 + 40)->u0 = 0x00;
						Eq_14 v67 = x0;
						v67.u1->u1 = 0x00;
						((word32) v67 + 8)->u0 = 0x00;
						*((word32) x0 + 16) = x22;
						*x21.u1 = x0;
						x8.u1 = *((word32) sp + 64);
						x20 = x0;
						x8 = *x8.u1;
						if (x8 != 0x00)
						{
							((word32) sp + 64)->u0 = x8;
							x1 = *x21.u1;
						}
						else
							x1 = x20;
						x0.u1 = *((word32) sp + 72);
						fn000000000001BD70();
						x8.u1 = *((word32) sp + 80);
						x8.u1 = x8 + 0x01;
						((word32) sp + 80)->u0 = x8;
l000000000002AB58:
						Eq_14 v68 = *((word32) x20 + 40);
						w8.u1 = (word32) v68;
						Eq_29007 v70;
						v70.u0 = x20 + 48;
						x9.u1 = *v70;
						Eq_14 x10;
						x10.u1 = *((word32) v70 + 8);
						x11.u1 = x20 + 0x29;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						bool V = false;
						uint64 x12 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x11 : x10;
						x2.u1 = Test(EQ,Z) ? x12 : x9;
						x0 = x19;
						fn000000000001BB30();
						x1.u0 = 0x00052000;
						x1.u1 = x1 + 262;
						w2 = 0x11;
						fn000000000001BB30();
						x22.u1 = *((word32) sp + 72);
						x19 = x0;
						if (x22 != 0x00)
						{
							x21 = x24;
							while (true)
							{
								while (true)
								{
									w8 = *((word32) x22 + 32);
									NZCV.u0 = cond(w8 - 0x02);
									if (Test(LT,NV))
										break;
									x8 = *x22.u1;
									if (x8 == 0x00)
									{
										x21 = x22;
										x20 = *x21.u1;
										if (x20 != 0x00)
											goto l000000000002AC54;
										goto l000000000002ABEC;
									}
									x21 = x22;
									x22 = x8;
								}
								NZCV.u0 = cond(w8 - 0x01);
								if (Test(EQ,Z))
									break;
								x21 = x22;
								x21.u1 = x21 + 8;
								x8 = *x21.u1;
								if (x8 == 0x00)
									break;
								x22 = x8;
							}
						}
						else
						{
							x22 = x24;
							x21 = x24;
						}
						x20 = *x21.u1;
						if (x20 != 0x00)
							goto l000000000002AC54;
l000000000002ABEC:
						w0 = 0x00 | 0x40;
						_Znwm();
						w8 = 0x00 | 0x01;
						Eq_29202 v73;
						v73.u0 = x0 + 48;
						v73->u0 = 0x00;
						((word32) v73 + 8)->u0 = 0x00;
						((word32) x0 + 40)->u0 = 0x00;
						Eq_14 v74 = x0;
						v74.u1->u1 = 0x00;
						((word32) v74 + 8)->u0 = 0x00;
						*((word32) x0 + 16) = x22;
						*((word32) x0 + 32) = w8;
						*x21.u1 = x0;
						x8.u1 = *((word32) sp + 64);
						x20 = x0;
						x8 = *x8.u1;
						if (x8 != 0x00)
						{
							((word32) sp + 64)->u0 = x8;
							x1 = *x21.u1;
						}
						else
							x1 = x20;
						x0.u1 = *((word32) sp + 72);
						fn000000000001BD70();
						x8.u1 = *((word32) sp + 80);
						x8.u1 = x8 + 0x01;
						((word32) sp + 80)->u0 = x8;
l000000000002AC54:
						Eq_14 v75 = *((word32) x20 + 40);
						w8.u1 = (word32) v75;
						Eq_29160 v76;
						v76.u0 = x20 + 48;
						x9.u1 = *v76;
						x10.u1 = *((word32) v76 + 8);
						x11.u1 = x20 + 0x29;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x12 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x11 : x10;
						x2.u1 = Test(EQ,Z) ? x12 : x9;
						x0 = x19;
						fn000000000001BB30();
						x1.u0 = 0x00052000;
						x1.u1 = x1 + 0x0118;
						w2 = 0x00 | 0x18;
						fn000000000001BB30();
						x22.u1 = *((word32) sp + 72);
						x19 = x0;
						if (x22 != 0x00)
						{
							x21 = x24;
							while (true)
							{
								while (true)
								{
									w8 = *((word32) x22 + 32);
									NZCV.u0 = cond(w8 - 0x0D);
									if (Test(LT,NV))
										break;
									x8 = *x22.u1;
									if (x8 == 0x00)
									{
										x21 = x22;
										x20 = *x21.u1;
										if (x20 != 0x00)
											goto l000000000002AD50;
										goto l000000000002ACE8;
									}
									x21 = x22;
									x22 = x8;
								}
								NZCV.u0 = cond(w8 - 0x0C);
								if (Test(EQ,Z))
									break;
								x21 = x22;
								x21.u1 = x21 + 8;
								x8 = *x21.u1;
								if (x8 == 0x00)
									break;
								x22 = x8;
							}
						}
						else
						{
							x22 = x24;
							x21 = x24;
						}
						x20 = *x21.u1;
						if (x20 != 0x00)
							goto l000000000002AD50;
l000000000002ACE8:
						w0 = 0x00 | 0x40;
						_Znwm();
						w8 = 0x00 | 0x0C;
						Eq_29341 v77;
						v77.u0 = x0 + 48;
						v77->u0 = 0x00;
						((word32) v77 + 8)->u0 = 0x00;
						((word32) x0 + 40)->u0 = 0x00;
						Eq_14 v78 = x0;
						v78.u1->u1 = 0x00;
						((word32) v78 + 8)->u0 = 0x00;
						*((word32) x0 + 16) = x22;
						*((word32) x0 + 32) = w8;
						*x21.u1 = x0;
						x8.u1 = *((word32) sp + 64);
						x20 = x0;
						x8 = *x8.u1;
						if (x8 != 0x00)
						{
							((word32) sp + 64)->u0 = x8;
							x1 = *x21.u1;
						}
						else
							x1 = x20;
						x0.u1 = *((word32) sp + 72);
						fn000000000001BD70();
						x8.u1 = *((word32) sp + 80);
						x8.u1 = x8 + 0x01;
						((word32) sp + 80)->u0 = x8;
l000000000002AD50:
						Eq_14 v79 = *((word32) x20 + 40);
						w8.u1 = (word32) v79;
						Eq_29301 v80;
						v80.u0 = x20 + 48;
						x9.u1 = *v80;
						x10.u1 = *((word32) v80 + 8);
						x11.u1 = x20 + 0x29;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x12 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x11 : x10;
						x2.u1 = Test(EQ,Z) ? x12 : x9;
						x0 = x19;
						fn000000000001BB30();
						x1.u0 = 0x00052000;
						x1.u1 = x1 + 0x0131;
						w2 = 0x14;
						fn000000000001BB30();
						x22.u1 = *((word32) sp + 72);
						x19 = x0;
						if (x22 != 0x00)
						{
							x21 = x24;
							while (true)
							{
								while (true)
								{
									w8 = *((word32) x22 + 32);
									NZCV.u0 = cond(w8 - 0x03);
									if (Test(LT,NV))
										break;
									x8 = *x22.u1;
									if (x8 == 0x00)
									{
										x21 = x22;
										x20 = *x21.u1;
										if (x20 != 0x00)
											goto l000000000002AE4C;
										goto l000000000002ADE4;
									}
									x21 = x22;
									x22 = x8;
								}
								NZCV.u0 = cond(w8 - 0x02);
								if (Test(EQ,Z))
									break;
								x21 = x22;
								x21.u1 = x21 + 8;
								x8 = *x21.u1;
								if (x8 == 0x00)
									break;
								x22 = x8;
							}
						}
						else
						{
							x22 = x24;
							x21 = x24;
						}
						x20 = *x21.u1;
						if (x20 != 0x00)
							goto l000000000002AE4C;
l000000000002ADE4:
						w0 = 0x00 | 0x40;
						_Znwm();
						w8 = 0x00 | 0x02;
						Eq_29468 v81;
						v81.u0 = x0 + 48;
						v81->u0 = 0x00;
						((word32) v81 + 8)->u0 = 0x00;
						((word32) x0 + 40)->u0 = 0x00;
						Eq_14 v82 = x0;
						v82.u1->u1 = 0x00;
						((word32) v82 + 8)->u0 = 0x00;
						*((word32) x0 + 16) = x22;
						*((word32) x0 + 32) = w8;
						*x21.u1 = x0;
						x8.u1 = *((word32) sp + 64);
						x20 = x0;
						x8 = *x8.u1;
						if (x8 != 0x00)
						{
							((word32) sp + 64)->u0 = x8;
							x1 = *x21.u1;
						}
						else
							x1 = x20;
						x0.u1 = *((word32) sp + 72);
						fn000000000001BD70();
						x8.u1 = *((word32) sp + 80);
						x8.u1 = x8 + 0x01;
						((word32) sp + 80)->u0 = x8;
l000000000002AE4C:
						Eq_14 v83 = *((word32) x20 + 40);
						w8.u1 = (word32) v83;
						Eq_29426 v84;
						v84.u0 = x20 + 48;
						x9.u1 = *v84;
						x10.u1 = *((word32) v84 + 8);
						x11.u1 = x20 + 0x29;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x12 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x11 : x10;
						x2.u1 = Test(EQ,Z) ? x12 : x9;
						x0 = x19;
						fn000000000001BB30();
						x1.u0 = 0x00052000;
						x1.u1 = x1 + 0x0146;
						w2 = 0x00 | 0x0C;
						fn000000000001BB30();
						x8.u1 = *((word32) sp + 72);
						x19 = x0;
						if (x8 == 0x00)
						{
							x21 = x24;
							x20 = *x21.u1;
							if (x20 != 0x00)
								goto l000000000002AF50;
							goto l000000000002AEF8;
						}
						x21 = x24;
l000000000002AE98:
						w9 = *((word32) x8 + 32);
						NZCV.u0 = cond(w9 - 0x0A);
						if (Test(GE,NV))
						{
							x9 = *x8.u1;
							if (x9 != 0x00)
							{
								x21 = x8;
								goto l000000000002AE94;
							}
							x24 = x8;
							x21 = x8;
							x20 = *x21.u1;
							if (x20 == 0x00)
								goto l000000000002AEF8;
						}
						else
						{
							NZCV.u0 = cond(w9 - 0x09);
							if (Test(NE,Z))
							{
								x21 = x8;
								x21.u1 = x21 + 8;
								x9 = *x21.u1;
								if (x9 != 0x00)
								{
l000000000002AE94:
									x8 = x9;
									goto l000000000002AE98;
								}
							}
							x24 = x8;
							x20 = *x21.u1;
							if (x20 == 0x00)
							{
l000000000002AEF8:
								w0 = 0x00 | 0x40;
								_Znwm();
								w8.u0 = 0x09;
								Eq_29630 v85;
								v85.u0 = x0 + 48;
								v85->u0 = 0x00;
								((word32) v85 + 8)->u0 = 0x00;
								((word32) x0 + 40)->u0 = 0x00;
								Eq_14 v86 = x0;
								v86.u1->u1 = 0x00;
								((word32) v86 + 8)->u0 = 0x00;
								*((word32) x0 + 16) = x24;
								*((word32) x0 + 32) = w8;
								*x21.u1 = x0;
								x8.u1 = *((word32) sp + 64);
								x20 = x0;
								x8 = *x8.u1;
								if (x8 != 0x00)
								{
									((word32) sp + 64)->u0 = x8;
									x1 = *x21.u1;
								}
								else
									x1 = x20;
								x0.u1 = *((word32) sp + 72);
								fn000000000001BD70();
								x8.u1 = *((word32) sp + 80);
								x8.u1 = x8 + 0x01;
								((word32) sp + 80)->u0 = x8;
								goto l000000000002AF50;
							}
						}
l000000000002AF50:
						Eq_14 v87 = *((word32) x20 + 40);
						w8.u1 = (word32) v87;
						Eq_29594 v88;
						v88.u0 = x20 + 48;
						x9.u1 = *v88;
						x10.u1 = *((word32) v88 + 8);
						x11.u1 = x20 + 0x29;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x12 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x11 : x10;
						x2.u1 = Test(EQ,Z) ? x12 : x9;
						x0 = x19;
						fn000000000001BB30();
						x0.u1 = sp + 88;
						LogCapture::~LogCapture();
						sp.u0 = sp + 0x08;
l000000000002AF7C:
						x1.u1 = *((word32) sp + 72);
						x0.u1 = sp + 0x40;
						fn000000000001B760();
						x8 = *((word32) x23 + 40);
						x9.u1 = x29->tFFFFFFA0.u1;
						Eq_28917 x31 = x8 - x9;
						NZCV.u0 = cond(x31);
						if (Test(EQ,Z))
						{
							sp.u0 = sp + 0x01B0;
							Eq_28934 v59;
							v59.u0 = sp + 80;
							x29 = (struct Eq_28400 *) *v59;
							x30.u1 = *((word32) v59 + 8);
							Eq_28943 v60;
							v60.u0 = sp + 64;
							x20.u1 = *v60;
							x19.u1 = *((word32) v60 + 8);
							Eq_28952 v61;
							v61.u0 = sp + 48;
							x22.u1 = *v61;
							x21.u1 = *((word32) v61 + 8);
							Eq_28961 v62;
							v62.u0 = sp + 32;
							x24.u1 = *v62;
							x23.u1 = *((word32) v62 + 8);
							Eq_28970 v63;
							v63.u0 = sp + 16;
							x26.u1 = *v63;
							x25.u1 = *((word32) v63 + 8);
							Eq_28341 v64 = sp;
							x28 = (word64) *v64;
							x27.u1 = *((word32) v64 + 8);
							sp.u0 = sp + 96;
							return;
						}
l000000000002AFC0:
						__stack_chk_fail();
					}
				}
				else
				{
					x0.u1 = *((word32) sp + 24);
					((real64) q0, x0, x1);
					Eq_14 v72;
					v72.u1 = *((word32) sp + 40);
					w8.u1 = (word32) v72;
					if ((w8 & 0x01) == 0x00)
						goto l000000000002AA30;
				}
l000000000002AA48:
				x0.u1 = *((word32) sp + 56);
				((real64) q0, x0, x1);
				if ((w19 & 0x01) == 0x00)
					goto l000000000002AF7C;
				goto l000000000002AA54;
			}
			goto l000000000002A7A8;
		}
	}
	else
	{
		x21 = x25;
		x27.u1 = *((word32) sp + 72);
		if (x27 != 0x00)
			goto l000000000002A7F8;
	}
	x27 = x24;
	x26 = x24;
	goto l000000000002A850;
}

// 000000000002B048: define _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
// Called from:
//      
define _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
{
	Eq_14 x8;
	Eq_1720 sysreg3_3_13_0_2;
	Eq_29688 fp;
	Eq_29688 sp = fp;
	sp.u0 = (word32) sp - 96;
	Eq_14 x28;
	sp.u0->ptr0000 = (union Eq_14 *) x28;
	Eq_14 x27;
	sp.u0->t0008.u1 = (size_t) x27;
	struct Eq_29701 * v8 = (struct Eq_29701 *) &sp.u0->t0010.u0;
	Eq_14 x26;
	v8->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_29712 * v11 = (struct Eq_29712 *) &sp.u0->t0020.u0;
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_29723 * v14 = (struct Eq_29723 *) &sp.u0->t0030.u0;
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_29734 * v17 = (struct Eq_29734 *) ((word32) sp + 64);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_29745 * v20 = (struct Eq_29745 *) ((word32) sp + 80);
	Eq_14 x29;
	v20->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v20->t0008.u1 = (size_t) x30;
	x29.u1 = (word32) sp + 80;
	sp -= 0x0310;
	Eq_14 x9 = __mrs(sysreg3_3_13_0_2);
	sp.u0->t0010.u1 = (size_t) x9;
	x9 = *((word32) x9 + 40);
	Eq_14 x1;
	x21 = x1;
	((word32) sp + 80)->u0 = x9;
	Eq_14 x0;
	sp.u0->t0008.u1 = (size_t) x0;
	x0.u1 = (word32) x0 + 48;
	Eq_14 v26 = x8;
	v26.u1->u1 = 0x00;
	((word32) v26 + 8)->u0 = 0x00;
	sp.u0->t0048.u1 = (size_t) x8;
	((word32) x8 + 16)->u0 = 0x00;
	x8.u1 = (word32) sp + 416;
	Eq_14 w1 = 0x00 | 0x0E;
	fn000000000001AF40();
	x22.u0 = 0x00071000;
	x22.u1 = (word32) x22 + 0x0118;
	x8.u1 = (word32) sp + 384;
	x24.u1 = (word32) x8 + 8;
	Eq_14 v29 = *((word32) x22 + 8);
	Eq_14 w8;
	w8.u1 = (word32) v29;
	Eq_14 x10 = *((word32) x22 + 24);
	Eq_14 w9 = *x22.u1;
	Eq_14 x11;
	x11.u1 = (word32) x22 + 9;
	ui32 w31 = w8 & 0x01;
	Eq_29830 NZ;
	NZ.u0 = cond(w31);
	bool Z;
	x23.u1 = Test(EQ,Z) ? x11 : x10;
	x0 = x23;
	((word32) sp + 384)->u0 = w9;
	struct Eq_29839 * v38 = (struct Eq_29839 *) ((word32) sp + 400);
	v38->qw0000 = 0x00;
	v38->qw0008 = 0x00;
	((word32) sp + 0x0188)->u0 = 0x00;
	x0 = strlen(x0);
	sp.u0 = (word32) x0 + 16;
	Eq_29859 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
l000000000002BAD0:
		x0 = x24;
		fn000000000001B2D0();
		goto l000000000002BAD8;
	}
	x20 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	Eq_14 w20;
	if (Test(ULT,C))
	{
		w8 = w20 << 1;
		x24.u1 = (word32) x24 + 1;
		((word32) sp + 0x0188)->u0 = (byte) w8;
		if (x20 == 0x00)
			goto l000000000002B130;
	}
	else
	{
		x8.u1 = (word32) x20 + 16;
		x25 = x8 & ~0x0F;
		x0 = x25;
		_Znwm();
		x8 = x25 | 0x01;
		x24 = x0;
		Eq_29877 v109;
		v109.u0 = sp + 400;
		v109.u0->t0000.u1 = (size_t) x20;
		v109.u0->t0008.u1 = (size_t) x0;
		((word32) sp + 0x0188)->u0 = x8;
	}
	x0 = x24;
	x1 = x23;
	Eq_14 x2 = x20;
	x0 = memcpy(x0, x1, x2);
l000000000002B130:
	*(x24 + x20) = (word64) 0x00;
	x0.u1 = sp + 0x0180;
	((LEVELS) x0);
	Eq_14 w0;
	if ((w0 & 0x01) == 0x00)
	{
		w20.u0 = 0x00;
		Eq_14 v45;
		v45.u1 = *((word32) sp + 0x0188);
		w8.u1 = (word32) v45;
		if ((w8 & 0x01) == 0x00)
			goto l000000000002B1E8;
		goto l000000000002B200;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_29935 v42;
	v42.u0 = sp + 368;
	v42.u0->t0000.u1 = (size_t) 0x00;
	v42.u0->t0008.u1 = (size_t) 0x00;
	((word32) sp + 360)->u0 = 0x00;
	x20 = *x8.u1;
	x0 = x20;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	Eq_14 q0;
	Eq_14 x3;
	ui32 w4;
	word64 x5;
	ui32 w2;
	Eq_14 x12;
	Eq_14 w10;
	bool V;
	Eq_30281 x31;
	if (Test(ULT,C))
	{
		x23 = x0;
		NZCV.u0 = cond(x0 - 0x17);
		Eq_14 w23;
		if (Test(ULT,C))
		{
			x9.u1 = sp + 0x0168;
			w8 = w23 << 1;
			x24 = x9 | 0x01;
			((word32) sp + 360)->u0 = (byte) w8;
			if (x23 == 0x00)
				goto l000000000002B1C8;
		}
		else
		{
			x8.u1 = x23 + 0x10;
			x25 = x8 & ~0x0F;
			x0 = x25;
			_Znwm();
			x8 = x25 | 0x01;
			x24 = x0;
			Eq_29976 v46;
			v46.u0 = sp + 368;
			v46->u0 = x23;
			((word32) v46 + 8)->u0 = x0;
			((word32) sp + 360)->u0 = x8;
		}
		x0 = x24;
		x1 = x20;
		x2 = x23;
		x0 = memcpy(x0, x1, x2);
l000000000002B1C8:
		*(x24 + x23) = (word64) 0x00;
		x0.u1 = sp + 0x0168;
		_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
		Eq_14 v47;
		v47.u1 = *((word32) sp + 360);
		w8.u1 = (word32) v47;
		w20 = w0;
		if ((w8 & 0x01) != 0x00)
		{
			Eq_14 v48;
			v48.u1 = *((word32) sp + 0x0188);
			w8.u1 = (word32) v48;
			if ((w8 & 0x01) != 0x00)
			{
l000000000002B1E8:
				if ((w20 & 0x01) != 0x00)
					goto l000000000002B284;
				goto l000000000002B20C;
			}
		}
		else
		{
			x0.u1 = *((word32) sp + 376);
			((real64) q0, x0, x1);
			Eq_14 v56;
			v56.u1 = *((word32) sp + 0x0188);
			w8.u1 = (word32) v56;
			if ((w8 & 0x01) == 0x00)
				goto l000000000002B1E8;
		}
l000000000002B200:
		x0.u1 = *((word32) sp + 408);
		((real64) q0, x0, x1);
		if ((w20 & 0x01) == 0x00)
			goto l000000000002B284;
l000000000002B20C:
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 3432);
		x1 = *x8.u1;
		x2.u0 = 0x00071000;
		x3.u0 = 0x00052000;
		x2.u1 = (word32) x2 + 0x0118;
		x3.u1 = (word32) x3 + 0x05EE;
		x0.u1 = sp + 0x01B0;
		w4 = 0x00 | 0x06;
		x5 = 0x00;
		x19.u1 = sp + 0x01B0;
		_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
		x0.u1 = x19 + 0x08;
		x1.u0 = 0x00051000;
		x1.u1 = x1 + 0x0FE4;
		w2 = 0x09;
		fn000000000001BB30();
		x20 = x0;
		x0.u1 = *((word32) sp + 416);
		((word32) sp + 336)->u0 = 0x00;
		x1.u1 = sp + 336;
		rs2_get_device_count();
		w23 = w0;
		x0.u1 = *((word32) sp + 336);
		fn000000000001ADF0();
		x0 = x20;
		w1 = w23;
		fn000000000001B220();
		x0.u1 = sp + 0x01B0;
		LogCapture::~LogCapture();
		sp.u0 = sp + 0x08;
l000000000002B284:
		x0.u1 = *((word32) sp + 416);
		((word32) sp + 336)->u0 = 0x00;
		x1.u1 = sp + 336;
		rs2_get_device_count();
		((word32) sp + 0x0044)->u0 = w0;
		x0.u1 = *((word32) sp + 336);
		fn000000000001ADF0();
		w8.u1 = *((word32) sp + 0x0044);
		if (w8 == 0x00)
		{
l000000000002BA44:
			x19.u1 = *((word32) sp + 424);
			if (x19 != 0x00)
				x8.u1 = x19 + 0x08;
			goto l000000000002BA7C;
		}
		Eq_14 x13;
		x13.u1 = (word32) x21 + 1;
		sp.u0->t0030.u1 = (size_t) x13;
		x13.u0 = 0x00070000;
		x8.u1 = sp + 0x0138;
		x9.u1 = sp + 0xE0;
		x13 = *((word32) x13 + 0x0DC0);
		x11.u1 = sp + 200;
		x19.u1 = x8 + 0x08;
		x8.u1 = x9 + 0x09;
		x12.u1 = sp + 0x01B0;
		sp.u0->t0028.u1 = (size_t) x8;
		x8 = x11 | 0x01;
		x10.u1 = sp + 0x0100;
		sp.u0->t0018.u1 = (size_t) x8;
		x8.u1 = x12 + 0x08;
		w1.u0 = 0x00;
		x28.u0 = 0x00;
		x26.u1 = x9 + 0x08;
		x23 = x10 | 0x01;
		sp.u0->t0020.u1 = (size_t) x8;
		x8.u1 = (word32) x13 + 16;
		((word32) sp + 56)->u0 = x8;
l000000000002B37C:
		x8.u1 = sp + 336;
		x0.u1 = sp + 0x01A0;
		fn000000000001BD80();
		Eq_30204 v57;
		v57.u0 = sp + 344;
		x8.u1 = *v57;
		x24.u1 = *((word32) v57 + 8);
		x9.u1 = *((word32) sp + 56);
		((word32) sp + 304)->u0 = x24;
		Eq_30219 v58;
		v58.u0 = sp + 288;
		v58->u0 = x9;
		((word32) v58 + 8)->u0 = x8;
		if (x24 != 0x00)
		{
			x8.u1 = x24 + 0x08;
			do
			{
				union Eq_3183 * v59 = &*x8.u1;
				x9 = __load_exclusive<word64>(v59);
				x9.u1 = x9 + 0x01;
				union Eq_3192 * v60 = &*x8.u1;
				w10 = __store_exclusive<word64>(v60, x9);
			} while (w10 != 0x00);
		}
		x8.u1 = sp + 0x0138;
		x1.u1 = sp + 288;
		fn000000000001B0B0();
		x8.u0 = 0x00070000;
		x8 = *((word32) x8 + 0x0DC0);
		x8.u1 = x8 + 0x10;
		((word32) sp + 288)->u0 = x8;
		if (x24 != 0x00)
			x8.u1 = x24 + 0x08;
		x25.u1 = sp.u0->t0140.u1;
		word32 NV;
		if (x25 != 0x00)
		{
			x20 = x19;
			while (true)
			{
				while (true)
				{
					w8 = *((word32) x25 + 32);
					NZCV.u0 = cond(w8 - 0x03);
					if (Test(LT,NV))
						break;
					x8 = *x25.u1;
					if (x8 == 0x00)
					{
						x20 = x25;
						x24 = *x20.u1;
						if (x24 != 0x00)
							goto l000000000002B4CC;
						goto l000000000002B464;
					}
					x20 = x25;
					x25 = x8;
				}
				NZCV.u0 = cond(w8 - 0x02);
				if (Test(EQ,Z))
					break;
				x20 = x25;
				x20.u1 = x20 + 8;
				x8 = *x20.u1;
				if (x8 == 0x00)
					break;
				x25 = x8;
			}
		}
		else
		{
			x25 = x19;
			x20 = x19;
		}
		x24 = *x20.u1;
		if (x24 != 0x00)
			goto l000000000002B4CC;
l000000000002B464:
		w0 = 0x00 | 0x40;
		_Znwm();
		w8 = 0x00 | 0x02;
		*((word32) x0 + 32) = w8;
		Eq_30406 v70;
		v70.u0 = x0 + 48;
		v70.u0->t0000.u1 = (size_t) 0x00;
		v70.u0->t0008.u1 = (size_t) 0x00;
		((word32) x0 + 40)->u0 = 0x00;
		Eq_14 v71 = x0;
		v71.u1->u0 = 0x00;
		((word32) v71 + 8)->u0 = 0x00;
		*((word32) x0 + 16) = x25;
		*x20.u1 = x0;
		x8.u1 = sp.u0->t0138.u1;
		x24 = x0;
		x8 = *x8.u1;
		if (x8 != 0x00)
		{
			sp.u0->t0138.u1 = (size_t) x8;
			x1 = *x20.u1;
		}
		else
			x1 = x24;
		x0.u1 = sp.u0->t0140.u1;
		fn000000000001BD70();
		x8.u1 = sp.u0->t0148.u1;
		x8.u1 = x8 + 0x01;
		sp.u0->t0148.u1 = (size_t) x8;
l000000000002B4CC:
		Eq_30369 v72;
		v72.u0 = sp + 264;
		v72->u0 = 0x00;
		((word32) v72 + 8)->u0 = 0x00;
		sp.u0->t0100.u1 = 0x00;
		x8 = x24;
		x8.u1 = x8 + 40;
		byte v73 = (byte) *x8.u1;
		w9.u1 = (word32) v73;
		if ((w9 & 0x01) != 0x00)
		{
			x9 = *((word32) x8 + 16);
			q0 = *x8.u1;
			x8.u1 = sp + 0x0100;
			sp.u0->t0110.u1 = (size_t) x9;
			*x8.u1 = q0;
			goto l000000000002B558;
		}
		x25 = *((word32) x24 + 48);
		sp.u0 = x25 + 0x10;
		NZCV.u0 = cond(sp);
		if (Test(UGE,C))
			goto l000000000002BAB8;
		x24 = *((word32) x24 + 56);
		NZCV.u0 = cond(x25 - 0x17);
		ui32 w25;
		if (Test(ULT,C))
		{
			w8 = w25 << 1;
			x27 = x23;
			sp.u0->t0100.u0 = (byte) (byte) w8;
			if (x25 == 0x00)
				goto l000000000002B554;
		}
		else
		{
			x8.u1 = x25 + 0x10;
			x20 = x8 & ~0x0F;
			x0 = x20;
			_Znwm();
			x8 = x20 | 0x01;
			x27 = x0;
			Eq_31374 v108;
			v108.u0 = sp + 264;
			v108.u0->ptr0000 = (union Eq_14 *) x25;
			v108.u0->t0008.u1 = (size_t) x0;
			sp.u0->t0100.u1 = (size_t) x8;
		}
		x0 = x27;
		x1 = x24;
		x2 = x25;
		x0 = memcpy(x0, x1, x2);
l000000000002B554:
		*(x27 + x25) = (word64) 0x00;
l000000000002B558:
		Eq_14 v74 = *((word32) x22 + 8);
		w9.u1 = (word32) v74;
		x10 = *((word32) x22 + 24);
		w8 = *x22.u1;
		x11.u1 = (word32) x22 + 9;
		w31 = w9 & 0x01;
		NZ.u0 = cond(w31);
		x25.u1 = Test(EQ,Z) ? x11 : x10;
		x0 = x25;
		((word32) sp + 224)->u0 = w8;
		Eq_14 v75 = x26;
		v75.u1->u0 = 0x00;
		((word32) v75 + 8)->u0 = 0x00;
		((word32) x26 + 16)->u0 = 0x00;
		x0 = strlen(x0);
		sp.u0 = x0 + 0x10;
		NZCV.u0 = cond(sp);
		if (Test(ULT,C))
		{
			x24 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			Eq_14 w24;
			if (Test(ULT,C))
			{
				x27.u1 = sp.u0->t0028.u1;
				w8 = w24 << 1;
				sp.u0->t00E8.u0 = (byte) (byte) w8;
				if (x24 == 0x00)
					goto l000000000002B5DC;
			}
			else
			{
				x8.u1 = x24 + 0x10;
				x20 = x8 & ~0x0F;
				x0 = x20;
				_Znwm();
				x8 = x20 | 0x01;
				x27 = x0;
				Eq_30550 v79;
				v79.u0 = sp + 0x00F0;
				v79->u0 = x24;
				((word32) v79 + 8)->u0 = x0;
				sp.u0->t00E8.u1 = (size_t) x8;
			}
			x0 = x27;
			x1 = x25;
			x2 = x24;
			x0 = memcpy(x0, x1, x2);
l000000000002B5DC:
			*(x27 + x24) = (word64) 0x00;
			x0.u1 = sp + 0xE0;
			((LEVELS) x0);
			if ((w0 & 0x01) == 0x00)
			{
				w24.u0 = 0x00;
				Eq_14 v106;
				v106.u0 = sp.u0->t00E8.u0;
				w8.u1 = (word32) v106;
				if ((w8 & 0x01) == 0x00)
					goto l000000000002B690;
				goto l000000000002B6A8;
			}
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			Eq_30607 v77;
			v77.u0 = sp + 0x00D0;
			v77->u0 = 0x00;
			((word32) v77 + 8)->u0 = 0x00;
			sp.u0->t00C8.u1 = 0x00;
			x24 = *x8.u1;
			x0 = x24;
			x0 = strlen(x0);
			sp.u0 = x0 + 0x10;
			NZCV.u0 = cond(sp);
			if (Test(ULT,C))
			{
				x25 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					x27.u1 = sp.u0->t0018.u1;
					w8 = w25 << 1;
					sp.u0->t00C8.u0 = (byte) (byte) w8;
					if (x25 == 0x00)
						goto l000000000002B670;
				}
				else
				{
					x8.u1 = x25 + 0x10;
					x20 = x8 & ~0x0F;
					x0 = x20;
					_Znwm();
					x8 = x20 | 0x01;
					x27 = x0;
					Eq_30648 v82;
					v82.u0 = sp + 0x00D0;
					v82.u0->t0000.u1 = (size_t) x25;
					v82.u0->t0008.u1 = (size_t) x0;
					sp.u0->t00C8.u1 = (size_t) x8;
				}
				x0 = x27;
				x1 = x24;
				x2 = x25;
				x0 = memcpy(x0, x1, x2);
l000000000002B670:
				*(x27 + x25) = (word64) 0x00;
				x0.u1 = sp + 200;
				_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
				Eq_14 v80;
				v80.u0 = sp.u0->t00C8.u0;
				w8.u1 = (word32) v80;
				w24 = w0;
				if ((w8 & 0x01) != 0x00)
				{
					Eq_14 v81;
					v81.u0 = sp.u0->t00E8.u0;
					w8.u1 = (word32) v81;
					if ((w8 & 0x01) != 0x00)
					{
l000000000002B690:
						if ((w24 & 0x01) != 0x00)
							goto l000000000002B840;
l000000000002B6B4:
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						x1 = *x8.u1;
						x3.u0 = 0x00052000;
						x0.u1 = sp + 0x01B0;
						w4 = 0x00 | 0x06;
						x2 = x22;
						x3.u1 = (word32) x3 + 0x05EE;
						x5 = 0x00;
						_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
						x0.u1 = sp.u0->t0020.u1;
						x1.u0 = 0x00052000;
						w2 = 0x00 | 0x0F;
						x1.u1 = x1 + 0x0161;
						fn000000000001BB30();
						x27.u1 = sp.u0->t0140.u1;
						x24 = x0;
						if (x27 != 0x00)
						{
							x20 = x19;
							while (true)
							{
								while (true)
								{
									w8 = *((word32) x27 + 32);
									NZCV.u0 = cond(w8 - 0x02);
									if (Test(LT,NV))
										break;
									x8 = *x27.u1;
									if (x8 == 0x00)
									{
										x20 = x27;
										x25 = *x20.u1;
										if (x25 != 0x00)
											goto l000000000002B7B8;
										goto l000000000002B750;
									}
									x20 = x27;
									x27 = x8;
								}
								NZCV.u0 = cond(w8 - 0x01);
								if (Test(EQ,Z))
									break;
								x20 = x27;
								x20.u1 = x20 + 8;
								x8 = *x20.u1;
								if (x8 == 0x00)
									break;
								x27 = x8;
							}
						}
						else
						{
							x27 = x19;
							x20 = x19;
						}
						x25 = *x20.u1;
						if (x25 != 0x00)
							goto l000000000002B7B8;
l000000000002B750:
						w0 = 0x00 | 0x40;
						_Znwm();
						w8 = 0x00 | 0x01;
						*((word32) x0 + 32) = w8;
						Eq_31022 v88;
						v88.u0 = x0 + 48;
						v88.u0->ptr0000 = 0x00;
						v88.u0->t0008.u1 = (size_t) 0x00;
						((word32) x0 + 40)->u0 = 0x00;
						Eq_14 v89 = x0;
						v89.u1->u1 = 0x00;
						((word32) v89 + 8)->u0 = 0x00;
						*((word32) x0 + 16) = x27;
						*x20.u1 = x0;
						x8.u1 = sp.u0->t0138.u1;
						x25 = x0;
						x8 = *x8.u1;
						if (x8 != 0x00)
						{
							sp.u0->t0138.u1 = (size_t) x8;
							x1 = *x20.u1;
						}
						else
							x1 = x25;
						x0.u1 = sp.u0->t0140.u1;
						fn000000000001BD70();
						x8.u1 = sp.u0->t0148.u1;
						x8.u1 = x8 + 0x01;
						sp.u0->t0148.u1 = (size_t) x8;
l000000000002B7B8:
						Eq_14 v98 = *((word32) x25 + 40);
						w8.u1 = (word32) v98;
						Eq_30914 v99;
						v99.u0 = x25 + 48;
						x9.u1 = v99.u0->ptr0000;
						x10.u1 = v99.u0->t0008.u1;
						x11.u1 = x25 + 0x29;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x12 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x11 : x10;
						x2.u1 = Test(EQ,Z) ? x12 : x9;
						x0 = x24;
						fn000000000001BB30();
						x1.u0 = 0x00052000;
						w2 = 0x00 | 0x1C;
						x1.u1 = x1 + 0x0171;
						fn000000000001BB30();
						Eq_14 v100;
						v100.u0 = sp.u0->t0100.u0;
						w8.u1 = (word32) v100;
						Eq_30948 v101;
						v101.u0 = sp + 264;
						x10.u1 = v101.u0->t0000.u1;
						x9.u1 = v101.u0->t0008.u1;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x11 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x23 : x9;
						x2.u1 = Test(EQ,Z) ? x11 : x10;
						fn000000000001BB30();
						x1.u0 = 0x00052000;
						w2 = 0x00 | 0x1F;
						x1.u1 = x1 + 0x018E;
						fn000000000001BB30();
						byte v102 = (byte) *x21.u1;
						w8.u1 = (word32) v102;
						struct Eq_30980 * v103 = (struct Eq_30980 *) ((word32) x21 + 8);
						x10.u1 = v103->qw0000;
						x9.u1 = v103->t0008.u1;
						x11 = x8 >> 1;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x8.u1 = sp.u0->t0030.u1;
						x2.u1 = Test(EQ,Z) ? x11 : x10;
						x1.u1 = Test(EQ,Z) ? x8 : x9;
						fn000000000001BB30();
						x0.u1 = sp + 0x01B0;
						LogCapture::~LogCapture();
						sp.u0 = sp + 0x08;
l000000000002B840:
						Eq_14 v83;
						v83.u0 = sp.u0->t0100.u0;
						w8.u1 = (word32) v83;
						x11.u1 = sp.u0->t0108.u1;
						byte v84 = (byte) *x21.u1;
						w10.u1 = (word32) v84;
						x12 = *((word32) x21 + 8);
						x9 = x8 >> 1;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						x13 = x10 >> 1;
						x2.u1 = Test(EQ,Z) ? x9 : x11;
						w31 = w10 & 0x01;
						NZ.u0 = cond(w31);
						x11.u1 = Test(EQ,Z) ? x13 : x12;
						x31 = x2 - x11;
						NZCV.u0 = cond(x31);
						if (Test(EQ,Z))
						{
							x11.u1 = sp.u0->t0110.u1;
							w31 = w8 & 0x01;
							NZ.u0 = cond(w31);
							x12 = *((word32) x21 + 16);
							x0.u1 = Test(EQ,Z) ? x23 : x11;
							w31 = w10 & 0x01;
							NZ.u0 = cond(w31);
							C = false;
							V = false;
							x10.u1 = sp.u0->t0030.u1;
							x1.u1 = Test(EQ,Z) ? x10 : x12;
							if ((w8 & 0x01) != 0x00)
							{
								if (x2 == 0x00)
									goto l000000000002B9CC;
								x8 = 0x00 - x9;
								x9 = x23;
								while (true)
								{
									byte v85 = (byte) *x9.u1;
									w10.u1 = (word32) v85;
									byte v87 = (byte) *x1.u1;
									int32 w11 = (word32) v87;
									NZCV.u0 = cond(w10 - w11);
									if (Test(NE,Z))
										break;
									x9.u1 = x9 + 0x01;
									x8.u1 = x8 + 0x01;
									NZCV.u0 = cond(x8);
									x1.u1 = x1 + 0x01;
									if (Test(EQ,Z))
										goto l000000000002B9CC;
								}
							}
							else
							{
								if (x2 == 0x00)
									goto l000000000002B9CC;
								x0 = SEQ(0x00, memcmp(x0, x1, x2));
								if (w0 == 0x00)
									goto l000000000002B9CC;
							}
						}
						x24.u1 = sp.u0->t0140.u1;
						if (x24 != 0x00)
						{
							x20 = x19;
							while (true)
							{
								while (true)
								{
									w8 = *((word32) x24 + 32);
									NZCV.u0 = cond(w8 - 0x02);
									if (Test(LT,NV))
										break;
									x8 = *x24.u1;
									if (x8 == 0x00)
									{
										x20 = x24;
										x25 = *x20.u1;
										if (x25 != 0x00)
											goto l000000000002B990;
										goto l000000000002B928;
									}
									x20 = x24;
									x24 = x8;
								}
								NZCV.u0 = cond(w8 - 0x01);
								if (Test(EQ,Z))
									break;
								x20 = x24;
								x20.u1 = x20 + 8;
								x8 = *x20.u1;
								if (x8 == 0x00)
									break;
								x24 = x8;
							}
						}
						else
						{
							x24 = x19;
							x20 = x19;
						}
						x25 = *x20.u1;
						if (x25 != 0x00)
							goto l000000000002B990;
l000000000002B928:
						w0 = 0x00 | 0x40;
						_Znwm();
						w8 = 0x00 | 0x01;
						*((word32) x0 + 32) = w8;
						Eq_31120 v90;
						v90.u0 = x0 + 48;
						v90.u0->ptr0000 = 0x00;
						v90.u0->t0008.u1 = (size_t) 0x00;
						((word32) x0 + 40)->u0 = 0x00;
						Eq_14 v91 = x0;
						v91.u1->u1 = 0x00;
						((word32) v91 + 8)->u0 = 0x00;
						*((word32) x0 + 16) = x24;
						*x20.u1 = x0;
						x8.u1 = sp.u0->t0138.u1;
						x25 = x0;
						x8 = *x8.u1;
						if (x8 != 0x00)
						{
							sp.u0->t0138.u1 = (size_t) x8;
							x1 = *x20.u1;
						}
						else
							x1 = x25;
						x0.u1 = sp.u0->t0140.u1;
						fn000000000001BD70();
						x8.u1 = sp.u0->t0148.u1;
						x8.u1 = x8 + 0x01;
						sp.u0->t0148.u1 = (size_t) x8;
l000000000002B990:
						x0.u1 = sp.u0->t0048.u1;
						x1.u1 = x25 + 0x28;
						Eq_31097 v92;
						v92.u0 = x0 + 8;
						x24.u1 = v92.u0->ptr0000;
						x8.u1 = v92.u0->t0008.u1;
						x31 = x24 - x8;
						NZCV.u0 = cond(x31);
						if (Test(NE,Z))
						{
							Eq_31178 v93;
							v93.u0 = x24 + 8;
							v93.u0->ptr0000 = 0x00;
							v93.u0->t0008.u1 = (size_t) 0x00;
							x24.u1->u1 = 0x00;
							byte v94 = (byte) *x1.u1;
							w8.u1 = (word32) v94;
							if ((w8 & 0x01) != 0x00)
							{
								x8 = *((word32) x1 + 16);
								q0 = *x1.u1;
								*((word32) x24 + 16) = x8;
								*x24.u1 = q0;
								goto l000000000002B360;
							}
							x27 = *((word32) x25 + 48);
							sp.u0 = x27 + 0x10;
							NZCV.u0 = cond(sp);
							if (Test(ULT,C))
							{
								x25 = *((word32) x25 + 56);
								NZCV.u0 = cond(x27 - 0x17);
								if (Test(ULT,C))
								{
									ui32 w27;
									w8 = w27 << 1;
									x24.u1->u0 = (byte) w8;
									x24.u1 = x24 + 1;
									if (x27 == 0x00)
										goto l000000000002B35C;
								}
								else
								{
									x8.u1 = x27 + 0x10;
									x20 = x8 & ~0x0F;
									x0 = x20;
									_Znwm();
									x8 = x20 | 0x01;
									Eq_31286 v97;
									v97.u0 = x24 + 8;
									v97.u0->ptr0000 = (union Eq_14 *) x27;
									v97.u0->t0008.u1 = (size_t) x0;
									*x24.u1 = x8;
									x24 = x0;
								}
								x0 = x24;
								x1 = x25;
								x2 = x27;
								x0 = memcpy(x0, x1, x2);
l000000000002B35C:
								*(x24 + x27) = (word64) 0x00;
l000000000002B360:
								x9.u1 = sp.u0->t0048.u1;
								x8 = *((word32) x9 + 8);
								x8.u1 = x8 + 0x18;
								*((word32) x9 + 8) = x8;
								Eq_14 v95;
								v95.u0 = sp.u0->t0100.u0;
								w8.u1 = (word32) v95;
								if ((w8 & 0x01) != 0x00)
									goto l000000000002B9DC;
l000000000002B9D4:
								x0.u1 = sp.u0->t0110.u1;
								((real64) q0, x0, x1);
l000000000002B9DC:
								x1.u1 = sp.u0->t0140.u1;
								x0.u1 = sp + 0x0138;
								fn000000000001B760();
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 0x0DC0);
								x24.u1 = *((word32) sp + 352);
								x8.u1 = x8 + 0x10;
								((word32) sp + 336)->u0 = x8;
								if (x24 != 0x00)
									x8.u1 = x24 + 0x08;
								w8.u1 = *((word32) sp + 0x0044);
								x1.u1 = (word32) x28 + 1;
								x28 = __bfm<word64>(x28, x1, 0, 31);
								NZCV.u0 = cond(w8 - w1);
								if (Test(EQ,Z))
									goto l000000000002BA44;
								goto l000000000002B37C;
							}
l000000000002BAC8:
							x0 = x24;
							fn000000000001B2D0();
							goto l000000000002BAD0;
						}
						fn000000000001BEC0();
l000000000002B9CC:
						Eq_14 v104;
						v104.u0 = sp.u0->t0100.u0;
						w8.u1 = (word32) v104;
						if ((w8 & 0x01) == 0x00)
							goto l000000000002B9DC;
						goto l000000000002B9D4;
					}
				}
				else
				{
					x0.u1 = sp.u0->t00D8.u1;
					((real64) q0, x0, x1);
					Eq_14 v105;
					v105.u0 = sp.u0->t00E8.u0;
					w8.u1 = (word32) v105;
					if ((w8 & 0x01) == 0x00)
						goto l000000000002B690;
				}
l000000000002B6A8:
				x0.u1 = sp.u0->t00F8.u1;
				((real64) q0, x0, x1);
				if ((w24 & 0x01) == 0x00)
					goto l000000000002B840;
				goto l000000000002B6B4;
			}
l000000000002BAC0:
			x0.u1 = sp + 200;
			fn000000000001B2D0();
			goto l000000000002BAC8;
		}
		x0 = x26;
		fn000000000001B2D0();
l000000000002BAB8:
		x0.u1 = sp + 0x0100;
		fn000000000001B2D0();
		goto l000000000002BAC0;
	}
	x0.u1 = sp + 0x0168;
	fn000000000001B2D0();
	x21 = x1;
	x20 = x0;
	Eq_14 v107;
	v107.u0 = sp.u0->t0100.u0;
	w8.u1 = (word32) v107;
	if ((w8 & 0x01) == 0x00)
	{
		x0.u1 = sp.u0->t0110.u1;
		((real64) q0, x0, x1);
	}
	x1.u1 = sp.u0->t0140.u1;
	x0.u1 = sp + 0x0138;
	fn000000000001B760();
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 0x0DC0);
	x22.u1 = *((word32) sp + 352);
	x8.u1 = x8 + 0x10;
	((word32) sp + 336)->u0 = x8;
	if (x22 != 0x00)
		x8.u1 = (word32) x22 + 8;
	x22.u1 = *((word32) sp + 424);
	if (x22 != 0x00)
		x8.u1 = (word32) x22 + 8;
	Eq_14 w21;
	NZCV.u0 = cond(w21 - 0x02);
	ui32 w22;
	if (Test(EQ,Z))
	{
		x0 = x20;
		__cxa_begin_catch();
		x8.u1 = sp.u0->t0008.u1;
		x21 = x0;
		x20.u1 = x8 + 0x08;
		x1.u0 = 0x00052000;
		x1.u1 = x1 + 0x01AE;
		w2 = 44;
		x0 = x20;
		fn000000000001B8B0();
		Eq_14 v111 = *((word32) x21 + 16);
		w8.u1 = (word32) v111;
		Eq_31475 v112;
		v112.u0 = x21 + 24;
		x9.u1 = v112.u0->ptr0000;
		x10.u1 = v112.u0->t0008.u1;
		x11.u1 = x21 + 0x11;
		w31 = w8 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x12 = x8 >> 1;
		x1.u1 = Test(EQ,Z) ? x11 : x10;
		x2.u1 = Test(EQ,Z) ? x12 : x9;
		x0 = x20;
		fn000000000001B1B0();
		x1.u0 = 0x00050000;
		x1.u1 = x1 + 1848;
		w2 = 0x00 | 0x01;
		x0 = x20;
		fn000000000001B1B0();
		Eq_14 v113 = *((word32) x21 + 40);
		w8.u1 = (word32) v113;
		Eq_31509 v114;
		v114.u0 = x21 + 48;
		x9.u1 = v114.u0->ptr0000;
		x10.u1 = v114.u0->t0008.u1;
		x11.u1 = x21 + 0x29;
		w31 = w8 & 0x01;
		NZ.u0 = cond(w31);
		C = false;
		V = false;
		x12 = x8 >> 1;
		x1.u1 = Test(EQ,Z) ? x11 : x10;
		x2.u1 = Test(EQ,Z) ? x12 : x9;
		x0 = x20;
		fn000000000001B1B0();
		x1.u0 = 0x00050000;
		x1.u1 = x1 + 0x073A;
		w2 = 0x00 | 0x02;
		x0 = x20;
		fn000000000001B1B0();
		x8 = *x21.u1;
		x0 = x21;
		x8 = *((word32) x8 + 16);
		x8();
		x21 = x0;
		x0 = strlen(x0);
		x2 = x0;
		x0 = x20;
		x1 = x21;
		fn000000000001B1B0();
		x8.u0 = 0x00071000;
		x8.u1 = x8 + 0x0198;
		x9.u1 = sp + 0x70;
		x23.u1 = x9 + 0x08;
		Eq_14 v115 = *((word32) x8 + 8);
		w9.u1 = (word32) v115;
		x11 = *((word32) x8 + 24);
		w10 = *x8.u1;
		x8.u1 = x8 + 0x09;
		w31 = w9 & 0x01;
		NZ.u0 = cond(w31);
		x22.u1 = Test(EQ,Z) ? x8 : x11;
		x0 = x22;
		((word32) sp + 112)->u0 = w10;
		Eq_31576 v116;
		v116.u0 = sp + 0x0080;
		v116.u0->ptr0000 = 0x00;
		v116.u0->t0008.u1 = (size_t) 0x00;
		((word32) sp + 0x0078)->u0 = 0x00;
		x0 = strlen(x0);
		sp.u0 = x0 + 0x10;
		NZCV.u0 = cond(sp);
		if (Test(ULT,C))
		{
			x21 = x0;
			NZCV.u0 = cond(x0 - 0x17);
			if (Test(ULT,C))
			{
				w8 = w21 << 1;
				x23.u1 = x23 + 0x01;
				sp.u0->b0078 = (byte) (byte) w8;
				if (x21 == 0x00)
					goto l000000000002BF0C;
			}
			else
			{
				x8.u1 = x21 + 0x10;
				x24 = x8 & ~0x0F;
				x0 = x24;
				_Znwm();
				x8 = x24 | 0x01;
				x23 = x0;
				Eq_31612 v142;
				v142.u0 = sp + 0x0080;
				v142->u0 = x21;
				((word32) v142 + 8)->u0 = x0;
				((word32) sp + 0x0078)->u0 = x8;
			}
			x0 = x23;
			x1 = x22;
			x2 = x21;
			x0 = memcpy(x0, x1, x2);
l000000000002BF0C:
			*(x23 + x21) = (word64) 0x00;
			x0.u1 = sp + 0x70;
			((LEVELS) x0);
			if ((w0 & 0x01) == 0x00)
			{
				w21.u0 = 0x00;
				byte v139 = sp.u0->b0078;
				w8.u1 = (word32) v139;
				if ((w8 & 0x01) == 0x00)
					goto l000000000002C05C;
				goto l000000000002C074;
			}
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			Eq_31798 v119;
			v119.u0 = sp + 96;
			v119.u0->t0000.u1 = (size_t) 0x00;
			v119.u0->t0008.u1 = (size_t) 0x00;
			((word32) sp + 88)->u0 = 0x00;
			x21 = *x8.u1;
			x0 = x21;
			x0 = strlen(x0);
			sp.u0 = x0 + 0x10;
			NZCV.u0 = cond(sp);
			if (Test(ULT,C))
			{
				x22 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					x9.u1 = sp + 88;
					w8 = w22 << 1;
					x23 = x9 | 0x01;
					((word32) sp + 88)->u0 = (byte) w8;
					if (x22 == 0x00)
						goto l000000000002C03C;
				}
				else
				{
					x8.u1 = x22 + 0x10;
					x24 = x8 & ~0x0F;
					x0 = x24;
					_Znwm();
					x8 = x24 | 0x01;
					x23 = x0;
					Eq_31839 v138;
					v138.u0 = sp + 96;
					v138->u0 = x22;
					((word32) v138 + 8)->u0 = x0;
					((word32) sp + 88)->u0 = x8;
				}
				x0 = x23;
				x1 = x21;
				x2 = x22;
				x0 = memcpy(x0, x1, x2);
l000000000002C03C:
				*(x23 + x22) = (word64) 0x00;
				x0.u1 = sp + 88;
				_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
				Eq_14 v122;
				v122.u1 = *((word32) sp + 88);
				w8.u1 = (word32) v122;
				w21 = w0;
				if ((w8 & 0x01) != 0x00)
				{
					byte v123 = sp.u0->b0078;
					w8.u1 = (word32) v123;
					if ((w8 & 0x01) != 0x00)
					{
l000000000002C05C:
						if ((w21 & 0x01) != 0x00)
							goto l000000000002C0DC;
l000000000002C080:
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						x1 = *x8.u1;
						x2.u0 = 0x00071000;
						x3.u0 = 0x00052000;
						x2.u1 = x2 + 0x0198;
						x3.u1 = (word32) x3 + 0x05EE;
						x0.u1 = sp + 0x01B0;
						w4 = 0x00 | 0x06;
						x5 = 0x00;
						x19.u1 = sp + 0x01B0;
						_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
						x10.u1 = sp.u0->t0008.u1;
						x0.u1 = x19 + 0x08;
						Eq_14 v129 = *((word32) x10 + 8);
						w8.u1 = (word32) v129;
						Eq_32069 v130;
						v130.u0 = x10 + 16;
						x9.u1 = *v130;
						x10.u1 = *((word32) v130 + 8);
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x11 = x8 >> 1;
						x1.u1 = Test(NE,Z) ? x10 : x20 + 0x01;
						x2.u1 = Test(EQ,Z) ? x11 : x9;
						fn000000000001BB30();
						x0.u1 = sp + 0x01B0;
						LogCapture::~LogCapture();
						sp.u0 = sp + 0x08;
l000000000002C0DC:
						x0.u1 = sp.u0->t0048.u1;
						w10 = 0x00 | 0x0E;
						Eq_32105 v126;
						v126.u0 = sp + 432;
						v126.u0->t0000.u1 = (size_t) 0x00;
						v126.u0->t0008.u1 = (size_t) 0x00;
						sp.u0->t01B0.u0 = (byte) (byte) w10;
						Eq_32120 v127;
						v127.u0 = x0 + 8;
						x8.u1 = v127.u0->ptr0000;
						x9.u1 = v127.u0->t0008.u1;
						x10.u0 = 28277;
						x10 = SEQ(SLICE(x10, word32, 32), 0x6E6B, (word16) x10);
						x10 = SEQ(SLICE(x10, word16, 48), 0x776F, (word32) x10);
						x10 = SEQ(110, (word48) x10);
						x31 = x8 - x9;
						NZCV.u0 = cond(x31);
						x11.u1 = sp + 0x0100;
						sp.u0->t01C0.u1 = (size_t) 0x00;
						*((word32) x11 + 177) = x10;
						if (Test(ULT,C))
						{
							x9.u1 = sp.u0->t01C0.u1;
							q0 = *((word32) x11 + 0x00B0);
							*((word32) x8 + 16) = x9;
							*x8.u1 = q0;
							x8 = *((word32) x0 + 8);
							Eq_32288 v128;
							v128.u0 = sp + 440;
							v128.u0->t0000.u1 = (size_t) 0x00;
							v128.u0->t0008.u1 = (size_t) 0x00;
							sp.u0->t01B0.u1 = 0x00;
							x8.u1 = x8 + 0x18;
							*((word32) x0 + 8) = x8;
						}
						else
						{
							x1.u1 = sp + 0x01B0;
							fn000000000001B390();
							Eq_32115 v133;
							v133.u0 = sp.u0->t01B0.u0;
							w8.u1 = (word32) v133;
							if ((w8 & 0x01) != 0x00)
							{
								x0.u1 = sp.u0->t01C0.u1;
								((real64) q0, x0, x1);
							}
						}
						__cxa_end_catch();
l000000000002BA7C:
						x8.u1 = sp.u0->t0010.u1;
						x8 = *((word32) x8 + 40);
						x9.u1 = *((word32) sp + 80);
						x31 = x8 - x9;
						NZCV.u0 = cond(x31);
						if (Test(EQ,Z))
						{
							sp.u0 = sp + 0x0310;
							Eq_30301 v63;
							v63.u0 = sp + 80;
							x29.u1 = *v63;
							x30.u1 = *((word32) v63 + 8);
							Eq_30310 v64;
							v64.u0 = sp + 64;
							x20.u1 = *v64;
							x19.u1 = *((word32) v64 + 8);
							Eq_30319 v65;
							v65.u0 = sp + 48;
							x22.u1 = *v65;
							x21.u1 = *((word32) v65 + 8);
							Eq_30328 v66;
							v66.u0 = sp + 32;
							x24.u1 = *v66;
							x23.u1 = *((word32) v66 + 8);
							Eq_30337 v67;
							v67.u0 = sp + 16;
							x26.u1 = *v67;
							x25.u1 = *((word32) v67 + 8);
							Eq_29688 v68 = sp;
							x28.u1 = v68.u0->ptr0000;
							x27.u1 = v68.u0->t0008.u1;
							sp.u0 = sp + 96;
							return;
						}
l000000000002BAD8:
						__stack_chk_fail();
					}
				}
				else
				{
					x0.u1 = sp.u0->t0068.u1;
					((real64) q0, x0, x1);
					byte v135 = sp.u0->b0078;
					w8.u1 = (word32) v135;
					if ((w8 & 0x01) == 0x00)
						goto l000000000002C05C;
				}
l000000000002C074:
				x0.u1 = sp.u0->t0088.u1;
				((real64) q0, x0, x1);
				if ((w21 & 0x01) == 0x00)
					goto l000000000002C0DC;
				goto l000000000002C080;
			}
l000000000002C244:
			x0.u1 = sp + 88;
			fn000000000001B2D0();
			goto l000000000002C24C;
		}
		x0 = x23;
		fn000000000001B2D0();
l000000000002C23C:
		x0 = x23;
		fn000000000001B2D0();
		goto l000000000002C244;
	}
	NZCV.u0 = cond(w21 - 0x01);
	if (Test(NE,Z))
		goto l000000000002C324;
	x0 = x20;
	__cxa_begin_catch();
	x8 = *x0.u1;
	x8 = *((word32) x8 + 16);
	x8();
	x8.u1 = sp.u0->t0008.u1;
	x21 = x0;
	x20.u1 = x8 + 0x08;
	x0 = strlen(x0);
	x2 = x0;
	x0 = x20;
	x1 = x21;
	fn000000000001B8B0();
	x8.u0 = 0x00071000;
	x8.u1 = x8 + 0x0198;
	x9.u1 = sp + 0xA8;
	x23.u1 = x9 + 0x08;
	Eq_14 v117 = *((word32) x8 + 8);
	w9.u1 = (word32) v117;
	x11 = *((word32) x8 + 24);
	w10 = *x8.u1;
	x8.u1 = x8 + 0x09;
	w31 = w9 & 0x01;
	NZ.u0 = cond(w31);
	x22.u1 = Test(EQ,Z) ? x8 : x11;
	x0 = x22;
	((word32) sp + 0x00A8)->u0 = w10;
	Eq_31707 v118;
	v118.u0 = sp + 0x00B8;
	v118->u0 = 0x00;
	((word32) v118 + 8)->u0 = 0x00;
	sp.u0->t00B0.u1 = 0x00;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
		goto l000000000002C23C;
	x21 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		w8 = w21 << 1;
		x23.u1 = x23 + 0x01;
		sp.u0->t00B0.u0 = (byte) (byte) w8;
		if (x21 == 0x00)
			goto l000000000002BFA4;
	}
	else
	{
		x8.u1 = x21 + 0x10;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		Eq_31743 v140;
		v140.u0 = sp + 0x00B8;
		v140.u0->t0000.u1 = (size_t) x21;
		v140.u0->t0008.u1 = (size_t) x0;
		sp.u0->t00B0.u1 = (size_t) x8;
	}
	x0 = x23;
	x1 = x22;
	x2 = x21;
	x0 = memcpy(x0, x1, x2);
l000000000002BFA4:
	*(x23 + x21) = (word64) 0x00;
	x0.u1 = sp + 0xA8;
	((LEVELS) x0);
	if ((w0 & 0x01) == 0x00)
	{
		w21.u0 = 0x00;
		Eq_14 v137;
		v137.u0 = sp.u0->t00B0.u0;
		w8.u1 = (word32) v137;
		if ((w8 & 0x01) == 0x00)
			goto l000000000002C1AC;
		goto l000000000002C1C4;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	Eq_31899 v121;
	v121.u0 = sp + 0x0098;
	v121->u0 = 0x00;
	((word32) v121 + 8)->u0 = 0x00;
	sp.u0->t0090.u1 = 0x00;
	x21 = *x8.u1;
	x0 = x21;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
l000000000002C24C:
		x0.u1 = sp + 0x90;
		fn000000000001B2D0();
		x20 = x0;
		x0.u1 = sp + 0x01B0;
		LogCapture::~LogCapture();
		sp.u0 = sp + 0x08;
		__cxa_end_catch();
l000000000002C324:
		x8.u1 = sp.u0->t0048.u1;
		x19 = *x8.u1;
		if (x19 != 0x00)
		{
			x8.u1 = sp.u0->t0048.u1;
			x8 = *((word32) x8 + 8);
			x31 = x8 - x19;
			NZCV.u0 = cond(x31);
			if (Test(EQ,Z))
			{
l000000000002C37C:
				x0 = x19;
				goto l000000000002C368;
			}
			x21 = x8;
			do
			{
				x21.u1 = x21 + -24;
				byte v141 = (byte) *x21.u1;
				w9.u1 = (word32) v141;
				if ((w9 & 0x01) != 0x00)
				{
					x0 = *((word32) x8 - 8);
					((real64) q0, x0, x1);
				}
				x31 = x19 - x21;
				NZCV.u0 = cond(x31);
				x8 = x21;
			} while (Test(NE,Z));
			x8.u1 = sp.u0->t0048.u1;
			x0 = *x8.u1;
l000000000002C368:
			x8.u1 = sp.u0->t0048.u1;
			*((word32) x8 + 8) = x19;
			((real64) q0, x0, x1);
		}
		x0 = x20;
		_Unwind_Resume();
		goto l000000000002C37C;
	}
	x22 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	if (Test(ULT,C))
	{
		x9.u1 = sp + 0x90;
		w8 = w22 << 1;
		x23 = x9 | 0x01;
		sp.u0->t0090.u0 = (byte) (byte) w8;
		if (x22 == 0x00)
			goto l000000000002C18C;
	}
	else
	{
		x8.u1 = x22 + 0x10;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		Eq_31947 v136;
		v136.u0 = sp + 0x0098;
		v136.u0->t0000.u1 = (size_t) x22;
		v136.u0->t0008.u1 = (size_t) x0;
		sp.u0->t0090.u1 = (size_t) x8;
	}
	x0 = x23;
	x1 = x21;
	x2 = x22;
	x0 = memcpy(x0, x1, x2);
l000000000002C18C:
	*(x23 + x22) = (word64) 0x00;
	x0.u1 = sp + 0x90;
	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
	Eq_14 v124;
	v124.u0 = sp.u0->t0090.u0;
	w8.u1 = (word32) v124;
	w21 = w0;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_14 v125;
		v125.u0 = sp.u0->t00B0.u0;
		w8.u1 = (word32) v125;
		if ((w8 & 0x01) != 0x00)
		{
l000000000002C1AC:
			if ((w21 & 0x01) != 0x00)
				goto l000000000002C22C;
l000000000002C1D0:
			x8.u0 = 0x00070000;
			x8 = *((word32) x8 + 3432);
			x1 = *x8.u1;
			x2.u0 = 0x00071000;
			x3.u0 = 0x00052000;
			x2.u1 = x2 + 0x0198;
			x3.u1 = (word32) x3 + 0x05EE;
			x0.u1 = sp + 0x01B0;
			w4 = 0x00 | 0x06;
			x5 = 0x00;
			x19.u1 = sp + 0x01B0;
			_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
			x10.u1 = sp.u0->t0008.u1;
			x0.u1 = x19 + 0x08;
			Eq_14 v131 = *((word32) x10 + 8);
			w8.u1 = (word32) v131;
			Eq_32229 v132;
			v132.u0 = x10 + 16;
			x9.u1 = *v132;
			x10.u1 = *((word32) v132 + 8);
			w31 = w8 & 0x01;
			NZ.u0 = cond(w31);
			C = false;
			V = false;
			x11 = x8 >> 1;
			x1.u1 = Test(NE,Z) ? x10 : x20 + 0x01;
			x2.u1 = Test(EQ,Z) ? x11 : x9;
			fn000000000001BB30();
			x0.u1 = sp + 0x01B0;
			LogCapture::~LogCapture();
			sp.u0 = sp + 0x08;
l000000000002C22C:
			__cxa_end_catch();
			goto l000000000002BA7C;
		}
	}
	else
	{
		x0.u1 = sp.u0->t00A0.u1;
		((real64) q0, x0, x1);
		Eq_14 v134;
		v134.u0 = sp.u0->t00B0.u0;
		w8.u1 = (word32) v134;
		if ((w8 & 0x01) == 0x00)
			goto l000000000002C1AC;
	}
l000000000002C1C4:
	x0.u1 = sp.u0->t00C0.u1;
	((real64) q0, x0, x1);
	if ((w21 & 0x01) == 0x00)
		goto l000000000002C22C;
	goto l000000000002C1D0;
}

// 000000000002C388: define _ZN4rgbd13RGBDRealSense17validateFwVersionERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
define _ZN4rgbd13RGBDRealSense17validateFwVersionERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
{
	struct Eq_32375 * fp;
	struct Eq_32375 * sp = fp;
	sp -= 0x50;
	struct Eq_32380 * v6 = (struct Eq_32380 *) ((char *) &sp->ptr0018 + 8);
	struct Eq_32382 * x22;
	v6->ptr0000 = x22;
	struct Eq_32382 * x21;
	v6->ptr0008 = x21;
	struct Eq_32391 * v9 = (struct Eq_32391 *) ((char *) &sp->ptr0018 + 24);
	struct Eq_32382 * x20;
	v9->ptr0000 = x20;
	struct Eq_32397 * x19;
	v9->ptr0008 = x19;
	struct Eq_32402 * v12 = (struct Eq_32402 *) ((char *) &sp->ptr0018 + 40);
	ptr64 x29;
	v12->ptr0000 = x29;
	word64 x30;
	v12->qw0008 = x30;
	x29 = (char *) &sp->ptr0018 + 40;
	Eq_1720 sysreg3_3_13_0_2;
	x19 = __mrs(sysreg3_3_13_0_2);
	struct Eq_32382 * x8 = x19->ptr0028;
	sp->ptr0018 = x8;
	x8 = (struct Eq_32382 *) &sp->ptr0000;
	fn000000000001B6B0();
	struct Eq_32375 * v15 = sp;
	x20 = v15->ptr0000;
	x21 = v15->ptr0008;
	ptr64 x31;
	Eq_32447 NZCV;
	bool Z;
	if (x20 != null)
	{
		x31 = x20 - x21;
		NZCV.u0 = cond(x31);
		struct Eq_32382 * x0;
		word128 q0;
		void * x1;
		if (Test(NE,Z))
		{
			x8 = x21;
			x22 = x21;
			do
			{
				x22 = (struct Eq_32382 *) ((char *) x22 - 24);
				byte v20 = x22->b0000;
				ui32 w9 = (word32) v20;
				if ((w9 & 0x01) != 0x00)
				{
					x0 = x8->ptrFFFFFFF8;
					((real64) q0, x0, x1);
				}
				x31 = x20 - x22;
				NZCV.u0 = cond(x31);
				x8 = x22;
			} while (Test(NE,Z));
			x0 = sp->ptr0000;
		}
		else
			x0 = x20;
		sp->ptr0008 = x20;
		((real64) q0, x0, x1);
	}
	x8 = x19->ptr0028;
	struct Eq_32382 * x9 = sp->ptr0018;
	x31 = x20 - x21;
	NZCV.u0 = cond(x31);
	word32 w0 = (word32) Test(EQ,Z);
	x31 = x8 - x9;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
		__stack_chk_fail();
	else
	{
		struct Eq_32479 * v26 = (struct Eq_32479 *) ((char *) &sp->ptr0018 + 40);
		x29 = v26->ptr0000;
		x30 = v26->qw0008;
		struct Eq_32488 * v27 = (struct Eq_32488 *) ((char *) &sp->ptr0018 + 24);
		x20 = v27->ptr0000;
		x19 = v27->ptr0008;
		struct Eq_32497 * v28 = (struct Eq_32497 *) ((char *) &sp->ptr0018 + 8);
		x22 = v28->ptr0000;
		x21 = v28->ptr0008;
		sp = (struct Eq_32375 *) ((char *) &sp->ptr0018 + 56);
	}
}

// 000000000002C428: define _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
{
	Eq_1720 sysreg3_3_13_0_2;
	Eq_32532 fp;
	Eq_32532 sp = fp;
	sp.u0 = (word32) sp - 96;
	Eq_14 x28;
	sp.u0->t0000.u1 = (size_t) x28;
	Eq_14 x27;
	sp.u0->t0008.u1 = (size_t) x27;
	struct Eq_32545 * v8 = (struct Eq_32545 *) &sp.u0->t0010.u0;
	Eq_14 x26;
	v8->t0000.u1 = (size_t) x26;
	Eq_14 x25;
	v8->t0008.u1 = (size_t) x25;
	struct Eq_32556 * v11 = (struct Eq_32556 *) ((word32) sp + 32);
	Eq_14 x24;
	v11->t0000.u1 = (size_t) x24;
	Eq_14 x23;
	v11->t0008.u1 = (size_t) x23;
	struct Eq_32567 * v14 = (struct Eq_32567 *) ((word32) sp + 48);
	Eq_14 x22;
	v14->t0000.u1 = (size_t) x22;
	Eq_14 x21;
	v14->t0008.u1 = (size_t) x21;
	struct Eq_32578 * v17 = (struct Eq_32578 *) ((word32) sp + 64);
	Eq_14 x20;
	v17->t0000.u1 = (size_t) x20;
	Eq_14 x19;
	v17->t0008.u1 = (size_t) x19;
	struct Eq_32589 * v20 = (struct Eq_32589 *) &sp.u0->t0050.u0;
	Eq_14 x29;
	v20->t0000.u1 = (size_t) x29;
	Eq_14 x30;
	v20->t0008.u1 = (size_t) x30;
	x29.u1 = &sp.u0->t0050.u0;
	sp -= 0x0430;
	struct Eq_32604 * v23 = (struct Eq_32604 *) ((word32) sp + 72);
	Eq_14 x2;
	v23->t0000.u1 = (size_t) x2;
	Eq_14 x0;
	v23->t0008.u1 = (size_t) x0;
	Eq_14 x8 = __mrs(sysreg3_3_13_0_2);
	struct Eq_32620 * v27 = (struct Eq_32620 *) &sp.u0->t0018.u0;
	v27->t0000.u1 = (size_t) x8;
	Eq_14 x1;
	v27->t0008.u1 = (size_t) x1;
	x8 = *((word32) x8 + 40);
	x21.u0 = 0x00071000;
	x21.u1 = (word32) x21 + 0x0118;
	Eq_14 x9;
	x9.u1 = (word32) sp + 680;
	*((word32) x29 - 96) = x8;
	Eq_14 w8 = *x21.u1;
	x23.u1 = (word32) x9 + 8;
	Eq_14 v31 = *((word32) x21 + 8);
	ui32 w9 = (word32) v31;
	Eq_14 x10;
	x10.u1 = (word32) x21 + 9;
	((word32) sp + 680)->u0 = w8;
	x8 = *((word32) x21 + 24);
	ui32 w31 = w9 & 0x01;
	Eq_32664 NZ;
	NZ.u0 = cond(w31);
	((word32) sp + 704)->u0 = 0x00;
	((word32) sp + 696)->u0 = 0x00;
	bool Z;
	x19.u1 = Test(EQ,Z) ? x10 : x8;
	x0 = x19;
	sp.u0->t02B0.u1 = (size_t) 0x00;
	x0 = strlen(x0);
	sp.u0 = (word32) x0 + 16;
	Eq_32687 NZCV;
	NZCV.u0 = cond(sp);
	bool C;
	if (Test(UGE,C))
	{
l000000000002D18C:
		x0 = x23;
		fn000000000001B2D0();
		goto l000000000002D194;
	}
	x20 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	int32 w20;
	if (Test(ULT,C))
	{
		w8 = w20 << 1;
		x23.u1 = (word32) x23 + 1;
		sp.u0->t02B0.u0 = (byte) (byte) w8;
		if (x20 == 0x00)
			goto l000000000002C4F8;
	}
	else
	{
		x8.u1 = (word32) x20 + 16;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x23 = x0;
		((word32) sp + 704)->u0 = x0;
		sp.u0->t02B0.u1 = (size_t) x8;
		((word32) sp + 696)->u0 = x20;
	}
	x0 = x23;
	x1 = x19;
	x2 = x20;
	x0 = memcpy(x0, x1, x2);
l000000000002C4F8:
	*(x23 + x20) = (word64) 0x00;
	x0.u1 = sp + 0x02A8;
	((LEVELS) x0);
	Eq_14 w0;
	Eq_14 w19;
	if ((w0 & 0x01) == 0x00)
	{
		w19.u0 = 0x00;
		Eq_14 v43;
		v43.u0 = sp.u0->t02B0.u0;
		w8.u1 = (word32) v43;
		if ((w8 & 0x01) == 0x00)
			goto l000000000002C5C4;
		goto l000000000002C560;
	}
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	((word32) sp + 672)->u0 = 0x00;
	((word32) sp + 664)->u0 = 0x00;
	((word32) sp + 656)->u0 = 0x00;
	x20 = *x8.u1;
	x0 = x20;
	x0 = strlen(x0);
	sp.u0 = x0 + 0x10;
	NZCV.u0 = cond(sp);
	if (Test(UGE,C))
	{
		x0.u1 = sp + 656;
		fn000000000001B2D0();
		goto l000000000002D1A0;
	}
	x23 = x0;
	NZCV.u0 = cond(x0 - 0x17);
	ui32 w23;
	if (Test(ULT,C))
	{
		x9.u1 = sp + 656;
		w8 = w23 << 1;
		x19 = x9 | 0x01;
		((word32) sp + 656)->u0 = (byte) w8;
		if (x23 == 0x00)
			goto l000000000002C5A4;
	}
	else
	{
		x8.u1 = x23 + 0x10;
		x24 = x8 & ~0x0F;
		x0 = x24;
		_Znwm();
		x8 = x24 | 0x01;
		x19 = x0;
		((word32) sp + 672)->u0 = x0;
		((word32) sp + 656)->u0 = x8;
		((word32) sp + 664)->u0 = x23;
	}
	x0 = x19;
	x1 = x20;
	x2 = x23;
	x0 = memcpy(x0, x1, x2);
l000000000002C5A4:
	*(x19 + x23) = (word64) 0x00;
	x0.u1 = sp + 656;
	_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
	Eq_14 v45;
	v45.u1 = *((word32) sp + 656);
	w8.u1 = (word32) v45;
	w19 = w0;
	Eq_14 q0;
	if ((w8 & 0x01) != 0x00)
	{
		Eq_14 v46;
		v46.u0 = sp.u0->t02B0.u0;
		w8.u1 = (word32) v46;
		if ((w8 & 0x01) != 0x00)
		{
l000000000002C5C4:
			if ((w19 & 0x01) == 0x00)
				goto l000000000002C614;
			goto l000000000002C5C8;
		}
	}
	else
	{
		x0.u1 = *((word32) sp + 672);
		((real64) q0, x0, x1);
		Eq_14 v51;
		v51.u0 = sp.u0->t02B0.u0;
		w8.u1 = (word32) v51;
		if ((w8 & 0x01) == 0x00)
			goto l000000000002C5C4;
	}
l000000000002C560:
	x0.u1 = *((word32) sp + 704);
	((real64) q0, x0, x1);
	if ((w19 & 0x01) == 0x00)
		goto l000000000002C614;
l000000000002C5C8:
	x8.u0 = 0x00070000;
	x8 = *((word32) x8 + 3432);
	x1 = *x8.u1;
	x2.u0 = 0x00071000;
	Eq_14 x3;
	x3.u0 = 0x00052000;
	x2.u1 = x2 + 0x0118;
	x3.u1 = (word32) x3 + 0x05EE;
	x0.u1 = sp + 0x02D8;
	ui32 w4 = 0x00 | 0x06;
	word64 x5 = 0x00;
	x19.u1 = sp + 0x02D8;
	_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
	x0.u1 = x19 + 0x08;
	x1.u0 = 0x00052000;
	x1.u1 = x1 + 0x01DB;
	ui32 w2 = 0x09;
	fn000000000001BB30();
	x0.u1 = sp + 0x02D8;
	LogCapture::~LogCapture();
	sp.u0 = sp + 0x08;
l000000000002C614:
	x0.u1 = sp.u0->t0050.u1;
	x1.u1 = *((word32) sp + 32);
	x8.u1 = sp + 0x0278;
	fn000000000001B6B0();
	x20.u1 = sp.u0->t0278.u1;
	x1.u1 = sp.u0->t0280.u1;
	Eq_32875 x31 = x20 - x1;
	NZCV.u0 = cond(x31);
	ui32 w21;
	if (Test(EQ,Z))
	{
		w21 = 0x00 | 0x01;
		w19 = 0x00 | 0x01;
		if (x20 == 0x00)
			goto l000000000002D108;
		goto l000000000002D0C8;
	}
	x0 = x20;
	fn000000000001BB50();
	x8.u1 = sp.u0->t0280.u1;
	x23 = x0;
	x31 = x0 - x8;
	NZCV.u0 = cond(x31);
	if (Test(NE,Z))
	{
		x9 = x8 - x23;
		x10.u1 = x23 + x9;
		x31 = x10 - x8;
		NZCV.u0 = cond(x31);
		Eq_14 x11;
		if (Test(NE,Z))
		{
			x10 = 0x00 | 0xAAAAAAAAAAAAAAAA;
			x9 >>= 3;
			x10 = SEQ(SLICE(x10, word48, 16), ~0x5554);
			ui32 w11 = 0x00 | 0x18;
			x9 *= x10;
			x10 = -(x9 *64 x11);
			x9.u1 = x9 + (x9 << 1);
			x19.u1 = x8 + x10;
			x20 = x9 << 3;
			do
			{
				Eq_14 v55 = *x23.u1;
				w8.u1 = (word32) v55;
				if ((w8 & 0x01) != 0x00)
					x23.u1->u0 = 0x00;
				else
				{
					x8 = *((word32) x23 + 16);
					x8.u1->u0 = 0x00;
					Eq_14 v57 = *x23.u1;
					w8.u1 = (word32) v57;
					((word32) x23 + 8)->u0 = 0x00;
					if ((w8 & 0x01) != 0x00)
					{
						x0 = *((word32) x23 + 16);
						((real64) q0, x0, x1);
						x23.u1->u0 = 0x00;
					}
				}
				x8.u1 = x23 + x20;
				x9 = *((word32) x8 + 16);
				q0 = *x8.u1;
				*((word32) x23 + 16) = x9;
				*x23.u1 = q0;
				x23.u1 = x23 + 24;
				x31 = x19 - x23;
				NZCV.u0 = cond(x31);
				Eq_33039 v56;
				v56.u0 = x8 + 8;
				v56.u0->t0000.u1 = (size_t) 0x00;
				v56.u0->t0008.u1 = (size_t) 0x00;
				x8.u1->u0 = 0x00;
			} while (Test(NE,Z));
			x8.u1 = sp.u0->t0280.u1;
		}
		x31 = x8 - x23;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
			x19 = x8;
			do
			{
				x19.u1 = x19 + -24;
				Eq_14 v58 = *x19.u1;
				w9 = (word32) v58;
				if ((w9 & 0x01) != 0x00)
				{
					x0 = *((word32) x8 - 8);
					((real64) q0, x0, x1);
				}
				x31 = x23 - x19;
				NZCV.u0 = cond(x31);
				x8 = x19;
			} while (Test(NE,Z));
		}
		x24.u1 = sp.u0->t0278.u1;
		x8 = x23;
		sp.u0->t0280.u1 = (size_t) x23;
		x31 = x24 - x23;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
		{
l000000000002C714:
			x8.u1 = sp + 600;
			x9.u1 = sp + 0x0240;
			x27.u1 = x8 + 0x08;
			x8.u1 = x8 + 0x09;
			x10.u1 = sp + 0x02D8;
			((word32) sp + 56)->u0 = x8;
			x8 = x9 | 0x01;
			x11.u1 = sp + 0x0220;
			((word32) sp + 48)->u0 = x8;
			x8.u1 = x10 + 0x08;
			Eq_33137 x12;
			x12.u0 = sp + 0x0208;
			((word32) sp + 64)->u0 = x8;
			x8.u1 = x11 + 0x09;
			w20 = 0x00;
			x28.u1 = x11 + 0x08;
			((word32) sp + 40)->u0 = x8;
			x8 = x12 | 0x01;
			sp.u0->t0010.u1 = (size_t) x8;
			bool V;
			do
			{
				Eq_14 v60 = *((word32) x21 + 8);
				w9 = (word32) v60;
				x10 = *((word32) x21 + 24);
				w8 = *x21.u1;
				x11.u1 = (word32) x21 + 9;
				w31 = w9 & 0x01;
				NZ.u0 = cond(w31);
				x26.u1 = Test(EQ,Z) ? x11 : x10;
				x0 = x26;
				((word32) sp + 600)->u0 = w8;
				Eq_14 v61 = x27;
				v61.u1->u1 = 0x00;
				((word32) v61 + 8)->u0 = 0x00;
				((word32) x27 + 16)->u0 = 0x00;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(UGE,C))
				{
					x0 = x27;
					fn000000000001B2D0();
l000000000002D164:
					x0.u1 = sp + 0x0240;
					fn000000000001B2D0();
l000000000002D16C:
					x0 = x28;
					fn000000000001B2D0();
l000000000002D174:
					x0 = x25;
					fn000000000001B2D0();
l000000000002D17C:
					x0.u1 = sp + 0x0208;
					fn000000000001B2D0();
l000000000002D184:
					x0.u1 = sp + 0x0170;
					fn000000000001B2D0();
					goto l000000000002D18C;
				}
				x19 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					x25.u1 = *((word32) sp + 56);
					w8 = w19 << 1;
					((word32) sp + 608)->u0 = (byte) w8;
					if (x19 == 0x00)
						goto l000000000002C7E4;
				}
				else
				{
					x8.u1 = x19 + 0x10;
					x22 = x8 & ~0x0F;
					x0 = x22;
					_Znwm();
					x8 = x22 | 0x01;
					x25 = x0;
					((word32) sp + 624)->u0 = x0;
					((word32) sp + 608)->u0 = x8;
					((word32) sp + 616)->u0 = x19;
				}
				x0 = x25;
				x1 = x26;
				x2 = x19;
				x0 = memcpy(x0, x1, x2);
l000000000002C7E4:
				*(x25 + x19) = (word64) 0x00;
				x0.u1 = sp + 600;
				((LEVELS) x0);
				ui32 w26;
				if ((w0 & 0x01) != 0x00)
				{
					x8.u0 = 0x00070000;
					x8 = *((word32) x8 + 3432);
					((word32) sp + 592)->u0 = 0x00;
					((word32) sp + 584)->u0 = 0x00;
					((word32) sp + 576)->u0 = 0x00;
					x19 = *x8.u1;
					x0 = x19;
					x0 = strlen(x0);
					sp.u0 = x0 + 0x10;
					NZCV.u0 = cond(sp);
					if (Test(UGE,C))
						goto l000000000002D164;
					x26 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						x25.u1 = *((word32) sp + 48);
						w8 = w26 << 1;
						((word32) sp + 576)->u0 = (byte) w8;
						if (x26 == 0x00)
							goto l000000000002C88C;
					}
					else
					{
						x8.u1 = x26 + 0x10;
						x22 = x8 & ~0x0F;
						x0 = x22;
						_Znwm();
						x8 = x22 | 0x01;
						x25 = x0;
						((word32) sp + 592)->u0 = x0;
						((word32) sp + 576)->u0 = x8;
						((word32) sp + 584)->u0 = x26;
					}
					x0 = x25;
					x1 = x19;
					x2 = x26;
					x0 = memcpy(x0, x1, x2);
l000000000002C88C:
					*(x25 + x26) = (word64) 0x00;
					x0.u1 = sp + 0x0240;
					_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
					Eq_14 v65;
					v65.u1 = *((word32) sp + 576);
					w8.u1 = (word32) v65;
					w19 = w0;
					if ((w8 & 0x01) != 0x00)
					{
						byte v66 = (byte) *((word32) sp + 608);
						w8.u1 = (word32) v66;
						if ((w8 & 0x01) != 0x00)
							goto l000000000002C8AC;
						goto l000000000002C848;
					}
					x0.u1 = *((word32) sp + 592);
					((real64) q0, x0, x1);
					byte v86 = (byte) *((word32) sp + 608);
					w8.u1 = (word32) v86;
					if ((w8 & 0x01) != 0x00)
						goto l000000000002C848;
					goto l000000000002C8AC;
				}
				w19.u0 = 0x00;
				byte v89 = (byte) *((word32) sp + 608);
				w8.u1 = (word32) v89;
				if ((w8 & 0x01) != 0x00)
				{
l000000000002C848:
					x0.u1 = *((word32) sp + 624);
					((real64) q0, x0, x1);
					if ((w19 & 0x01) != 0x00)
						goto l000000000002C8B0;
				}
				else
				{
l000000000002C8AC:
					if ((w19 & 0x01) != 0x00)
					{
l000000000002C8B0:
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						x1 = *x8.u1;
						x3.u0 = 0x00052000;
						x0.u1 = sp + 0x02D8;
						w4 = 0x00 | 0x06;
						x2 = x21;
						x3.u1 = (word32) x3 + 0x05EE;
						x5 = 0x00;
						_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
						x0.u1 = *((word32) sp + 64);
						x1.u0 = 0x00052000;
						w2 = 0x00 | 0x0F;
						x1.u1 = x1 + 0x01E5;
						fn000000000001BB30();
						Eq_14 v67 = *x24.u1;
						w8.u1 = (word32) v67;
						struct Eq_33593 * v68 = (struct Eq_33593 *) ((word32) x24 + 8);
						x10.u1 = v68->t0000.u1;
						x9.u1 = v68->t0008.u1;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x11 = x8 >> 1;
						x1.u1 = Test(NE,Z) ? x9 : (word32) x24 + 1;
						x2.u1 = Test(EQ,Z) ? x11 : x10;
						fn000000000001BB30();
						x0.u1 = sp + 0x02D8;
						LogCapture::~LogCapture();
						sp.u0 = sp + 0x08;
					}
				}
				Eq_33548 v69;
				v69.u0 = sp + 72;
				x2.u1 = *v69;
				x0.u1 = *((word32) v69 + 8);
				x1 = x24;
				fn000000000001B170();
				if ((w0 & 0x01) != 0x00)
				{
					Eq_14 v70 = *((word32) x21 + 8);
					w9 = (word32) v70;
					x10 = *((word32) x21 + 24);
					w8 = *x21.u1;
					x11.u1 = (word32) x21 + 9;
					w31 = w9 & 0x01;
					NZ.u0 = cond(w31);
					x26.u1 = Test(EQ,Z) ? x11 : x10;
					x0 = x26;
					((word32) sp + 544)->u0 = w8;
					Eq_14 v71 = x28;
					v71.u1->u0 = 0x00;
					((word32) v71 + 8)->u0 = 0x00;
					((word32) x28 + 16)->u0 = 0x00;
					x0 = strlen(x0);
					sp.u0 = x0 + 0x10;
					NZCV.u0 = cond(sp);
					if (Test(UGE,C))
						goto l000000000002D16C;
					x19 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						x25.u1 = *((word32) sp + 40);
						w8 = w19 << 1;
						((word32) sp + 552)->u0 = (byte) w8;
						if (x19 == 0x00)
							goto l000000000002C9BC;
					}
					else
					{
						x8.u1 = x19 + 0x10;
						x22 = x8 & ~0x0F;
						x0 = x22;
						_Znwm();
						x8 = x22 | 0x01;
						x25 = x0;
						((word32) sp + 568)->u0 = x0;
						((word32) sp + 552)->u0 = x8;
						((word32) sp + 560)->u0 = x19;
					}
					x0 = x25;
					x1 = x26;
					x2 = x19;
					x0 = memcpy(x0, x1, x2);
l000000000002C9BC:
					*(x25 + x19) = (word64) 0x00;
					x0.u1 = sp + 0x0220;
					((LEVELS) x0);
					if ((w0 & 0x01) != 0x00)
					{
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						((word32) sp + 536)->u0 = 0x00;
						((word32) sp + 528)->u0 = 0x00;
						((word32) sp + 520)->u0 = 0x00;
						x19 = *x8.u1;
						x0 = x19;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(UGE,C))
							goto l000000000002D17C;
						x26 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							x25.u1 = sp.u0->t0010.u1;
							w8 = w26 << 1;
							((word32) sp + 520)->u0 = (byte) w8;
							if (x26 == 0x00)
								goto l000000000002CA50;
						}
						else
						{
							x8.u1 = x26 + 0x10;
							x22 = x8 & ~0x0F;
							x0 = x22;
							_Znwm();
							x8 = x22 | 0x01;
							x25 = x0;
							((word32) sp + 536)->u0 = x0;
							((word32) sp + 520)->u0 = x8;
							((word32) sp + 528)->u0 = x26;
						}
						x0 = x25;
						x1 = x19;
						x2 = x26;
						x0 = memcpy(x0, x1, x2);
l000000000002CA50:
						*(x25 + x26) = (word64) 0x00;
						x0.u1 = sp + 0x0208;
						_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
						Eq_14 v76;
						v76.u1 = *((word32) sp + 520);
						w8.u1 = (word32) v76;
						w19 = w0;
						if ((w8 & 0x01) != 0x00)
						{
							x0.u1 = *((word32) sp + 536);
							((real64) q0, x0, x1);
						}
					}
					else
						w19.u0 = 0x00;
					byte v80 = (byte) *((word32) sp + 552);
					w8.u1 = (word32) v80;
					++w20;
					if ((w8 & 0x01) != 0x00)
					{
						x0.u1 = *((word32) sp + 568);
						((real64) q0, x0, x1);
					}
					if ((w19 & 0x01) != 0x00)
					{
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						x1 = *x8.u1;
						x3.u0 = 0x00052000;
						x0.u1 = sp + 0x02D8;
						w4 = 0x00 | 0x06;
						x2 = x21;
						x3.u1 = (word32) x3 + 0x05EE;
						x5 = 0x00;
						_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
						x0.u1 = *((word32) sp + 64);
						x1.u0 = 0x00052000;
						w2 = 0x09;
						x1.u1 = x1 + 0x01EB;
						fn000000000001BB30();
						Eq_14 v82 = *x24.u1;
						w8.u1 = (word32) v82;
						Eq_34203 v83;
						v83.u0 = x24 + 8;
						x10.u1 = v83.u0->t0000.u1;
						x9.u1 = v83.u0->t0008.u1;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x11 = x8 >> 1;
						x1.u1 = Test(NE,Z) ? x9 : x24 + 0x01;
						x2.u1 = Test(EQ,Z) ? x11 : x10;
						fn000000000001BB30();
						x1.u0 = 0x00052000;
						w2 = 0x00 | 0x0C;
						x1.u1 = x1 + 0x02B4;
						fn000000000001BB30();
						x0.u1 = sp + 0x02D8;
						LogCapture::~LogCapture();
						sp.u0 = sp + 0x08;
					}
				}
				x24.u1 = (word32) x24 + 24;
				x31 = x23 - x24;
				NZCV.u0 = cond(x31);
			} while (Test(NE,Z));
			x8.u1 = sp.u0->t0280.u1;
			x24.u1 = sp.u0->t0278.u1;
l000000000002CB44:
			x8 -= x24;
			x9 = 0x00 | 0xAAAAAAAAAAAAAAAA;
			x8 >>= 3;
			x9 = SEQ(SLICE(x9, word48, 16), ~0x5554);
			x8 *= x9;
			NZCV.u0 = cond(x8 - (int64) w20);
			Eq_33321 w1;
			word32 NV;
			ui32 w22;
			if (Test(EQ,Z))
			{
				x8.u1 = sp.u0->t0050.u1;
				x0.u1 = x8 + 0x30;
				x8.u1 = sp + 448;
				fn000000000001BF10();
				x0.u1 = *((word32) sp + 448);
				((word32) sp + 424)->u0 = 0x00;
				x1.u1 = sp + 424;
				rs2_get_device_count();
				((word32) sp + 72)->u0 = w0;
				x0.u1 = *((word32) sp + 424);
				fn000000000001ADF0();
				w8.u1 = *((word32) sp + 72);
				if (w8 != 0x00)
				{
					x11.u0 = 0x00070000;
					x11 = *((word32) x11 + 0x0DC0);
					x8.u1 = sp + 0x0188;
					x9.u1 = sp + 0x0170;
					x25.u1 = x8 + 0x08;
					x8.u1 = x8 + 0x09;
					x10.u1 = sp + 0x02D8;
					((word32) sp + 64)->u0 = x8;
					x8 = x9 | 0x01;
					w1.u0 = 0x00;
					x26.u0 = 0x00;
					((word32) sp + 48)->u0 = x8;
					x8.u1 = x10 + 0x08;
					x20.u1 = x11 + 0x10;
					((word32) sp + 56)->u0 = x8;
					do
					{
						x8.u1 = sp + 424;
						x0.u1 = sp + 448;
						fn000000000001BD80();
						x0.u1 = *((word32) sp + 432);
						((word32) sp + 712)->u0 = 0x00;
						w1 = 0x00 | 0x01;
						x2.u1 = sp + 0x02C8;
						rs2_supports_device_info();
						w19 = w0;
						x0.u1 = *((word32) sp + 712);
						fn000000000001ADF0();
						NZCV.u0 = cond(w19 - 0x01);
						if (Test(GE,NV))
						{
							x0.u1 = *((word32) sp + 432);
							((word32) sp + 712)->u0 = 0x00;
							w1 = 0x00 | 0x01;
							x2.u1 = sp + 0x02C8;
							rs2_get_device_info();
							x27 = x0;
							x0.u1 = *((word32) sp + 712);
							fn000000000001ADF0();
						}
						else
						{
							x27.u0 = 0x00052000;
							x27.u1 = x27 + 0xF7;
						}
						x0.u1 = *((word32) sp + 432);
						((word32) sp + 712)->u0 = 0x00;
						w1 = 0x00 | 0x02;
						x2.u1 = sp + 0x02C8;
						rs2_supports_device_info();
						w19 = w0;
						x0.u1 = *((word32) sp + 712);
						fn000000000001ADF0();
						NZCV.u0 = cond(w19 - 0x01);
						if (Test(GE,NV))
						{
							x0.u1 = *((word32) sp + 432);
							((word32) sp + 712)->u0 = 0x00;
							w1 = 0x00 | 0x02;
							x2.u1 = sp + 0x02C8;
							rs2_get_device_info();
							x28 = x0;
							x0.u1 = *((word32) sp + 712);
							fn000000000001ADF0();
						}
						else
						{
							x28.u0 = 0x00052000;
							x28.u1 = x28 + 0xF7;
						}
						Eq_14 v72 = *((word32) x21 + 8);
						w9 = (word32) v72;
						x10 = *((word32) x21 + 24);
						w8 = *x21.u1;
						x11.u1 = (word32) x21 + 9;
						w31 = w9 & 0x01;
						NZ.u0 = cond(w31);
						x22.u1 = Test(EQ,Z) ? x11 : x10;
						x0 = x22;
						((word32) sp + 0x0188)->u0 = w8;
						Eq_14 v73 = x25;
						v73.u1->u0 = 0x00;
						((word32) v73 + 8)->u0 = 0x00;
						((word32) x25 + 16)->u0 = 0x00;
						x0 = strlen(x0);
						sp.u0 = x0 + (char *) 0x10;
						NZCV.u0 = cond(sp);
						if (Test(UGE,C))
							goto l000000000002D174;
						x19 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							x23.u1 = *((word32) sp + 64);
							w8 = w19 << 1;
							((word32) sp + 400)->u0 = (byte) w8;
							if (x19 == 0x00)
								goto l000000000002CD20;
						}
						else
						{
							x8.u1 = x19 + 0x10;
							x24 = x8 & ~0x0F;
							x0 = x24;
							_Znwm();
							x8 = x24 | 0x01;
							x23 = x0;
							Eq_33799 v85;
							v85.u0 = sp + 408;
							v85->u0 = x19;
							((word32) v85 + 8)->u0 = x0;
							((word32) sp + 400)->u0 = x8;
						}
						x0 = x23;
						x1 = x22;
						x2 = x19;
						x0 = memcpy(x0, x1, x2);
l000000000002CD20:
						*(x23 + x19) = (word64) 0x00;
						x0.u1 = sp + 0x0188;
						((LEVELS) x0);
						if ((w0 & 0x01) != 0x00)
						{
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 3432);
							Eq_33939 v74;
							v74.u0 = sp + 376;
							v74.u0->t0000.u1 = (size_t) 0x00;
							v74.u0->t0008.u1 = (size_t) 0x00;
							((word32) sp + 368)->u0 = 0x00;
							x19 = *x8.u1;
							x0 = x19;
							x0 = strlen(x0);
							sp.u0 = x0 + 0x10;
							NZCV.u0 = cond(sp);
							if (Test(UGE,C))
								goto l000000000002D184;
							x22 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								x23.u1 = *((word32) sp + 48);
								w8 = w22 << 1;
								((word32) sp + 368)->u0 = (byte) w8;
								if (x22 == 0x00)
									goto l000000000002CDC0;
							}
							else
							{
								x8.u1 = x22 + 0x10;
								x24 = x8 & ~0x0F;
								x0 = x24;
								_Znwm();
								x8 = x24 | 0x01;
								x23 = x0;
								Eq_33980 v79;
								v79.u0 = sp + 376;
								v79->u0 = x22;
								((word32) v79 + 8)->u0 = x0;
								((word32) sp + 368)->u0 = x8;
							}
							x0 = x23;
							x1 = x19;
							x2 = x22;
							x0 = memcpy(x0, x1, x2);
l000000000002CDC0:
							*(x23 + x22) = (word64) 0x00;
							x0.u1 = sp + 0x0170;
							_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
							Eq_14 v77;
							v77.u1 = *((word32) sp + 368);
							w8.u1 = (word32) v77;
							w19 = w0;
							if ((w8 & 0x01) != 0x00)
							{
								byte v78 = (byte) *((word32) sp + 400);
								w8.u1 = (word32) v78;
								if ((w8 & 0x01) != 0x00)
									goto l000000000002CDE0;
								goto l000000000002CD80;
							}
							x0.u1 = *((word32) sp + 384);
							((real64) q0, x0, x1);
							byte v81 = (byte) *((word32) sp + 400);
							w8.u1 = (word32) v81;
							if ((w8 & 0x01) != 0x00)
								goto l000000000002CD80;
							goto l000000000002CDE0;
						}
						w19.u0 = 0x00;
						byte v84 = (byte) *((word32) sp + 400);
						w8.u1 = (word32) v84;
						if ((w8 & 0x01) != 0x00)
						{
l000000000002CD80:
							x0.u1 = *((word32) sp + 416);
							((real64) q0, x0, x1);
							if ((w19 & 0x01) != 0x00)
								goto l000000000002CDE4;
						}
						else
						{
l000000000002CDE0:
							if ((w19 & 0x01) != 0x00)
							{
l000000000002CDE4:
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 3432);
								x1 = *x8.u1;
								x3.u0 = 0x00052000;
								x0.u1 = sp + 0x02D8;
								w4 = 0x00 | 0x06;
								x2 = x21;
								x3.u1 = (word32) x3 + 0x05EE;
								x5 = 0x00;
								_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
								x0.u1 = *((word32) sp + 56);
								x1.u0 = 0x00053000;
								w2 = 0x00 | 0x07;
								x1.u1 = x1 + 1455;
								fn000000000001BB30();
								x19 = x0;
								x0 = x27;
								x0 = strlen(x0);
								x2 = x0;
								x0 = x19;
								x1 = x27;
								fn000000000001BB30();
								x1.u0 = 0x00052000;
								w2 = 0x1D;
								x1.u1 = x1 + 522;
								fn000000000001BB30();
								x19 = x0;
								x0 = x28;
								x0 = strlen(x0);
								x2 = x0;
								x0 = x19;
								x1 = x28;
								fn000000000001BB30();
								x0.u1 = sp + 0x02D8;
								LogCapture::~LogCapture();
								sp.u0 = sp + 0x08;
							}
						}
						x19.u1 = *((word32) sp + 440);
						((word32) sp + 424)->u0 = x20;
						if (x19 != 0x00)
							x8.u1 = x19 + 0x08;
						w8.u1 = *((word32) sp + 72);
						x1.u1 = x26 + 0x01;
						x26 = __bfm<word64>(x26, x1, 0, 31);
						NZCV.u0 = cond(w8 - w1);
					} while (Test(NE,Z));
				}
				x19.u1 = sp.u0->t01C8.u1;
				if (x19 != 0x00)
					x8.u1 = x19 + 0x08;
				w21 = 0x00;
l000000000002D0BC:
				x20.u1 = sp.u0->t0278.u1;
				w19.u0 = 0x00;
				if (x20 == 0x00)
					goto l000000000002D108;
l000000000002D0C8:
				x8.u1 = sp.u0->t0280.u1;
				x31 = x8 - x20;
				NZCV.u0 = cond(x31);
				if (Test(NE,Z))
				{
					x22 = x8;
					do
					{
						x22.u1 = x22 + -24;
						byte v88 = (byte) *x22.u1;
						w9 = (word32) v88;
						if ((w9 & 0x01) != 0x00)
						{
							x0 = *((word32) x8 - 8);
							((real64) q0, x0, x1);
						}
						x31 = x20 - x22;
						NZCV.u0 = cond(x31);
						x8 = x22;
					} while (Test(NE,Z));
					x0.u1 = sp.u0->t0278.u1;
				}
				else
					x0 = x20;
				sp.u0->t0280.u1 = (size_t) x20;
				((real64) q0, x0, x1);
l000000000002D108:
				if (w21 == 0x00)
				{
l000000000002D10C:
					w19 = 0x00 | 0x01;
				}
l000000000002D110:
				x8.u1 = sp.u0->t0018.u1;
				x8 = *((word32) x8 + 40);
				x9 = *((word32) x29 - 96);
				x31 = x8 - x9;
				NZCV.u0 = cond(x31);
				if (Test(EQ,Z))
				{
					w0 = w19;
					sp.u0 = sp + 0x0430;
					Eq_34372 v90;
					v90.u0 = sp + 80;
					x29.u1 = v90.u0->t0000.u1;
					x30.u1 = v90.u0->t0008.u1;
					Eq_34381 v91;
					v91.u0 = sp + 64;
					x20.u1 = v91.u0->t0000.u1;
					x19.u1 = v91.u0->t0008.u1;
					Eq_34390 v92;
					v92.u0 = sp + 48;
					x22.u1 = v92.u0->t0000.u1;
					x21.u1 = v92.u0->t0008.u1;
					Eq_34399 v93;
					v93.u0 = sp + 32;
					x24.u1 = v93.u0->t0000.u1;
					x23.u1 = v93.u0->t0008.u1;
					Eq_34408 v94;
					v94.u0 = sp + 16;
					x26.u1 = v94.u0->t0000.u1;
					x25.u1 = v94.u0->t0008.u1;
					Eq_32532 v95 = sp;
					x28.u1 = v95.u0->t0000.u1;
					x27.u1 = v95.u0->t0008.u1;
					sp.u0 = sp + 96;
					return;
				}
l000000000002D194:
				__stack_chk_fail();
			}
			x8.u1 = sp.u0->t0050.u1;
			x0.u1 = x8 + 0x08;
			x1.u0 = 0x00052000;
			x1.u1 = x1 + 0x01F5;
			w2 = 0x14;
			fn000000000001B8B0();
			Eq_14 v97 = *((word32) x21 + 8);
			ui32 w10 = (word32) v97;
			x11 = *((word32) x21 + 24);
			w8 = *x21.u1;
			x12.u0 = (word32) x21 + 9;
			w31 = w10 & 0x01;
			NZ.u0 = cond(w31);
			x19.u1 = Test(EQ,Z) ? x12 : x11;
			x9.u1 = sp + 488;
			x0 = x19;
			x22.u1 = x9 + 0x08;
			((word32) sp + 488)->u0 = w8;
			Eq_33244 v98;
			v98.u0 = sp + 504;
			v98->u0 = 0x00;
			((word32) v98 + 8)->u0 = 0x00;
			sp.u0->t01F0.u1 = 0x00;
			x0 = strlen(x0);
			sp.u0 = x0 + (char *) 0x10;
			NZCV.u0 = cond(sp);
			if (Test(ULT,C))
			{
				x20 = x0;
				NZCV.u0 = cond(x0 - 0x17);
				if (Test(ULT,C))
				{
					w8 = w20 << 1;
					x22.u1 = x22 + 0x01;
					sp.u0->t01F0.u0 = (byte) (byte) w8;
					if (x20 == 0x00)
						goto l000000000002CFA4;
				}
				else
				{
					x8.u1 = x20 + 0x10;
					x23 = x8 & ~0x0F;
					x0 = x23;
					_Znwm();
					x8 = x23 | 0x01;
					x22 = x0;
					Eq_34439 v99;
					v99.u0 = sp + 504;
					v99.u0->t0000.u1 = (size_t) x20;
					v99.u0->t0008.u1 = (size_t) x0;
					sp.u0->t01F0.u1 = (size_t) x8;
				}
				x0 = x22;
				x1 = x19;
				x2 = x20;
				x0 = memcpy(x0, x1, x2);
l000000000002CFA4:
				*(x22 + x20) = (word64) 0x00;
				x0.u1 = sp + 488;
				((LEVELS) x0);
				if ((w0 & 0x01) == 0x00)
				{
					w19.u0 = 0x00;
					Eq_14 v105;
					v105.u0 = sp.u0->t01F0.u0;
					w8.u1 = (word32) v105;
					if ((w8 & 0x01) == 0x00)
						goto l000000000002D068;
					goto l000000000002D008;
				}
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 3432);
				Eq_34494 v100;
				v100.u0 = sp + 472;
				v100.u0->t0000.u1 = (size_t) 0x00;
				v100.u0->t0008.u1 = (size_t) 0x00;
				sp.u0->t01D0.u1 = (size_t) 0x00;
				x20 = *x8.u1;
				x0 = x20;
				x0 = strlen(x0);
				sp.u0 = x0 + 0x10;
				NZCV.u0 = cond(sp);
				if (Test(ULT,C))
				{
					x22 = x0;
					NZCV.u0 = cond(x0 - 0x17);
					if (Test(ULT,C))
					{
						x9.u1 = sp + 464;
						w8 = w22 << 1;
						x19 = x9 | 0x01;
						sp.u0->t01D0.u0 = (byte) (byte) w8;
						if (x22 == 0x00)
							goto l000000000002D048;
					}
					else
					{
						x8.u1 = x22 + 0x10;
						x23 = x8 & ~0x0F;
						x0 = x23;
						_Znwm();
						x8 = x23 | 0x01;
						x19 = x0;
						Eq_34535 v103;
						v103.u0 = sp + 472;
						v103->u0 = x22;
						((word32) v103 + 8)->u0 = x0;
						sp.u0->t01D0.u1 = (size_t) x8;
					}
					x0 = x19;
					x1 = x20;
					x2 = x22;
					x0 = memcpy(x0, x1, x2);
l000000000002D048:
					*(x19 + x22) = (word64) 0x00;
					x0.u1 = sp + 464;
					_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
					Eq_14 v101;
					v101.u0 = sp.u0->t01D0.u0;
					w8.u1 = (word32) v101;
					w19 = w0;
					if ((w8 & 0x01) != 0x00)
					{
						Eq_14 v102;
						v102.u0 = sp.u0->t01F0.u0;
						w8.u1 = (word32) v102;
						if ((w8 & 0x01) != 0x00)
						{
l000000000002D068:
							if ((w19 & 0x01) == 0x00)
								goto l000000000002D0B8;
l000000000002D06C:
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 3432);
							x1 = *x8.u1;
							x2.u0 = 0x00071000;
							x3.u0 = 0x00052000;
							x2.u1 = x2 + 0x0118;
							x3.u1 = (word32) x3 + 0x05EE;
							x0.u1 = sp + 0x02D8;
							w4 = 0x00 | 0x06;
							x5 = 0x00;
							x19.u1 = sp + 0x02D8;
							_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
							x0.u1 = x19 + 0x08;
							x1.u0 = 0x00052000;
							x1.u1 = x1 + 0x01F5;
							w2 = 0x14;
							fn000000000001BB30();
							x0.u1 = sp + 0x02D8;
							LogCapture::~LogCapture();
							sp.u0 = sp + 0x08;
l000000000002D0B8:
							w21 = 0x00 | 0x01;
							goto l000000000002D0BC;
						}
					}
					else
					{
						x0.u1 = *((word32) sp + 480);
						((real64) q0, x0, x1);
						Eq_14 v104;
						v104.u0 = sp.u0->t01F0.u0;
						w8.u1 = (word32) v104;
						if ((w8 & 0x01) == 0x00)
							goto l000000000002D068;
					}
l000000000002D008:
					x0.u1 = *((word32) sp + 0x0200);
					((real64) q0, x0, x1);
					if ((w19 & 0x01) == 0x00)
						goto l000000000002D0B8;
					goto l000000000002D06C;
				}
l000000000002D1A8:
				x0.u1 = sp + 464;
				fn000000000001B2D0();
				x22 = x1;
				x23 = x0;
				byte v106 = (byte) *((word32) sp + 400);
				w8.u1 = (word32) v106;
				if ((w8 & 0x01) != 0x00)
				{
					x0.u1 = *((word32) sp + 416);
					((real64) q0, x0, x1);
				}
				x8.u0 = 0x00070000;
				x8 = *((word32) x8 + 0x0DC0);
				x19.u1 = *((word32) sp + 440);
				x8.u1 = x8 + 0x10;
				((word32) sp + 424)->u0 = x8;
				if (x19 != 0x00)
					x8.u1 = x19 + 0x08;
				x19.u1 = sp.u0->t01C8.u1;
				if (x19 != 0x00)
					x8.u1 = x19 + 0x08;
				x19.u1 = sp.u0->t0278.u1;
				if (x19 != 0x00)
				{
					x8.u1 = sp.u0->t0280.u1;
					x31 = x8 - x19;
					NZCV.u0 = cond(x31);
					if (Test(NE,Z))
					{
						x20 = x8;
						do
						{
							x20.u1 = x20 + -24;
							byte v107 = (byte) *x20.u1;
							w9 = (word32) v107;
							if ((w9 & 0x01) != 0x00)
							{
								x0 = *((word32) x8 - 8);
								((real64) q0, x0, x1);
							}
							x31 = x19 - x20;
							NZCV.u0 = cond(x31);
							x8 = x20;
						} while (Test(NE,Z));
						x0.u1 = sp.u0->t0278.u1;
					}
					else
						x0 = x19;
					sp.u0->t0280.u1 = (size_t) x19;
l000000000002D70C:
					((real64) q0, x0, x1);
				}
				do
				{
					NZCV.u0 = cond(w22 - 0x02);
					if (Test(EQ,Z))
					{
						x0 = x23;
						sp.u0->t0008.u1 = (size_t) x22;
						__cxa_begin_catch();
						x8.u1 = sp.u0->t0050.u1;
						sp.u0->t0010.u1 = (size_t) x0;
						x0.u1 = x8 + 0x30;
						x8.u1 = sp + 448;
						fn000000000001BF10();
						x0.u1 = *((word32) sp + 448);
						sp.u0->t0278.u1 = (size_t) 0x00;
						x1.u1 = sp + 0x0278;
						rs2_get_device_count();
						((word32) sp + 72)->u0 = w0;
						x0.u1 = sp.u0->t0278.u1;
						fn000000000001ADF0();
						w8.u1 = *((word32) sp + 72);
						if (w8 == 0x00)
						{
l000000000002DA84:
							w20 = 0x00;
							x19.u1 = sp.u0->t01C8.u1;
							if (x19 == 0x00)
								goto l000000000002DD40;
							goto l000000000002DD10;
						}
						x11.u1 = *((word32) sp + 32);
						x8.u1 = sp + 0x0118;
						x9.u1 = sp + 0x0100;
						x26.u1 = x8 + 0x08;
						x11.u1 = x11 + 0x01;
						((word32) sp + 40)->u0 = x11;
						x11.u0 = 0x00070000;
						x11 = *((word32) x11 + 0x0DC0);
						x8.u1 = x8 + 0x09;
						x10.u1 = sp + 0x02D8;
						((word32) sp + 64)->u0 = x8;
						x8 = x9 | 0x01;
						w1.u0 = 0x00;
						x25.u0 = 0x00;
						ui32 w27 = 0x00 | 0x01;
						((word32) sp + 48)->u0 = x8;
						x8.u1 = x10 + 0x08;
						x20.u1 = x11 + 0x10;
						((word32) sp + 56)->u0 = x8;
						do
						{
							x8.u1 = sp + 0x0278;
							x0.u1 = sp + 448;
							fn000000000001BD80();
							x0.u1 = sp.u0->t0280.u1;
							((word32) sp + 720)->u0 = 0x00;
							w1 = 0x00 | 0x02;
							x2.u1 = sp + 0x02D0;
							rs2_supports_device_info();
							w19 = w0;
							x0.u1 = *((word32) sp + 720);
							fn000000000001ADF0();
							NZCV.u0 = cond(w19 - 0x01);
							if (Test(GE,NV))
							{
								x0.u1 = sp.u0->t0280.u1;
								((word32) sp + 720)->u0 = 0x00;
								w1 = 0x00 | 0x02;
								x2.u1 = sp + 0x02D0;
								rs2_get_device_info();
								x28 = x0;
								x0.u1 = *((word32) sp + 720);
								fn000000000001ADF0();
							}
							else
							{
								x28.u0 = 0x00052000;
								x28.u1 = x28 + 0xF7;
							}
							Eq_14 v109 = *((word32) x21 + 8);
							w9 = (word32) v109;
							x10 = *((word32) x21 + 24);
							w8 = *x21.u1;
							x11.u1 = (word32) x21 + 9;
							w31 = w9 & 0x01;
							NZ.u0 = cond(w31);
							x22.u1 = Test(EQ,Z) ? x11 : x10;
							x0 = x22;
							((word32) sp + 0x0118)->u0 = w8;
							Eq_14 v110 = x26;
							v110.u1->u0 = 0x00;
							((word32) v110 + 8)->u0 = 0x00;
							((word32) x26 + 16)->u0 = 0x00;
							x0 = strlen(x0);
							sp.u0 = x0 + 0x10;
							NZCV.u0 = cond(sp);
							if (Test(UGE,C))
							{
								x0 = x26;
								fn000000000001B2D0();
l000000000002DD6C:
								x0.u1 = sp + 0x0100;
								fn000000000001B2D0();
l000000000002DD74:
								x0.u1 = *((word32) sp + 32);
								fn000000000001C380();
								goto l000000000002DD7C;
							}
							x19 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								x23.u1 = *((word32) sp + 64);
								w8 = w19 << 1;
								((word32) sp + 288)->u0 = (byte) w8;
								if (x19 == 0x00)
									goto l000000000002D8A4;
							}
							else
							{
								x8.u1 = x19 + 0x10;
								x24 = x8 & ~0x0F;
								x0 = x24;
								_Znwm();
								x8 = x24 | 0x01;
								x23 = x0;
								Eq_34932 v159;
								v159.u0 = sp + 296;
								v159.u0->t0000.u1 = (size_t) x19;
								v159.u0->t0008.u1 = (size_t) x0;
								((word32) sp + 288)->u0 = x8;
							}
							x0 = x23;
							x1 = x22;
							x2 = x19;
							x0 = memcpy(x0, x1, x2);
l000000000002D8A4:
							*(x23 + x19) = (word64) 0x00;
							x0.u1 = sp + 0x0118;
							((LEVELS) x0);
							if ((w0 & 0x01) != 0x00)
							{
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 3432);
								Eq_34997 v111;
								v111.u0 = sp + 264;
								v111.u0->t0000.u1 = (size_t) 0x00;
								v111.u0->t0008.u1 = (size_t) 0x00;
								((word32) sp + 0x0100)->u0 = 0x00;
								x19 = *x8.u1;
								x0 = x19;
								x0 = strlen(x0);
								sp.u0 = x0 + 0x10;
								NZCV.u0 = cond(sp);
								if (Test(UGE,C))
									goto l000000000002DD6C;
								x22 = x0;
								NZCV.u0 = cond(x0 - 0x17);
								if (Test(ULT,C))
								{
									x23.u1 = *((word32) sp + 48);
									w8 = w22 << 1;
									((word32) sp + 0x0100)->u0 = (byte) w8;
									if (x22 == 0x00)
										goto l000000000002D944;
								}
								else
								{
									x8.u1 = x22 + 0x10;
									x24 = x8 & ~0x0F;
									x0 = x24;
									_Znwm();
									x8 = x24 | 0x01;
									x23 = x0;
									Eq_35038 v149;
									v149.u0 = sp + 264;
									v149->u0 = x22;
									((word32) v149 + 8)->u0 = x0;
									((word32) sp + 0x0100)->u0 = x8;
								}
								x0 = x23;
								x1 = x19;
								x2 = x22;
								x0 = memcpy(x0, x1, x2);
l000000000002D944:
								*(x23 + x22) = (word64) 0x00;
								x0.u1 = sp + 0x0100;
								_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
								Eq_14 v113;
								v113.u1 = *((word32) sp + 0x0100);
								w8.u1 = (word32) v113;
								w19 = w0;
								if ((w8 & 0x01) != 0x00)
								{
									Eq_14 v114;
									v114.u1 = *((word32) sp + 288);
									w8.u1 = (word32) v114;
									if ((w8 & 0x01) != 0x00)
										goto l000000000002D964;
									goto l000000000002D904;
								}
								x0.u1 = *((word32) sp + 272);
								((real64) q0, x0, x1);
								Eq_14 v115;
								v115.u1 = *((word32) sp + 288);
								w8.u1 = (word32) v115;
								if ((w8 & 0x01) != 0x00)
									goto l000000000002D904;
								goto l000000000002D964;
							}
							w19.u0 = 0x00;
							Eq_14 v158;
							v158.u1 = *((word32) sp + 288);
							w8.u1 = (word32) v158;
							if ((w8 & 0x01) != 0x00)
							{
l000000000002D904:
								x0.u1 = *((word32) sp + 304);
								((real64) q0, x0, x1);
								if ((w19 & 0x01) != 0x00)
									goto l000000000002D968;
							}
							else
							{
l000000000002D964:
								if ((w19 & 0x01) != 0x00)
								{
l000000000002D968:
									x8.u0 = 0x00070000;
									x8 = *((word32) x8 + 3432);
									x1 = *x8.u1;
									x3.u0 = 0x00052000;
									x0.u1 = sp + 0x02D8;
									w4 = 0x00 | 0x06;
									x2 = x21;
									x3.u1 = (word32) x3 + 0x05EE;
									x5 = 0x00;
									_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
									x0.u1 = *((word32) sp + 56);
									x1.u0 = 0x00052000;
									w2 = 0x0D;
									x1.u1 = x1 + 0x0228;
									fn000000000001BB30();
									x19 = x0;
									x0 = x28;
									x0 = strlen(x0);
									x2 = x0;
									x0 = x19;
									x1 = x28;
									fn000000000001BB30();
									x0.u1 = sp + 0x02D8;
									LogCapture::~LogCapture();
									sp.u0 = sp + 0x08;
								}
							}
							x0 = x28;
							x0 = strlen(x0);
							x9.u1 = *((word32) sp + 32);
							Eq_14 v116 = *x9.u1;
							w8.u1 = (word32) v116;
							x9 = *((word32) x9 + 8);
							x10 = x8 >> 1;
							w31 = w8 & 0x01;
							NZ.u0 = cond(w31);
							x9.u1 = Test(EQ,Z) ? x10 : x9;
							x31 = x0 - x9;
							NZCV.u0 = cond(x31);
							if (Test(EQ,Z))
							{
								x2 = x0;
								if (x0 == 0x00)
									goto l000000000002DA30;
								sp.u0 = x2 + (char *) 0x01;
								NZCV.u0 = cond(sp);
								if (Test(EQ,Z))
									goto l000000000002DD74;
								x9.u1 = *((word32) sp + 32);
								w31 = w8 & 0x01;
								NZ.u0 = cond(w31);
								x8.u1 = *((word32) sp + 40);
								x1 = x28;
								x9 = *((word32) x9 + 16);
								x0.u1 = Test(EQ,Z) ? x8 : x9;
								x0 = SEQ(0x00, memcmp(x0, x1, x2));
								NZCV.u0 = cond(w0 - 0x00);
								w8.u1 = (word32) Test(EQ,Z);
								w27 &= w8;
							}
							else
								w27 = 0x00;
l000000000002DA30:
							x19.u1 = *((word32) sp + 0x0288);
							sp.u0->t0278.u1 = (size_t) x20;
							if (x19 != 0x00)
								x8.u1 = x19 + 0x08;
							w8.u1 = *((word32) sp + 72);
							x1.u1 = x25 + 0x01;
							x25 = __bfm<word64>(x25, x1, 0, 31);
							NZCV.u0 = cond(w8 - w1);
						} while (Test(NE,Z));
						if ((w27 & 0x01) != 0x00)
							goto l000000000002DA84;
						x8.u1 = sp.u0->t0050.u1;
						x20.u1 = x8 + 0x08;
						x1.u0 = 0x00052000;
						x1.u1 = x1 + 566;
						w2 = 33;
						x0 = x20;
						fn000000000001B8B0();
						x19.u1 = sp.u0->t0010.u1;
						Eq_14 v128 = *((word32) x19 + 16);
						w8.u1 = (word32) v128;
						Eq_35615 v129;
						v129.u0 = x19 + 24;
						x9.u1 = v129.u0->ptr0000;
						x10.u1 = v129.u0->t0008.u1;
						x11.u1 = x19 + 0x11;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x12 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x11 : x10;
						x2.u1 = Test(EQ,Z) ? x12 : x9;
						x0 = x20;
						fn000000000001B1B0();
						x1.u0 = 0x00050000;
						x1.u1 = x1 + 1848;
						w2 = 0x00 | 0x01;
						x0 = x20;
						fn000000000001B1B0();
						Eq_14 v130 = *((word32) x19 + 40);
						w8.u1 = (word32) v130;
						Eq_35649 v131;
						v131.u0 = x19 + 48;
						x9.u1 = v131.u0->ptr0000;
						x10.u1 = v131.u0->t0008.u1;
						x11.u1 = x19 + 0x29;
						w31 = w8 & 0x01;
						NZ.u0 = cond(w31);
						C = false;
						V = false;
						x12 = x8 >> 1;
						x1.u1 = Test(EQ,Z) ? x11 : x10;
						x2.u1 = Test(EQ,Z) ? x12 : x9;
						x0 = x20;
						fn000000000001B1B0();
						x1.u0 = 0x00050000;
						x1.u1 = x1 + 0x073A;
						w2 = 0x00 | 0x02;
						x0 = x20;
						fn000000000001B1B0();
						x8 = *x19.u1;
						x0 = x19;
						x8 = *((word32) x8 + 16);
						x8();
						x19 = x0;
						x0 = strlen(x0);
						x2 = x0;
						x0 = x20;
						x1 = x19;
						fn000000000001B1B0();
						x8.u0 = 0x00071000;
						x8.u1 = x8 + 0x0198;
						x9.u1 = sp + 0xE0;
						x22.u1 = x9 + 0x08;
						Eq_14 v132 = *((word32) x8 + 8);
						w9 = (word32) v132;
						x11 = *((word32) x8 + 24);
						w10 = (ui32) *x8.u1;
						x8.u1 = x8 + 0x09;
						w31 = w9 & 0x01;
						NZ.u0 = cond(w31);
						x19.u1 = Test(EQ,Z) ? x8 : x11;
						x0 = x19;
						sp.u0->dw00E0 = w10;
						Eq_35716 v133;
						v133.u0 = sp + 0x00F0;
						v133.u0->t0000.u1 = (size_t) 0x00;
						v133.u0->t0008.u1 = (size_t) 0x00;
						sp.u0->t00E8.u1 = (size_t) 0x00;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(ULT,C))
						{
							x21 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								w8 = w21 << 1;
								x22.u1 = x22 + 0x01;
								sp.u0->t00E8.u0 = (byte) (byte) w8;
								if (x21 == 0x00)
									goto l000000000002DBE0;
							}
							else
							{
								x8.u1 = x21 + 0x10;
								x23 = x8 & ~0x0F;
								x0 = x23;
								_Znwm();
								x8 = x23 | 0x01;
								x22 = x0;
								Eq_35860 v134;
								v134.u0 = sp + 0x00F0;
								v134->u0 = x21;
								((word32) v134 + 8)->u0 = x0;
								sp.u0->t00E8.u1 = (size_t) x8;
							}
							x0 = x22;
							x1 = x19;
							x2 = x21;
							x0 = memcpy(x0, x1, x2);
l000000000002DBE0:
							*(x22 + x21) = (word64) 0x00;
							x0.u1 = sp + 0xE0;
							((LEVELS) x0);
							if ((w0 & 0x01) == 0x00)
							{
								w19.u0 = 0x00;
								Eq_14 v142;
								v142.u0 = sp.u0->t00E8.u0;
								w8.u1 = (word32) v142;
								if ((w8 & 0x01) != 0x00)
									goto l000000000002DC44;
								goto l000000000002DCA4;
							}
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 3432);
							Eq_35917 v135;
							v135.u0 = sp + 0x00D0;
							v135->u0 = 0x00;
							((word32) v135 + 8)->u0 = 0x00;
							sp.u0->t00C8.u1 = 0x00;
							x21 = *x8.u1;
							x0 = x21;
							x0 = strlen(x0);
							sp.u0 = x0 + 0x10;
							NZCV.u0 = cond(sp);
							if (Test(UGE,C))
								goto l000000000002DD84;
							x23 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								x9.u1 = sp + 200;
								w8 = w23 << 1;
								x19 = x9 | 0x01;
								sp.u0->t00C8.u0 = (byte) (byte) w8;
								if (x23 == 0x00)
									goto l000000000002DC84;
							}
							else
							{
								x8.u1 = x23 + 0x10;
								x22 = x8 & ~0x0F;
								x0 = x22;
								_Znwm();
								x8 = x22 | 0x01;
								x19 = x0;
								Eq_35961 v140;
								v140.u0 = sp + 0x00D0;
								v140.u0->t0000.u1 = (size_t) x23;
								v140.u0->t0008.u1 = (size_t) x0;
								sp.u0->t00C8.u1 = (size_t) x8;
							}
							x0 = x19;
							x1 = x21;
							x2 = x23;
							x0 = memcpy(x0, x1, x2);
l000000000002DC84:
							*(x19 + x23) = (word64) 0x00;
							x0.u1 = sp + 200;
							_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
							Eq_14 v136;
							v136.u0 = sp.u0->t00C8.u0;
							w8.u1 = (word32) v136;
							w19 = w0;
							if ((w8 & 0x01) != 0x00)
							{
								Eq_14 v137;
								v137.u0 = sp.u0->t00E8.u0;
								w8.u1 = (word32) v137;
								if ((w8 & 0x01) != 0x00)
									goto l000000000002DCA4;
								goto l000000000002DC44;
							}
							x0.u1 = sp.u0->t00D8.u1;
							((real64) q0, x0, x1);
							Eq_14 v141;
							v141.u0 = sp.u0->t00E8.u0;
							w8.u1 = (word32) v141;
							if ((w8 & 0x01) != 0x00)
							{
l000000000002DC44:
								x0.u1 = sp.u0->t00F8.u1;
								((real64) q0, x0, x1);
								if ((w19 & 0x01) != 0x00)
									goto l000000000002DCA8;
							}
							else
							{
l000000000002DCA4:
								if ((w19 & 0x01) != 0x00)
								{
l000000000002DCA8:
									x8.u0 = 0x00070000;
									x8 = *((word32) x8 + 3432);
									x1 = *x8.u1;
									x2.u0 = 0x00071000;
									x3.u0 = 0x00052000;
									x2.u1 = x2 + 0x0198;
									x3.u1 = (word32) x3 + 0x05EE;
									x0.u1 = sp + 0x02D8;
									w4 = 0x00 | 0x06;
									x5 = 0x00;
									x19.u1 = sp + 0x02D8;
									_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
									x10.u1 = sp.u0->t0050.u1;
									x0.u1 = x19 + 0x08;
									Eq_14 v138 = *((word32) x10 + 8);
									w8.u1 = (word32) v138;
									Eq_36091 v139;
									v139.u0 = x10 + 16;
									x9.u1 = *v139;
									x10.u1 = *((word32) v139 + 8);
									w31 = w8 & 0x01;
									NZ.u0 = cond(w31);
									C = false;
									V = false;
									x11 = x8 >> 1;
									x1.u1 = Test(NE,Z) ? x10 : x20 + 0x01;
									x2.u1 = Test(EQ,Z) ? x11 : x9;
									fn000000000001BB30();
									x0.u1 = sp + 0x02D8;
									LogCapture::~LogCapture();
									sp.u0 = sp + 0x08;
								}
							}
							w20 = 0x00 | 0x01;
							x19.u1 = sp.u0->t01C8.u1;
							if (x19 != 0x00)
							{
l000000000002DD10:
								x8.u1 = x19 + 0x08;
							}
l000000000002DD40:
							__cxa_end_catch();
							if (w20 == 0x00)
								goto l000000000002D10C;
							goto l000000000002DD48;
						}
l000000000002DD7C:
						x0 = x22;
						fn000000000001B2D0();
l000000000002DD84:
						x0.u1 = sp + 200;
						fn000000000001B2D0();
						fn000000000001F990();
						sp.u0 = sp + 0x08;
						x20 = x1;
						x23 = x0;
						Eq_14 v112;
						v112.u1 = *((word32) sp + 288);
						w8.u1 = (word32) v112;
						if ((w8 & 0x01) != 0x00)
						{
							x0.u1 = *((word32) sp + 304);
							((real64) q0, x0, x1);
						}
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 0x0DC0);
						x19.u1 = *((word32) sp + 0x0288);
						x8.u1 = x8 + 0x10;
						sp.u0->t0278.u1 = (size_t) x8;
						if (x19 != 0x00)
							x8.u1 = x19 + 0x08;
						x19.u1 = sp.u0->t01C8.u1;
						if (x19 != 0x00)
							x8.u1 = x19 + 0x08;
						x8.u1 = sp.u0->t0008.u1;
						NZCV.u0 = cond(w20 - w8);
						if (Test(EQ,Z))
						{
							x0 = x23;
							__cxa_begin_catch();
							x8.u1 = sp.u0->t0050.u1;
							x21 = x0;
							x20.u1 = x8 + 0x08;
							x1.u0 = 0x00052000;
							x1.u1 = x1 + 566;
							w2 = 33;
							x0 = x20;
							fn000000000001B8B0();
							Eq_14 v117 = *((word32) x21 + 16);
							w8.u1 = (word32) v117;
							Eq_35294 v118;
							v118.u0 = x21 + 24;
							x9.u1 = v118.u0->ptr0000;
							x10.u1 = v118.u0->t0008.u1;
							x11.u1 = x21 + 0x11;
							w31 = w8 & 0x01;
							NZ.u0 = cond(w31);
							C = false;
							V = false;
							x12 = x8 >> 1;
							x1.u1 = Test(EQ,Z) ? x11 : x10;
							x2.u1 = Test(EQ,Z) ? x12 : x9;
							x0 = x20;
							fn000000000001B1B0();
							x1.u0 = 0x00050000;
							x1.u1 = x1 + 1848;
							w2 = 0x00 | 0x01;
							x0 = x20;
							fn000000000001B1B0();
							Eq_14 v119 = *((word32) x21 + 40);
							w8.u1 = (word32) v119;
							Eq_35328 v120;
							v120.u0 = x21 + 48;
							x9.u1 = v120.u0->ptr0000;
							x10.u1 = v120.u0->t0008.u1;
							x11.u1 = x21 + 0x29;
							w31 = w8 & 0x01;
							NZ.u0 = cond(w31);
							C = false;
							V = false;
							x12 = x8 >> 1;
							x1.u1 = Test(EQ,Z) ? x11 : x10;
							x2.u1 = Test(EQ,Z) ? x12 : x9;
							x0 = x20;
							fn000000000001B1B0();
							x1.u0 = 0x00050000;
							x1.u1 = x1 + 0x073A;
							w2 = 0x00 | 0x02;
							x0 = x20;
							fn000000000001B1B0();
							x8 = *x21.u1;
							x0 = x21;
							x8 = *((word32) x8 + 16);
							x8();
							x19 = x0;
							x0 = strlen(x0);
							x2 = x0;
							x0 = x20;
							x1 = x19;
							fn000000000001B1B0();
							x8.u0 = 0x00071000;
							x8.u1 = x8 + 0x0198;
							x9.u1 = sp + 0x70;
							x22.u1 = x9 + 0x08;
							Eq_14 v121 = *((word32) x8 + 8);
							w9 = (word32) v121;
							x11 = *((word32) x8 + 24);
							w10 = (ui32) *x8.u1;
							x8.u1 = x8 + 0x09;
							w31 = w9 & 0x01;
							NZ.u0 = cond(w31);
							x19.u1 = Test(EQ,Z) ? x8 : x11;
							x0 = x19;
							((word32) sp + 112)->u0 = w10;
							Eq_35395 v122;
							v122.u0 = sp + 0x0080;
							v122.u0->qw0000 = 0x00;
							v122.u0->t0008.u1 = (size_t) 0x00;
							((word32) sp + 0x0078)->u0 = 0x00;
							x0 = strlen(x0);
							sp.u0 = x0 + 0x10;
							NZCV.u0 = cond(sp);
							if (Test(UGE,C))
							{
								x0 = x22;
								fn000000000001B2D0();
								goto l000000000002E3CC;
							}
							x21 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								w8 = w21 << 1;
								x22.u1 = x22 + 0x01;
								((word32) sp + 0x0078)->u0 = (byte) w8;
								if (x21 == 0x00)
									goto l000000000002E1B0;
							}
							else
							{
								x8.u1 = x21 + 0x10;
								x23 = x8 & ~0x0F;
								x0 = x23;
								_Znwm();
								x8 = x23 | 0x01;
								x22 = x0;
								Eq_35431 v146;
								v146.u0 = sp + 0x0080;
								v146->u0 = x21;
								((word32) v146 + 8)->u0 = x0;
								((word32) sp + 0x0078)->u0 = x8;
							}
							x0 = x22;
							x1 = x19;
							x2 = x21;
							x0 = memcpy(x0, x1, x2);
l000000000002E1B0:
							*(x22 + x21) = (word64) 0x00;
							x0.u1 = sp + 0x70;
							((LEVELS) x0);
							if ((w0 & 0x01) == 0x00)
							{
								w19.u0 = 0x00;
								Eq_14 v145;
								v145.u1 = *((word32) sp + 0x0078);
								w8.u1 = (word32) v145;
								if ((w8 & 0x01) != 0x00)
									goto l000000000002E214;
								goto l000000000002E348;
							}
							x8.u0 = 0x00070000;
							x8 = *((word32) x8 + 3432);
							Eq_35500 v123;
							v123.u0 = sp + 96;
							v123->u0 = 0x00;
							((word32) v123 + 8)->u0 = 0x00;
							sp.u0->t0058.u1 = 0x00;
							x21 = *x8.u1;
							x0 = x21;
							x0 = strlen(x0);
							sp.u0 = x0 + 0x10;
							NZCV.u0 = cond(sp);
							if (Test(UGE,C))
								goto l000000000002E3DC;
							x22 = x0;
							NZCV.u0 = cond(x0 - 0x17);
							if (Test(ULT,C))
							{
								x9.u1 = sp + 88;
								w8 = w22 << 1;
								x19 = x9 | 0x01;
								sp.u0->t0058.u0 = (byte) (byte) w8;
								if (x22 == 0x00)
									goto l000000000002E328;
							}
							else
							{
								x8.u1 = x22 + 0x10;
								x23 = x8 & ~0x0F;
								x0 = x23;
								_Znwm();
								x8 = x23 | 0x01;
								x19 = x0;
								Eq_35548 v144;
								v144.u0 = sp + 96;
								v144.u0->t0000.u1 = (size_t) x22;
								v144.u0->t0008.u1 = (size_t) x0;
								sp.u0->t0058.u1 = (size_t) x8;
							}
							x0 = x19;
							x1 = x21;
							x2 = x22;
							x0 = memcpy(x0, x1, x2);
l000000000002E328:
							*(x19 + x22) = (word64) 0x00;
							x0.u1 = sp + 88;
							_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
							Eq_14 v124;
							v124.u0 = sp.u0->t0058.u0;
							w8.u1 = (word32) v124;
							w19 = w0;
							if ((w8 & 0x01) != 0x00)
							{
								byte v125 = (byte) *((word32) sp + 0x0078);
								w8.u1 = (word32) v125;
								if ((w8 & 0x01) != 0x00)
									goto l000000000002E348;
								goto l000000000002E214;
							}
							x0.u1 = *((word32) sp + 0x0068);
							((real64) q0, x0, x1);
							byte v143 = (byte) *((word32) sp + 0x0078);
							w8.u1 = (word32) v143;
							if ((w8 & 0x01) != 0x00)
							{
l000000000002E214:
								x0.u1 = *((word32) sp + 0x0088);
								((real64) q0, x0, x1);
								if ((w19 & 0x01) != 0x00)
									goto l000000000002E34C;
							}
							else
							{
l000000000002E348:
								if ((w19 & 0x01) != 0x00)
								{
l000000000002E34C:
									x8.u0 = 0x00070000;
									x8 = *((word32) x8 + 3432);
									x1 = *x8.u1;
									x2.u0 = 0x00071000;
									x3.u0 = 0x00052000;
									x2.u1 = x2 + 0x0198;
									x3.u1 = (word32) x3 + 0x05EE;
									x0.u1 = sp + 0x02D8;
									w4 = 0x00 | 0x06;
									x5 = 0x00;
									x19.u1 = sp + 0x02D8;
									_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
									x10.u1 = sp.u0->t0050.u1;
									x0.u1 = x19 + 0x08;
									Eq_14 v126 = *((word32) x10 + 8);
									w8.u1 = (word32) v126;
									Eq_35817 v127;
									v127.u0 = x10 + 16;
									x9.u1 = *v127;
									x10.u1 = *((word32) v127 + 8);
									w31 = w8 & 0x01;
									NZ.u0 = cond(w31);
									C = false;
									V = false;
									x11 = x8 >> 1;
									x1.u1 = Test(NE,Z) ? x10 : x20 + 0x01;
									x2.u1 = Test(EQ,Z) ? x11 : x9;
									fn000000000001BB30();
									x0.u1 = sp + 0x02D8;
									LogCapture::~LogCapture();
									sp.u0 = sp + 0x08;
								}
							}
							__cxa_end_catch();
							goto l000000000002D470;
						}
						NZCV.u0 = cond(w20 - 0x01);
						if (Test(NE,Z))
						{
l000000000002E49C:
							__cxa_end_catch();
							goto l000000000002D4F0;
						}
						x0 = x23;
						__cxa_begin_catch();
						x8 = *x0.u1;
						x20 = x0;
						x8 = *((word32) x8 + 16);
						x8();
						x8.u1 = sp.u0->t0050.u1;
						x19 = x0;
						x21.u1 = x8 + 0x08;
						x0 = strlen(x0);
						x2 = x0;
						x0 = x21;
						x1 = x19;
						fn000000000001B8B0();
						x8.u0 = 0x00071000;
						x8.u1 = x8 + 0x0198;
						x9.u1 = sp + 0xA8;
						x22.u1 = x9 + 0x08;
						Eq_14 v147 = *((word32) x8 + 8);
						w9 = (word32) v147;
						x11 = *((word32) x8 + 24);
						w10 = (ui32) *x8.u1;
						x8.u1 = x8 + 0x09;
						w31 = w9 & 0x01;
						NZ.u0 = cond(w31);
						x21.u1 = Test(EQ,Z) ? x8 : x11;
						x0 = x21;
						sp.u0->dw00A8 = w10;
						Eq_36181 v148;
						v148.u0 = sp + 0x00B8;
						v148.u0->t0000.u1 = (size_t) 0x00;
						v148.u0->t0008.u1 = (size_t) 0x00;
						sp.u0->t00B0.u1 = (size_t) 0x00;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(UGE,C))
						{
l000000000002E3CC:
							x0 = x22;
							fn000000000001B2D0();
l000000000002E3D4:
							x0.u1 = sp + 0x90;
							fn000000000001B2D0();
l000000000002E3DC:
							x0.u1 = sp + 88;
							fn000000000001B2D0();
							x23 = x0;
							x0.u1 = sp + 0x02D8;
							LogCapture::~LogCapture();
							sp.u0 = sp + 0x08;
							__cxa_end_catch();
							goto l000000000002E49C;
						}
						x19 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							w8 = w19 << 1;
							x22.u1 = x22 + 0x01;
							sp.u0->t00B0.u0 = (byte) (byte) w8;
							if (x19 == 0x00)
								goto l000000000002E10C;
						}
						else
						{
							x8.u1 = x19 + 0x10;
							x23 = x8 & ~0x0F;
							x0 = x23;
							_Znwm();
							x8 = x23 | 0x01;
							x22 = x0;
							Eq_36217 v157;
							v157.u0 = sp + 0x00B8;
							v157->u0 = x19;
							((word32) v157 + 8)->u0 = x0;
							sp.u0->t00B0.u1 = (size_t) x8;
						}
						x0 = x22;
						x1 = x21;
						x2 = x19;
						x0 = memcpy(x0, x1, x2);
l000000000002E10C:
						*(x22 + x19) = (word64) 0x00;
						x0.u1 = sp + 0xA8;
						((LEVELS) x0);
						if ((w0 & 0x01) == 0x00)
						{
							w19.u0 = 0x00;
							Eq_14 v156;
							v156.u0 = sp.u0->t00B0.u0;
							w8.u1 = (word32) v156;
							if ((w8 & 0x01) != 0x00)
								goto l000000000002E170;
							goto l000000000002E274;
						}
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						Eq_36282 v151;
						v151.u0 = sp + 0x0098;
						v151->u0 = 0x00;
						((word32) v151 + 8)->u0 = 0x00;
						sp.u0->t0090.u1 = 0x00;
						x19 = *x8.u1;
						x0 = x19;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(UGE,C))
							goto l000000000002E3D4;
						x21 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							x9.u1 = sp + 0x90;
							w8 = w21 << 1;
							x22 = x9 | 0x01;
							sp.u0->t0090.u0 = (byte) (byte) w8;
							if (x21 == 0x00)
								goto l000000000002E254;
						}
						else
						{
							x8.u1 = x21 + 0x10;
							x23 = x8 & ~0x0F;
							x0 = x23;
							_Znwm();
							x8 = x23 | 0x01;
							x22 = x0;
							Eq_36323 v154;
							v154.u0 = sp + 0x0098;
							v154.u0->t0000.u1 = (size_t) x21;
							v154.u0->t0008.u1 = (size_t) x0;
							sp.u0->t0090.u1 = (size_t) x8;
						}
						x0 = x22;
						x1 = x19;
						x2 = x21;
						x0 = memcpy(x0, x1, x2);
l000000000002E254:
						*(x22 + x21) = (word64) 0x00;
						x0.u1 = sp + 0x90;
						_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
						Eq_14 v152;
						v152.u0 = sp.u0->t0090.u0;
						w8.u1 = (word32) v152;
						w19 = w0;
						if ((w8 & 0x01) != 0x00)
						{
							Eq_14 v153;
							v153.u0 = sp.u0->t00B0.u0;
							w8.u1 = (word32) v153;
							if ((w8 & 0x01) != 0x00)
								goto l000000000002E274;
							goto l000000000002E170;
						}
						x0.u1 = sp.u0->t00A0.u1;
						((real64) q0, x0, x1);
						Eq_14 v155;
						v155.u0 = sp.u0->t00B0.u0;
						w8.u1 = (word32) v155;
						if ((w8 & 0x01) != 0x00)
						{
l000000000002E170:
							x0.u1 = sp.u0->t00C0.u1;
							((real64) q0, x0, x1);
							if ((w19 & 0x01) != 0x00)
								goto l000000000002E278;
						}
						else
						{
l000000000002E274:
							if ((w19 & 0x01) != 0x00)
							{
l000000000002E278:
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 3432);
								x1 = *x8.u1;
								x2.u0 = 0x00071000;
								x3.u0 = 0x00052000;
								x2.u1 = x2 + 0x0198;
								x3.u1 = (word32) x3 + 0x05EE;
								x0.u1 = sp + 0x02D8;
								w4 = 0x00 | 0x06;
								x5 = 0x00;
								x19.u1 = sp + 0x02D8;
								_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
								x8 = *x20.u1;
								x0 = x20;
								x19.u1 = x19 + 0x08;
								x8 = *((word32) x8 + 16);
								x8();
								x20 = x0;
								x0 = strlen(x0);
								x2 = x0;
								x0 = x19;
								x1 = x20;
								fn000000000001BB30();
								x0.u1 = sp + 0x02D8;
								LogCapture::~LogCapture();
								sp.u0 = sp + 0x08;
							}
						}
						__cxa_end_catch();
l000000000002D470:
						__cxa_end_catch();
l000000000002DD48:
						w19.u0 = 0x00;
						goto l000000000002D110;
					}
					NZCV.u0 = cond(w22 - 0x01);
					if (Test(EQ,Z))
					{
						x0 = x23;
						__cxa_begin_catch();
						x8 = *x0.u1;
						x20 = x0;
						x8 = *((word32) x8 + 16);
						x8();
						x8.u1 = sp.u0->t0050.u1;
						x19 = x0;
						x21.u1 = x8 + 0x08;
						x0 = strlen(x0);
						x2 = x0;
						x0 = x21;
						x1 = x19;
						fn000000000001B8B0();
						x8.u0 = 0x00071000;
						x8.u1 = x8 + 0x0198;
						x9.u1 = sp + 336;
						x22.u1 = x9 + 0x08;
						Eq_14 v160 = *((word32) x8 + 8);
						w9 = (word32) v160;
						x11 = *((word32) x8 + 24);
						w10 = (ui32) *x8.u1;
						x8.u1 = x8 + 0x09;
						w31 = w9 & 0x01;
						NZ.u0 = cond(w31);
						x21.u1 = Test(EQ,Z) ? x8 : x11;
						x0 = x21;
						sp.u0->dw0150 = w10;
						Eq_36502 v161;
						v161.u0 = sp + 352;
						v161.u0->t0000.u1 = (size_t) 0x00;
						v161.u0->t0008.u1 = (size_t) 0x00;
						sp.u0->t0158.u1 = (size_t) 0x00;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(UGE,C))
						{
							x0 = x22;
							fn000000000001B2D0();
l000000000002D494:
							x0.u1 = sp + 0x0138;
							fn000000000001B2D0();
							x23 = x0;
							x0.u1 = sp + 0x02D8;
							LogCapture::~LogCapture();
							sp.u0 = sp + 0x08;
							__cxa_end_catch();
							goto l000000000002D4F0;
						}
						x19 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							w8 = w19 << 1;
							x22.u1 = x22 + 0x01;
							sp.u0->t0158.u0 = (byte) (byte) w8;
							if (x19 == 0x00)
								goto l000000000002D344;
						}
						else
						{
							x8.u1 = x19 + 0x10;
							x23 = x8 & ~0x0F;
							x0 = x23;
							_Znwm();
							x8 = x23 | 0x01;
							x22 = x0;
							Eq_36538 v168;
							v168.u0 = sp + 352;
							v168->u0 = x19;
							((word32) v168 + 8)->u0 = x0;
							sp.u0->t0158.u1 = (size_t) x8;
						}
						x0 = x22;
						x1 = x21;
						x2 = x19;
						x0 = memcpy(x0, x1, x2);
l000000000002D344:
						*(x22 + x19) = (word64) 0x00;
						x0.u1 = sp + 336;
						((LEVELS) x0);
						if ((w0 & 0x01) == 0x00)
						{
							w19.u0 = 0x00;
							Eq_14 v167;
							v167.u0 = sp.u0->t0158.u0;
							w8.u1 = (word32) v167;
							if ((w8 & 0x01) != 0x00)
								goto l000000000002D3A8;
							goto l000000000002D408;
						}
						x8.u0 = 0x00070000;
						x8 = *((word32) x8 + 3432);
						Eq_36612 v162;
						v162.u0 = sp + 320;
						v162->u0 = 0x00;
						((word32) v162 + 8)->u0 = 0x00;
						sp.u0->t0138.u1 = 0x00;
						x19 = *x8.u1;
						x0 = x19;
						x0 = strlen(x0);
						sp.u0 = x0 + 0x10;
						NZCV.u0 = cond(sp);
						if (Test(UGE,C))
							goto l000000000002D494;
						x21 = x0;
						NZCV.u0 = cond(x0 - 0x17);
						if (Test(ULT,C))
						{
							x9.u1 = sp + 0x0138;
							w8 = w21 << 1;
							x22 = x9 | 0x01;
							sp.u0->t0138.u0 = (byte) (byte) w8;
							if (x21 == 0x00)
								goto l000000000002D3E8;
						}
						else
						{
							x8.u1 = x21 + 0x10;
							x23 = x8 & ~0x0F;
							x0 = x23;
							_Znwm();
							x8 = x23 | 0x01;
							x22 = x0;
							Eq_36660 v165;
							v165.u0 = sp + 320;
							v165.u0->t0000.u1 = (size_t) x21;
							v165.u0->t0008.u1 = (size_t) x0;
							sp.u0->t0138.u1 = (size_t) x8;
						}
						x0 = x22;
						x1 = x19;
						x2 = x21;
						x0 = memcpy(x0, x1, x2);
l000000000002D3E8:
						*(x22 + x21) = (word64) 0x00;
						x0.u1 = sp + 0x0138;
						_ZN2g36logTagENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE();
						Eq_14 v163;
						v163.u0 = sp.u0->t0138.u0;
						w8.u1 = (word32) v163;
						w19 = w0;
						if ((w8 & 0x01) != 0x00)
						{
							Eq_14 v164;
							v164.u0 = sp.u0->t0158.u0;
							w8.u1 = (word32) v164;
							if ((w8 & 0x01) != 0x00)
								goto l000000000002D408;
							goto l000000000002D3A8;
						}
						x0.u1 = sp.u0->t0148.u1;
						((real64) q0, x0, x1);
						Eq_14 v166;
						v166.u0 = sp.u0->t0158.u0;
						w8.u1 = (word32) v166;
						if ((w8 & 0x01) != 0x00)
						{
l000000000002D3A8:
							x0.u1 = sp.u0->t0168.u1;
							((real64) q0, x0, x1);
							if ((w19 & 0x01) != 0x00)
								goto l000000000002D40C;
						}
						else
						{
l000000000002D408:
							if ((w19 & 0x01) != 0x00)
							{
l000000000002D40C:
								x8.u0 = 0x00070000;
								x8 = *((word32) x8 + 3432);
								x1 = *x8.u1;
								x2.u0 = 0x00071000;
								x3.u0 = 0x00052000;
								x2.u1 = x2 + 0x0198;
								x3.u1 = (word32) x3 + 0x05EE;
								x0.u1 = sp + 0x02D8;
								w4 = 0x00 | 0x06;
								x5 = 0x00;
								x19.u1 = sp + 0x02D8;
								_ZN10LogCaptureC1EPKcRK6LEVELSS1_iS1_();
								x8 = *x20.u1;
								x0 = x20;
								x19.u1 = x19 + 0x08;
								x8 = *((word32) x8 + 16);
								x8();
								x20 = x0;
								x0 = strlen(x0);
								x2 = x0;
								x0 = x19;
								x1 = x20;
								fn000000000001BB30();
								x0.u1 = sp + 0x02D8;
								LogCapture::~LogCapture();
								sp.u0 = sp + 0x08;
							}
						}
						goto l000000000002D470;
					}
l000000000002D4F0:
					x0 = x23;
					_Unwind_Resume();
					x22 = x1;
					x23 = x0;
					Eq_14 v150;
					v150.u0 = sp.u0->t02B0.u0;
					w8.u1 = (word32) v150;
				} while ((w8 & 0x01) == 0x00);
				x0.u1 = *((word32) sp + 704);
				goto l000000000002D70C;
			}
l000000000002D1A0:
			x0 = x22;
			fn000000000001B2D0();
			goto l000000000002D1A8;
		}
	}
	else
	{
		x24.u1 = sp.u0->t0278.u1;
		x31 = x24 - x23;
		NZCV.u0 = cond(x31);
		if (Test(NE,Z))
			goto l000000000002C714;
	}
	w20 = 0x00;
	goto l000000000002CB44;
}

// tmpecu37ckl_rodata.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

<anonymous> g_t505A4 = <code>; // 00000000000505A4
word64 g_qw50688 = 0x49535F4C41544146; // 0000000000050688
word64 g_qw50695 = 0x58455F4C41544146; // 0000000000050695
word64 g_qw5069C = 0x4E4F495450454358; // 000000000005069C
word64 g_qw506A5 = 5991258982297782309; // 00000000000506A5
<unknown> g_t506B2 = // 00000000000506B2;
<anonymous> g_t50C80 = <code>; // 0000000000050C80
<anonymous> g_t50DE0 = <code>; // 0000000000050DE0
<anonymous> g_t513DC = <code>; // 00000000000513DC
<anonymous> g_t514B4 = <code>; // 00000000000514B4
<anonymous> g_t51504 = <code>; // 0000000000051504
<anonymous> g_t51554 = <code>; // 0000000000051554
<anonymous> g_t5159C = <code>; // 000000000005159C
<anonymous> g_t51678 = <code>; // 0000000000051678
<anonymous> g_t516C8 = <code>; // 00000000000516C8
<anonymous> g_t51728 = <code>; // 0000000000051728
<anonymous> g_t517DC = <code>; // 00000000000517DC
<anonymous> g_t51A30 = <code>; // 0000000000051A30
<anonymous> g_t51AE8 = <code>; // 0000000000051AE8
<anonymous> g_t51E20 = <code>; // 0000000000051E20
<anonymous> g_t520E4 = <code>; // 00000000000520E4
struct Eq_2626 g_t520F7 = // 00000000000520F7
	{
		'u',
		0x2C00203A656D614E,
	};
<unknown> g_t52118 = // 0000000000052118;
<unknown> g_t52131 = // 0000000000052131;
<unknown> g_t52146 = // 0000000000052146;
<unknown> g_t52153 = // 0000000000052153;
<anonymous> g_t52178 = <code>; // 0000000000052178
<anonymous> g_t5248C = <code>; // 000000000005248C
<anonymous> g_t525DC = <code>; // 00000000000525DC
<anonymous> g_t527A8 = <code>; // 00000000000527A8
<anonymous> g_t52978 = <code>; // 0000000000052978
<anonymous> g_t52D9C = <code>; // 0000000000052D9C
<anonymous> g_t537CC = <code>; // 00000000000537CC
<anonymous> g_t538A0 = <code>; // 00000000000538A0
<anonymous> g_t53A78 = <code>; // 0000000000053A78
<anonymous> g_t53B34 = <code>; // 0000000000053B34
<anonymous> g_t53C08 = <code>; // 0000000000053C08
<anonymous> g_t53CE4 = <code>; // 0000000000053CE4
<anonymous> g_t53EB8 = <code>; // 0000000000053EB8
<anonymous> g_t54008 = <code>; // 0000000000054008
<anonymous> g_t540A8 = <code>; // 00000000000540A8
<anonymous> g_t541C8 = <code>; // 00000000000541C8
<anonymous> g_t54520 = <code>; // 0000000000054520
<anonymous> g_t545B4 = <code>; // 00000000000545B4
<anonymous> g_t54734 = <code>; // 0000000000054734
<anonymous> g_t54F78 = <code>; // 0000000000054F78
// tmpecu37ckl_gcc_except_table.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

<anonymous> g_t5A034 = <code>; // 000000000005A034
<anonymous> g_t5AA10 = <code>; // 000000000005AA10
<anonymous> g_t5ABFC = <code>; // 000000000005ABFC
<anonymous> g_t5ADC4 = <code>; // 000000000005ADC4
<anonymous> g_t5B92C = <code>; // 000000000005B92C
<anonymous> g_t5BA60 = <code>; // 000000000005BA60
<anonymous> g_t5BB48 = <code>; // 000000000005BB48
<anonymous> g_t5BEB8 = <code>; // 000000000005BEB8
<anonymous> g_t5C530 = <code>; // 000000000005C530
<anonymous> g_t5C5B4 = <code>; // 000000000005C5B4
<anonymous> g_t5D15C = <code>; // 000000000005D15C
<anonymous> g_t5D290 = <code>; // 000000000005D290
<anonymous> g_t5D390 = <code>; // 000000000005D390
<anonymous> g_t5D56C = <code>; // 000000000005D56C
// tmpecu37ckl_data.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

word64 _ZN4rgbd3TAGE = 0x00050746; // 0000000000071008
// tmpecu37ckl_got.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

<anonymous> * g_ptr6FFE0 = &g_t56B0C; // 000000000006FFE0
<anonymous> * g_ptr6FFF0 = &g_t4F478; // 000000000006FFF0
Eq_14 g_t70000 = // 0000000000070000
	{
		0xB0
	};
<anonymous> * g_ptr70008 = &g_t5EFE0; // 0000000000070008
<anonymous> * g_ptr70010 = &g_t4FCF4; // 0000000000070010
<anonymous> * g_ptr70020 = &g_t610DC; // 0000000000070020
<anonymous> * g_ptr70028 = &g_t59E38; // 0000000000070028
<anonymous> * g_ptr70040 = &g_t3F204; // 0000000000070040
<anonymous> * g_ptr70050 = &g_t5D290; // 0000000000070050
<anonymous> * g_ptr70058 = &g_t5F53C; // 0000000000070058
<anonymous> * g_ptr70060 = &g_t50C80; // 0000000000070060
<anonymous> * g_ptr70068 = &g_t4FAD8; // 0000000000070068
<anonymous> * g_ptr70080 = &g_t4DFD0; // 0000000000070080
<anonymous> * g_ptr70090 = &g_t427EC; // 0000000000070090
<anonymous> * g_ptr700A0 = &g_t60F18; // 00000000000700A0
<anonymous> * g_ptr700A8 = &g_t4FBD4; // 00000000000700A8
<anonymous> * g_ptr700B8 = &g_t397D4; // 00000000000700B8
<anonymous> * g_ptr700E0 = &g_t5BA60; // 00000000000700E0
<anonymous> * g_ptr70108 = &g_t66214; // 0000000000070108
<anonymous> * g_ptr70118 = &g_t58ED4; // 0000000000070118
<anonymous> * g_ptr70130 = &g_t4D984; // 0000000000070130
<anonymous> * g_ptr70140 = &g_t454AC; // 0000000000070140
<anonymous> * g_ptr70150 = &g_t55A18; // 0000000000070150
<anonymous> * g_ptr70158 = &g_t61F40; // 0000000000070158
<anonymous> * g_ptr70168 = &g_t6244C; // 0000000000070168
<anonymous> * g_ptr70170 = &g_t39ADC; // 0000000000070170
<anonymous> * g_ptr70180 = &g_t5EAC4; // 0000000000070180
<anonymous> * g_ptr70198 = &g_t5159C; // 0000000000070198
<anonymous> * g_ptr701A0 = &g_t4FC74; // 00000000000701A0
<anonymous> * g_ptr701A8 = &g_t5FB28; // 00000000000701A8
<anonymous> * g_ptr701B0 = &g_t4FB28; // 00000000000701B0
<anonymous> * g_ptr701B8 = &g_t4DF14; // 00000000000701B8
<anonymous> * g_ptr701C0 = &g_t628B4; // 00000000000701C0
<anonymous> * g_ptr701C8 = &g_t6AE8C; // 00000000000701C8
<anonymous> * g_ptr701D0 = &g_t491F8; // 00000000000701D0
<anonymous> * g_ptr701D8 = &g_t4FFC8; // 00000000000701D8
<anonymous> * g_ptr701F0 = &g_t545B4; // 00000000000701F0
<anonymous> * g_ptr70208 = &g_t4F524; // 0000000000070208
<anonymous> * g_ptr70218 = &g_t5D56C; // 0000000000070218
<anonymous> * g_ptr70228 = &g_t39910; // 0000000000070228
<anonymous> * g_ptr70230 = &g_t5EA10; // 0000000000070230
<anonymous> * g_ptr70238 = &g_t4ED74; // 0000000000070238
<anonymous> * g_ptr70248 = &g_t540A8; // 0000000000070248
<anonymous> * g_ptr70258 = &g_t52978; // 0000000000070258
<anonymous> * g_ptr70260 = &g_t4FF94; // 0000000000070260
<anonymous> * g_ptr70268 = &g_t41A5C; // 0000000000070268
<anonymous> * g_ptr70270 = &g_t3838C; // 0000000000070270
<anonymous> * g_ptr70280 = &g_t520E4; // 0000000000070280
<anonymous> * g_ptr70290 = &g_t58850; // 0000000000070290
<anonymous> * g_ptr70298 = &g_t38284; // 0000000000070298
<anonymous> * g_ptr702A0 = &g_t5F818; // 00000000000702A0
<anonymous> * g_ptr702A8 = &g_t5C5B4; // 00000000000702A8
<anonymous> * g_ptr702B0 = &g_t4F7E4; // 00000000000702B0
<anonymous> * g_ptr702C0 = &g_t61A64; // 00000000000702C0
<anonymous> * g_ptr702E0 = &g_t586F8; // 00000000000702E0
<anonymous> * g_ptr702F8 = &g_t525DC; // 00000000000702F8
<anonymous> * g_ptr70300 = &g_t6AD60; // 0000000000070300
<anonymous> * g_ptr70310 = &g_t54734; // 0000000000070310
<anonymous> * g_ptr70350 = &g_t62708; // 0000000000070350
<anonymous> * g_ptr70358 = &g_t4DA3C; // 0000000000070358
<anonymous> * g_ptr70360 = &g_t426DC; // 0000000000070360
<anonymous> * g_ptr70368 = &g_t61008; // 0000000000070368
<anonymous> * g_ptr70370 = &g_t64248; // 0000000000070370
<anonymous> * g_ptr70380 = &g_t60FBC; // 0000000000070380
<anonymous> * g_ptr70388 = &g_t55F88; // 0000000000070388
<anonymous> * g_ptr70390 = &g_t4FFFC; // 0000000000070390
<anonymous> * g_ptr70398 = &g_t61744; // 0000000000070398
<anonymous> * g_ptr703A8 = &g_t57AA8; // 00000000000703A8
<anonymous> * g_ptr703B8 = &g_t55D08; // 00000000000703B8
<anonymous> * g_ptr703E0 = &g_t37FF0; // 00000000000703E0
<anonymous> * g_ptr703F0 = &g_t3FFD8; // 00000000000703F0
<anonymous> * g_ptr70400 = &g_t5B92C; // 0000000000070400
<anonymous> * g_ptr70408 = &g_t538A0; // 0000000000070408
<anonymous> * g_ptr70418 = &g_t5FBD8; // 0000000000070418
<anonymous> * g_ptr70428 = &g_t58A7C; // 0000000000070428
<anonymous> * g_ptr70448 = &g_t51504; // 0000000000070448
<anonymous> * g_ptr70458 = &g_t594B8; // 0000000000070458
<anonymous> * g_ptr70460 = &g_t598E4; // 0000000000070460
<anonymous> * g_ptr70468 = &g_t5C530; // 0000000000070468
<anonymous> * g_ptr70470 = &g_t45D98; // 0000000000070470
<anonymous> * g_ptr704A8 = &g_t6AC34; // 00000000000704A8
<anonymous> * g_ptr704B0 = &g_t51E20; // 00000000000704B0
<anonymous> * g_ptr704C8 = &g_t51A30; // 00000000000704C8
<anonymous> * g_ptr704D8 = &g_t56574; // 00000000000704D8
<anonymous> * g_ptr704E0 = &g_t578C0; // 00000000000704E0
<anonymous> * g_ptr704F0 = &g_t51AE8; // 00000000000704F0
<anonymous> * g_ptr70508 = &g_t527A8; // 0000000000070508
<anonymous> * g_ptr70520 = &g_t5F0B4; // 0000000000070520
<anonymous> * g_ptr70530 = &g_t4FB78; // 0000000000070530
<anonymous> * g_ptr70538 = &g_t59210; // 0000000000070538
<anonymous> * g_ptr70570 = &g_t53EB8; // 0000000000070570
<anonymous> * g_ptr70588 = &g_t5F668; // 0000000000070588
<anonymous> * g_ptr70590 = &g_t3813C; // 0000000000070590
<anonymous> * g_ptr705B0 = &g_t5ADC4; // 00000000000705B0
<anonymous> * g_ptr705C8 = &g_t53B34; // 00000000000705C8
<anonymous> * g_ptr705D0 = &g_t58FF0; // 00000000000705D0
<anonymous> * g_ptr705D8 = &g_t42080; // 00000000000705D8
<anonymous> * g_ptr70618 = &g_t53CE4; // 0000000000070618
<anonymous> * g_ptr70620 = &g_t5829C; // 0000000000070620
<anonymous> * g_ptr70628 = &g_t59674; // 0000000000070628
<anonymous> * g_ptr70630 = &g_t550A4; // 0000000000070630
<anonymous> * g_ptr70648 = &g_t5FFD4; // 0000000000070648
<anonymous> * g_ptr70660 = &g_t505A4; // 0000000000070660
<anonymous> * g_ptr70680 = &g_t5EBD8; // 0000000000070680
<anonymous> * g_ptr70688 = &g_t516C8; // 0000000000070688
<anonymous> * g_ptr70698 = &g_t5A034; // 0000000000070698
<anonymous> * g_ptr706A8 = &g_t57558; // 00000000000706A8
<anonymous> * g_ptr706B0 = &g_t541C8; // 00000000000706B0
<anonymous> * g_ptr706C0 = &g_t65EC0; // 00000000000706C0
<anonymous> * g_ptr706C8 = &g_t513DC; // 00000000000706C8
<anonymous> * g_ptr706D0 = &g_t4FCB4; // 00000000000706D0
<anonymous> * g_ptr706E0 = &g_t5069C; // 00000000000706E0
<anonymous> * g_ptr706E8 = &g_t3F07C; // 00000000000706E8
<anonymous> * g_ptr70728 = &g_t4E8E8; // 0000000000070728
<anonymous> * g_ptr70738 = &g_t55704; // 0000000000070738
<anonymous> * g_ptr70740 = &g_t5E2D0; // 0000000000070740
<anonymous> * g_ptr70760 = &g_t57154; // 0000000000070760
<anonymous> * g_ptr70768 = &g_t5D390; // 0000000000070768
<anonymous> * g_ptr70770 = &g_t61CE0; // 0000000000070770
<anonymous> * g_ptr70780 = &g_t5E49C; // 0000000000070780
<anonymous> * g_ptr70788 = &g_t54008; // 0000000000070788
<anonymous> * g_ptr707B8 = &g_t57F28; // 00000000000707B8
<anonymous> * g_ptr707C0 = &g_t42C74; // 00000000000707C0
<anonymous> * g_ptr707C8 = &g_t53A78; // 00000000000707C8
<anonymous> * g_ptr707D0 = &g_t56964; // 00000000000707D0
<anonymous> * g_ptr707D8 = &g_t517DC; // 00000000000707D8
<anonymous> * g_ptr707E0 = &g_t50030; // 00000000000707E0
<anonymous> * g_ptr707F0 = &g_t514B4; // 00000000000707F0
<anonymous> * g_ptr70800 = &g_t4FF60; // 0000000000070800
<anonymous> * g_ptr70808 = &g_t4D610; // 0000000000070808
<anonymous> * g_ptr70820 = &g_t537CC; // 0000000000070820
<anonymous> * g_ptr70828 = &g_t56184; // 0000000000070828
<anonymous> * g_ptr70830 = &g_t5F960; // 0000000000070830
<anonymous> * g_ptr70850 = &g_t5ABFC; // 0000000000070850
<anonymous> * g_ptr70878 = &g_t65CB4; // 0000000000070878
<anonymous> * g_ptr70890 = &g_t4E790; // 0000000000070890
<anonymous> * g_ptr708A0 = &g_t3BC48; // 00000000000708A0
<anonymous> * g_ptr708B0 = &g_t4EB0C; // 00000000000708B0
<anonymous> * g_ptr708C8 = &g_t5BB48; // 00000000000708C8
<anonymous> * g_ptr708D8 = &g_t42AD4; // 00000000000708D8
<anonymous> * g_ptr708E0 = &g_t37C24; // 00000000000708E0
<anonymous> * g_ptr708F0 = &g_t67F4C; // 00000000000708F0
<anonymous> * g_ptr708F8 = &g_t5F250; // 00000000000708F8
<anonymous> * g_ptr70908 = &g_t4FC24; // 0000000000070908
<anonymous> * g_ptr70910 = &g_t4EC64; // 0000000000070910
<anonymous> * g_ptr70918 = &g_t67238; // 0000000000070918
<anonymous> * g_ptr70920 = &g_t5E918; // 0000000000070920
<anonymous> * g_ptr70928 = &g_t52178; // 0000000000070928
<anonymous> * g_ptr70960 = &g_t60F70; // 0000000000070960
<anonymous> * g_ptr70968 = &g_t51728; // 0000000000070968
<anonymous> * g_ptr70970 = &g_t5636C; // 0000000000070970
<anonymous> * g_ptr70978 = &g_t4FEDC; // 0000000000070978
<anonymous> * g_ptr70988 = &g_t54F78; // 0000000000070988
<anonymous> * g_ptr70998 = &g_t425CC; // 0000000000070998
<anonymous> * g_ptr709B0 = &g_t56908; // 00000000000709B0
<anonymous> * g_ptr709B8 = &g_t3A5E4; // 00000000000709B8
<anonymous> * g_ptr709D8 = &g_t558D4; // 00000000000709D8
<anonymous> * g_ptr709E0 = &g_t5F73C; // 00000000000709E0
<anonymous> * g_ptr70A50 = &g_t50DE0; // 0000000000070A50
<anonymous> * g_ptr70A68 = &g_t61054; // 0000000000070A68
<anonymous> * g_ptr70A80 = &g_t51554; // 0000000000070A80
<anonymous> * g_ptr70A88 = &g_t5BEB8; // 0000000000070A88
<anonymous> * g_ptr70A90 = &g_t4FEA8; // 0000000000070A90
<anonymous> * g_ptr70AA0 = &g_t53C08; // 0000000000070AA0
<anonymous> * g_ptr70AB0 = &g_t3EBBC; // 0000000000070AB0
<anonymous> * g_ptr70AC0 = &g_t4DB3C; // 0000000000070AC0
<anonymous> * g_ptr70AD0 = &g_t51678; // 0000000000070AD0
<anonymous> * g_ptr70AD8 = &g_t54520; // 0000000000070AD8
<anonymous> * g_ptr70AE8 = &g_t5248C; // 0000000000070AE8
<anonymous> * g_ptr70AF0 = &g_t644A4; // 0000000000070AF0
<anonymous> * g_ptr70B28 = &g_t56CC4; // 0000000000070B28
<anonymous> * g_ptr70B40 = &g_t5AA10; // 0000000000070B40
<anonymous> * g_ptr70B58 = &g_t55B74; // 0000000000070B58
<anonymous> * g_ptr70B60 = &g_t5E7CC; // 0000000000070B60
<anonymous> * g_ptr70B70 = &g_t5D15C; // 0000000000070B70
<anonymous> * g_ptr70B98 = &g_t59774; // 0000000000070B98
<anonymous> * g_ptr70BA0 = &g_t58DBC; // 0000000000070BA0
<anonymous> * g_ptr70BE0 = &g_t56848; // 0000000000070BE0
<anonymous> * g_ptr70BE8 = &g_t660BC; // 0000000000070BE8
<anonymous> * g_ptr70C20 = &g_t41C28; // 0000000000070C20
<anonymous> * g_ptr70C30 = &g_t52D9C; // 0000000000070C30
<anonymous> * _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP8_jobjectNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev_GOT = _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP8_jobjectNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev; // 0000000000070C98
word64 g_qw70CE8 = 454136; // 0000000000070CE8
word64 g_qw70D18 = 0x0006F038; // 0000000000070D18
<anonymous> * _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev_GOT = _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev; // 0000000000070D40
struct Eq_2626 ** g_ptr70D68 = &g_ptr71008; // 0000000000070D68
word64 g_qw70D90 = 0x00; // 0000000000070D90
word64 g_qw70DA0 = 454432; // 0000000000070DA0
<anonymous> * _ZNSt6__ndk13mapIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev_GOT = _ZNSt6__ndk13mapIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev; // 0000000000070DB0
word64 g_qw70DC0 = 0x0006F0D8; // 0000000000070DC0
<anonymous> * _ZN8nlohmann6detail9exceptionD2Ev_GOT = exception::~exception; // 0000000000070DD0
<anonymous> * _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS0_IS6_P9_jfieldIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEESA_NS4_INSB_ISC_SF_EEEEED2Ev_GOT = _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS0_IS6_P9_jfieldIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEESA_NS4_INSB_ISC_SF_EEEEED2Ev; // 0000000000070DF0
word64 g_qw70E18 = 454056; // 0000000000070E18
<anonymous> * _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev_GOT = _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev; // 0000000000070E20
word64 g_qw70E30 = 453504; // 0000000000070E30
<anonymous> * _ZN3rs25errorD2Ev_GOT = error::~error; // 0000000000070E38
word64 g_qw70E50 = 454512; // 0000000000070E50
word64 g_qw70E68 = 0x00; // 0000000000070E68
<anonymous> * _ZN6LEVELSD2Ev_GOT = LEVELS::~LEVELS; // 0000000000070E78
<anonymous> * _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP10_jmethodIDNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev_GOT = _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP10_jmethodIDNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev; // 0000000000070EE0
<anonymous> * _ZNSt6__ndk110shared_ptrIN4rgbd13RGBDRealSenseEED2Ev_GOT = _ZNSt6__ndk110shared_ptrIN4rgbd13RGBDRealSenseEED2Ev; // 0000000000070F10
word64 g_qw70F20 = 0x00; // 0000000000070F20
<anonymous> * _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev_GOT = _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev; // 0000000000070F30
word64 g_qw70F70 = 0x00; // 0000000000070F70
word64 g_qw70F88 = 0x00; // 0000000000070F88
word64 g_qw70F98 = 0x0006EAF0; // 0000000000070F98
// tmpecu37ckl_eh_frame.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

<anonymous> g_t55F88 = <code>; // 0000000000055F88
<anonymous> g_t56184 = <code>; // 0000000000056184
<anonymous> g_t5636C = <code>; // 000000000005636C
<anonymous> g_t56574 = <code>; // 0000000000056574
<anonymous> g_t56848 = <code>; // 0000000000056848
<anonymous> g_t56908 = <code>; // 0000000000056908
<anonymous> g_t56964 = <code>; // 0000000000056964
<anonymous> g_t56B0C = <code>; // 0000000000056B0C
<anonymous> g_t56CC4 = <code>; // 0000000000056CC4
<anonymous> g_t57154 = <code>; // 0000000000057154
<anonymous> g_t57558 = <code>; // 0000000000057558
<anonymous> g_t578C0 = <code>; // 00000000000578C0
<anonymous> g_t57AA8 = <code>; // 0000000000057AA8
<anonymous> g_t57F28 = <code>; // 0000000000057F28
<anonymous> g_t5829C = <code>; // 000000000005829C
<anonymous> g_t586F8 = <code>; // 00000000000586F8
<anonymous> g_t58850 = <code>; // 0000000000058850
<anonymous> g_t58A7C = <code>; // 0000000000058A7C
<anonymous> g_t58DBC = <code>; // 0000000000058DBC
<anonymous> g_t58ED4 = <code>; // 0000000000058ED4
<anonymous> g_t58FF0 = <code>; // 0000000000058FF0
<anonymous> g_t59210 = <code>; // 0000000000059210
<anonymous> g_t594B8 = <code>; // 00000000000594B8
<anonymous> g_t59674 = <code>; // 0000000000059674
<anonymous> g_t59774 = <code>; // 0000000000059774
<anonymous> g_t598E4 = <code>; // 00000000000598E4
<anonymous> g_t59E38 = <code>; // 0000000000059E38
// tmpecu37ckl_data_rel_ro.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

<unknown> g_t6F980 = // 000000000006F980;
// tmpecu37ckl.globals.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

Eq_106174 g_tFFFFFFD8;
int32 g_dwFFFFFFF6; // FFFFFFFFFFFFFFF6
Eq_95248 g_tFFFFFFFF;
// tmpecu37ckl_plt.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

// 000000000001AD90: define fn000000000001AD90
// Called from:
//      
//      _ZN4rgbd13RGBDRealSense15setRGBDCallbackERKNSt6__ndk18functionIFviaiiiEEERKNS_12RgbdLocationE
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
//      _ZN4rgbd13RGBDRealSense13updateRgbdSetERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
define fn000000000001AD90
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr6FFE0;
	x17_5();
}

// 000000000001ADB0: define fn000000000001ADB0
// Called from:
//      
define fn000000000001ADB0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr6FFF0;
	x17_5();
}

// 000000000001ADD0: define fn000000000001ADD0
// Called from:
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEEPSD_OT_
define fn000000000001ADD0
{
	<unknown> Mem0;
	Eq_14 x17_5;
	x17_5.u0 = 0x00070000;
	x17_5();
}

// 000000000001ADE0: define fn000000000001ADE0
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEEC2ERKSB_
define fn000000000001ADE0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70008;
	x17_5();
}

// 000000000001ADF0: define fn000000000001ADF0
// Called from:
//      context::context
//      config::config
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd6updateEN3rs213update_deviceENSt6__ndk16vectorIhNS2_9allocatorIhEEEE
//      
//      update_device::update_device
//      
//      
//      
//      frame_queue::frame_queue
//      start<rs2::frame_queue>::
//      _ZNK3rs211frame_queue14poll_for_frameINS_5frameEEENSt6__ndk19enable_ifIXsr3std10is_base_ofIS2_T_EE5valueEbE4typeEPS5_
//      _ZNK3rs211device_listixEj
//      
//      stream_profile::stream_profile
//      _ZNK3rs28frameset10foreach_rsIZNKS0_16first_or_defaultE10rs2_stream10rs2_formatEUlNS_5frameEE_EEvT_
//      _ZZNK3rs28frameset16first_or_defaultE10rs2_stream10rs2_formatENKUlNS_5frameEE_clES3_
//      depth_frame::depth_frame
//      _ZNK3rs28frameset10foreach_rsIZNKS0_18get_infrared_frameEmEUlRKNS_5frameEE_EEvT_
//      video_frame::video_frame
//      _ZZNK3rs28frameset18get_infrared_frameEmENKUlRKNS_5frameEE_clES3_
//      
//      depth_sensor::depth_sensor
//      advanced_mode::advanced_mode
//      serializable_device::serializable_device
//      pipeline::pipeline
//      frameset::frameset
//      _ZNK3rs28framesetixEm
//      video_stream_profile::video_stream_profile
//      updatable::updatable
define fn000000000001ADF0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70010;
	x17_5();
}

// 000000000001AE10: define fn000000000001AE10
// Called from:
//      _ZN8nlohmann6detail11parse_error6createEiRKNS0_10position_tERKNSt6__ndk112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
define fn000000000001AE10
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70020;
	x17_5();
}

// 000000000001AE20: define fn000000000001AE20
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2EONS3_10shared_ptrINS0_22input_adapter_protocolEEENS3_8functionIFbiNSE_13parse_event_tERSD_EEEb
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
define fn000000000001AE20
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70028;
	x17_5();
}

// 000000000001AE50: define fn000000000001AE50
// Called from:
//      
//      
//      
define fn000000000001AE50
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70040;
	x17_5();
}

// 000000000001AE70: define fn000000000001AE70
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2ERSD_NS3_8functionIFbiNS0_6parserISD_E13parse_event_tESF_EEEb
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
define fn000000000001AE70
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70050;
	x17_5();
}

// 000000000001AE80: define fn000000000001AE80
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_SN_EElEERPNS_15__tree_end_nodeISP_EESQ_RKT_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
define fn000000000001AE80
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70058;
	x17_5();
}

// 000000000001AE90: define fn000000000001AE90
// Called from:
//      _ZN3rs26filterC2ENSt6__ndk110shared_ptrI20rs2_processing_blockEEi
define fn000000000001AE90
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70060;
	x17_5();
}

// 000000000001AEA0: define fn000000000001AEA0
// Called from:
//      _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP7_jclassEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
//      JNI_OnUnload
define fn000000000001AEA0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70068;
	x17_5();
}

// 000000000001AED0: define fn000000000001AED0
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001AED0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70080;
	x17_5();
}

// 000000000001AEF0: define fn000000000001AEF0
// Called from:
//      
define fn000000000001AEF0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70090;
	x17_5();
}

// 000000000001AF10: define fn000000000001AF10
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define fn000000000001AF10
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr700A0;
	x17_5();
}

// 000000000001AF20: define fn000000000001AF20
// Called from:
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3mapIS7_P9_jfieldIDNS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEEEENS_19__map_value_compareIS7_SI_SC_Lb1EEENS5_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP9_jfieldIDEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define fn000000000001AF20
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr700A8;
	x17_5();
}

// 000000000001AF40: define fn000000000001AF40
// Called from:
//      
//      
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001AF40
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr700B8;
	x17_5();
}

// 000000000001AF90: define fn000000000001AF90
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_28json_sax_dom_callback_parserISD_EEEEbPT_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE17exception_messageENS0_5lexerISD_E10token_typeERKSB_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_19json_sax_dom_parserISD_EEEEbPT_
define fn000000000001AF90
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr700E0;
	x17_5();
}

// 000000000001AFE0: define fn000000000001AFE0
// Called from:
//      _ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
define fn000000000001AFE0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70108;
	x17_5();
}

// 000000000001B000: define fn000000000001B000
// Called from:
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_NS_8equal_toIS3_EELb1EEENS7_ISA_EEE14__erase_uniqueIS3_EEmRKT_
define fn000000000001B000
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70118;
	x17_5();
}

// 000000000001B030: define fn000000000001B030
// Called from:
//      _ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
define fn000000000001B030
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70130;
	x17_5();
}

// 000000000001B050: define fn000000000001B050
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      
define fn000000000001B050
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70140;
	x17_5();
}

// 000000000001B070: define fn000000000001B070
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
define fn000000000001B070
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70150;
	x17_5();
}

// 000000000001B080: define fn000000000001B080
// Called from:
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEEPSD_OT_
define fn000000000001B080
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70158;
	x17_5();
}

// 000000000001B0A0: define fn000000000001B0A0
// Called from:
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EEPSD_OT_
define fn000000000001B0A0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70168;
	x17_5();
}

// 000000000001B0B0: define fn000000000001B0B0
// Called from:
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
define fn000000000001B0B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70170;
	x17_5();
}

// 000000000001B0D0: define fn000000000001B0D0
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
define fn000000000001B0D0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70180;
	x17_5();
}

// 000000000001B100: define fn000000000001B100
// Called from:
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define fn000000000001B100
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70198;
	x17_5();
}

// 000000000001B110: define fn000000000001B110
// Called from:
//      _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP8_jobjectNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev
//      _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationEP8_jobjectEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE
//      JNI_OnUnload
define fn000000000001B110
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701A0;
	x17_5();
}

// 000000000001B120: define fn000000000001B120
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
define fn000000000001B120
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701A8;
	x17_5();
}

// 000000000001B130: define fn000000000001B130
// Called from:
//      _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEED2Ev
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEP10_jmethodIDEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
//      JNI_OnUnload
define fn000000000001B130
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701B0;
	x17_5();
}

// 000000000001B140: define fn000000000001B140
// Called from:
//      _ZNK3rs26device5firstINS_12depth_sensorEEET_v
//      _ZN4rgbd18read_firmware_dataEbRKNSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
//      _ZNK3rs28framesetixEm
define fn000000000001B140
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701B8;
	x17_5();
}

// 000000000001B150: define fn000000000001B150
// Called from:
//      
define fn000000000001B150
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701C0;
	x17_5();
}

// 000000000001B160: define fn000000000001B160
// Called from:
//      JNI_OnLoad
define fn000000000001B160
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701C8;
	x17_5();
}

// 000000000001B170: define fn000000000001B170
// Called from:
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001B170
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701D0;
	x17_5();
}

// 000000000001B180: define fn000000000001B180
// Called from:
//      
define fn000000000001B180
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701D8;
	x17_5();
}

// 000000000001B1B0: define fn000000000001B1B0
// Called from:
//      
//      _ZNSt6__ndk1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN8nlohmann6detail21output_string_adapterIcNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE16write_charactersEPKcm
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_escapedERKSB_b
//      _ZN8nlohmann6detail10type_error6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
//      _ZN8nlohmann6detail9exception4nameERKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEi
//      _ZNK8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE16get_token_stringEv
//      _ZN8nlohmann6detail11parse_error6createEiRKNS0_10position_tERKNSt6__ndk112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE17exception_messageENS0_5lexerISD_E10token_typeERKSB_
//      _ZN8nlohmann6detail12out_of_range6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
//      _ZN8nlohmann6detail16invalid_iterator6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
//      
define fn000000000001B1B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr701F0;
	x17_5();
}

// 000000000001B1E0: define fn000000000001B1E0
// Called from:
//      
define fn000000000001B1E0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70208;
	x17_5();
}

// 000000000001B200: define fn000000000001B200
// Called from:
//      _ZNSt6__ndk16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_
define fn000000000001B200
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70218;
	x17_5();
}

// 000000000001B220: define fn000000000001B220
// Called from:
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001B220
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70228;
	x17_5();
}

// 000000000001B230: define fn000000000001B230
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE9end_arrayEv
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEENS_21__tree_const_iteratorISE_SV_lEERKT_DpOT0_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEEC2ERKSD_
define fn000000000001B230
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70230;
	x17_5();
}

// 000000000001B240: define fn000000000001B240
// Called from:
//      
define fn000000000001B240
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70238;
	x17_5();
}

// 000000000001B260: define fn000000000001B260
// Called from:
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEj
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEi
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEb
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEf
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE5tellgEv
//      _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE
//      _ZNSt6__ndk113basic_istreamIcNS_11char_traitsIcEEE4readEPcl
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
//      _ZNSt6__ndk124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE3putEc
define fn000000000001B260
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70248;
	x17_5();
}

// 000000000001B280: define fn000000000001B280
// Called from:
//      _ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
//      _ZNSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED1Ev
//      _ZTv0_n24_NSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED1Ev
//      _ZNSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED0Ev
//      _ZTv0_n24_NSt6__ndk114basic_ifstreamIcNS_11char_traitsIcEEED0Ev
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEED0Ev
define fn000000000001B280
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70258;
	x17_5();
}

// 000000000001B290: define fn000000000001B290
// Called from:
//      
define fn000000000001B290
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70260;
	x17_5();
}

// 000000000001B2A0: define fn000000000001B2A0
// Called from:
//      
define fn000000000001B2A0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70268;
	x17_5();
}

// 000000000001B2B0: define fn000000000001B2B0
// Called from:
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
//      RGBDRealSense::~RGBDRealSense
define fn000000000001B2B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70270;
	x17_5();
}

// 000000000001B2D0: define fn000000000001B2D0
// Called from:
//      
//      
//      _ZNSt6__ndk1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_
//      
//      
//      
//      _ZN4rgbd13RGBDRealSense15setRGBDCallbackERKNSt6__ndk18functionIFviaiiiEEERKNS_12RgbdLocationE
//      
//      
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
//      
//      
//      
//      _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeENS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEixERSC_
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd18read_firmware_dataEbRKNSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
//      _ZN4rgbd6updateEN3rs213update_deviceENSt6__ndk16vectorIhNS2_9allocatorIhEEEE
//      
//      error::error
//      _ZN4rgbd9RGBDParamC2ERKS0_
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertIPKhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISA_EE5valueENS_11__wrap_iterIPcEEE4typeENSB_IPKcEESA_SA_
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS5_ISX_EEEEEEmOT_DpOT0_
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRA1_KcEEEPT_DpOT0_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE17exception_messageENS0_5lexerISD_E10token_typeERKSB_
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEENS_21__tree_const_iteratorISE_SV_lEERKT_DpOT0_
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createIS9_JRKS9_EEEPT_DpOT0_
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISX_EEEEEEDpOT_
//      _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_
//      _ZNSt6__ndk16vectorIhNS_9allocatorIhEEE8__appendEm
define fn000000000001B2D0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70280;
	x17_5();
}

// 000000000001B2F0: define fn000000000001B2F0
// Called from:
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
define fn000000000001B2F0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70290;
	x17_5();
}

// 000000000001B300: define fn000000000001B300
// Called from:
//      RGBDRealSense::RGBDRealSense
define fn000000000001B300
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70298;
	x17_5();
}

// 000000000001B310: define fn000000000001B310
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
define fn000000000001B310
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr702A0;
	x17_5();
}

// 000000000001B320: define fn000000000001B320
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
define fn000000000001B320
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr702A8;
	x17_5();
}

// 000000000001B330: define fn000000000001B330
// Called from:
//      RGBDRealSense::~RGBDRealSense
//      _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEED2Ev
//      _ZNSt6__ndk120__shared_ptr_emplaceIN4rgbd13RGBDRealSenseENS_9allocatorIS2_EEED0Ev
define fn000000000001B330
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr702B0;
	x17_5();
}

// 000000000001B350: define fn000000000001B350
// Called from:
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEEPSD_OT_
define fn000000000001B350
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr702C0;
	x17_5();
}

// 000000000001B390: define fn000000000001B390
// Called from:
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
define fn000000000001B390
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr702E0;
	x17_5();
}

// 000000000001B3C0: define fn000000000001B3C0
// Called from:
//      
define fn000000000001B3C0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr702F8;
	x17_5();
}

// 000000000001B3D0: define fn000000000001B3D0
// Called from:
//      JNI_OnLoad
define fn000000000001B3D0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70300;
	x17_5();
}

// 000000000001B3F0: define fn000000000001B3F0
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
define fn000000000001B3F0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70310;
	x17_5();
}

// 000000000001B470: define fn000000000001B470
// Called from:
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEEPSD_OT_
define fn000000000001B470
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70350;
	x17_5();
}

// 000000000001B480: define fn000000000001B480
// Called from:
//      _ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
define fn000000000001B480
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70358;
	x17_5();
}

// 000000000001B490: define fn000000000001B490
// Called from:
//      
define fn000000000001B490
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70360;
	x17_5();
}

// 000000000001B4A0: define fn000000000001B4A0
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define fn000000000001B4A0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70368;
	x17_5();
}

// 000000000001B4B0: define fn000000000001B4B0
// Called from:
//      _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeENS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEixERSC_
define fn000000000001B4B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70370;
	x17_5();
}

// 000000000001B4D0: define fn000000000001B4D0
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define fn000000000001B4D0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70380;
	x17_5();
}

// 000000000001B4E0: define fn000000000001B4E0
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_escapedERKSB_b
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE17exception_messageENS0_5lexerISD_E10token_typeERKSB_
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
//      
define fn000000000001B4E0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70388;
	x17_5();
}

// 000000000001B4F0: define fn000000000001B4F0
// Called from:
//      
define fn000000000001B4F0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70390;
	x17_5();
}

// 000000000001B500: define fn000000000001B500
// Called from:
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEEPSD_OT_
define fn000000000001B500
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70398;
	x17_5();
}

// 000000000001B520: define fn000000000001B520
// Called from:
//      _ZN4rgbd13RGBDRealSense15setRGBDCallbackERKNSt6__ndk18functionIFviaiiiEEERKNS_12RgbdLocationE
define fn000000000001B520
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr703A8;
	x17_5();
}

// 000000000001B540: define fn000000000001B540
// Called from:
//      _ZN8nlohmann6detail10type_error6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
//      _ZN8nlohmann6detail11parse_error6createEiRKNS0_10position_tERKNSt6__ndk112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
//      _ZN8nlohmann6detail12out_of_range6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
//      _ZN8nlohmann6detail16invalid_iterator6createEiRKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
define fn000000000001B540
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr703B8;
	x17_5();
}

// 000000000001B590: define fn000000000001B590
// Called from:
//      RGBDRealSense::RGBDRealSense
define fn000000000001B590
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr703E0;
	x17_5();
}

// 000000000001B5B0: define fn000000000001B5B0
// Called from:
//      
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
//      
define fn000000000001B5B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr703F0;
	x17_5();
}

// 000000000001B5D0: define fn000000000001B5D0
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_28json_sax_dom_callback_parserISD_EEEEbPT_
define fn000000000001B5D0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70400;
	x17_5();
}

// 000000000001B5E0: define fn000000000001B5E0
// Called from:
//      _ZNK3rs28frameset10foreach_rsIZNKS0_16first_or_defaultE10rs2_stream10rs2_formatEUlNS_5frameEE_EEvT_
define fn000000000001B5E0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70408;
	x17_5();
}

// 000000000001B600: define fn000000000001B600
// Called from:
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE
define fn000000000001B600
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70418;
	x17_5();
}

// 000000000001B620: define fn000000000001B620
// Called from:
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
define fn000000000001B620
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70428;
	x17_5();
}

// 000000000001B660: define fn000000000001B660
// Called from:
//      RGBDRealSense::~RGBDRealSense
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
define fn000000000001B660
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70448;
	x17_5();
}

// 000000000001B680: define fn000000000001B680
// Called from:
//      _ZNK3rs26device2asINS_19serializable_deviceEEET_v
//      advanced_mode::advanced_mode
define fn000000000001B680
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70458;
	x17_5();
}

// 000000000001B690: define fn000000000001B690
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5parseEONS_6detail13input_adapterENS1_8functionIFbiNSC_6parserISB_E13parse_event_tERSB_EEEb
define fn000000000001B690
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70460;
	x17_5();
}

// 000000000001B6A0: define fn000000000001B6A0
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
define fn000000000001B6A0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70468;
	x17_5();
}

// 000000000001B6B0: define fn000000000001B6B0
// Called from:
//      _ZN4rgbd13RGBDRealSense17validateFwVersionERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001B6B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70470;
	x17_5();
}

// 000000000001B720: define fn000000000001B720
// Called from:
//      JNI_OnLoad
define fn000000000001B720
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr704A8;
	x17_5();
}

// 000000000001B730: define fn000000000001B730
// Called from:
//      
define fn000000000001B730
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr704B0;
	x17_5();
}

// 000000000001B760: define fn000000000001B760
// Called from:
//      
//      
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZNSt6__ndk16__treeINS_12__value_typeI15rs2_camera_infoNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS2_S9_NS_4lessIS2_EELb1EEENS6_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE
define fn000000000001B760
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr704C8;
	x17_5();
}

// 000000000001B780: define fn000000000001B780
// Called from:
//      grisu2<prim(Real,8)>::
define fn000000000001B780
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr704D8;
	x17_5();
}

// 000000000001B790: define fn000000000001B790
// Called from:
//      _ZNK3rs26sensor2asINS_12depth_sensorEEET_v
define fn000000000001B790
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr704E0;
	x17_5();
}

// 000000000001B7B0: define fn000000000001B7B0
// Called from:
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S9_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
define fn000000000001B7B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr704F0;
	x17_5();
}

// 000000000001B7E0: define fn000000000001B7E0
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZNSt6__ndk16vectorIN3rs214stream_profileENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
//      _ZNSt6__ndk16vectorIN3rs26sensorENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
//      _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3getEv
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2ERSD_NS3_8functionIFbiNS0_6parserISD_E13parse_event_tESF_EEEb
//      _ZNSt6__ndk16vectorIbNS_9allocatorIbEEE7reserveEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE21__push_back_slow_pathISB_EEvOT_
//      _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathIRKSC_EEvOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEEC2ERKSD_
//      _ZNSt6__ndk16vectorIPN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISC_EEE21__push_back_slow_pathISC_EEvOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJNS1_6detail7value_tEEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRdEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRbEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJDnEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRlEEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRS9_EEEvDpOT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_
//      _ZNSt6__ndk16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_
//      _ZNSt6__ndk16vectorIhNS_9allocatorIhEEE8__appendEm
define fn000000000001B7E0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70508;
	x17_5();
}

// 000000000001B810: define fn000000000001B810
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE6createINS2_IS9_SB_NS1_4lessIvEENS7_INS1_4pairIKS9_SB_EEEEEEJRKSJ_EEEPT_DpOT0_
define fn000000000001B810
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70520;
	x17_5();
}

// 000000000001B830: define fn000000000001B830
// Called from:
//      _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS0_IS6_P9_jfieldIDNS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEESA_NS4_INSB_ISC_SF_EEEEED2Ev
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3mapIS7_P9_jfieldIDNS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEEEENS_19__map_value_compareIS7_SI_SC_Lb1EEENS5_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE
//      JNI_OnUnload
define fn000000000001B830
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70530;
	x17_5();
}

// 000000000001B840: define fn000000000001B840
// Called from:
//      _ZNK3rs26device2asIN5rs40013advanced_modeEEET_v
define fn000000000001B840
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70538;
	x17_5();
}

// 000000000001B8B0: define fn000000000001B8B0
// Called from:
//      
//      
//      
//      _ZN4rgbd13RGBDRealSense13updateRgbdSetERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
//      
//      _ZN4rgbd13RGBDRealSense14getJsonContentERKa
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN3rs25errorC2ERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      
//      JNI_OnLoad
define fn000000000001B8B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70570;
	x17_5();
}

// 000000000001B8E0: define fn000000000001B8E0
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEEC2ERKSB_
define fn000000000001B8E0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70588;
	x17_5();
}

// 000000000001B8F0: define fn000000000001B8F0
// Called from:
//      RGBDRealSense::RGBDRealSense
//      
define fn000000000001B8F0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70590;
	x17_5();
}

// 000000000001B930: define fn000000000001B930
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
define fn000000000001B930
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr705B0;
	x17_5();
}

// 000000000001B960: define fn000000000001B960
// Called from:
//      
define fn000000000001B960
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr705C8;
	x17_5();
}

// 000000000001B970: define fn000000000001B970
// Called from:
//      _ZN4rgbd13RGBDRealSense13updateRgbdSetERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
define fn000000000001B970
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr705D0;
	x17_5();
}

// 000000000001B980: define fn000000000001B980
// Called from:
//      
define fn000000000001B980
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr705D8;
	x17_5();
}

// 000000000001BA00: define fn000000000001BA00
// Called from:
//      _ZNK3rs28frameset10foreach_rsIZNKS0_18get_infrared_frameEmEUlRKNS_5frameEE_EEvT_
define fn000000000001BA00
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70618;
	x17_5();
}

// 000000000001BA10: define fn000000000001BA10
// Called from:
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
define fn000000000001BA10
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70620;
	x17_5();
}

// 000000000001BA20: define fn000000000001BA20
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJNS1_6detail7value_tEEEEvDpOT_
define fn000000000001BA20
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70628;
	x17_5();
}

// 000000000001BA30: define fn000000000001BA30
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
define fn000000000001BA30
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70630;
	x17_5();
}

// 000000000001BA60: define fn000000000001BA60
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
define fn000000000001BA60
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70648;
	x17_5();
}

// 000000000001BA90: define fn000000000001BA90
// Called from:
//      pointcloud::pointcloud
define fn000000000001BA90
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70660;
	x17_5();
}

// 000000000001BAD0: define fn000000000001BAD0
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
define fn000000000001BAD0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70680;
	x17_5();
}

// 000000000001BAE0: define fn000000000001BAE0
// Called from:
//      RGBDRealSense::~RGBDRealSense
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8pudutech9RGBD_INFOEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define fn000000000001BAE0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70688;
	x17_5();
}

// 000000000001BB00: define fn000000000001BB00
// Called from:
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4scanEv
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_stringEv
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_numberEv
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE13get_codepointEv
define fn000000000001BB00
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70698;
	x17_5();
}

// 000000000001BB20: define fn000000000001BB20
// Called from:
//      _ZNK3rs26device5firstINS_12depth_sensorEEET_v
define fn000000000001BB20
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr706A8;
	x17_5();
}

// 000000000001BB30: define fn000000000001BB30
// Called from:
//      
//      
//      
//      
//      
//      _ZN4rgbd13RGBDRealSense15setRGBDCallbackERKNSt6__ndk18functionIFviaiiiEEERKNS_12RgbdLocationE
//      
//      _ZN4rgbd13RGBDRealSense15setRgbdLocationERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKa
//      
//      
//      
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd6updateEN3rs213update_deviceENSt6__ndk16vectorIhNS2_9allocatorIhEEEE
//      
//      
define fn000000000001BB30
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr706B0;
	x17_5();
}

// 000000000001BB50: define fn000000000001BB50
// Called from:
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001BB50
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr706C0;
	x17_5();
}

// 000000000001BB60: define fn000000000001BB60
// Called from:
//      
define fn000000000001BB60
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr706C8;
	x17_5();
}

// 000000000001BB70: define fn000000000001BB70
// Called from:
//      _ZNSt6__ndk13mapIN4rgbd12RgbdLocationEP10_jmethodIDNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEED2Ev
//      _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationEP10_jmethodIDEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE
define fn000000000001BB70
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr706D0;
	x17_5();
}

// 000000000001BB90: define fn000000000001BB90
// Called from:
//      pointcloud::pointcloud
define fn000000000001BB90
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr706E0;
	x17_5();
}

// 000000000001BBA0: define fn000000000001BBA0
// Called from:
//      
//      
//      
define fn000000000001BBA0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr706E8;
	x17_5();
}

// 000000000001BC20: define fn000000000001BC20
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      is<rs2::update_device>::
define fn000000000001BC20
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70728;
	x17_5();
}

// 000000000001BC40: define fn000000000001BC40
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
define fn000000000001BC40
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70738;
	x17_5();
}

// 000000000001BC50: define fn000000000001BC50
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
define fn000000000001BC50
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70740;
	x17_5();
}

// 000000000001BC90: define fn000000000001BC90
// Called from:
//      _ZNK3rs26device5firstINS_12depth_sensorEEET_v
define fn000000000001BC90
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70760;
	x17_5();
}

// 000000000001BCA0: define fn000000000001BCA0
// Called from:
//      _ZNSt6__ndk16vectorIbNS_9allocatorIbEEE7reserveEm
define fn000000000001BCA0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70768;
	x17_5();
}

// 000000000001BCB0: define fn000000000001BCB0
// Called from:
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEEPSD_OT_
define fn000000000001BCB0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70770;
	x17_5();
}

// 000000000001BCD0: define fn000000000001BCD0
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
define fn000000000001BCD0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70780;
	x17_5();
}

// 000000000001BCE0: define fn000000000001BCE0
// Called from:
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEj
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEi
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEb
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEElsEf
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
//      _ZNSt6__ndk124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m
//      _ZNSt6__ndk113basic_ostreamIcNS_11char_traitsIcEEE3putEc
define fn000000000001BCE0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70788;
	x17_5();
}

// 000000000001BD40: define fn000000000001BD40
// Called from:
//      _ZN4rgbd13RGBDRealSense15setRGBDCallbackERKNSt6__ndk18functionIFviaiiiEEERKNS_12RgbdLocationE
//      _ZN4rgbd13RGBDRealSense13updateRgbdSetERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
define fn000000000001BD40
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr707B8;
	x17_5();
}

// 000000000001BD50: define fn000000000001BD50
// Called from:
//      
define fn000000000001BD50
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr707C0;
	x17_5();
}

// 000000000001BD60: define fn000000000001BD60
// Called from:
//      
define fn000000000001BD60
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr707C8;
	x17_5();
}

// 000000000001BD70: define fn000000000001BD70
// Called from:
//      
//      
//      _ZNSt6__ndk13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeENS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEixERSC_
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEENS_21__tree_const_iteratorISE_SV_lEERKT_DpOT0_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_
//      JNI_OnLoad
define fn000000000001BD70
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr707D0;
	x17_5();
}

// 000000000001BD80: define fn000000000001BD80
// Called from:
//      
//      
//      
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      
define fn000000000001BD80
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr707D8;
	x17_5();
}

// 000000000001BD90: define fn000000000001BD90
// Called from:
//      
//      camera_disconnected_error::camera_disconnected_error
//      backend_error::backend_error
//      invalid_value_error::invalid_value_error
//      wrong_api_call_sequence_error::wrong_api_call_sequence_error
//      not_implemented_error::not_implemented_error
//      device_in_recovery_mode_error::device_in_recovery_mode_error
define fn000000000001BD90
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr707E0;
	x17_5();
}

// 000000000001BDB0: define fn000000000001BDB0
// Called from:
//      RGBDRealSense::~RGBDRealSense
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9FrameTimeEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define fn000000000001BDB0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr707F0;
	x17_5();
}

// 000000000001BDD0: define fn000000000001BDD0
// Called from:
//      
define fn000000000001BDD0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70800;
	x17_5();
}

// 000000000001BDE0: define fn000000000001BDE0
// Called from:
//      _ZN4rgbd18read_firmware_dataEbRKNSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
define fn000000000001BDE0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70808;
	x17_5();
}

// 000000000001BE10: define fn000000000001BE10
// Called from:
//      
//      
define fn000000000001BE10
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70820;
	x17_5();
}

// 000000000001BE20: define fn000000000001BE20
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
define fn000000000001BE20
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70828;
	x17_5();
}

// 000000000001BE30: define fn000000000001BE30
// Called from:
//      _ZNK8nlohmann6detail9iter_implINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEptEv
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
//      _ZNK8nlohmann6detail9iter_implINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEeqERKSE_
define fn000000000001BE30
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70830;
	x17_5();
}

// 000000000001BE70: define fn000000000001BE70
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
define fn000000000001BE70
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70850;
	x17_5();
}

// 000000000001BEC0: define fn000000000001BEC0
// Called from:
//      _ZN4rgbd13RGBDRealSense19getLowFwVersionListERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
define fn000000000001BEC0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70878;
	x17_5();
}

// 000000000001BEF0: define fn000000000001BEF0
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001BEF0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70890;
	x17_5();
}

// 000000000001BF10: define fn000000000001BF10
// Called from:
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      
define fn000000000001BF10
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr708A0;
	x17_5();
}

// 000000000001BF30: define fn000000000001BF30
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001BF30
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr708B0;
	x17_5();
}

// 000000000001BF60: define fn000000000001BF60
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_28json_sax_dom_callback_parserISD_EEEEbPT_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_19json_sax_dom_parserISD_EEEEbPT_
define fn000000000001BF60
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr708C8;
	x17_5();
}

// 000000000001BF80: define fn000000000001BF80
// Called from:
//      
define fn000000000001BF80
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr708D8;
	x17_5();
}

// 000000000001BF90: define fn000000000001BF90
// Called from:
//      JNI_OnLoad
define fn000000000001BF90
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr708E0;
	x17_5();
}

// 000000000001BFB0: define fn000000000001BFB0
// Called from:
//      is<rs2::updatable>::
//      _ZNK3rs26device2asINS_9updatableEEET_v
define fn000000000001BFB0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr708F0;
	x17_5();
}

// 000000000001BFC0: define fn000000000001BFC0
// Called from:
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE30__emplace_hint_unique_key_argsIS7_JRKNS_4pairIKS7_SD_EEEEENS_15__tree_iteratorISE_PNS_11__tree_nodeISE_PvEElEENS_21__tree_const_iteratorISE_SV_lEERKT_DpOT0_
define fn000000000001BFC0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr708F8;
	x17_5();
}

// 000000000001BFE0: define fn000000000001BFE0
// Called from:
//      _ZNSt6__ndk13mapIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS2_EENS6_INS_4pairIKS2_S8_EEEEED2Ev
//      _ZNSt6__ndk16__treeINS_12__value_typeIN4rgbd12RgbdLocationENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
//      JNI_OnUnload
define fn000000000001BFE0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70908;
	x17_5();
}

// 000000000001BFF0: define fn000000000001BFF0
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001BFF0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70910;
	x17_5();
}

// 000000000001C000: define fn000000000001C000
// Called from:
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
define fn000000000001C000
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70918;
	x17_5();
}

// 000000000001C010: define fn000000000001C010
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12start_objectEm
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11start_arrayEm
define fn000000000001C010
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70920;
	x17_5();
}

// 000000000001C020: define fn000000000001C020
// Called from:
//      
define fn000000000001C020
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70928;
	x17_5();
}

// 000000000001C090: define fn000000000001C090
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define fn000000000001C090
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70960;
	x17_5();
}

// 000000000001C0A0: define fn000000000001C0A0
// Called from:
//      RGBDRealSense::~RGBDRealSense
//      _ZNSt6__ndk16__treeINS_12__value_typeIiNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
define fn000000000001C0A0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70968;
	x17_5();
}

// 000000000001C0B0: define fn000000000001C0B0
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
define fn000000000001C0B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70970;
	x17_5();
}

// 000000000001C0C0: define fn000000000001C0C0
// Called from:
//      
define fn000000000001C0C0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70978;
	x17_5();
}

// 000000000001C0E0: define fn000000000001C0E0
// Called from:
//      _ZN8nlohmann6detail21output_string_adapterIcNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15write_characterEc
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_numberEv
//      _ZNK8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE16get_token_stringEv
define fn000000000001C0E0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70988;
	x17_5();
}

// 000000000001C100: define fn000000000001C100
// Called from:
//      
define fn000000000001C100
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70998;
	x17_5();
}

// 000000000001C130: define fn000000000001C130
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE10json_value7destroyENS_6detail7value_tE
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE
define fn000000000001C130
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr709B0;
	x17_5();
}

// 000000000001C140: define fn000000000001C140
// Called from:
//      
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_escapedERKSB_b
//      _ZN8nlohmann6detail9exception4nameERKNSt6__ndk112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEi
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE17exception_messageENS0_5lexerISD_E10token_typeERKSB_
define fn000000000001C140
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr709B8;
	x17_5();
}

// 000000000001C180: define fn000000000001C180
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4dumpERKSD_bbjj
define fn000000000001C180
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr709D8;
	x17_5();
}

// 000000000001C190: define fn000000000001C190
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEEC2ERKSB_
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRS9_EEEvDpOT_
define fn000000000001C190
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr709E0;
	x17_5();
}

// 000000000001C270: define fn000000000001C270
// Called from:
//      _ZN3rs26filterC2ENSt6__ndk110shared_ptrI20rs2_processing_blockEEi
define fn000000000001C270
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70A50;
	x17_5();
}

// 000000000001C2A0: define fn000000000001C2A0
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11parse_errorEmRKSB_RKNS0_9exceptionE
define fn000000000001C2A0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70A68;
	x17_5();
}

// 000000000001C2D0: define fn000000000001C2D0
// Called from:
//      
//      RGBDRealSense::~RGBDRealSense
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE
define fn000000000001C2D0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70A80;
	x17_5();
}

// 000000000001C2E0: define fn000000000001C2E0
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_28json_sax_dom_callback_parserISD_EEEEbPT_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_19json_sax_dom_parserISD_EEEEbPT_
define fn000000000001C2E0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70A88;
	x17_5();
}

// 000000000001C2F0: define fn000000000001C2F0
// Called from:
//      
define fn000000000001C2F0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70A90;
	x17_5();
}

// 000000000001C310: define fn000000000001C310
// Called from:
//      
//      depth_frame::depth_frame
define fn000000000001C310
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70AA0;
	x17_5();
}

// 000000000001C330: define fn000000000001C330
// Called from:
//      
define fn000000000001C330
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70AB0;
	x17_5();
}

// 000000000001C350: define fn000000000001C350
// Called from:
//      _ZN4rgbd12read_fw_fileENSt6__ndk112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
define fn000000000001C350
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70AC0;
	x17_5();
}

// 000000000001C370: define fn000000000001C370
// Called from:
//      RGBDRealSense::~RGBDRealSense
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEdEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE
define fn000000000001C370
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70AD0;
	x17_5();
}

// 000000000001C380: define fn000000000001C380
// Called from:
//      
//      _ZN4rgbd13RGBDRealSense8updateFwERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZN4rgbd13RGBDRealSense14updateFirewareERKNSt6__ndk112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIhNS5_IhEEEE
//      _ZNSt6__ndk112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm
define fn000000000001C380
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70AD8;
	x17_5();
}

// 000000000001C3A0: define fn000000000001C3A0
// Called from:
//      
//      _ZZNK3rs28frameset16first_or_defaultE10rs2_stream10rs2_formatENKUlNS_5frameEE_clES3_
//      _ZZNK3rs28frameset18get_infrared_frameEmENKUlRKNS_5frameEE_clES3_
define fn000000000001C3A0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70AE8;
	x17_5();
}

// 000000000001C3B0: define fn000000000001C3B0
// Called from:
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd13RealSenseInfoEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_
define fn000000000001C3B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70AF0;
	x17_5();
}

// 000000000001C420: define fn000000000001C420
// Called from:
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
//      _ZNSt6__ndk112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4rgbd9RGBDParamEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_NS_8equal_toIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JNS_4pairIS7_S9_EEEEENSM_INS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_
define fn000000000001C420
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70B28;
	x17_5();
}

// 000000000001C450: define fn000000000001C450
// Called from:
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_stringEv
//      _ZN8nlohmann6detail5lexerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE11scan_numberEv
define fn000000000001C450
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70B40;
	x17_5();
}

// 000000000001C480: define fn000000000001C480
// Called from:
//      _ZN8nlohmann6detail10serializerINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12dump_escapedERKSB_b
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
define fn000000000001C480
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70B58;
	x17_5();
}

// 000000000001C490: define fn000000000001C490
// Called from:
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEENS3_4pairIbPSD_EEOT_b
define fn000000000001C490
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70B60;
	x17_5();
}

// 000000000001C4B0: define fn000000000001C4B0
// Called from:
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE18sax_parse_internalINS0_19json_sax_dom_parserISD_EEEEbPT_
define fn000000000001C4B0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70B70;
	x17_5();
}

// 000000000001C500: define fn000000000001C500
// Called from:
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5parseEONS_6detail13input_adapterENS1_8functionIFbiNSC_6parserISB_E13parse_event_tERSB_EEEb
define fn000000000001C500
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70B98;
	x17_5();
}

// 000000000001C510: define fn000000000001C510
// Called from:
//      _ZN4rgbd13RGBDRealSense13updateRgbdSetERKiRKNSt6__ndk112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
define fn000000000001C510
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70BA0;
	x17_5();
}

// 000000000001C590: define fn000000000001C590
// Called from:
//      
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE10json_value7destroyENS_6detail7value_tE
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE
//      _ZN8nlohmann6detail6parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEEC2ERSD_NS3_8functionIFbiNS0_6parserISD_E13parse_event_tESF_EEEb
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEED2Ev
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE10end_objectEv
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE3keyERSB_
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE9end_arrayEv
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEENS3_4pairIbPSD_EEOT_b
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE21__push_back_slow_pathISB_EEvOT_
//      _ZN8nlohmann10basic_jsonINSt6__ndk13mapENS1_6vectorENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEblmdS7_NS_14adl_serializerEE5eraseINS_6detail9iter_implISB_EELi0EEET_SG_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEEC2ERKSD_
//      _ZNSt6__ndk16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8nlohmann10basic_jsonINS_3mapENS_6vectorES7_blmdS5_NS8_14adl_serializerEEEEENS_19__map_value_compareIS7_SE_NS_4lessIvEELb1EEENS5_ISE_EEE5eraseENS_21__tree_const_iteratorISE_PNS_11__tree_nodeISE_PvEElEE
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEENS3_4pairIbPSD_EEOT_b
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueINS0_7value_tEEEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJNS1_6detail7value_tEEEEvDpOT_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRdEEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRdEEEvDpOT_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRbEEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRbEEEvDpOT_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIDnEEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJDnEEEvDpOT_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRlEEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRlEEEvDpOT_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRSB_EEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRS9_EEEvDpOT_
//      _ZN8nlohmann6detail19json_sax_dom_parserINS_10basic_jsonINSt6__ndk13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE12handle_valueIRmEEPSD_OT_
//      _ZNSt6__ndk16vectorIN8nlohmann10basic_jsonINS_3mapES0_NS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEblmdS7_NS1_14adl_serializerEEENS7_ISB_EEE24__emplace_back_slow_pathIJRmEEEvDpOT_
define fn000000000001C590
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70BE0;
	x17_5();
}

// 000000000001C5A0: define fn000000000001C5A0
// Called from:
//      fn0000000000032A90
define fn000000000001C5A0
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70BE8;
	x17_5();
}

// 000000000001C610: define fn000000000001C610
// Called from:
//      
define fn000000000001C610
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70C20;
	x17_5();
}

// 000000000001C630: define fn000000000001C630
// Called from:
//      _ZNSt6__ndk113basic_filebufIcNS_11char_traitsIcEEED2Ev
define fn000000000001C630
{
	<unknown> Mem0;
	<anonymous> * x17_5 = g_ptr70C30;
	x17_5();
}

// tmpecu37ckl_eh_frame_hdr.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

<anonymous> g_t550A4 = <code>; // 00000000000550A4
<anonymous> g_t55704 = <code>; // 0000000000055704
<anonymous> g_t558D4 = <code>; // 00000000000558D4
<anonymous> g_t55A18 = <code>; // 0000000000055A18
<anonymous> g_t55B74 = <code>; // 0000000000055B74
<anonymous> g_t55D08 = <code>; // 0000000000055D08
// tmpecu37ckl_bss.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

word32 g_dw71118 = 0x00; // 0000000000071118
Eq_916 g_t71120 = // 0000000000071120
	{
		0x00
	};
word64 g_qw71122 = 0x00; // 0000000000071122
word64 g_qw7112A = 0x00; // 000000000007112A
ptr64 g_ptr71130 = 0x00; // 0000000000071130
word32 g_dw71138 = 0x00; // 0000000000071138
word16 g_w71140 = 0x00; // 0000000000071140
word64 g_qw71142 = 0x00; // 0000000000071142
word64 g_qw7114A = 0x00; // 000000000007114A
word64 g_qw71150 = 0x00; // 0000000000071150
word32 g_dw71158 = 0x00; // 0000000000071158
word16 g_w71160 = 0x00; // 0000000000071160
word64 g_qw71162 = 0x00; // 0000000000071162
word64 g_qw7116A = 0x00; // 000000000007116A
word64 g_qw71170 = 0x00; // 0000000000071170
word32 g_dw71178 = 0x00; // 0000000000071178
word16 g_w71180 = 0x00; // 0000000000071180
word64 g_qw71182 = 0x00; // 0000000000071182
word64 g_qw7118A = 0x00; // 000000000007118A
word64 g_qw71190 = 0x00; // 0000000000071190
word32 g_dw71198 = 0x00; // 0000000000071198
Eq_1004 g_t711A0 = // 00000000000711A0
	{
		0x00
	};
word64 g_qw711A2 = 0x00; // 00000000000711A2
word64 g_qw711AA = 0x00; // 00000000000711AA
word64 g_qw711B0 = 0x00; // 00000000000711B0
word32 g_dw711B8 = 0x00; // 00000000000711B8
word16 g_w711C0 = 0x00; // 00000000000711C0
word64 g_qw711C2 = 0x00; // 00000000000711C2
word64 g_qw711CA = 0x00; // 00000000000711CA
word64 g_qw711D0 = 0x00; // 00000000000711D0
word32 g_dw711D8 = 0x00; // 00000000000711D8
byte g_b711E0 = 0x00; // 00000000000711E0
word64 g_qw711E1 = 0x00; // 00000000000711E1
word64 g_qw711E9 = 0x00; // 00000000000711E9
word64 g_qw711F0 = 0x00; // 00000000000711F0
word32 g_dw711F8 = 0x00; // 00000000000711F8
byte g_b71200 = 0x00; // 0000000000071200
word64 g_qw71201 = 0x00; // 0000000000071201
uipr32 g_dw71209 = 0x00; // 0000000000071209
word64 g_qw7120D = 0x00; // 000000000007120D
byte g_b71217 = 0x00; // 0000000000071217
word32 g_dw71218 = 0x00; // 0000000000071218
byte g_b71220 = 0x00; // 0000000000071220
word64 g_qw71221 = 0x00; // 0000000000071221
word64 g_qw71228 = 0x00; // 0000000000071228
byte g_b71230 = 0x00; // 0000000000071230
word32 g_dw71231 = 0x00; // 0000000000071231
word16 g_w71232 = 0x00; // 0000000000071232
byte g_b71237 = 0x00; // 0000000000071237
Eq_1129 g_t71238 = // 0000000000071238
	{
		0x00
	};
word64 g_qw71239 = 0x00; // 0000000000071239
word64 g_qw71240 = 0x00; // 0000000000071240
byte g_b71241 = 0x00; // 0000000000071241
word64 g_qw71248 = 0x00; // 0000000000071248
Eq_1158 g_t71250 = // 0000000000071250
	{
		0x00
	};
word64 g_qw71251 = 0x00; // 0000000000071251
word16 g_w71252 = 0x00; // 0000000000071252
word64 g_qw71258 = 0x00; // 0000000000071258
uipr32 g_dw71259 = 0x00; // 0000000000071259
byte g_b7125D = 0x00; // 000000000007125D
word64 g_qw71260 = 0x00; // 0000000000071260
word64 * g_ptr71268 = null; // 0000000000071268
word64 g_qw71270 = 0x00; // 0000000000071270
word64 g_qw71278 = 0x00; // 0000000000071278
word64 * g_ptr71280 = null; // 0000000000071280
word64 g_qw71288 = 0x00; // 0000000000071288
word64 g_qw71290 = 0x00; // 0000000000071290
word64 * g_ptr71298 = null; // 0000000000071298
word64 g_qw712A0 = 0x00; // 00000000000712A0
word64 g_qw712A8 = 0x00; // 00000000000712A8
word64 * g_ptr712B0 = null; // 00000000000712B0
word64 g_qw712B8 = 0x00; // 00000000000712B8
word64 g_qw712C0 = 0x00; // 00000000000712C0
word64 * g_ptr712C8 = null; // 00000000000712C8
word64 g_qw712D0 = 0x00; // 00000000000712D0
word64 g_qw712D8 = 0x00; // 00000000000712D8
word64 * g_ptr712E0 = null; // 00000000000712E0
word64 g_qw712E8 = 0x00; // 00000000000712E8
word64 g_qw712F0 = 0x00; // 00000000000712F0
Eq_1293 g_t712F8 = // 00000000000712F8
	{
		0x00
	};
uipr32 g_dw712F9 = 0x00; // 00000000000712F9
byte g_b712FD = 0x00; // 00000000000712FD
word64 g_qw71300 = 0x00; // 0000000000071300
word64 g_qw71308 = 0x00; // 0000000000071308
Eq_1317 g_t71310 = // 0000000000071310
	{
		0x00
	};
uipr32 g_dw71311 = 0x00; // 0000000000071311
byte g_b71315 = 0x00; // 0000000000071315
word64 g_qw71318 = 0x00; // 0000000000071318
word64 g_qw71320 = 0x00; // 0000000000071320
// tmpecu37ckl_gnu_hash.c
// Generated by decompiling tmpecu37ckl
// using Reko decompiler version 0.11.6.0.

#include "tmpecu37ckl.h"

struct <anonymous> g_t02F0 = // 00000000000002F0
	{
		'\0',
		
		{
			0x30
		},
		0x2E060020B110,
		
		{
			0x08
		},
	};
struct Eq_71182 g_t0569 = // 0000000000000569
	{
		
		{
			0x01
		},
		
		{
			0x00
		},
		
		{
			0x01
		},
	};
struct Eq_95298 g_t05EE = // 00000000000005EE
	{
		
		{
			0x00
		},
		
		{
			0x00
		},
		
		{
			0x00
		},
	};
byte g_b063A = 0x00; // 000000000000063A
byte g_b064D = 0x00; // 000000000000064D
union Eq_14 g_u0679 = // 0000000000000679
	{
		0x01
	};
